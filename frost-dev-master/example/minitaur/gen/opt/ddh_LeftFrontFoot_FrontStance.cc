/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 22:30:59 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t382;
  double t476;
  double t506;
  double t559;
  double t407;
  double t660;
  double t911;
  double t912;
  double t1271;
  double t1287;
  double t1308;
  double t1439;
  double t1757;
  double t1961;
  double t1967;
  double t1056;
  double t1074;
  double t1210;
  double t1219;
  double t1462;
  double t2126;
  double t2154;
  double t2157;
  double t2221;
  double t2239;
  double t2250;
  double t3587;
  double t2663;
  double t3464;
  double t3522;
  double t3528;
  double t3544;
  double t3562;
  double t3564;
  double t3592;
  double t1246;
  double t2703;
  double t1403;
  double t3133;
  double t3234;
  double t3606;
  double t3571;
  double t3792;
  double t3793;
  double t3797;
  double t3798;
  double t3804;
  double t3987;
  double t4011;
  double t3980;
  double t3794;
  double t3799;
  double t3800;
  double t3801;
  double t3802;
  double t3803;
  double t3805;
  double t3806;
  double t3807;
  double t3856;
  double t3861;
  double t3864;
  double t3865;
  double t3895;
  double t3896;
  double t3908;
  double t3923;
  double t3985;
  double t3995;
  double t4005;
  double t4006;
  double t4007;
  double t4014;
  double t4016;
  double t4017;
  double t4019;
  double t4024;
  double t4026;
  double t4027;
  double t4028;
  double t4029;
  double t4032;
  double t4034;
  double t4035;
  double t4039;
  double t1319;
  double t1578;
  double t1740;
  double t1969;
  double t1981;
  double t2482;
  double t2659;
  double t2750;
  double t2998;
  double t3048;
  double t4049;
  double t4051;
  double t4054;
  double t3572;
  double t4057;
  double t4058;
  double t3597;
  double t3598;
  double t4064;
  double t4065;
  double t4068;
  double t3627;
  double t3708;
  double t3709;
  double t3764;
  double t3774;
  double t3788;
  double t4045;
  double t4047;
  double t4055;
  double t4060;
  double t4061;
  double t4069;
  double t4075;
  double t4084;
  double t4093;
  double t4094;
  double t4101;
  double t4103;
  double t4104;
  double t4105;
  double t4106;
  double t4107;
  double t4108;
  double t4109;
  double t4114;
  double t4115;
  double t4116;
  double t4123;
  double t4124;
  double t4126;
  double t4127;
  double t4129;
  double t4130;
  double t4132;
  double t4133;
  double t4136;
  double t4137;
  double t4138;
  double t4139;
  double t4120;
  double t4121;
  double t4122;
  double t4128;
  double t4134;
  double t4135;
  double t4140;
  double t4141;
  double t4142;
  double t4143;
  double t4144;
  double t4145;
  double t4146;
  double t4147;
  double t4148;
  double t4149;
  double t4150;
  double t4151;
  double t4152;
  double t4153;
  double t4154;
  double t4155;
  double t4164;
  double t4165;
  double t4166;
  double t4167;
  double t4161;
  double t4162;
  double t4171;
  double t4172;
  double t4173;
  double t4174;
  double t4158;
  double t4159;
  double t4160;
  double t4163;
  double t4168;
  double t4169;
  double t4170;
  double t4175;
  double t4176;
  double t4177;
  double t4178;
  double t4179;
  double t4180;
  double t4181;
  double t4182;
  double t4183;
  double t4184;
  double t4185;
  double t4186;
  double t4187;
  double t4188;
  double t4189;
  double t4339;
  double t4340;
  double t4343;
  double t4349;
  double t4361;
  double t4365;
  double t4369;
  double t4462;
  double t4473;
  double t4483;
  double t4512;
  double t4542;
  double t4590;
  double t4591;
  double t4598;
  double t4664;
  double t4666;
  double t4767;
  double t4773;
  double t4774;
  double t4967;
  double t4969;
  double t4971;
  double t4972;
  double t4973;
  double t4975;
  double t4978;
  double t4979;
  double t4655;
  double t4658;
  double t4659;
  double t4726;
  double t4727;
  double t4753;
  double t4777;
  double t4779;
  double t4786;
  double t4787;
  double t4791;
  double t4792;
  double t4793;
  double t4794;
  double t4795;
  double t4796;
  double t4797;
  double t4798;
  double t4799;
  double t4801;
  double t5028;
  double t5029;
  double t5030;
  double t5031;
  double t5024;
  double t5025;
  double t5036;
  double t5037;
  double t5038;
  double t5039;
  double t4424;
  double t4458;
  double t4508;
  double t4543;
  double t4589;
  double t4603;
  double t4605;
  double t4606;
  double t4618;
  double t4619;
  double t4620;
  double t4621;
  double t4622;
  double t4623;
  double t4625;
  double t4626;
  double t4630;
  double t4636;
  double t4640;
  double t4644;
  double t4648;
  double t4330;
  double t4336;
  double t4966;
  double t5105;
  double t5107;
  double t5121;
  double t5122;
  double t5017;
  double t5021;
  double t5022;
  double t5027;
  double t5032;
  double t5033;
  double t5034;
  double t5040;
  double t5042;
  double t5043;
  double t5044;
  double t5045;
  double t5047;
  double t5049;
  double t5050;
  double t5051;
  double t5053;
  double t5054;
  double t5055;
  double t5056;
  double t5057;
  double t5058;
  double t4805;
  double t4808;
  double t4809;
  double t4814;
  double t4819;
  double t4838;
  double t4839;
  double t4866;
  double t4867;
  double t4884;
  double t4901;
  double t4902;
  double t4942;
  double t4943;
  double t4944;
  double t4947;
  double t4954;
  double t4955;
  double t4961;
  double t4192;
  double t4193;
  double t4194;
  double t4195;
  double t4196;
  double t4197;
  double t4198;
  double t4199;
  double t4200;
  double t4201;
  double t4202;
  double t4203;
  double t4204;
  double t4205;
  double t4206;
  double t4207;
  double t4251;
  double t4260;
  double t4276;
  double t5064;
  double t5067;
  double t5068;
  double t5069;
  double t5070;
  double t5072;
  double t5074;
  double t5076;
  double t5077;
  double t5085;
  double t5089;
  double t5091;
  double t5092;
  double t5093;
  double t5095;
  double t5096;
  double t5098;
  double t5099;
  double t5100;
  double t5318;
  double t5341;
  double t5542;
  double t5472;
  double t5541;
  double t5545;
  double t5547;
  double t5549;
  double t5550;
  double t5551;
  double t5555;
  double t5556;
  double t5557;
  double t5558;
  double t5561;
  double t5562;
  double t5568;
  double t5569;
  double t5575;
  double t5577;
  double t5582;
  double t5583;
  double t5601;
  double t5602;
  double t5603;
  double t5604;
  double t5605;
  double t5606;
  double t5607;
  double t5608;
  double t5610;
  double t5612;
  double t5614;
  double t5615;
  double t5616;
  double t5617;
  double t5618;
  double t5619;
  double t5620;
  double t5621;
  double t5622;
  double t5625;
  double t5626;
  double t5627;
  double t5630;
  double t5631;
  double t5633;
  double t5637;
  double t5638;
  double t5643;
  double t5644;
  double t5645;
  double t5628;
  double t5629;
  double t5635;
  double t5639;
  double t5642;
  double t5646;
  double t5647;
  double t5649;
  double t5650;
  double t5651;
  double t5652;
  double t5653;
  double t5654;
  double t5655;
  double t5656;
  double t5657;
  double t5658;
  double t5659;
  double t5660;
  double t5663;
  double t5691;
  double t5724;
  double t5729;
  double t5730;
  double t5733;
  double t5737;
  double t5738;
  double t5745;
  double t5746;
  double t5747;
  double t5748;
  double t5750;
  double t5751;
  double t5752;
  double t5753;
  double t5756;
  double t5757;
  double t5758;
  double t5759;
  double t5731;
  double t5743;
  double t5744;
  double t5749;
  double t5754;
  double t5755;
  double t5760;
  double t5761;
  double t5762;
  double t5764;
  double t5765;
  double t5766;
  double t5767;
  double t5768;
  double t5771;
  double t5774;
  double t5776;
  double t5777;
  double t5781;
  double t5783;
  double t5785;
  double t5786;
  double t5792;
  double t5793;
  double t5794;
  double t5795;
  double t5797;
  double t5798;
  double t5799;
  double t5800;
  double t5803;
  double t5804;
  double t5805;
  double t5806;
  double t5789;
  double t5790;
  double t5791;
  double t5796;
  double t5801;
  double t5802;
  double t5807;
  double t5808;
  double t5809;
  double t5811;
  double t5812;
  double t5813;
  double t5814;
  double t5815;
  double t5816;
  double t5817;
  double t5818;
  double t5819;
  double t5820;
  double t5821;
  double t5822;
  double t5823;
  double t5832;
  double t5833;
  double t5834;
  double t5835;
  double t5829;
  double t5830;
  double t5839;
  double t5840;
  double t5841;
  double t5842;
  double t5826;
  double t5827;
  double t5828;
  double t5831;
  double t5836;
  double t5837;
  double t5838;
  double t5843;
  double t5844;
  double t5845;
  double t5846;
  double t5847;
  double t5848;
  double t5849;
  double t5850;
  double t5852;
  double t5853;
  double t5855;
  double t5856;
  double t5857;
  double t5858;
  double t5859;
  double t5890;
  double t5891;
  double t5892;
  double t5894;
  double t5896;
  double t5899;
  double t5900;
  double t5901;
  double t5925;
  double t5926;
  double t5927;
  double t5928;
  double t5930;
  double t5931;
  double t5932;
  double t5933;
  double t5936;
  double t5937;
  double t5938;
  double t5939;
  double t5976;
  double t5978;
  double t5979;
  double t5980;
  double t5984;
  double t5985;
  double t5987;
  double t5988;
  double t5991;
  double t5992;
  double t5993;
  double t5994;
  double t6022;
  double t6023;
  double t6024;
  double t6025;
  double t6019;
  double t6020;
  double t6029;
  double t6030;
  double t6031;
  double t6034;
  double t6079;
  double t6080;
  double t6081;
  double t6086;
  double t6087;
  double t6088;
  double t6090;
  double t6091;
  double t6095;
  double t6096;
  double t6097;
  double t5924;
  double t6122;
  double t6125;
  double t6126;
  double t6131;
  double t6133;
  double t6134;
  double t6137;
  double t6139;
  double t6142;
  double t6143;
  double t6145;
  double t5970;
  double t5971;
  double t5975;
  double t5982;
  double t5989;
  double t5990;
  double t5995;
  double t5996;
  double t5997;
  double t5998;
  double t5999;
  double t6000;
  double t6003;
  double t6004;
  double t6005;
  double t6006;
  double t6007;
  double t6008;
  double t6009;
  double t6010;
  double t6013;
  double t6014;
  double t6187;
  double t6188;
  double t6189;
  double t6190;
  double t6175;
  double t6176;
  double t6196;
  double t6197;
  double t6198;
  double t6217;
  double t6335;
  double t6339;
  double t6363;
  double t6364;
  double t6367;
  double t6368;
  double t6369;
  double t6370;
  double t6016;
  double t6017;
  double t6018;
  double t6021;
  double t6026;
  double t6027;
  double t6028;
  double t6035;
  double t6036;
  double t6037;
  double t6038;
  double t6039;
  double t6040;
  double t6041;
  double t6042;
  double t6043;
  double t6044;
  double t6045;
  double t6046;
  double t6047;
  double t6049;
  double t6050;
  double t6172;
  double t6173;
  double t6174;
  double t6186;
  double t6191;
  double t6192;
  double t6193;
  double t6221;
  double t6224;
  double t6226;
  double t6227;
  double t6228;
  double t6229;
  double t6230;
  double t6231;
  double t6232;
  double t6233;
  double t6234;
  double t6236;
  double t6237;
  double t6238;
  double t6239;
  double t6428;
  double t6480;
  double t6519;
  double t6527;
  double t6534;
  double t5888;
  double t5889;
  double t5893;
  double t5897;
  double t5898;
  double t5902;
  double t5903;
  double t5904;
  double t5905;
  double t5906;
  double t5907;
  double t5909;
  double t5910;
  double t5911;
  double t5912;
  double t5913;
  double t5914;
  double t5915;
  double t5916;
  double t5918;
  double t5919;
  double t6083;
  double t6084;
  double t6089;
  double t6093;
  double t6094;
  double t6098;
  double t6099;
  double t6100;
  double t6101;
  double t6102;
  double t6104;
  double t6105;
  double t6106;
  double t6108;
  double t6109;
  double t6111;
  double t6112;
  double t6113;
  double t6115;
  double t6116;
  double t6117;
  double t6121;
  double t6129;
  double t7013;
  double t7021;
  double t7030;
  double t6400;
  double t6407;
  double t6423;
  double t6481;
  double t6513;
  double t6514;
  double t6551;
  double t6558;
  double t6577;
  double t6617;
  double t6620;
  double t6638;
  double t6656;
  double t6671;
  double t6677;
  double t6697;
  double t6705;
  double t6707;
  double t6710;
  double t6714;
  double t5866;
  double t5867;
  double t5868;
  double t5869;
  double t5870;
  double t5871;
  double t5872;
  double t5873;
  double t5874;
  double t5875;
  double t5877;
  double t5878;
  double t5879;
  double t5881;
  double t5882;
  double t5883;
  double t5884;
  double t5885;
  double t5886;
  double t6054;
  double t6055;
  double t6056;
  double t6057;
  double t6063;
  double t6064;
  double t6065;
  double t6066;
  double t6067;
  double t6068;
  double t6069;
  double t6070;
  double t6071;
  double t6072;
  double t6073;
  double t6074;
  double t6075;
  double t6076;
  double t6077;
  double t6729;
  double t6730;
  double t6801;
  double t6810;
  double t6871;
  double t6874;
  double t6875;
  double t6876;
  double t6902;
  double t6907;
  double t6916;
  double t6924;
  double t6925;
  double t6929;
  double t6937;
  double t6938;
  double t6939;
  double t6953;
  double t6964;
  double t6251;
  double t6264;
  double t6265;
  double t6266;
  double t6274;
  double t6275;
  double t6276;
  double t6278;
  double t6279;
  double t6280;
  double t6285;
  double t6286;
  double t6287;
  double t6288;
  double t6290;
  double t6291;
  double t6292;
  double t6297;
  double t6299;
  double t5312;
  double t5319;
  double t5320;
  double t5324;
  double t5328;
  double t5333;
  double t5334;
  double t5335;
  double t5336;
  double t5342;
  double t5351;
  double t5352;
  double t5393;
  double t5395;
  double t5457;
  double t7236;
  double t7237;
  double t7238;
  double t7275;
  double t7276;
  double t7280;
  double t7281;
  double t7284;
  double t7286;
  double t7302;
  double t7315;
  double t7316;
  double t7317;
  double t7318;
  double t7388;
  double t7391;
  double t7396;
  double t7397;
  double t7398;
  double t7422;
  double t7494;
  double t7498;
  double t7500;
  double t7509;
  double t7510;
  double t7514;
  double t7515;
  double t7516;
  double t7517;
  double t7518;
  double t7520;
  double t7528;
  double t7532;
  double t7684;
  double t7741;
  double t7775;
  double t7776;
  double t7791;
  double t7792;
  double t7621;
  double t7663;
  double t7773;
  double t7781;
  double t7786;
  double t7793;
  double t7794;
  double t7800;
  double t7803;
  double t7822;
  double t7823;
  double t7824;
  double t7826;
  double t7827;
  double t7828;
  double t7830;
  double t7831;
  double t7833;
  double t7834;
  double t7856;
  double t7876;
  double t5548;
  double t5552;
  double t5554;
  double t5560;
  double t5571;
  double t5573;
  double t5584;
  double t5585;
  double t5586;
  double t5587;
  double t5588;
  double t5589;
  double t5590;
  double t5591;
  double t5592;
  double t5593;
  double t5594;
  double t5595;
  double t5596;
  double t5597;
  double t5600;
  double t7879;
  double t7891;
  double t7892;
  double t7920;
  double t7922;
  double t7924;
  double t7927;
  double t7928;
  double t7929;
  double t7934;
  double t7935;
  double t7936;
  double t7938;
  double t7886;
  double t7887;
  double t7890;
  double t7923;
  double t7931;
  double t7933;
  double t7944;
  double t7982;
  double t8055;
  double t8059;
  double t8096;
  double t8162;
  double t8184;
  double t8188;
  double t8212;
  double t8247;
  double t8249;
  double t8253;
  double t8269;
  double t8270;
  double t8271;
  double t8287;
  double t8342;
  double t8343;
  double t8346;
  double t8310;
  double t8312;
  double t8432;
  double t8440;
  double t8445;
  double t8446;
  double t8297;
  double t8298;
  double t8306;
  double t8341;
  double t8357;
  double t8369;
  double t8375;
  double t8447;
  double t8452;
  double t10464;
  double t11945;
  double t11978;
  double t11983;
  double t11984;
  double t11995;
  double t11996;
  double t12000;
  double t12002;
  double t12051;
  double t12084;
  double t12114;
  double t12120;
  double t12646;
  double t12647;
  double t12678;
  double t12680;
  double t12699;
  double t12700;
  double t12702;
  double t12881;
  double t12882;
  double t12883;
  double t12887;
  double t12888;
  double t12889;
  double t12892;
  double t12960;
  double t12961;
  double t13222;
  double t13223;
  double t13224;
  double t13225;
  double t13143;
  double t13208;
  double t13241;
  double t13243;
  double t13245;
  double t12630;
  double t12636;
  double t12648;
  double t12693;
  double t12698;
  double t12703;
  double t12705;
  double t12708;
  double t12711;
  double t12713;
  double t12714;
  double t12728;
  double t12729;
  double t12730;
  double t12747;
  double t12751;
  double t12756;
  double t12757;
  double t12759;
  double t12763;
  double t12767;
  double t13756;
  double t13772;
  double t14112;
  double t14249;
  double t14250;
  double t14255;
  double t14256;
  double t14257;
  double t14323;
  double t14325;
  double t14326;
  double t14327;
  double t14331;
  double t14332;
  double t14333;
  double t14336;
  double t13130;
  double t13138;
  double t13140;
  double t13217;
  double t13233;
  double t13238;
  double t13240;
  double t13249;
  double t13254;
  double t13260;
  double t13261;
  double t13262;
  double t13268;
  double t13449;
  double t13462;
  double t13463;
  double t13464;
  double t13466;
  double t13467;
  double t13554;
  double t13555;
  double t13556;
  double t14245;
  double t14246;
  double t14247;
  double t14251;
  double t14252;
  double t14254;
  double t14258;
  double t14259;
  double t14260;
  double t14261;
  double t14262;
  double t14265;
  double t14266;
  double t14267;
  double t14268;
  double t14270;
  double t14271;
  double t14272;
  double t14274;
  double t14275;
  double t5624;
  double t5695;
  double t5788;
  double t5825;
  double t5862;
  double t12149;
  double t12191;
  double t12252;
  double t12274;
  double t12281;
  double t12289;
  double t12327;
  double t12463;
  double t12468;
  double t12472;
  double t12523;
  double t12551;
  double t12556;
  double t12574;
  double t12584;
  double t12595;
  double t12596;
  double t12615;
  double t12619;
  double t13626;
  double t13627;
  double t13628;
  double t13630;
  double t13634;
  double t13635;
  double t13640;
  double t13641;
  double t13642;
  double t13643;
  double t13694;
  double t13697;
  double t13698;
  double t13702;
  double t13709;
  double t13710;
  double t13720;
  double t13721;
  double t13732;
  double t14299;
  double t14300;
  double t14301;
  double t14303;
  double t14304;
  double t14305;
  double t14306;
  double t14307;
  double t14308;
  double t14309;
  double t14310;
  double t14311;
  double t14312;
  double t14313;
  double t14314;
  double t14316;
  double t14317;
  double t14318;
  double t14319;
  t382 = Cos(var1[4]);
  t476 = Cos(var1[6]);
  t506 = -1.*t476;
  t559 = 1. + t506;
  t407 = Cos(var1[5]);
  t660 = Sin(var1[5]);
  t911 = Sin(var1[4]);
  t912 = Sin(var1[6]);
  t1271 = Cos(var1[8]);
  t1287 = -1.*t1271;
  t1308 = 1. + t1287;
  t1439 = Sin(var1[8]);
  t1757 = -3.e-6*t1308;
  t1961 = 3.e-6*t1439;
  t1967 = t1757 + t1961;
  t1056 = t382*t407*t476;
  t1074 = -3.e-6*t382*t559*t660;
  t1210 = t911*t912;
  t1219 = t1056 + t1074 + t1210;
  t1462 = -1.*t1439;
  t2126 = 3.e-6*t382*t407*t559;
  t2154 = -9.e-12*t559;
  t2157 = 1. + t2154;
  t2221 = -1.*t382*t2157*t660;
  t2239 = -3.e-6*t911*t912;
  t2250 = t2126 + t2221 + t2239;
  t3587 = 3.e-6*t1308;
  t2663 = -3.e-6*t1439;
  t3464 = -1.000000000009*t559;
  t3522 = 1. + t3464;
  t3528 = t3522*t911;
  t3544 = -1.*t382*t407*t912;
  t3562 = -3.e-6*t382*t660*t912;
  t3564 = t3528 + t3544 + t3562;
  t3592 = t3587 + t1961;
  t1246 = 9.e-13*var1[8];
  t2703 = t1757 + t2663;
  t1403 = -9.e-12*t1308;
  t3133 = -1.000000000009*t1308;
  t3234 = 1. + t3133;
  t3606 = t3587 + t2663;
  t3571 = 9.e-12*t1308;
  t3792 = -3.e-6*t1271;
  t3793 = t3792 + t2663;
  t3797 = 3.e-6*t1271;
  t3798 = t3797 + t2663;
  t3804 = -9.e-12*t1439;
  t3987 = t3797 + t1961;
  t4011 = 9.e-12*t1439;
  t3980 = t3792 + t1961;
  t3794 = 0.2*t3793;
  t3799 = 0.1*t3798;
  t3800 = -1.62e-17*t1439;
  t3801 = 3.e-7 + t3794 + t3799 + t3800;
  t3802 = t2250*t3801;
  t3803 = -9.e-7*t3793;
  t3805 = t1271 + t3804;
  t3806 = 0.2*t3805;
  t3807 = 0.1000000000009*t1439;
  t3856 = 9.e-13 + t3803 + t3806 + t3807;
  t3861 = t3564*t3856;
  t3864 = -9.e-7*t3798;
  t3865 = t1287 + t3804;
  t3895 = 0.1*t3865;
  t3896 = 0.2000000000018*t1439;
  t3908 = 9.e-13 + t3864 + t3895 + t3896;
  t3923 = t1219*t3908;
  t3985 = t1219*t3980;
  t3995 = t3564*t3987;
  t4005 = -1.8e-11*t2250*t1439;
  t4006 = t3985 + t3995 + t4005;
  t4007 = 0.100001*t4006;
  t4014 = t1287 + t4011;
  t4016 = t3564*t4014;
  t4017 = t2250*t3987;
  t4019 = -1.000000000009*t1219*t1439;
  t4024 = t4016 + t4017 + t4019;
  t4026 = 0.2*t4024;
  t4027 = t1271 + t4011;
  t4028 = t1219*t4027;
  t4029 = t2250*t3980;
  t4032 = -1.000000000009*t3564*t1439;
  t4034 = t4028 + t4029 + t4032;
  t4035 = -0.3*t4034;
  t4039 = t3802 + t3861 + t3923 + t4007 + t4026 + t4035;
  t1319 = 0.2000000000018*t1308;
  t1578 = t1403 + t1462;
  t1740 = 0.1*t1578;
  t1969 = -9.e-7*t1967;
  t1981 = t1246 + t1319 + t1740 + t1969;
  t2482 = 3.e-7*var1[8];
  t2659 = -1.62e-17*t1308;
  t2750 = 0.2*t2703;
  t2998 = 0.1*t1967;
  t3048 = t2482 + t2659 + t2750 + t2998;
  t4049 = -3.e-6*t382*t407*t559;
  t4051 = -1.*t382*t476*t660;
  t4054 = t4049 + t4051;
  t3572 = t3571 + t1462;
  t4057 = -1.*t382*t407*t2157;
  t4058 = t4057 + t1074;
  t3597 = -1.8e-11*t1308;
  t3598 = 1. + t3597;
  t4064 = -3.e-6*t382*t407*t912;
  t4065 = t382*t660*t912;
  t4068 = t4064 + t4065;
  t3627 = 0.1000000000009*t1308;
  t3708 = -9.e-7*t2703;
  t3709 = t1403 + t1439;
  t3764 = 0.2*t3709;
  t3774 = t1246 + t3627 + t3708 + t3764;
  t3788 = t3571 + t1439;
  t4045 = 6.000000000054e-7*t382*t407*t559;
  t4047 = -0.2000000000018*t382*t559*t660;
  t4055 = t4054*t1981;
  t4060 = t4058*t3048;
  t4061 = t3234*t4054;
  t4069 = t4068*t3572;
  t4075 = t4058*t3592;
  t4084 = t4061 + t4069 + t4075;
  t4093 = 0.2*t4084;
  t4094 = t3598*t4058;
  t4101 = t4054*t3606;
  t4103 = t4068*t3592;
  t4104 = t4094 + t4101 + t4103;
  t4105 = 0.100001*t4104;
  t4106 = t4068*t3774;
  t4107 = t3234*t4068;
  t4108 = t4058*t3606;
  t4109 = t4054*t3788;
  t4114 = t4107 + t4108 + t4109;
  t4115 = -0.3*t4114;
  t4116 = t4045 + t4047 + t4055 + t4060 + t4093 + t4105 + t4106 + t4115;
  t4123 = -1.*t407*t476*t911;
  t4124 = 3.e-6*t559*t911*t660;
  t4126 = t382*t912;
  t4127 = t4123 + t4124 + t4126;
  t4129 = -3.e-6*t407*t559*t911;
  t4130 = t2157*t911*t660;
  t4132 = -3.e-6*t382*t912;
  t4133 = t4129 + t4130 + t4132;
  t4136 = t382*t3522;
  t4137 = t407*t911*t912;
  t4138 = 3.e-6*t911*t660*t912;
  t4139 = t4136 + t4137 + t4138;
  t4120 = -0.2000000000018*t407*t559*t911;
  t4121 = -6.000000000054e-7*t559*t911*t660;
  t4122 = -0.2000000000018*t382*t912;
  t4128 = t4127*t1981;
  t4134 = t4133*t3048;
  t4135 = t3234*t4127;
  t4140 = t4139*t3572;
  t4141 = t4133*t3592;
  t4142 = t4135 + t4140 + t4141;
  t4143 = 0.2*t4142;
  t4144 = t3598*t4133;
  t4145 = t4127*t3606;
  t4146 = t4139*t3592;
  t4147 = t4144 + t4145 + t4146;
  t4148 = 0.100001*t4147;
  t4149 = t4139*t3774;
  t4150 = t3234*t4139;
  t4151 = t4133*t3606;
  t4152 = t4127*t3788;
  t4153 = t4150 + t4151 + t4152;
  t4154 = -0.3*t4153;
  t4155 = t4120 + t4121 + t4122 + t4128 + t4134 + t4143 + t4148 + t4149 + t4154;
  t4164 = -3.e-6*t476*t911;
  t4165 = 3.e-6*t382*t407*t912;
  t4166 = 9.e-12*t382*t660*t912;
  t4167 = t4164 + t4165 + t4166;
  t4161 = t476*t911;
  t4162 = t4161 + t3544 + t3562;
  t4171 = -1.*t382*t407*t476;
  t4172 = -3.e-6*t382*t476*t660;
  t4173 = -1.000000000009*t911*t912;
  t4174 = t4171 + t4172 + t4173;
  t4158 = -0.2000000000018*t476*t911;
  t4159 = 0.2000000000018*t382*t407*t912;
  t4160 = 6.000000000054e-7*t382*t660*t912;
  t4163 = t4162*t1981;
  t4168 = t4167*t3048;
  t4169 = t3598*t4167;
  t4170 = t4162*t3606;
  t4175 = t4174*t3592;
  t4176 = t4169 + t4170 + t4175;
  t4177 = 0.100001*t4176;
  t4178 = t3234*t4162;
  t4179 = t4174*t3572;
  t4180 = t4167*t3592;
  t4181 = t4178 + t4179 + t4180;
  t4182 = 0.2*t4181;
  t4183 = t4174*t3774;
  t4184 = t3234*t4174;
  t4185 = t4167*t3606;
  t4186 = t4162*t3788;
  t4187 = t4184 + t4185 + t4186;
  t4188 = -0.3*t4187;
  t4189 = t4158 + t4159 + t4160 + t4163 + t4168 + t4177 + t4182 + t4183 + t4188;
  t4339 = 3.e-6*t382*t559*t660;
  t4340 = t4171 + t4339;
  t4343 = t382*t2157*t660;
  t4349 = t4049 + t4343;
  t4361 = t382*t407*t912;
  t4365 = 3.e-6*t382*t660*t912;
  t4369 = t4361 + t4365;
  t4462 = 3.e-6*t407*t559*t911;
  t4473 = t476*t911*t660;
  t4483 = t4462 + t4473;
  t4512 = t407*t2157*t911;
  t4542 = t4512 + t4124;
  t4590 = 3.e-6*t407*t911*t912;
  t4591 = -1.*t911*t660*t912;
  t4598 = t4590 + t4591;
  t4664 = 9.e-12*t382*t407*t912;
  t4666 = t4664 + t3562;
  t4767 = -3.e-6*t382*t407*t476;
  t4773 = t382*t476*t660;
  t4774 = t4767 + t4773;
  t4967 = -1.*t911*t912;
  t4969 = t4171 + t4172 + t4967;
  t4971 = 3.e-6*t382*t407*t476;
  t4972 = 9.e-12*t382*t476*t660;
  t4973 = 3.e-6*t911*t912;
  t4975 = t4971 + t4972 + t4973;
  t4978 = -1.000000000009*t476*t911;
  t4979 = t4978 + t4361 + t4365;
  t4655 = 6.000000000054e-7*t382*t407*t912;
  t4658 = -0.2000000000018*t382*t660*t912;
  t4659 = t4068*t1981;
  t4726 = t4666*t3048;
  t4727 = t3598*t4666;
  t4753 = t4068*t3606;
  t4777 = t4774*t3592;
  t4779 = t4727 + t4753 + t4777;
  t4786 = 0.100001*t4779;
  t4787 = t4774*t3572;
  t4791 = t4666*t3592;
  t4792 = t4107 + t4787 + t4791;
  t4793 = 0.2*t4792;
  t4794 = t4774*t3774;
  t4795 = t3234*t4774;
  t4796 = t4666*t3606;
  t4797 = t4068*t3788;
  t4798 = t4795 + t4796 + t4797;
  t4799 = -0.3*t4798;
  t4801 = t4655 + t4658 + t4659 + t4726 + t4786 + t4793 + t4794 + t4799;
  t5028 = -3.e-6*t382*t476;
  t5029 = -3.e-6*t407*t911*t912;
  t5030 = -9.e-12*t911*t660*t912;
  t5031 = t5028 + t5029 + t5030;
  t5024 = t382*t476;
  t5025 = t5024 + t4137 + t4138;
  t5036 = t407*t476*t911;
  t5037 = 3.e-6*t476*t911*t660;
  t5038 = -1.000000000009*t382*t912;
  t5039 = t5036 + t5037 + t5038;
  t4424 = -6.000000000054e-7*t407*t559*t911;
  t4458 = 0.2000000000018*t559*t911*t660;
  t4508 = t4483*t1981;
  t4543 = t4542*t3048;
  t4589 = t3234*t4483;
  t4603 = t4598*t3572;
  t4605 = t4542*t3592;
  t4606 = t4589 + t4603 + t4605;
  t4618 = 0.2*t4606;
  t4619 = t3598*t4542;
  t4620 = t4483*t3606;
  t4621 = t4598*t3592;
  t4622 = t4619 + t4620 + t4621;
  t4623 = 0.100001*t4622;
  t4625 = t4598*t3774;
  t4626 = t3234*t4598;
  t4630 = t4542*t3606;
  t4636 = t4483*t3788;
  t4640 = t4626 + t4630 + t4636;
  t4644 = -0.3*t4640;
  t4648 = t4424 + t4458 + t4508 + t4543 + t4618 + t4623 + t4625 + t4644;
  t4330 = -0.2000000000018*t382*t407*t559;
  t4336 = -6.000000000054e-7*t382*t559*t660;
  t4966 = 0.2000000000018*t911*t912;
  t5105 = t4171 + t4339 + t4967;
  t5107 = t4049 + t4343 + t4973;
  t5121 = -1.*t3522*t911;
  t5122 = t5121 + t4361 + t4365;
  t5017 = -0.2000000000018*t382*t476;
  t5021 = -0.2000000000018*t407*t911*t912;
  t5022 = -6.000000000054e-7*t911*t660*t912;
  t5027 = t5025*t1981;
  t5032 = t5031*t3048;
  t5033 = t3598*t5031;
  t5034 = t5025*t3606;
  t5040 = t5039*t3592;
  t5042 = t5033 + t5034 + t5040;
  t5043 = 0.100001*t5042;
  t5044 = t3234*t5025;
  t5045 = t5039*t3572;
  t5047 = t5031*t3592;
  t5049 = t5044 + t5045 + t5047;
  t5050 = 0.2*t5049;
  t5051 = t5039*t3774;
  t5053 = t3234*t5039;
  t5054 = t5031*t3606;
  t5055 = t5025*t3788;
  t5056 = t5053 + t5054 + t5055;
  t5057 = -0.3*t5056;
  t5058 = t5017 + t5021 + t5022 + t5027 + t5032 + t5043 + t5050 + t5051 + t5057;
  t4805 = t4167*t3801;
  t4808 = t4174*t3856;
  t4809 = t4162*t3908;
  t4814 = t4162*t4027;
  t4819 = t4167*t3980;
  t4838 = -1.000000000009*t4174*t1439;
  t4839 = t4814 + t4819 + t4838;
  t4866 = -0.3*t4839;
  t4867 = t4174*t4014;
  t4884 = t4167*t3987;
  t4901 = -1.000000000009*t4162*t1439;
  t4902 = t4867 + t4884 + t4901;
  t4942 = 0.2*t4902;
  t4943 = t4162*t3980;
  t4944 = t4174*t3987;
  t4947 = -1.8e-11*t4167*t1439;
  t4954 = t4943 + t4944 + t4947;
  t4955 = 0.100001*t4954;
  t4961 = t4805 + t4808 + t4809 + t4866 + t4942 + t4955;
  t4192 = t4058*t3801;
  t4193 = t4068*t3856;
  t4194 = t4054*t3908;
  t4195 = t4054*t3980;
  t4196 = t4068*t3987;
  t4197 = -1.8e-11*t4058*t1439;
  t4198 = t4195 + t4196 + t4197;
  t4199 = 0.100001*t4198;
  t4200 = t4068*t4014;
  t4201 = t4058*t3987;
  t4202 = -1.000000000009*t4054*t1439;
  t4203 = t4200 + t4201 + t4202;
  t4204 = 0.2*t4203;
  t4205 = t4054*t4027;
  t4206 = t4058*t3980;
  t4207 = -1.000000000009*t4068*t1439;
  t4251 = t4205 + t4206 + t4207;
  t4260 = -0.3*t4251;
  t4276 = t4192 + t4193 + t4194 + t4199 + t4204 + t4260;
  t5064 = t4133*t3801;
  t5067 = t4139*t3856;
  t5068 = t4127*t3908;
  t5069 = t4127*t3980;
  t5070 = t4139*t3987;
  t5072 = -1.8e-11*t4133*t1439;
  t5074 = t5069 + t5070 + t5072;
  t5076 = 0.100001*t5074;
  t5077 = t4139*t4014;
  t5085 = t4133*t3987;
  t5089 = -1.000000000009*t4127*t1439;
  t5091 = t5077 + t5085 + t5089;
  t5092 = 0.2*t5091;
  t5093 = t4127*t4027;
  t5095 = t4133*t3980;
  t5096 = -1.000000000009*t4139*t1439;
  t5098 = t5093 + t5095 + t5096;
  t5099 = -0.3*t5098;
  t5100 = t5064 + t5067 + t5068 + t5076 + t5092 + t5099;
  t5318 = -9.e-12*t1271;
  t5341 = 9.e-12*t1271;
  t5542 = Cos(var1[3]);
  t5472 = Sin(var1[3]);
  t5541 = t407*t5472*t911;
  t5545 = t5542*t660;
  t5547 = t5541 + t5545;
  t5549 = t5542*t407;
  t5550 = -1.*t5472*t911*t660;
  t5551 = t5549 + t5550;
  t5555 = t476*t5547;
  t5556 = 3.e-6*t559*t5551;
  t5557 = -1.*t382*t5472*t912;
  t5558 = t5555 + t5556 + t5557;
  t5561 = 3.e-6*t559*t5547;
  t5562 = t2157*t5551;
  t5568 = 3.e-6*t382*t5472*t912;
  t5569 = t5561 + t5562 + t5568;
  t5575 = -1.*t382*t3522*t5472;
  t5577 = -1.*t5547*t912;
  t5582 = 3.e-6*t5551*t912;
  t5583 = t5575 + t5577 + t5582;
  t5601 = t5569*t3801;
  t5602 = t5583*t3856;
  t5603 = t5558*t3908;
  t5604 = t5583*t4014;
  t5605 = t5569*t3987;
  t5606 = -1.000000000009*t5558*t1439;
  t5607 = t5604 + t5605 + t5606;
  t5608 = 0.2*t5607;
  t5610 = t5558*t3980;
  t5612 = t5583*t3987;
  t5614 = -1.8e-11*t5569*t1439;
  t5615 = t5610 + t5612 + t5614;
  t5616 = 0.100001*t5615;
  t5617 = t5558*t4027;
  t5618 = t5569*t3980;
  t5619 = -1.000000000009*t5583*t1439;
  t5620 = t5617 + t5618 + t5619;
  t5621 = -0.3*t5620;
  t5622 = t5601 + t5602 + t5603 + t5608 + t5616 + t5621;
  t5625 = -1.*t407*t5472*t911;
  t5626 = -1.*t5542*t660;
  t5627 = t5625 + t5626;
  t5630 = 3.e-6*t559*t5627;
  t5631 = t476*t5551;
  t5633 = t5630 + t5631;
  t5637 = t2157*t5627;
  t5638 = t5637 + t5556;
  t5643 = 3.e-6*t5627*t912;
  t5644 = -1.*t5551*t912;
  t5645 = t5643 + t5644;
  t5628 = -6.000000000054e-7*t559*t5627;
  t5629 = 0.2000000000018*t559*t5551;
  t5635 = t5633*t1981;
  t5639 = t5638*t3048;
  t5642 = t3234*t5633;
  t5646 = t5645*t3572;
  t5647 = t5638*t3592;
  t5649 = t5642 + t5646 + t5647;
  t5650 = 0.2*t5649;
  t5651 = t3598*t5638;
  t5652 = t5633*t3606;
  t5653 = t5645*t3592;
  t5654 = t5651 + t5652 + t5653;
  t5655 = 0.100001*t5654;
  t5656 = t5645*t3774;
  t5657 = t3234*t5645;
  t5658 = t5638*t3606;
  t5659 = t5633*t3788;
  t5660 = t5657 + t5658 + t5659;
  t5663 = -0.3*t5660;
  t5691 = t5628 + t5629 + t5635 + t5639 + t5650 + t5655 + t5656 + t5663;
  t5724 = t5542*t407*t911;
  t5729 = -1.*t5472*t660;
  t5730 = t5724 + t5729;
  t5733 = -1.*t407*t5472;
  t5737 = -1.*t5542*t911*t660;
  t5738 = t5733 + t5737;
  t5745 = t476*t5730;
  t5746 = 3.e-6*t559*t5738;
  t5747 = -1.*t5542*t382*t912;
  t5748 = t5745 + t5746 + t5747;
  t5750 = 3.e-6*t559*t5730;
  t5751 = t2157*t5738;
  t5752 = 3.e-6*t5542*t382*t912;
  t5753 = t5750 + t5751 + t5752;
  t5756 = -1.*t5542*t382*t3522;
  t5757 = -1.*t5730*t912;
  t5758 = 3.e-6*t5738*t912;
  t5759 = t5756 + t5757 + t5758;
  t5731 = 0.2000000000018*t559*t5730;
  t5743 = -6.000000000054e-7*t559*t5738;
  t5744 = 0.2000000000018*t5542*t382*t912;
  t5749 = t5748*t1981;
  t5754 = t5753*t3048;
  t5755 = t3234*t5748;
  t5760 = t5759*t3572;
  t5761 = t5753*t3592;
  t5762 = t5755 + t5760 + t5761;
  t5764 = 0.2*t5762;
  t5765 = t3598*t5753;
  t5766 = t5748*t3606;
  t5767 = t5759*t3592;
  t5768 = t5765 + t5766 + t5767;
  t5771 = 0.100001*t5768;
  t5774 = t5759*t3774;
  t5776 = t3234*t5759;
  t5777 = t5753*t3606;
  t5781 = t5748*t3788;
  t5783 = t5776 + t5777 + t5781;
  t5785 = -0.3*t5783;
  t5786 = t5731 + t5743 + t5744 + t5749 + t5754 + t5764 + t5771 + t5774 + t5785;
  t5792 = t382*t407*t476*t5472;
  t5793 = -3.e-6*t382*t559*t5472*t660;
  t5794 = t5472*t911*t912;
  t5795 = t5792 + t5793 + t5794;
  t5797 = 3.e-6*t382*t407*t559*t5472;
  t5798 = -1.*t382*t2157*t5472*t660;
  t5799 = -3.e-6*t5472*t911*t912;
  t5800 = t5797 + t5798 + t5799;
  t5803 = t3522*t5472*t911;
  t5804 = -1.*t382*t407*t5472*t912;
  t5805 = -3.e-6*t382*t5472*t660*t912;
  t5806 = t5803 + t5804 + t5805;
  t5789 = 0.2000000000018*t382*t407*t559*t5472;
  t5790 = 6.000000000054e-7*t382*t559*t5472*t660;
  t5791 = -0.2000000000018*t5472*t911*t912;
  t5796 = t5795*t1981;
  t5801 = t5800*t3048;
  t5802 = t3234*t5795;
  t5807 = t5806*t3572;
  t5808 = t5800*t3592;
  t5809 = t5802 + t5807 + t5808;
  t5811 = 0.2*t5809;
  t5812 = t3598*t5800;
  t5813 = t5795*t3606;
  t5814 = t5806*t3592;
  t5815 = t5812 + t5813 + t5814;
  t5816 = 0.100001*t5815;
  t5817 = t5806*t3774;
  t5818 = t3234*t5806;
  t5819 = t5800*t3606;
  t5820 = t5795*t3788;
  t5821 = t5818 + t5819 + t5820;
  t5822 = -0.3*t5821;
  t5823 = t5789 + t5790 + t5791 + t5796 + t5801 + t5811 + t5816 + t5817 + t5822;
  t5832 = 3.e-6*t382*t476*t5472;
  t5833 = 3.e-6*t5547*t912;
  t5834 = -9.e-12*t5551*t912;
  t5835 = t5832 + t5833 + t5834;
  t5829 = -1.*t382*t476*t5472;
  t5830 = t5829 + t5577 + t5582;
  t5839 = -1.*t476*t5547;
  t5840 = 3.e-6*t476*t5551;
  t5841 = 1.000000000009*t382*t5472*t912;
  t5842 = t5839 + t5840 + t5841;
  t5826 = 0.2000000000018*t382*t476*t5472;
  t5827 = 0.2000000000018*t5547*t912;
  t5828 = -6.000000000054e-7*t5551*t912;
  t5831 = t5830*t1981;
  t5836 = t5835*t3048;
  t5837 = t3598*t5835;
  t5838 = t5830*t3606;
  t5843 = t5842*t3592;
  t5844 = t5837 + t5838 + t5843;
  t5845 = 0.100001*t5844;
  t5846 = t3234*t5830;
  t5847 = t5842*t3572;
  t5848 = t5835*t3592;
  t5849 = t5846 + t5847 + t5848;
  t5850 = 0.2*t5849;
  t5852 = t5842*t3774;
  t5853 = t3234*t5842;
  t5855 = t5835*t3606;
  t5856 = t5830*t3788;
  t5857 = t5853 + t5855 + t5856;
  t5858 = -0.3*t5857;
  t5859 = t5826 + t5827 + t5828 + t5831 + t5836 + t5845 + t5850 + t5852 + t5858;
  t5890 = -3.e-6*t382*t407*t559*t5472;
  t5891 = -1.*t382*t476*t5472*t660;
  t5892 = t5890 + t5891;
  t5894 = -1.*t382*t407*t2157*t5472;
  t5896 = t5894 + t5793;
  t5899 = -3.e-6*t382*t407*t5472*t912;
  t5900 = t382*t5472*t660*t912;
  t5901 = t5899 + t5900;
  t5925 = -1.*t407*t476*t5472*t911;
  t5926 = 3.e-6*t559*t5472*t911*t660;
  t5927 = t382*t5472*t912;
  t5928 = t5925 + t5926 + t5927;
  t5930 = -3.e-6*t407*t559*t5472*t911;
  t5931 = t2157*t5472*t911*t660;
  t5932 = -3.e-6*t382*t5472*t912;
  t5933 = t5930 + t5931 + t5932;
  t5936 = t382*t3522*t5472;
  t5937 = t407*t5472*t911*t912;
  t5938 = 3.e-6*t5472*t911*t660*t912;
  t5939 = t5936 + t5937 + t5938;
  t5976 = t5542*t382*t407*t476;
  t5978 = -3.e-6*t5542*t382*t559*t660;
  t5979 = t5542*t911*t912;
  t5980 = t5976 + t5978 + t5979;
  t5984 = 3.e-6*t5542*t382*t407*t559;
  t5985 = -1.*t5542*t382*t2157*t660;
  t5987 = -3.e-6*t5542*t911*t912;
  t5988 = t5984 + t5985 + t5987;
  t5991 = t5542*t3522*t911;
  t5992 = -1.*t5542*t382*t407*t912;
  t5993 = -3.e-6*t5542*t382*t660*t912;
  t5994 = t5991 + t5992 + t5993;
  t6022 = -3.e-6*t476*t5472*t911;
  t6023 = 3.e-6*t382*t407*t5472*t912;
  t6024 = 9.e-12*t382*t5472*t660*t912;
  t6025 = t6022 + t6023 + t6024;
  t6019 = t476*t5472*t911;
  t6020 = t6019 + t5804 + t5805;
  t6029 = -1.*t382*t407*t476*t5472;
  t6030 = -3.e-6*t382*t476*t5472*t660;
  t6031 = -1.000000000009*t5472*t911*t912;
  t6034 = t6029 + t6030 + t6031;
  t6079 = -1.*t5542*t407*t911;
  t6080 = t5472*t660;
  t6081 = t6079 + t6080;
  t6086 = 3.e-6*t559*t6081;
  t6087 = t476*t5738;
  t6088 = t6086 + t6087;
  t6090 = t2157*t6081;
  t6091 = t6090 + t5746;
  t6095 = 3.e-6*t6081*t912;
  t6096 = -1.*t5738*t912;
  t6097 = t6095 + t6096;
  t5924 = -0.2000000000018*t382*t5472*t912;
  t6122 = -1.*t5542*t407;
  t6125 = t5472*t911*t660;
  t6126 = t6122 + t6125;
  t6131 = t476*t5627;
  t6133 = 3.e-6*t559*t6126;
  t6134 = t6131 + t6133 + t5927;
  t6137 = t2157*t6126;
  t6139 = t5630 + t6137 + t5932;
  t6142 = -1.*t5627*t912;
  t6143 = 3.e-6*t6126*t912;
  t6145 = t5936 + t6142 + t6143;
  t5970 = 0.2000000000018*t5542*t382*t407*t559;
  t5971 = 6.000000000054e-7*t5542*t382*t559*t660;
  t5975 = -0.2000000000018*t5542*t911*t912;
  t5982 = t5980*t1981;
  t5989 = t5988*t3048;
  t5990 = t3234*t5980;
  t5995 = t5994*t3572;
  t5996 = t5988*t3592;
  t5997 = t5990 + t5995 + t5996;
  t5998 = 0.2*t5997;
  t5999 = t3598*t5988;
  t6000 = t5980*t3606;
  t6003 = t5994*t3592;
  t6004 = t5999 + t6000 + t6003;
  t6005 = 0.100001*t6004;
  t6006 = t5994*t3774;
  t6007 = t3234*t5994;
  t6008 = t5988*t3606;
  t6009 = t5980*t3788;
  t6010 = t6007 + t6008 + t6009;
  t6013 = -0.3*t6010;
  t6014 = t5970 + t5971 + t5975 + t5982 + t5989 + t5998 + t6005 + t6006 + t6013;
  t6187 = 3.e-6*t5542*t382*t476;
  t6188 = 3.e-6*t5730*t912;
  t6189 = -9.e-12*t5738*t912;
  t6190 = t6187 + t6188 + t6189;
  t6175 = -1.*t5542*t382*t476;
  t6176 = t6175 + t5757 + t5758;
  t6196 = -1.*t476*t5730;
  t6197 = 3.e-6*t476*t5738;
  t6198 = 1.000000000009*t5542*t382*t912;
  t6217 = t6196 + t6197 + t6198;
  t6335 = t5839 + t5840 + t5927;
  t6339 = 3.e-6*t476*t5547;
  t6363 = -9.e-12*t476*t5551;
  t6364 = t6339 + t6363 + t5932;
  t6367 = 1.000000000009*t382*t476*t5472;
  t6368 = t5547*t912;
  t6369 = -3.e-6*t5551*t912;
  t6370 = t6367 + t6368 + t6369;
  t6016 = -0.2000000000018*t476*t5472*t911;
  t6017 = 0.2000000000018*t382*t407*t5472*t912;
  t6018 = 6.000000000054e-7*t382*t5472*t660*t912;
  t6021 = t6020*t1981;
  t6026 = t6025*t3048;
  t6027 = t3598*t6025;
  t6028 = t6020*t3606;
  t6035 = t6034*t3592;
  t6036 = t6027 + t6028 + t6035;
  t6037 = 0.100001*t6036;
  t6038 = t3234*t6020;
  t6039 = t6034*t3572;
  t6040 = t6025*t3592;
  t6041 = t6038 + t6039 + t6040;
  t6042 = 0.2*t6041;
  t6043 = t6034*t3774;
  t6044 = t3234*t6034;
  t6045 = t6025*t3606;
  t6046 = t6020*t3788;
  t6047 = t6044 + t6045 + t6046;
  t6049 = -0.3*t6047;
  t6050 = t6016 + t6017 + t6018 + t6021 + t6026 + t6037 + t6042 + t6043 + t6049;
  t6172 = 0.2000000000018*t5542*t382*t476;
  t6173 = 0.2000000000018*t5730*t912;
  t6174 = -6.000000000054e-7*t5738*t912;
  t6186 = t6176*t1981;
  t6191 = t6190*t3048;
  t6192 = t3598*t6190;
  t6193 = t6176*t3606;
  t6221 = t6217*t3592;
  t6224 = t6192 + t6193 + t6221;
  t6226 = 0.100001*t6224;
  t6227 = t3234*t6176;
  t6228 = t6217*t3572;
  t6229 = t6190*t3592;
  t6230 = t6227 + t6228 + t6229;
  t6231 = 0.2*t6230;
  t6232 = t6217*t3774;
  t6233 = t3234*t6217;
  t6234 = t6190*t3606;
  t6236 = t6176*t3788;
  t6237 = t6233 + t6234 + t6236;
  t6238 = -0.3*t6237;
  t6239 = t6172 + t6173 + t6174 + t6186 + t6191 + t6226 + t6231 + t6232 + t6238;
  t6428 = -9.e-12*t5627*t912;
  t6480 = t6428 + t5582;
  t6519 = 3.e-6*t476*t5627;
  t6527 = -1.*t476*t5551;
  t6534 = t6519 + t6527;
  t5888 = 6.000000000054e-7*t382*t407*t559*t5472;
  t5889 = -0.2000000000018*t382*t559*t5472*t660;
  t5893 = t5892*t1981;
  t5897 = t5896*t3048;
  t5898 = t3234*t5892;
  t5902 = t5901*t3572;
  t5903 = t5896*t3592;
  t5904 = t5898 + t5902 + t5903;
  t5905 = 0.2*t5904;
  t5906 = t3598*t5896;
  t5907 = t5892*t3606;
  t5909 = t5901*t3592;
  t5910 = t5906 + t5907 + t5909;
  t5911 = 0.100001*t5910;
  t5912 = t5901*t3774;
  t5913 = t3234*t5901;
  t5914 = t5896*t3606;
  t5915 = t5892*t3788;
  t5916 = t5913 + t5914 + t5915;
  t5918 = -0.3*t5916;
  t5919 = t5888 + t5889 + t5893 + t5897 + t5905 + t5911 + t5912 + t5918;
  t6083 = -6.000000000054e-7*t559*t6081;
  t6084 = 0.2000000000018*t559*t5738;
  t6089 = t6088*t1981;
  t6093 = t6091*t3048;
  t6094 = t3234*t6088;
  t6098 = t6097*t3572;
  t6099 = t6091*t3592;
  t6100 = t6094 + t6098 + t6099;
  t6101 = 0.2*t6100;
  t6102 = t3598*t6091;
  t6104 = t6088*t3606;
  t6105 = t6097*t3592;
  t6106 = t6102 + t6104 + t6105;
  t6108 = 0.100001*t6106;
  t6109 = t6097*t3774;
  t6111 = t3234*t6097;
  t6112 = t6091*t3606;
  t6113 = t6088*t3788;
  t6115 = t6111 + t6112 + t6113;
  t6116 = -0.3*t6115;
  t6117 = t6083 + t6084 + t6089 + t6093 + t6101 + t6108 + t6109 + t6116;
  t6121 = 0.2000000000018*t559*t5627;
  t6129 = -6.000000000054e-7*t559*t6126;
  t7013 = t6131 + t6133;
  t7021 = t5630 + t6137;
  t7030 = t6142 + t6143;
  t6400 = -6.000000000054e-7*t5627*t912;
  t6407 = 0.2000000000018*t5551*t912;
  t6423 = t5645*t1981;
  t6481 = t6480*t3048;
  t6513 = t3598*t6480;
  t6514 = t5645*t3606;
  t6551 = t6534*t3592;
  t6558 = t6513 + t6514 + t6551;
  t6577 = 0.100001*t6558;
  t6617 = t6534*t3572;
  t6620 = t6480*t3592;
  t6638 = t5657 + t6617 + t6620;
  t6656 = 0.2*t6638;
  t6671 = t6534*t3774;
  t6677 = t3234*t6534;
  t6697 = t6480*t3606;
  t6705 = t5645*t3788;
  t6707 = t6677 + t6697 + t6705;
  t6710 = -0.3*t6707;
  t6714 = t6400 + t6407 + t6423 + t6481 + t6577 + t6656 + t6671 + t6710;
  t5866 = t5800*t3801;
  t5867 = t5806*t3856;
  t5868 = t5795*t3908;
  t5869 = t5795*t3980;
  t5870 = t5806*t3987;
  t5871 = -1.8e-11*t5800*t1439;
  t5872 = t5869 + t5870 + t5871;
  t5873 = 0.100001*t5872;
  t5874 = t5806*t4014;
  t5875 = t5800*t3987;
  t5877 = -1.000000000009*t5795*t1439;
  t5878 = t5874 + t5875 + t5877;
  t5879 = 0.2*t5878;
  t5881 = t5795*t4027;
  t5882 = t5800*t3980;
  t5883 = -1.000000000009*t5806*t1439;
  t5884 = t5881 + t5882 + t5883;
  t5885 = -0.3*t5884;
  t5886 = t5866 + t5867 + t5868 + t5873 + t5879 + t5885;
  t6054 = t5753*t3801;
  t6055 = t5759*t3856;
  t6056 = t5748*t3908;
  t6057 = t5759*t4014;
  t6063 = t5753*t3987;
  t6064 = -1.000000000009*t5748*t1439;
  t6065 = t6057 + t6063 + t6064;
  t6066 = 0.2*t6065;
  t6067 = t5748*t3980;
  t6068 = t5759*t3987;
  t6069 = -1.8e-11*t5753*t1439;
  t6070 = t6067 + t6068 + t6069;
  t6071 = 0.100001*t6070;
  t6072 = t5748*t4027;
  t6073 = t5753*t3980;
  t6074 = -1.000000000009*t5759*t1439;
  t6075 = t6072 + t6073 + t6074;
  t6076 = -0.3*t6075;
  t6077 = t6054 + t6055 + t6056 + t6066 + t6071 + t6076;
  t6729 = t5638*t3801;
  t6730 = t5645*t3856;
  t6801 = t5633*t3908;
  t6810 = t5633*t3980;
  t6871 = t5645*t3987;
  t6874 = -1.8e-11*t5638*t1439;
  t6875 = t6810 + t6871 + t6874;
  t6876 = 0.100001*t6875;
  t6902 = t5645*t4014;
  t6907 = t5638*t3987;
  t6916 = -1.000000000009*t5633*t1439;
  t6924 = t6902 + t6907 + t6916;
  t6925 = 0.2*t6924;
  t6929 = t5633*t4027;
  t6937 = t5638*t3980;
  t6938 = -1.000000000009*t5645*t1439;
  t6939 = t6929 + t6937 + t6938;
  t6953 = -0.3*t6939;
  t6964 = t6729 + t6730 + t6801 + t6876 + t6925 + t6953;
  t6251 = t5835*t3801;
  t6264 = t5842*t3856;
  t6265 = t5830*t3908;
  t6266 = t5830*t4027;
  t6274 = t5835*t3980;
  t6275 = -1.000000000009*t5842*t1439;
  t6276 = t6266 + t6274 + t6275;
  t6278 = -0.3*t6276;
  t6279 = t5830*t3980;
  t6280 = t5842*t3987;
  t6285 = -1.8e-11*t5835*t1439;
  t6286 = t6279 + t6280 + t6285;
  t6287 = 0.100001*t6286;
  t6288 = t5842*t4014;
  t6290 = t5835*t3987;
  t6291 = -1.000000000009*t5830*t1439;
  t6292 = t6288 + t6290 + t6291;
  t6297 = 0.2*t6292;
  t6299 = t6251 + t6264 + t6265 + t6278 + t6287 + t6297;
  t5312 = 0.1000000000009*t1271;
  t5319 = t5318 + t1462;
  t5320 = 0.2*t5319;
  t5324 = -9.e-7*t3980;
  t5328 = t5312 + t5320 + t5324;
  t5333 = -1.62e-17*t1271;
  t5334 = 0.1*t3793;
  t5335 = 0.2*t3980;
  t5336 = t5333 + t5334 + t5335;
  t5342 = t5341 + t1462;
  t5351 = 0.2000000000018*t1271;
  t5352 = t5318 + t1439;
  t5393 = 0.1*t5352;
  t5395 = t5351 + t3803 + t5393;
  t5457 = t5341 + t1439;
  t7236 = t407*t5472;
  t7237 = t5542*t911*t660;
  t7238 = t7236 + t7237;
  t7275 = t476*t6081;
  t7276 = 3.e-6*t559*t7238;
  t7280 = t5542*t382*t912;
  t7281 = t7275 + t7276 + t7280;
  t7284 = t2157*t7238;
  t7286 = -3.e-6*t5542*t382*t912;
  t7302 = t6086 + t7284 + t7286;
  t7315 = t5542*t382*t3522;
  t7316 = -1.*t6081*t912;
  t7317 = 3.e-6*t7238*t912;
  t7318 = t7315 + t7316 + t7317;
  t7388 = t7302*t3801;
  t7391 = t7318*t3856;
  t7396 = t7281*t3908;
  t7397 = t7281*t3980;
  t7398 = t7318*t3987;
  t7422 = -1.8e-11*t7302*t1439;
  t7494 = t7397 + t7398 + t7422;
  t7498 = 0.100001*t7494;
  t7500 = t7318*t4014;
  t7509 = t7302*t3987;
  t7510 = -1.000000000009*t7281*t1439;
  t7514 = t7500 + t7509 + t7510;
  t7515 = 0.2*t7514;
  t7516 = t7281*t4027;
  t7517 = t7302*t3980;
  t7518 = -1.000000000009*t7318*t1439;
  t7520 = t7516 + t7517 + t7518;
  t7528 = -0.3*t7520;
  t7532 = t7388 + t7391 + t7396 + t7498 + t7515 + t7528;
  t7684 = t476*t7238;
  t7741 = t5750 + t7684;
  t7775 = t2157*t5730;
  t7776 = t7775 + t7276;
  t7791 = -1.*t7238*t912;
  t7792 = t6188 + t7791;
  t7621 = -6.000000000054e-7*t559*t5730;
  t7663 = 0.2000000000018*t559*t7238;
  t7773 = t7741*t1981;
  t7781 = t7776*t3048;
  t7786 = t3234*t7741;
  t7793 = t7792*t3572;
  t7794 = t7776*t3592;
  t7800 = t7786 + t7793 + t7794;
  t7803 = 0.2*t7800;
  t7822 = t3598*t7776;
  t7823 = t7741*t3606;
  t7824 = t7792*t3592;
  t7826 = t7822 + t7823 + t7824;
  t7827 = 0.100001*t7826;
  t7828 = t7792*t3774;
  t7830 = t3234*t7792;
  t7831 = t7776*t3606;
  t7833 = t7741*t3788;
  t7834 = t7830 + t7831 + t7833;
  t7856 = -0.3*t7834;
  t7876 = t7621 + t7663 + t7773 + t7781 + t7803 + t7827 + t7828 + t7856;
  t5548 = 0.2000000000018*t559*t5547;
  t5552 = -6.000000000054e-7*t559*t5551;
  t5554 = 0.2000000000018*t382*t5472*t912;
  t5560 = t5558*t1981;
  t5571 = t5569*t3048;
  t5573 = t3234*t5558;
  t5584 = t5583*t3572;
  t5585 = t5569*t3592;
  t5586 = t5573 + t5584 + t5585;
  t5587 = 0.2*t5586;
  t5588 = t3598*t5569;
  t5589 = t5558*t3606;
  t5590 = t5583*t3592;
  t5591 = t5588 + t5589 + t5590;
  t5592 = 0.100001*t5591;
  t5593 = t5583*t3774;
  t5594 = t3234*t5583;
  t5595 = t5569*t3606;
  t5596 = t5558*t3788;
  t5597 = t5594 + t5595 + t5596;
  t5600 = -0.3*t5597;
  t7879 = t5548 + t5552 + t5554 + t5560 + t5571 + t5587 + t5592 + t5593 + t5600;
  t7891 = -1.*t5542*t382*t407*t476;
  t7892 = 3.e-6*t5542*t382*t559*t660;
  t7920 = -1.*t5542*t911*t912;
  t7922 = t7891 + t7892 + t7920;
  t7924 = -3.e-6*t5542*t382*t407*t559;
  t7927 = t5542*t382*t2157*t660;
  t7928 = 3.e-6*t5542*t911*t912;
  t7929 = t7924 + t7927 + t7928;
  t7934 = -1.*t5542*t3522*t911;
  t7935 = t5542*t382*t407*t912;
  t7936 = 3.e-6*t5542*t382*t660*t912;
  t7938 = t7934 + t7935 + t7936;
  t7886 = -0.2000000000018*t5542*t382*t407*t559;
  t7887 = -6.000000000054e-7*t5542*t382*t559*t660;
  t7890 = 0.2000000000018*t5542*t911*t912;
  t7923 = t7922*t1981;
  t7931 = t7929*t3048;
  t7933 = t3234*t7922;
  t7944 = t7938*t3572;
  t7982 = t7929*t3592;
  t8055 = t7933 + t7944 + t7982;
  t8059 = 0.2*t8055;
  t8096 = t3598*t7929;
  t8162 = t7922*t3606;
  t8184 = t7938*t3592;
  t8188 = t8096 + t8162 + t8184;
  t8212 = 0.100001*t8188;
  t8247 = t7938*t3774;
  t8249 = t3234*t7938;
  t8253 = t7929*t3606;
  t8269 = t7922*t3788;
  t8270 = t8249 + t8253 + t8269;
  t8271 = -0.3*t8270;
  t8287 = t7886 + t7887 + t7890 + t7923 + t7931 + t8059 + t8212 + t8247 + t8271;
  t8342 = -3.e-6*t5542*t382*t476;
  t8343 = -9.e-12*t7238*t912;
  t8346 = t8342 + t6095 + t8343;
  t8310 = t5542*t382*t476;
  t8312 = t8310 + t7316 + t7317;
  t8432 = -1.*t476*t6081;
  t8440 = 3.e-6*t476*t7238;
  t8445 = -1.000000000009*t5542*t382*t912;
  t8446 = t8432 + t8440 + t8445;
  t8297 = -0.2000000000018*t5542*t382*t476;
  t8298 = 0.2000000000018*t6081*t912;
  t8306 = -6.000000000054e-7*t7238*t912;
  t8341 = t8312*t1981;
  t8357 = t8346*t3048;
  t8369 = t3598*t8346;
  t8375 = t8312*t3606;
  t8447 = t8446*t3592;
  t8452 = t8369 + t8375 + t8447;
  t10464 = 0.100001*t8452;
  t11945 = t3234*t8312;
  t11978 = t8446*t3572;
  t11983 = t8346*t3592;
  t11984 = t11945 + t11978 + t11983;
  t11995 = 0.2*t11984;
  t11996 = t8446*t3774;
  t12000 = t3234*t8446;
  t12002 = t8346*t3606;
  t12051 = t8312*t3788;
  t12084 = t12000 + t12002 + t12051;
  t12114 = -0.3*t12084;
  t12120 = t8297 + t8298 + t8306 + t8341 + t8357 + t10464 + t11995 + t11996 + t12114;
  t12646 = t5542*t382*t476*t660;
  t12647 = t5984 + t12646;
  t12678 = t5542*t382*t407*t2157;
  t12680 = t12678 + t7892;
  t12699 = 3.e-6*t5542*t382*t407*t912;
  t12700 = -1.*t5542*t382*t660*t912;
  t12702 = t12699 + t12700;
  t12881 = t5542*t407*t476*t911;
  t12882 = -3.e-6*t5542*t559*t911*t660;
  t12883 = t12881 + t12882 + t5747;
  t12887 = 3.e-6*t5542*t407*t559*t911;
  t12888 = -1.*t5542*t2157*t911*t660;
  t12889 = t12887 + t12888 + t5752;
  t12892 = -1.*t5542*t407*t911*t912;
  t12960 = -3.e-6*t5542*t911*t660*t912;
  t12961 = t5756 + t12892 + t12960;
  t13222 = 3.e-6*t5542*t476*t911;
  t13223 = -3.e-6*t5542*t382*t407*t912;
  t13224 = -9.e-12*t5542*t382*t660*t912;
  t13225 = t13222 + t13223 + t13224;
  t13143 = -1.*t5542*t476*t911;
  t13208 = t13143 + t7935 + t7936;
  t13241 = 3.e-6*t5542*t382*t476*t660;
  t13243 = 1.000000000009*t5542*t911*t912;
  t13245 = t5976 + t13241 + t13243;
  t12630 = -6.000000000054e-7*t5542*t382*t407*t559;
  t12636 = 0.2000000000018*t5542*t382*t559*t660;
  t12648 = t12647*t1981;
  t12693 = t12680*t3048;
  t12698 = t3234*t12647;
  t12703 = t12702*t3572;
  t12705 = t12680*t3592;
  t12708 = t12698 + t12703 + t12705;
  t12711 = 0.2*t12708;
  t12713 = t3598*t12680;
  t12714 = t12647*t3606;
  t12728 = t12702*t3592;
  t12729 = t12713 + t12714 + t12728;
  t12730 = 0.100001*t12729;
  t12747 = t12702*t3774;
  t12751 = t3234*t12702;
  t12756 = t12680*t3606;
  t12757 = t12647*t3788;
  t12759 = t12751 + t12756 + t12757;
  t12763 = -0.3*t12759;
  t12767 = t12630 + t12636 + t12648 + t12693 + t12711 + t12730 + t12747 + t12763;
  t13756 = t5745 + t5746;
  t13772 = t5750 + t5751;
  t14112 = t5757 + t5758;
  t14249 = -9.e-12*t5730*t912;
  t14250 = t14249 + t7317;
  t14255 = 3.e-6*t476*t5730;
  t14256 = -1.*t476*t7238;
  t14257 = t14255 + t14256;
  t14323 = t8432 + t8440 + t5747;
  t14325 = 3.e-6*t476*t6081;
  t14326 = -9.e-12*t476*t7238;
  t14327 = t14325 + t14326 + t5752;
  t14331 = -1.000000000009*t5542*t382*t476;
  t14332 = t6081*t912;
  t14333 = -3.e-6*t7238*t912;
  t14336 = t14331 + t14332 + t14333;
  t13130 = 0.2000000000018*t5542*t476*t911;
  t13138 = -0.2000000000018*t5542*t382*t407*t912;
  t13140 = -6.000000000054e-7*t5542*t382*t660*t912;
  t13217 = t13208*t1981;
  t13233 = t13225*t3048;
  t13238 = t3598*t13225;
  t13240 = t13208*t3606;
  t13249 = t13245*t3592;
  t13254 = t13238 + t13240 + t13249;
  t13260 = 0.100001*t13254;
  t13261 = t3234*t13208;
  t13262 = t13245*t3572;
  t13268 = t13225*t3592;
  t13449 = t13261 + t13262 + t13268;
  t13462 = 0.2*t13449;
  t13463 = t13245*t3774;
  t13464 = t3234*t13245;
  t13466 = t13225*t3606;
  t13467 = t13208*t3788;
  t13554 = t13464 + t13466 + t13467;
  t13555 = -0.3*t13554;
  t13556 = t13130 + t13138 + t13140 + t13217 + t13233 + t13260 + t13462 + t13463 + t13555;
  t14245 = -6.000000000054e-7*t5730*t912;
  t14246 = 0.2000000000018*t7238*t912;
  t14247 = t7792*t1981;
  t14251 = t14250*t3048;
  t14252 = t3598*t14250;
  t14254 = t7792*t3606;
  t14258 = t14257*t3592;
  t14259 = t14252 + t14254 + t14258;
  t14260 = 0.100001*t14259;
  t14261 = t14257*t3572;
  t14262 = t14250*t3592;
  t14265 = t7830 + t14261 + t14262;
  t14266 = 0.2*t14265;
  t14267 = t14257*t3774;
  t14268 = t3234*t14257;
  t14270 = t14250*t3606;
  t14271 = t7792*t3788;
  t14272 = t14268 + t14270 + t14271;
  t14274 = -0.3*t14272;
  t14275 = t14245 + t14246 + t14247 + t14251 + t14260 + t14266 + t14267 + t14274;
  t5624 = var2[8]*t5622;
  t5695 = var2[5]*t5691;
  t5788 = var2[3]*t5786;
  t5825 = var2[4]*t5823;
  t5862 = var2[6]*t5859;
  t12149 = t7929*t3801;
  t12191 = t7938*t3856;
  t12252 = t7922*t3908;
  t12274 = t7938*t4014;
  t12281 = t7929*t3987;
  t12289 = -1.000000000009*t7922*t1439;
  t12327 = t12274 + t12281 + t12289;
  t12463 = 0.2*t12327;
  t12468 = t7922*t3980;
  t12472 = t7938*t3987;
  t12523 = -1.8e-11*t7929*t1439;
  t12551 = t12468 + t12472 + t12523;
  t12556 = 0.100001*t12551;
  t12574 = t7922*t4027;
  t12584 = t7929*t3980;
  t12595 = -1.000000000009*t7938*t1439;
  t12596 = t12574 + t12584 + t12595;
  t12615 = -0.3*t12596;
  t12619 = t12149 + t12191 + t12252 + t12463 + t12556 + t12615;
  t13626 = t7776*t3801;
  t13627 = t7792*t3856;
  t13628 = t7741*t3908;
  t13630 = t7741*t3980;
  t13634 = t7792*t3987;
  t13635 = -1.8e-11*t7776*t1439;
  t13640 = t13630 + t13634 + t13635;
  t13641 = 0.100001*t13640;
  t13642 = t7792*t4014;
  t13643 = t7776*t3987;
  t13694 = -1.000000000009*t7741*t1439;
  t13697 = t13642 + t13643 + t13694;
  t13698 = 0.2*t13697;
  t13702 = t7741*t4027;
  t13709 = t7776*t3980;
  t13710 = -1.000000000009*t7792*t1439;
  t13720 = t13702 + t13709 + t13710;
  t13721 = -0.3*t13720;
  t13732 = t13626 + t13627 + t13628 + t13641 + t13698 + t13721;
  t14299 = t8346*t3801;
  t14300 = t8446*t3856;
  t14301 = t8312*t3908;
  t14303 = t8312*t4027;
  t14304 = t8346*t3980;
  t14305 = -1.000000000009*t8446*t1439;
  t14306 = t14303 + t14304 + t14305;
  t14307 = -0.3*t14306;
  t14308 = t8312*t3980;
  t14309 = t8446*t3987;
  t14310 = -1.8e-11*t8346*t1439;
  t14311 = t14308 + t14309 + t14310;
  t14312 = 0.100001*t14311;
  t14313 = t8446*t4014;
  t14314 = t8346*t3987;
  t14316 = -1.000000000009*t8312*t1439;
  t14317 = t14313 + t14314 + t14316;
  t14318 = 0.2*t14317;
  t14319 = t14299 + t14300 + t14301 + t14307 + t14312 + t14318;
  p_output1[0]=t1219*t1981 + t2250*t3048 + 0.2*(t1219*t3234 + t3564*t3572 + t2250*t3592) + 0.100001*(t3564*t3592 + t2250*t3598 + t1219*t3606) + t3564*t3774 - 0.3*(t3234*t3564 + t2250*t3606 + t1219*t3788) + 0.2000000000018*t382*t407*t559 + 6.000000000054e-7*t382*t559*t660 - 0.2000000000018*t911*t912 + var1[0] + var2[0] + t4155*var2[4] + t4116*var2[5] + t4189*var2[6] + t4039*var2[8] + var2[5]*(t4648*var2[4] + (t4330 + t4336 + t1981*t4340 + t3048*t4349 + t3774*t4369 - 0.3*(t3788*t4340 + t3606*t4349 + t3234*t4369) + 0.2*(t3234*t4340 + t3592*t4349 + t3572*t4369) + 0.100001*(t3606*t4340 + t3598*t4349 + t3592*t4369))*var2[5] + t4801*var2[6] + t4276*var2[8]) + var2[6]*(t5058*var2[4] + t4801*var2[5] + (0.2000000000018*t382*t407*t476 + t4966 + t1981*t4969 + t3048*t4975 + t3774*t4979 - 0.3*(t3788*t4969 + t3606*t4975 + t3234*t4979) + 0.2*(t3234*t4969 + t3592*t4975 + t3572*t4979) + 0.100001*(t3606*t4969 + t3598*t4975 + t3592*t4979) + 6.000000000054e-7*t382*t476*t660)*var2[6] + t4961*var2[8]) + var2[4]*((t4330 + t4336 + t4966 + t1981*t5105 + t3048*t5107 + t3774*t5122 - 0.3*(t3788*t5105 + t3606*t5107 + t3234*t5122) + 0.2*(t3234*t5105 + t3592*t5107 + t3572*t5122) + 0.100001*(t3606*t5105 + t3598*t5107 + t3592*t5122))*var2[4] + t4648*var2[5] + t5058*var2[6] + t5100*var2[8]) + var2[8]*(t5100*var2[4] + t4276*var2[5] + t4961*var2[6] + (0.100001*(-1.8e-11*t1271*t2250 + t3564*t3798 + t1219*t3987) + t3564*t5328 + t2250*t5336 - 0.3*(-1.000000000009*t1271*t3564 + t4017 + t1219*t5342) + t1219*t5395 + 0.2*(-1.000000000009*t1219*t1271 + t2250*t3798 + t3564*t5457))*var2[8]) + var3[0] + t4155*var3[4] + t4116*var3[5] + t4189*var3[6] + t4039*var3[8] - 1.*var4[0];
  p_output1[1]=t5548 + t5552 + t5554 + t5560 + t5571 + t5587 + t5592 + t5593 + t5600 + t5624 + t5695 + t5788 + t5825 + t5862 + var1[1] + var2[1] + var2[8]*(t6077*var2[3] + t5886*var2[4] + t6964*var2[5] + t6299*var2[6] + (t5395*t5558 + t5336*t5569 + t5328*t5583 + 0.100001*(t3987*t5558 - 1.8e-11*t1271*t5569 + t3798*t5583) + 0.2*(-1.000000000009*t1271*t5558 + t3798*t5569 + t5457*t5583) - 0.3*(t5342*t5558 - 1.000000000009*t1271*t5583 + t5605))*var2[8]) + var2[4]*(t6014*var2[3] + (t5924 + t1981*t5928 + t3048*t5933 + t3774*t5939 - 0.3*(t3788*t5928 + t3606*t5933 + t3234*t5939) + 0.2*(t3234*t5928 + t3592*t5933 + t3572*t5939) + 0.100001*(t3606*t5928 + t3598*t5933 + t3592*t5939) - 0.2000000000018*t407*t5472*t559*t911 - 6.000000000054e-7*t5472*t559*t660*t911)*var2[4] + t5919*var2[5] + t6050*var2[6] + t5886*var2[8]) + var2[3]*((t5924 + t6121 + t6129 + t1981*t6134 + t3048*t6139 + t3774*t6145 - 0.3*(t3788*t6134 + t3606*t6139 + t3234*t6145) + 0.2*(t3234*t6134 + t3592*t6139 + t3572*t6145) + 0.100001*(t3606*t6134 + t3598*t6139 + t3592*t6145))*var2[3] + t6014*var2[4] + t6117*var2[5] + t6239*var2[6] + t6077*var2[8]) + var2[6]*(t6239*var2[3] + t6050*var2[4] + t6714*var2[5] + (0.2000000000018*t476*t5547 - 6.000000000054e-7*t476*t5551 + t5924 + t1981*t6335 + t3048*t6364 + t3774*t6370 - 0.3*(t3788*t6335 + t3606*t6364 + t3234*t6370) + 0.2*(t3234*t6335 + t3592*t6364 + t3572*t6370) + 0.100001*(t3606*t6335 + t3598*t6364 + t3592*t6370))*var2[6] + t6299*var2[8]) + var2[5]*(t6117*var2[3] + t5919*var2[4] + (t6121 + t6129 + t1981*t7013 + t3048*t7021 + t3774*t7030 - 0.3*(t3788*t7013 + t3606*t7021 + t3234*t7030) + 0.2*(t3234*t7013 + t3592*t7021 + t3572*t7030) + 0.100001*(t3606*t7013 + t3598*t7021 + t3592*t7030))*var2[5] + t6714*var2[6] + t6964*var2[8]) + var3[1] + t5786*var3[3] + t5823*var3[4] + t5691*var3[5] + t5859*var3[6] + t5622*var3[8] - 1.*var4[1];
  p_output1[2]=0.2000000000018*t559*t6081 - 6.000000000054e-7*t559*t7238 + t1981*t7281 + t3048*t7302 + t3774*t7318 - 0.3*(t3788*t7281 + t3606*t7302 + t3234*t7318) + 0.2*(t3234*t7281 + t3592*t7302 + t3572*t7318) + 0.100001*(t3606*t7281 + t3598*t7302 + t3592*t7318) - 0.2000000000018*t382*t5542*t912 + var1[2] + var2[2] + (t5624 + t5695 + t5788 + t5825 + t5862)*var2[3] + t7879*var2[3] + t8287*var2[4] + t7876*var2[5] + t12120*var2[6] + t7532*var2[8] + var2[4]*(t5823*var2[3] + (t12883*t1981 + t12889*t3048 + 0.2*(t12883*t3234 + t12961*t3572 + t12889*t3592) + 0.100001*(t12961*t3592 + t12889*t3598 + t12883*t3606) + t12961*t3774 - 0.3*(t12961*t3234 + t12889*t3606 + t12883*t3788) + t5744 + 0.2000000000018*t407*t5542*t559*t911 + 6.000000000054e-7*t5542*t559*t660*t911)*var2[4] + t12767*var2[5] + t13556*var2[6] + t12619*var2[8]) + var2[5]*(t5691*var2[3] + t12767*var2[4] + (t13756*t1981 + t13772*t3048 + 0.2*(t13756*t3234 + t14112*t3572 + t13772*t3592) + 0.100001*(t14112*t3592 + t13772*t3598 + t13756*t3606) + t14112*t3774 - 0.3*(t14112*t3234 + t13772*t3606 + t13756*t3788) + t5731 + t5743)*var2[5] + t14275*var2[6] + t13732*var2[8]) + var2[6]*(t5859*var2[3] + t13556*var2[4] + t14275*var2[5] + (t14323*t1981 + t14327*t3048 + 0.2*(t14323*t3234 + t14336*t3572 + t14327*t3592) + 0.100001*(t14336*t3592 + t14327*t3598 + t14323*t3606) + t14336*t3774 - 0.3*(t14336*t3234 + t14327*t3606 + t14323*t3788) + t5744 + 0.2000000000018*t476*t6081 - 6.000000000054e-7*t476*t7238)*var2[6] + t14319*var2[8]) + var2[8]*(t5622*var2[3] + t12619*var2[4] + t13732*var2[5] + t14319*var2[6] + (t5395*t7281 + t5336*t7302 + t5328*t7318 + 0.100001*(t3987*t7281 - 1.8e-11*t1271*t7302 + t3798*t7318) + 0.2*(-1.000000000009*t1271*t7281 + t3798*t7302 + t5457*t7318) - 0.3*(t5342*t7281 - 1.000000000009*t1271*t7318 + t7509))*var2[8]) + var3[2] + t7879*var3[3] + t8287*var3[4] + t7876*var3[5] + t12120*var3[6] + t7532*var3[8] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_LeftFrontFoot_FrontStance.hh"

namespace FrontStance
{

void ddh_LeftFrontFoot_FrontStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
