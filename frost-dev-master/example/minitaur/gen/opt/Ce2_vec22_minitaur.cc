/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:11:38 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t52095;
  double t55023;
  double t55034;
  double t55208;
  double t47121;
  double t53603;
  double t76863;
  double t77515;
  double t76508;
  double t76509;
  double t76511;
  double t55043;
  double t55139;
  double t56733;
  double t56820;
  double t57548;
  double t76339;
  double t76652;
  double t77508;
  double t77510;
  double t77520;
  double t77891;
  double t77892;
  double t77941;
  double t76519;
  double t76634;
  double t77946;
  double t78003;
  double t78015;
  double t78356;
  double t78358;
  double t78360;
  double t78380;
  double t78404;
  double t78422;
  double t78056;
  double t78058;
  double t78265;
  double t78508;
  double t78511;
  double t78513;
  double t78589;
  double t78597;
  double t78592;
  double t78591;
  double t78862;
  double t78863;
  double t78857;
  double t78603;
  double t78604;
  double t78696;
  double t78708;
  double t78721;
  double t78735;
  double t78870;
  double t78888;
  double t78895;
  double t78885;
  double t78867;
  double t78871;
  double t78873;
  double t78879;
  double t78880;
  double t78881;
  double t78883;
  double t78884;
  double t78886;
  double t78890;
  double t78893;
  double t78896;
  double t78898;
  double t78900;
  double t78902;
  double t78903;
  double t78904;
  double t78905;
  double t78912;
  double t78913;
  double t78914;
  double t78915;
  double t78916;
  double t78868;
  double t78872;
  double t78874;
  double t78876;
  double t78626;
  double t78644;
  double t78758;
  double t78779;
  double t78864;
  double t78865;
  double t78866;
  double t78877;
  double t78894;
  double t78909;
  double t78917;
  double t78918;
  double t78931;
  double t78932;
  double t78934;
  double t78935;
  double t78937;
  double t78939;
  double t78940;
  double t78947;
  double t78948;
  double t78949;
  double t78953;
  double t78955;
  double t76507;
  double t77556;
  double t77944;
  double t77945;
  double t77947;
  double t78016;
  double t78017;
  double t78025;
  double t78043;
  double t78055;
  double t78059;
  double t78084;
  double t78086;
  double t78228;
  double t78291;
  double t78292;
  double t78293;
  double t78311;
  double t79015;
  double t79016;
  double t79018;
  double t79019;
  double t79021;
  double t79022;
  double t79030;
  double t79073;
  double t79095;
  double t79096;
  double t79099;
  double t79100;
  double t79124;
  double t79135;
  double t79125;
  double t79127;
  double t79130;
  double t79131;
  double t79132;
  double t79136;
  double t79137;
  double t79138;
  double t79140;
  double t79142;
  double t79143;
  double t79144;
  double t79145;
  double t79146;
  double t78359;
  double t78381;
  double t78425;
  double t78426;
  double t78442;
  double t78443;
  double t78444;
  double t78451;
  double t78491;
  double t78492;
  double t78499;
  double t78500;
  double t79162;
  double t79163;
  double t79164;
  double t79165;
  double t79086;
  double t79106;
  double t79109;
  double t79110;
  double t79116;
  double t79117;
  double t79119;
  double t79156;
  double t79157;
  double t79158;
  double t79159;
  double t79134;
  double t79141;
  double t79148;
  double t79151;
  double t79090;
  double t79115;
  double t79122;
  double t79123;
  double t79176;
  double t79177;
  double t79178;
  double t79179;
  double t79182;
  double t79183;
  double t79185;
  double t79186;
  double t78925;
  double t78926;
  double t78928;
  double t78930;
  double t78942;
  double t78943;
  double t78944;
  double t78945;
  double t78509;
  double t78512;
  double t78523;
  double t78545;
  double t78550;
  double t78551;
  double t78556;
  double t78557;
  double t78561;
  double t78565;
  double t78568;
  double t78569;
  double t79237;
  double t79238;
  double t79240;
  double t79242;
  double t79288;
  double t79289;
  double t79290;
  double t79291;
  double t78441;
  double t78465;
  double t78501;
  double t78502;
  double t78503;
  double t78504;
  double t79081;
  double t79082;
  double t79083;
  double t79084;
  double t79221;
  double t79222;
  double t79223;
  double t79224;
  double t78546;
  double t78560;
  double t78573;
  double t78574;
  double t78575;
  double t78579;
  double t78924;
  double t78941;
  double t78957;
  double t78960;
  double t78963;
  double t79020;
  double t79074;
  double t79075;
  double t79447;
  double t79448;
  double t79449;
  double t79464;
  double t79484;
  double t79524;
  double t79528;
  double t79529;
  double t79556;
  double t79557;
  double t79558;
  double t79559;
  double t79560;
  double t79561;
  double t79562;
  double t79564;
  double t79565;
  double t79566;
  double t79567;
  double t79570;
  double t79572;
  double t79573;
  double t79576;
  double t79578;
  double t79592;
  double t79593;
  double t79594;
  double t79678;
  double t79679;
  double t79680;
  double t79227;
  double t79230;
  double t79231;
  double t79232;
  double t79233;
  double t79235;
  double t79706;
  double t79707;
  double t79708;
  double t79709;
  double t79711;
  double t79712;
  double t79713;
  double t79715;
  double t79716;
  double t79717;
  double t79718;
  double t79720;
  double t79722;
  double t79725;
  double t79726;
  double t79729;
  double t79732;
  double t79734;
  double t79736;
  double t79737;
  double t79738;
  double t79739;
  double t79294;
  double t79295;
  double t79297;
  double t79299;
  double t79300;
  double t79301;
  double t79773;
  double t79775;
  double t79777;
  double t79778;
  double t79779;
  double t79780;
  double t79782;
  double t79787;
  double t79789;
  double t79790;
  double t79791;
  double t79792;
  double t79793;
  double t79794;
  double t79369;
  double t79371;
  double t79372;
  double t79373;
  double t79374;
  double t79382;
  double t79849;
  double t79867;
  double t79852;
  double t79853;
  double t79863;
  double t79877;
  double t79880;
  double t79895;
  double t79899;
  double t79900;
  double t79901;
  double t79903;
  double t79904;
  double t79905;
  double t79910;
  double t79911;
  double t79912;
  double t79915;
  double t79916;
  double t79918;
  double t79922;
  double t79923;
  double t79925;
  double t79927;
  double t79928;
  double t79929;
  double t79935;
  double t79936;
  double t79937;
  double t79940;
  double t79941;
  double t79942;
  double t79946;
  double t79947;
  double t79948;
  double t79951;
  double t79952;
  double t79953;
  double t79989;
  double t79998;
  double t79999;
  double t80002;
  double t80003;
  double t80004;
  double t80000;
  double t80005;
  double t80007;
  double t80010;
  double t80011;
  double t80012;
  double t79332;
  double t79341;
  double t79354;
  double t79359;
  double t80039;
  double t80049;
  double t80050;
  double t80064;
  double t80065;
  double t80077;
  double t80105;
  double t80107;
  double t80108;
  double t79244;
  double t79250;
  double t79264;
  double t79272;
  double t80110;
  double t80111;
  double t80113;
  double t80144;
  double t80145;
  double t80146;
  double t79154;
  double t79168;
  double t79173;
  double t79196;
  double t80150;
  double t80151;
  double t80152;
  double t80175;
  double t80176;
  double t80177;
  double t80179;
  double t80180;
  double t80181;
  double t80178;
  double t80182;
  double t80183;
  double t80186;
  double t80187;
  double t80188;
  double t80051;
  double t80079;
  double t80096;
  double t80098;
  double t80203;
  double t80204;
  double t80205;
  double t80207;
  double t80208;
  double t80209;
  double t80225;
  double t80227;
  double t80229;
  double t80120;
  double t80122;
  double t80127;
  double t80133;
  double t80235;
  double t80236;
  double t80248;
  double t80310;
  double t80311;
  double t80312;
  double t80158;
  double t80160;
  double t80164;
  double t80167;
  double t80315;
  double t80316;
  double t80317;
  double t79960;
  double t79962;
  double t79963;
  double t79973;
  double t79974;
  double t79977;
  double t79979;
  double t79980;
  double t79981;
  double t78961;
  double t79076;
  double t79078;
  double t79085;
  double t79160;
  double t79166;
  double t79169;
  double t79170;
  double t79171;
  double t79172;
  double t79174;
  double t79175;
  double t79181;
  double t79195;
  double t79207;
  double t79214;
  double t79225;
  double t79226;
  double t79965;
  double t79966;
  double t79967;
  double t79243;
  double t79245;
  double t79249;
  double t79252;
  double t79257;
  double t79258;
  double t79261;
  double t79265;
  double t79266;
  double t79267;
  double t79268;
  double t79278;
  double t79284;
  double t79292;
  double t79293;
  double t79969;
  double t79970;
  double t79971;
  double t79316;
  double t79317;
  double t79318;
  double t79320;
  double t79321;
  double t79324;
  double t79329;
  double t79331;
  double t79333;
  double t79336;
  double t79343;
  double t79344;
  double t79347;
  double t79350;
  double t79355;
  double t79356;
  double t79360;
  double t79361;
  double t79362;
  double t79367;
  double t79368;
  double t79983;
  double t79984;
  double t79985;
  double t79436;
  double t79466;
  double t79530;
  double t79531;
  double t79533;
  double t79534;
  double t79535;
  double t79542;
  double t79554;
  double t79563;
  double t79568;
  double t79577;
  double t79681;
  double t79682;
  double t79684;
  double t79692;
  double t79694;
  double t79695;
  double t79696;
  double t79698;
  double t79703;
  double t79710;
  double t79719;
  double t79728;
  double t79740;
  double t79741;
  double t79742;
  double t79743;
  double t79744;
  double t79745;
  double t79746;
  double t79747;
  double t79749;
  double t79751;
  double t79752;
  double t79753;
  double t79754;
  double t79755;
  double t79756;
  double t79757;
  double t79760;
  double t79761;
  double t79762;
  double t79765;
  double t79766;
  double t79767;
  double t79768;
  double t79769;
  double t79771;
  double t79772;
  double t79785;
  double t79786;
  double t79795;
  double t79796;
  double t79797;
  double t79798;
  double t79799;
  double t79804;
  double t79806;
  double t79808;
  double t79964;
  double t79968;
  double t79972;
  double t79978;
  double t79982;
  double t79986;
  double t79987;
  double t79926;
  double t79930;
  double t79931;
  double t79914;
  double t79919;
  double t79920;
  double t79939;
  double t79943;
  double t79944;
  double t79902;
  double t79906;
  double t79908;
  double t79949;
  double t79954;
  double t79955;
  double t79866;
  double t79896;
  double t79897;
  double t80008;
  double t80020;
  double t80021;
  double t80037;
  double t80038;
  double t80078;
  double t80093;
  double t80094;
  double t80095;
  double t80097;
  double t80099;
  double t80100;
  double t80101;
  double t80102;
  double t80109;
  double t80114;
  double t80115;
  double t80117;
  double t80121;
  double t80124;
  double t80125;
  double t80126;
  double t80128;
  double t80129;
  double t80136;
  double t80137;
  double t80138;
  double t80141;
  double t80148;
  double t80153;
  double t80154;
  double t80157;
  double t80159;
  double t80161;
  double t80162;
  double t80163;
  double t80165;
  double t80166;
  double t80168;
  double t80169;
  double t80170;
  double t80171;
  double t80184;
  double t80189;
  double t80190;
  double t80194;
  double t80202;
  double t80206;
  double t80210;
  double t80211;
  double t80212;
  double t80213;
  double t80214;
  double t80215;
  double t80216;
  double t80218;
  double t80219;
  double t80221;
  double t80222;
  double t80223;
  double t80234;
  double t80254;
  double t80255;
  double t80269;
  double t80271;
  double t80282;
  double t80283;
  double t80284;
  double t80299;
  double t80300;
  double t80301;
  double t80302;
  double t80303;
  double t80304;
  double t80305;
  double t80306;
  double t80307;
  double t80308;
  double t80313;
  double t80318;
  double t80320;
  double t80322;
  double t80323;
  double t80324;
  double t80325;
  double t80326;
  double t80327;
  double t80328;
  double t80329;
  double t80330;
  double t80331;
  double t80333;
  double t80334;
  double t80335;
  double t80336;
  double t80337;
  double t79898;
  double t79909;
  double t79921;
  double t79933;
  double t79945;
  double t79956;
  double t79957;
  double t80389;
  double t80390;
  double t80391;
  double t80392;
  double t80394;
  double t80395;
  double t80396;
  double t80572;
  double t80579;
  double t80191;
  double t80224;
  double t80256;
  double t80309;
  double t80321;
  double t80338;
  double t80339;
  double t80468;
  double t80469;
  double t80470;
  double t80472;
  double t80473;
  double t80474;
  double t80475;
  double t80415;
  double t80416;
  double t80417;
  double t80418;
  double t80419;
  double t80420;
  double t80421;
  double t80563;
  double t80564;
  double t80567;
  double t80568;
  double t80570;
  double t80573;
  double t80576;
  double t80577;
  double t80580;
  double t80582;
  double t80586;
  double t80587;
  double t80589;
  double t80590;
  double t80591;
  double t80593;
  double t80594;
  double t80022;
  double t80103;
  double t80116;
  double t80142;
  double t80155;
  double t80172;
  double t80173;
  double t80457;
  double t80459;
  double t80460;
  double t80461;
  double t80462;
  double t80463;
  double t80464;
  double t80405;
  double t80406;
  double t80407;
  double t80408;
  double t80411;
  double t80412;
  double t80413;
  double t80611;
  double t80613;
  double t80614;
  double t80615;
  double t80616;
  double t80617;
  double t80618;
  double t80619;
  double t80620;
  double t80621;
  double t80622;
  double t80623;
  double t80624;
  double t79079;
  double t79236;
  double t79304;
  double t79319;
  double t79328;
  double t79384;
  double t79430;
  double t80434;
  double t80435;
  double t80436;
  double t80437;
  double t80438;
  double t80439;
  double t80440;
  double t80349;
  double t80350;
  double t80351;
  double t80352;
  double t80353;
  double t80354;
  double t80355;
  double t80704;
  double t80705;
  double t80706;
  double t80707;
  double t80708;
  double t80709;
  double t80710;
  double t80711;
  double t80712;
  double t80713;
  double t80714;
  double t80715;
  double t80716;
  double t80489;
  double t80491;
  double t80492;
  double t80493;
  double t80496;
  double t80497;
  double t80498;
  double t80499;
  double t80552;
  double t80553;
  double t80554;
  double t80556;
  double t80558;
  double t80763;
  double t80764;
  double t80765;
  double t80766;
  double t80767;
  double t80769;
  double t80770;
  double t80771;
  double t80772;
  double t80773;
  double t80774;
  double t80775;
  double t80786;
  double t79548;
  double t79699;
  double t79748;
  double t79759;
  double t79770;
  double t79809;
  double t79810;
  double t80442;
  double t80443;
  double t80444;
  double t80445;
  double t80446;
  double t80447;
  double t80448;
  double t80357;
  double t80358;
  double t80359;
  double t80360;
  double t80384;
  double t80385;
  double t80386;
  double t80718;
  double t80720;
  double t80721;
  double t80722;
  double t80723;
  double t80724;
  double t80725;
  double t80726;
  double t80728;
  double t80729;
  double t80730;
  double t80731;
  double t80732;
  double t80569;
  double t80574;
  double t80578;
  double t80583;
  double t80588;
  double t80596;
  double t80597;
  double t80598;
  double t80599;
  double t80600;
  double t80601;
  double t80602;
  double t80603;
  double t80749;
  double t80750;
  double t80751;
  double t80752;
  double t80753;
  double t80819;
  double t80824;
  double t80825;
  double t80826;
  double t80839;
  double t78341;
  double t78507;
  double t78586;
  double t78587;
  double t80425;
  double t80426;
  double t80429;
  double t80430;
  double t80344;
  double t80345;
  double t80346;
  double t80347;
  double t80678;
  double t80680;
  double t80688;
  double t80690;
  double t80691;
  double t80480;
  double t80483;
  double t80484;
  double t80486;
  double t80487;
  t52095 = Cos(var1[21]);
  t55023 = Sin(var1[21]);
  t55034 = 3.e-6*t55023;
  t55208 = 3.e-6*t52095;
  t47121 = Sin(var1[19]);
  t53603 = -3.e-6*t52095;
  t76863 = 9.e-12*t55023;
  t77515 = -2.7e-17*t55023;
  t76508 = Cos(var1[19]);
  t76509 = -1.*t76508;
  t76511 = 1. + t76509;
  t55043 = t53603 + t55034;
  t55139 = 3.e-6*t55043;
  t56733 = t55208 + t55034;
  t56820 = 3.e-6*t56733;
  t57548 = -1.8e-11*t55023;
  t76339 = t55139 + t56820 + t57548;
  t76652 = -1.*t52095;
  t77508 = t76652 + t76863;
  t77510 = 3.e-6*t77508;
  t77520 = t55208 + t77510 + t77515;
  t77891 = t52095 + t76863;
  t77892 = 3.e-6*t77891;
  t77941 = t53603 + t77892 + t77515;
  t76519 = -1.000000000009*t76511;
  t76634 = 1. + t76519;
  t77946 = Sin(var1[4]);
  t78003 = Cos(var1[4]);
  t78015 = Cos(var1[5]);
  t78356 = -3.000000000054e-6*t55023;
  t78358 = t53603 + t78356;
  t78360 = -9.e-12*t55023;
  t78380 = t52095 + t56820 + t78360;
  t78404 = 1.000000000009*t55023;
  t78422 = t55139 + t78404;
  t78056 = -9.e-12*t76511;
  t78058 = 1. + t78056;
  t78265 = Sin(var1[5]);
  t78508 = t55208 + t78356;
  t78511 = t76652 + t55139 + t78360;
  t78513 = t56820 + t78404;
  t78589 = 1. + t76652;
  t78597 = -3.e-6*t55023;
  t78592 = 3.e-6*t78589;
  t78591 = 1.000000000009*t78589;
  t78862 = t78592 + t55034;
  t78863 = 3.e-6*t78862;
  t78857 = -9.e-12*t78589;
  t78603 = t78592 + t78597;
  t78604 = 3.e-6*t78603;
  t78696 = -1.8e-11*t78589;
  t78708 = 1. + t78696;
  t78721 = 3.e-6*t78708;
  t78735 = -3.e-6*t78589;
  t78870 = -1.*t55023;
  t78888 = t78735 + t55034;
  t78895 = 3.e-13*var1[21];
  t78885 = t78735 + t78597;
  t78867 = -1. + t78591 + t78863;
  t78871 = t78857 + t78604 + t78870;
  t78873 = t78721 + t78735 + t55034;
  t78879 = 1.e-7*var1[21];
  t78880 = 1.8e-11*t78589;
  t78881 = -1. + t78880;
  t78883 = 0.1*t78881;
  t78884 = 5.4e-18*t78589;
  t78886 = -3.e-12*t78885;
  t78890 = 0.100000000003*t78888;
  t78893 = t78879 + t78883 + t78884 + t78886 + t78890;
  t78896 = -1. + t78591;
  t78898 = 0.2*t78896;
  t78900 = -0.2000000000048*t78589;
  t78902 = t78857 + t78870;
  t78903 = 0.100000000003*t78902;
  t78904 = 0.1000003*t78888;
  t78905 = t78895 + t78898 + t78900 + t78903 + t78904;
  t78912 = 0.1000000000039*t78589;
  t78913 = 0.1000003*t78885;
  t78914 = t78857 + t55023;
  t78915 = -3.e-12*t78914;
  t78916 = t78895 + t78912 + t78913 + t78915;
  t78868 = t76634*t78867;
  t78872 = t47121*t78871;
  t78874 = -3.e-6*t47121*t78873;
  t78876 = t78868 + t78872 + t78874;
  t78626 = -1. + t78591 + t78604;
  t78644 = t47121*t78626;
  t78758 = t78721 + t78735 + t78597;
  t78779 = -3.e-6*t47121*t78758;
  t78864 = t78857 + t78863 + t55023;
  t78865 = t76634*t78864;
  t78866 = t78644 + t78779 + t78865;
  t78877 = 0.2000000000018*t47121;
  t78894 = -3.e-6*t47121*t78893;
  t78909 = t47121*t78905;
  t78917 = t76634*t78916;
  t78918 = t78877 + t78894 + t78909 + t78917;
  t78931 = -1.8e-12*t76511;
  t78932 = -1. + t76508;
  t78934 = 0.2*t78932;
  t78935 = 3.e-6*t76511*t78893;
  t78937 = t76508*t78905;
  t78939 = -1.*t47121*t78916;
  t78940 = t78931 + t78934 + t78935 + t78937 + t78939;
  t78947 = 6.000000000054e-7*t76511;
  t78948 = t78058*t78893;
  t78949 = 3.e-6*t76511*t78905;
  t78953 = 3.e-6*t47121*t78916;
  t78955 = t78947 + t78948 + t78949 + t78953;
  t76507 = -3.e-6*t47121*t76339;
  t77556 = t76634*t77520;
  t77944 = t47121*t77941;
  t77945 = t76507 + t77556 + t77944;
  t77947 = t77945*t77946;
  t78016 = 3.e-6*t76511*t76339;
  t78017 = -1.*t47121*t77520;
  t78025 = t76508*t77941;
  t78043 = t78016 + t78017 + t78025;
  t78055 = t78015*t78043;
  t78059 = t78058*t76339;
  t78084 = 3.e-6*t47121*t77520;
  t78086 = 3.e-6*t76511*t77941;
  t78228 = t78059 + t78084 + t78086;
  t78291 = -1.*t78228*t78265;
  t78292 = t78055 + t78291;
  t78293 = t78003*t78292;
  t78311 = t77947 + t78293;
  t79015 = t76508*t78626;
  t79016 = 3.e-6*t76511*t78758;
  t79018 = -1.*t47121*t78864;
  t79019 = t79015 + t79016 + t79018;
  t79021 = 3.e-6*t76511*t78626;
  t79022 = t78058*t78758;
  t79030 = 3.e-6*t47121*t78864;
  t79073 = t79021 + t79022 + t79030;
  t79095 = -1.000000000009*t78589;
  t79096 = 1. + t79095;
  t79099 = 3.e-6*t79096;
  t79100 = 9.e-12*t78589;
  t79124 = t55208 + t78597;
  t79135 = t53603 + t78597;
  t79125 = 0.1000003*t79124;
  t79127 = t76652 + t78360;
  t79130 = 0.100000000003*t79127;
  t79131 = -3.000000000027e-12*t55023;
  t79132 = 3.e-13 + t79125 + t79130 + t79131;
  t79136 = -3.e-12*t79135;
  t79137 = 0.100000000003*t79124;
  t79138 = 1.8000054e-12*t55023;
  t79140 = 1.e-7 + t79136 + t79137 + t79138;
  t79142 = 0.1000003*t79135;
  t79143 = t52095 + t78360;
  t79144 = -3.e-12*t79143;
  t79145 = 0.1000000000039*t55023;
  t79146 = 3.e-13 + t79142 + t79144 + t79145;
  t78359 = -3.e-6*t47121*t78358;
  t78381 = t76634*t78380;
  t78425 = t47121*t78422;
  t78426 = t78359 + t78381 + t78425;
  t78442 = 3.e-6*t76511*t78358;
  t78443 = -1.*t47121*t78380;
  t78444 = t76508*t78422;
  t78451 = t78442 + t78443 + t78444;
  t78491 = t78058*t78358;
  t78492 = 3.e-6*t47121*t78380;
  t78499 = 3.e-6*t76511*t78422;
  t78500 = t78491 + t78492 + t78499;
  t79162 = 3.e-6*t76511*t79132;
  t79163 = t78058*t79140;
  t79164 = 3.e-6*t47121*t79146;
  t79165 = t79162 + t79163 + t79164;
  t79086 = 1. + t78696 + t78604 + t78863;
  t79106 = t79100 + t78870;
  t79109 = 3.e-6*t79106;
  t79110 = t79099 + t78592 + t79109 + t55034;
  t79116 = t79100 + t55023;
  t79117 = 3.e-6*t79116;
  t79119 = t79099 + t78592 + t78597 + t79117;
  t79156 = t76508*t79132;
  t79157 = 3.e-6*t76511*t79140;
  t79158 = -1.*t47121*t79146;
  t79159 = t79156 + t79157 + t79158;
  t79134 = t47121*t79132;
  t79141 = -3.e-6*t47121*t79140;
  t79148 = t76634*t79146;
  t79151 = t79134 + t79141 + t79148;
  t79090 = -3.e-6*t47121*t79086;
  t79115 = t76634*t79110;
  t79122 = t47121*t79119;
  t79123 = t79090 + t79115 + t79122;
  t79176 = t78058*t79086;
  t79177 = 3.e-6*t47121*t79110;
  t79178 = 3.e-6*t76511*t79119;
  t79179 = t79176 + t79177 + t79178;
  t79182 = 3.e-6*t76511*t79086;
  t79183 = -1.*t47121*t79110;
  t79185 = t76508*t79119;
  t79186 = t79182 + t79183 + t79185;
  t78925 = -1.*t47121*t78867;
  t78926 = t76508*t78871;
  t78928 = 3.e-6*t76511*t78873;
  t78930 = t78925 + t78926 + t78928;
  t78942 = 3.e-6*t47121*t78867;
  t78943 = 3.e-6*t76511*t78871;
  t78944 = t78058*t78873;
  t78945 = t78942 + t78943 + t78944;
  t78509 = -3.e-6*t47121*t78508;
  t78512 = t47121*t78511;
  t78523 = t76634*t78513;
  t78545 = t78509 + t78512 + t78523;
  t78550 = 3.e-6*t76511*t78508;
  t78551 = t76508*t78511;
  t78556 = -1.*t47121*t78513;
  t78557 = t78550 + t78551 + t78556;
  t78561 = t78058*t78508;
  t78565 = 3.e-6*t76511*t78511;
  t78568 = 3.e-6*t47121*t78513;
  t78569 = t78561 + t78565 + t78568;
  t79237 = t78876*t78918;
  t79238 = t78930*t78940;
  t79240 = t78945*t78955;
  t79242 = t79237 + t79238 + t79240;
  t79288 = -1.*t78955*t79179;
  t79289 = -1.*t78940*t79186;
  t79290 = -1.*t78918*t79123;
  t79291 = t79288 + t79289 + t79290;
  t78441 = t78426*t77946;
  t78465 = t78015*t78451;
  t78501 = -1.*t78500*t78265;
  t78502 = t78465 + t78501;
  t78503 = t78003*t78502;
  t78504 = t78441 + t78503;
  t79081 = -1.*t78866*t78918;
  t79082 = -1.*t79019*t78940;
  t79083 = -1.*t79073*t78955;
  t79084 = t79081 + t79082 + t79083;
  t79221 = t78955*t79179;
  t79222 = t78940*t79186;
  t79223 = t78918*t79123;
  t79224 = t79221 + t79222 + t79223;
  t78546 = t78545*t77946;
  t78560 = t78015*t78557;
  t78573 = -1.*t78569*t78265;
  t78574 = t78560 + t78573;
  t78575 = t78003*t78574;
  t78579 = t78546 + t78575;
  t78924 = -1.*t78876*t78918;
  t78941 = -1.*t78930*t78940;
  t78957 = -1.*t78945*t78955;
  t78960 = t78924 + t78941 + t78957;
  t78963 = t78866*t78918;
  t79020 = t79019*t78940;
  t79074 = t79073*t78955;
  t79075 = t78963 + t79020 + t79074;
  t79447 = -1.*t78905*t78871;
  t79448 = -1.*t78893*t78873;
  t79449 = -1.*t78867*t78916;
  t79464 = t79447 + t79448 + t79449;
  t79484 = t78626*t78905;
  t79524 = t78893*t78758;
  t79528 = t78864*t78916;
  t79529 = t79484 + t79524 + t79528;
  t79556 = -1.*t78893*t78358;
  t79557 = -1.*t78626*t79132;
  t79558 = -1.*t78758*t79140;
  t79559 = -1.*t79146*t78864;
  t79560 = -1.*t78905*t78422;
  t79561 = -1.*t78380*t78916;
  t79562 = t79556 + t79557 + t79558 + t79559 + t79560 + t79561;
  t79564 = -1.*t78626*t78905;
  t79565 = -1.*t78893*t78758;
  t79566 = -1.*t78864*t78916;
  t79567 = t79564 + t79565 + t79566;
  t79570 = t78893*t79086;
  t79572 = t79110*t78916;
  t79573 = t78905*t79119;
  t79576 = t79570 + t79572 + t79573;
  t79578 = t78893*t76339;
  t79592 = t78905*t77941;
  t79593 = t79086*t79140;
  t79594 = t79110*t79146;
  t79678 = t77520*t78916;
  t79679 = t79132*t79119;
  t79680 = t79578 + t79592 + t79593 + t79594 + t79678 + t79679;
  t79227 = t78876*t77946;
  t79230 = t78015*t78930;
  t79231 = -1.*t78945*t78265;
  t79232 = t79230 + t79231;
  t79233 = t78003*t79232;
  t79235 = t79227 + t79233;
  t79706 = t78905*t78871;
  t79707 = t78893*t78873;
  t79708 = t78867*t78916;
  t79709 = t79706 + t79707 + t79708;
  t79711 = t78893*t78508;
  t79712 = t78905*t78511;
  t79713 = t78871*t79132;
  t79715 = t79140*t78873;
  t79716 = t78867*t79146;
  t79717 = t78513*t78916;
  t79718 = t79711 + t79712 + t79713 + t79715 + t79716 + t79717;
  t79720 = -1.*t78893*t79086;
  t79722 = -1.*t79110*t78916;
  t79725 = -1.*t78905*t79119;
  t79726 = t79720 + t79722 + t79725;
  t79729 = -1.*t78893*t76339;
  t79732 = -1.*t78905*t77941;
  t79734 = -1.*t79086*t79140;
  t79736 = -1.*t79110*t79146;
  t79737 = -1.*t77520*t78916;
  t79738 = -1.*t79132*t79119;
  t79739 = t79729 + t79732 + t79734 + t79736 + t79737 + t79738;
  t79294 = t78866*t77946;
  t79295 = t78015*t79019;
  t79297 = -1.*t79073*t78265;
  t79299 = t79295 + t79297;
  t79300 = t78003*t79299;
  t79301 = t79294 + t79300;
  t79773 = t78893*t78358;
  t79775 = t78626*t79132;
  t79777 = t78758*t79140;
  t79778 = t79146*t78864;
  t79779 = t78905*t78422;
  t79780 = t78380*t78916;
  t79782 = t79773 + t79775 + t79777 + t79778 + t79779 + t79780;
  t79787 = -1.*t78893*t78508;
  t79789 = -1.*t78905*t78511;
  t79790 = -1.*t78871*t79132;
  t79791 = -1.*t79140*t78873;
  t79792 = -1.*t78867*t79146;
  t79793 = -1.*t78513*t78916;
  t79794 = t79787 + t79789 + t79790 + t79791 + t79792 + t79793;
  t79369 = t79123*t77946;
  t79371 = t78015*t79186;
  t79372 = -1.*t79179*t78265;
  t79373 = t79371 + t79372;
  t79374 = t78003*t79373;
  t79382 = t79369 + t79374;
  t79849 = Sin(var1[3]);
  t79867 = Cos(var1[3]);
  t79852 = t78015*t78228;
  t79853 = t78043*t78265;
  t79863 = t79852 + t79853;
  t79877 = t78003*t77945;
  t79880 = -1.*t77946*t78292;
  t79895 = t79877 + t79880;
  t79899 = t78015*t78945;
  t79900 = t78930*t78265;
  t79901 = t79899 + t79900;
  t79903 = t78003*t78876;
  t79904 = -1.*t77946*t79232;
  t79905 = t79903 + t79904;
  t79910 = t78015*t79073;
  t79911 = t79019*t78265;
  t79912 = t79910 + t79911;
  t79915 = t78003*t78866;
  t79916 = -1.*t77946*t79299;
  t79918 = t79915 + t79916;
  t79922 = t78015*t78500;
  t79923 = t78451*t78265;
  t79925 = t79922 + t79923;
  t79927 = t78003*t78426;
  t79928 = -1.*t77946*t78502;
  t79929 = t79927 + t79928;
  t79935 = t78015*t78569;
  t79936 = t78557*t78265;
  t79937 = t79935 + t79936;
  t79940 = t78003*t78545;
  t79941 = -1.*t77946*t78574;
  t79942 = t79940 + t79941;
  t79946 = t78015*t79179;
  t79947 = t79186*t78265;
  t79948 = t79946 + t79947;
  t79951 = t78003*t79123;
  t79952 = -1.*t77946*t79373;
  t79953 = t79951 + t79952;
  t79989 = t78015*t78955;
  t79998 = t78940*t78265;
  t79999 = t79989 + t79998;
  t80002 = t78015*t78940;
  t80003 = -1.*t78955*t78265;
  t80004 = t80002 + t80003;
  t80000 = -1.*t79901*t79999;
  t80005 = -1.*t79232*t80004;
  t80007 = t78924 + t80000 + t80005;
  t80010 = t79912*t79999;
  t80011 = t79299*t80004;
  t80012 = t78963 + t80010 + t80011;
  t79332 = t79151*t78866;
  t79341 = t78426*t78918;
  t79354 = -1.*t78876*t79151;
  t79359 = -1.*t78545*t78918;
  t80039 = t78015*t79165;
  t80049 = t79159*t78265;
  t80050 = t80039 + t80049;
  t80064 = t78015*t79159;
  t80065 = -1.*t79165*t78265;
  t80077 = t80064 + t80065;
  t80105 = t79901*t79999;
  t80107 = t79232*t80004;
  t80108 = t79237 + t80105 + t80107;
  t79244 = t78876*t79151;
  t79250 = t78545*t78918;
  t79264 = -1.*t77945*t78918;
  t79272 = -1.*t79151*t79123;
  t80110 = -1.*t80004*t79373;
  t80111 = -1.*t79999*t79948;
  t80113 = t79290 + t80110 + t80111;
  t80144 = -1.*t79912*t79999;
  t80145 = -1.*t79299*t80004;
  t80146 = t79081 + t80144 + t80145;
  t79154 = -1.*t79151*t78866;
  t79168 = -1.*t78426*t78918;
  t79173 = t77945*t78918;
  t79196 = t79151*t79123;
  t80150 = t80004*t79373;
  t80151 = t79999*t79948;
  t80152 = t79223 + t80150 + t80151;
  t80175 = t78918*t77946;
  t80176 = t78003*t80004;
  t80177 = t80175 + t80176;
  t80179 = t78003*t78918;
  t80180 = -1.*t77946*t80004;
  t80181 = t80179 + t80180;
  t80178 = -1.*t79235*t80177;
  t80182 = -1.*t79905*t80181;
  t80183 = t80000 + t80178 + t80182;
  t80186 = t79301*t80177;
  t80187 = t79918*t80181;
  t80188 = t80010 + t80186 + t80187;
  t80051 = t80050*t79912;
  t80079 = t79925*t79999;
  t80096 = -1.*t79901*t80050;
  t80098 = -1.*t79937*t79999;
  t80203 = t79151*t77946;
  t80204 = t78003*t80077;
  t80205 = t80203 + t80204;
  t80207 = t78003*t79151;
  t80208 = -1.*t77946*t80077;
  t80209 = t80207 + t80208;
  t80225 = t79235*t80177;
  t80227 = t79905*t80181;
  t80229 = t80105 + t80225 + t80227;
  t80120 = t79901*t80050;
  t80122 = t79937*t79999;
  t80127 = -1.*t79863*t79999;
  t80133 = -1.*t80050*t79948;
  t80235 = -1.*t80177*t79382;
  t80236 = -1.*t80181*t79953;
  t80248 = t80111 + t80235 + t80236;
  t80310 = -1.*t79301*t80177;
  t80311 = -1.*t79918*t80181;
  t80312 = t80144 + t80310 + t80311;
  t80158 = -1.*t80050*t79912;
  t80160 = -1.*t79925*t79999;
  t80164 = t79863*t79999;
  t80167 = t80050*t79948;
  t80315 = t80177*t79382;
  t80316 = t80181*t79953;
  t80317 = t80151 + t80315 + t80316;
  t79960 = t79867*t79863;
  t79962 = -1.*t79849*t79895;
  t79963 = t79960 + t79962;
  t79973 = t79867*t79925;
  t79974 = -1.*t79849*t79929;
  t79977 = t79973 + t79974;
  t79979 = t79867*t79937;
  t79980 = -1.*t79849*t79942;
  t79981 = t79979 + t79980;
  t78961 = t78866*t78960;
  t79076 = t78876*t79075;
  t79078 = t78961 + t79076;
  t79085 = t77945*t79084;
  t79160 = -1.*t79159*t79019;
  t79166 = -1.*t79165*t79073;
  t79169 = -1.*t78451*t78940;
  t79170 = -1.*t78500*t78955;
  t79171 = t79154 + t79160 + t79166 + t79168 + t79169 + t79170;
  t79172 = t79123*t79171;
  t79174 = t78043*t78940;
  t79175 = t78228*t78955;
  t79181 = t79165*t79179;
  t79195 = t79159*t79186;
  t79207 = t79173 + t79174 + t79175 + t79181 + t79195 + t79196;
  t79214 = t78866*t79207;
  t79225 = t78426*t79224;
  t79226 = t79085 + t79172 + t79214 + t79225;
  t79965 = t79867*t79901;
  t79966 = -1.*t79849*t79905;
  t79967 = t79965 + t79966;
  t79243 = t77945*t79242;
  t79245 = t78930*t79159;
  t79249 = t78945*t79165;
  t79252 = t78557*t78940;
  t79257 = t78569*t78955;
  t79258 = t79244 + t79245 + t79249 + t79250 + t79252 + t79257;
  t79261 = t79123*t79258;
  t79265 = -1.*t78043*t78940;
  t79266 = -1.*t78228*t78955;
  t79267 = -1.*t79165*t79179;
  t79268 = -1.*t79159*t79186;
  t79278 = t79264 + t79265 + t79266 + t79267 + t79268 + t79272;
  t79284 = t78876*t79278;
  t79292 = t78545*t79291;
  t79293 = t79243 + t79261 + t79284 + t79292;
  t79969 = t79867*t79912;
  t79970 = -1.*t79849*t79918;
  t79971 = t79969 + t79970;
  t79316 = t79123*t79242;
  t79317 = t78876*t79291;
  t79318 = t79316 + t79317;
  t79320 = t79123*t79084;
  t79321 = t78866*t79224;
  t79324 = t79320 + t79321;
  t79329 = t78426*t78960;
  t79331 = t78545*t79075;
  t79333 = t79159*t79019;
  t79336 = t79165*t79073;
  t79343 = t78451*t78940;
  t79344 = t78500*t78955;
  t79347 = t79332 + t79333 + t79336 + t79341 + t79343 + t79344;
  t79350 = t78876*t79347;
  t79355 = -1.*t78930*t79159;
  t79356 = -1.*t78945*t79165;
  t79360 = -1.*t78557*t78940;
  t79361 = -1.*t78569*t78955;
  t79362 = t79354 + t79355 + t79356 + t79359 + t79360 + t79361;
  t79367 = t78866*t79362;
  t79368 = t79329 + t79331 + t79350 + t79367;
  t79983 = t79867*t79948;
  t79984 = -1.*t79849*t79953;
  t79985 = t79983 + t79984;
  t79436 = 0.2*t79110;
  t79466 = -1.*t78758*t79464;
  t79530 = -1.*t78873*t79529;
  t79531 = t78626*t79464;
  t79533 = t78871*t79529;
  t79534 = t79531 + t79533;
  t79535 = -3.e-6*t79534;
  t79542 = t79436 + t79466 + t79530 + t79535;
  t79554 = 0.2*t78513;
  t79563 = -1.*t79086*t79562;
  t79568 = -1.*t76339*t79567;
  t79577 = -1.*t78358*t79576;
  t79681 = -1.*t78758*t79680;
  t79682 = t79119*t79562;
  t79684 = t77941*t79567;
  t79692 = t78422*t79576;
  t79694 = t78626*t79680;
  t79695 = t79682 + t79684 + t79692 + t79694;
  t79696 = -3.e-6*t79695;
  t79698 = t79554 + t79563 + t79568 + t79577 + t79681 + t79696;
  t79703 = 0.2*t78380;
  t79710 = -1.*t76339*t79709;
  t79719 = -1.*t79086*t79718;
  t79728 = -1.*t78508*t79726;
  t79740 = -1.*t78873*t79739;
  t79741 = t77941*t79709;
  t79742 = t79119*t79718;
  t79743 = t78511*t79726;
  t79744 = t78871*t79739;
  t79745 = t79741 + t79742 + t79743 + t79744;
  t79746 = -3.e-6*t79745;
  t79747 = t79703 + t79710 + t79719 + t79728 + t79740 + t79746;
  t79749 = 0.2*t78864;
  t79751 = -1.*t79086*t79709;
  t79752 = -1.*t78873*t79726;
  t79753 = t79119*t79709;
  t79754 = t78871*t79726;
  t79755 = t79753 + t79754;
  t79756 = -3.e-6*t79755;
  t79757 = t79749 + t79751 + t79752 + t79756;
  t79760 = 0.2*t78867;
  t79761 = -1.*t79086*t79567;
  t79762 = -1.*t78758*t79576;
  t79765 = t79119*t79567;
  t79766 = t78626*t79576;
  t79767 = t79765 + t79766;
  t79768 = -3.e-6*t79767;
  t79769 = t79760 + t79761 + t79762 + t79768;
  t79771 = 0.2*t77520;
  t79772 = -1.*t78358*t79464;
  t79785 = -1.*t78873*t79782;
  t79786 = -1.*t78508*t79529;
  t79795 = -1.*t78758*t79794;
  t79796 = t78422*t79464;
  t79797 = t78871*t79782;
  t79798 = t78511*t79529;
  t79799 = t78626*t79794;
  t79804 = t79796 + t79797 + t79798 + t79799;
  t79806 = -3.e-6*t79804;
  t79808 = t79771 + t79772 + t79785 + t79786 + t79795 + t79806;
  t79964 = 0.043*t79382*t79963;
  t79968 = 0.043*t78579*t79967;
  t79972 = 0.043*t78504*t79971;
  t79978 = 0.043*t79301*t79977;
  t79982 = 0.043*t79235*t79981;
  t79986 = 0.043*t78311*t79985;
  t79987 = t79964 + t79968 + t79972 + t79978 + t79982 + t79986;
  t79926 = t79849*t79925;
  t79930 = t79867*t79929;
  t79931 = t79926 + t79930;
  t79914 = t79849*t79912;
  t79919 = t79867*t79918;
  t79920 = t79914 + t79919;
  t79939 = t79849*t79937;
  t79943 = t79867*t79942;
  t79944 = t79939 + t79943;
  t79902 = t79849*t79901;
  t79906 = t79867*t79905;
  t79908 = t79902 + t79906;
  t79949 = t79849*t79948;
  t79954 = t79867*t79953;
  t79955 = t79949 + t79954;
  t79866 = t79849*t79863;
  t79896 = t79867*t79895;
  t79897 = t79866 + t79896;
  t80008 = t79912*t80007;
  t80020 = t79901*t80012;
  t80021 = t80008 + t80020;
  t80037 = t79925*t80007;
  t80038 = t79937*t80012;
  t80078 = t80077*t79299;
  t80093 = t78502*t80004;
  t80094 = t79332 + t79341 + t80051 + t80078 + t80079 + t80093;
  t80095 = t79901*t80094;
  t80097 = -1.*t79232*t80077;
  t80099 = -1.*t78574*t80004;
  t80100 = t79354 + t79359 + t80096 + t80097 + t80098 + t80099;
  t80101 = t79912*t80100;
  t80102 = t80037 + t80038 + t80095 + t80101;
  t80109 = t79948*t80108;
  t80114 = t79901*t80113;
  t80115 = t80109 + t80114;
  t80117 = t79863*t80108;
  t80121 = t79232*t80077;
  t80124 = t78574*t80004;
  t80125 = t79244 + t79250 + t80120 + t80121 + t80122 + t80124;
  t80126 = t79948*t80125;
  t80128 = -1.*t78292*t80004;
  t80129 = -1.*t80077*t79373;
  t80136 = t79264 + t79272 + t80127 + t80128 + t80129 + t80133;
  t80137 = t79901*t80136;
  t80138 = t79937*t80113;
  t80141 = t80117 + t80126 + t80137 + t80138;
  t80148 = t79948*t80146;
  t80153 = t79912*t80152;
  t80154 = t80148 + t80153;
  t80157 = t79863*t80146;
  t80159 = -1.*t80077*t79299;
  t80161 = -1.*t78502*t80004;
  t80162 = t79154 + t79168 + t80158 + t80159 + t80160 + t80161;
  t80163 = t79948*t80162;
  t80165 = t78292*t80004;
  t80166 = t80077*t79373;
  t80168 = t79173 + t79196 + t80164 + t80165 + t80166 + t80167;
  t80169 = t79912*t80168;
  t80170 = t79925*t80152;
  t80171 = t80157 + t80163 + t80169 + t80170;
  t80184 = t79301*t80183;
  t80189 = t79235*t80188;
  t80190 = t80184 + t80189;
  t80194 = t78504*t80183;
  t80202 = t78579*t80188;
  t80206 = t80205*t79301;
  t80210 = t80209*t79918;
  t80211 = t78504*t80177;
  t80212 = t79929*t80181;
  t80213 = t80051 + t80079 + t80206 + t80210 + t80211 + t80212;
  t80214 = t79235*t80213;
  t80215 = -1.*t79235*t80205;
  t80216 = -1.*t79905*t80209;
  t80218 = -1.*t78579*t80177;
  t80219 = -1.*t79942*t80181;
  t80221 = t80096 + t80098 + t80215 + t80216 + t80218 + t80219;
  t80222 = t79301*t80221;
  t80223 = t80194 + t80202 + t80214 + t80222;
  t80234 = t79382*t80229;
  t80254 = t79235*t80248;
  t80255 = t80234 + t80254;
  t80269 = t78311*t80229;
  t80271 = t79235*t80205;
  t80282 = t79905*t80209;
  t80283 = t78579*t80177;
  t80284 = t79942*t80181;
  t80299 = t80120 + t80122 + t80271 + t80282 + t80283 + t80284;
  t80300 = t79382*t80299;
  t80301 = -1.*t78311*t80177;
  t80302 = -1.*t79895*t80181;
  t80303 = -1.*t80205*t79382;
  t80304 = -1.*t80209*t79953;
  t80305 = t80127 + t80133 + t80301 + t80302 + t80303 + t80304;
  t80306 = t79235*t80305;
  t80307 = t78579*t80248;
  t80308 = t80269 + t80300 + t80306 + t80307;
  t80313 = t79382*t80312;
  t80318 = t79301*t80317;
  t80320 = t80313 + t80318;
  t80322 = t78311*t80312;
  t80323 = -1.*t80205*t79301;
  t80324 = -1.*t80209*t79918;
  t80325 = -1.*t78504*t80177;
  t80326 = -1.*t79929*t80181;
  t80327 = t80158 + t80160 + t80323 + t80324 + t80325 + t80326;
  t80328 = t79382*t80327;
  t80329 = t78311*t80177;
  t80330 = t79895*t80181;
  t80331 = t80205*t79382;
  t80333 = t80209*t79953;
  t80334 = t80164 + t80167 + t80329 + t80330 + t80331 + t80333;
  t80335 = t79301*t80334;
  t80336 = t78504*t80317;
  t80337 = t80322 + t80328 + t80335 + t80336;
  t79898 = 0.043*t79382*t79897;
  t79909 = 0.043*t78579*t79908;
  t79921 = 0.043*t78504*t79920;
  t79933 = 0.043*t79301*t79931;
  t79945 = 0.043*t79235*t79944;
  t79956 = 0.043*t78311*t79955;
  t79957 = t79898 + t79909 + t79921 + t79933 + t79945 + t79956;
  t80389 = 0.043*t79971*t79931;
  t80390 = 0.043*t79920*t79977;
  t80391 = 0.043*t79967*t79944;
  t80392 = 0.043*t79908*t79981;
  t80394 = 0.043*t79963*t79955;
  t80395 = 0.043*t79897*t79985;
  t80396 = t80389 + t80390 + t80391 + t80392 + t80394 + t80395;
  t80572 = 3.000000000054e-6*t55023;
  t80579 = -3.e-6*t78708;
  t80191 = 0.043*t78311*t80190;
  t80224 = 0.043*t79382*t80223;
  t80256 = 0.043*t78504*t80255;
  t80309 = 0.043*t79301*t80308;
  t80321 = 0.043*t78579*t80320;
  t80338 = 0.043*t79235*t80337;
  t80339 = t80191 + t80224 + t80256 + t80309 + t80321 + t80338;
  t80468 = 0.043*t79897*t80190;
  t80469 = 0.043*t79955*t80223;
  t80470 = 0.043*t79931*t80255;
  t80472 = 0.043*t79920*t80308;
  t80473 = 0.043*t79944*t80320;
  t80474 = 0.043*t79908*t80337;
  t80475 = t80468 + t80469 + t80470 + t80472 + t80473 + t80474;
  t80415 = 0.043*t79963*t80190;
  t80416 = 0.043*t79985*t80223;
  t80417 = 0.043*t79977*t80255;
  t80418 = 0.043*t79971*t80308;
  t80419 = 0.043*t79981*t80320;
  t80420 = 0.043*t79967*t80337;
  t80421 = t80415 + t80416 + t80417 + t80418 + t80419 + t80420;
  t80563 = -3.e-6*t78603;
  t80564 = -3.e-6*t78862;
  t80567 = -3.e-6*t79119;
  t80568 = -1. + t78880 + t80563 + t80564 + t80567;
  t80570 = -3.e-6*t78511;
  t80573 = t53603 + t80570 + t80572;
  t80576 = -3.e-6*t78422;
  t80577 = t55208 + t80572 + t80576;
  t80580 = -3.e-6*t78626;
  t80582 = t80579 + t78592 + t80580 + t55034;
  t80586 = -3.e-6*t78871;
  t80587 = t80579 + t78592 + t80586 + t78597;
  t80589 = -3.e-6*t77941;
  t80590 = -3.e-6*t55043;
  t80591 = -3.e-6*t56733;
  t80593 = 1.8e-11*t55023;
  t80594 = t80589 + t80590 + t80591 + t80593;
  t80022 = 0.043*t78311*t80021;
  t80103 = 0.043*t79382*t80102;
  t80116 = 0.043*t78504*t80115;
  t80142 = 0.043*t79301*t80141;
  t80155 = 0.043*t78579*t80154;
  t80172 = 0.043*t79235*t80171;
  t80173 = t80022 + t80103 + t80116 + t80142 + t80155 + t80172;
  t80457 = 0.043*t79897*t80021;
  t80459 = 0.043*t80102*t79955;
  t80460 = 0.043*t79931*t80115;
  t80461 = 0.043*t79920*t80141;
  t80462 = 0.043*t79944*t80154;
  t80463 = 0.043*t79908*t80171;
  t80464 = t80457 + t80459 + t80460 + t80461 + t80462 + t80463;
  t80405 = 0.043*t79963*t80021;
  t80406 = 0.043*t80102*t79985;
  t80407 = 0.043*t79977*t80115;
  t80408 = 0.043*t79971*t80141;
  t80411 = 0.043*t79981*t80154;
  t80412 = 0.043*t79967*t80171;
  t80413 = t80405 + t80406 + t80407 + t80408 + t80411 + t80412;
  t80611 = 0.000271*t79948*t78311;
  t80613 = 0.000271*t79937*t79235;
  t80614 = 2.e-6*t79925*t79301;
  t80615 = 2.e-6*t79912*t78504;
  t80616 = 0.000271*t79901*t78579;
  t80617 = 0.000271*t79863*t79382;
  t80618 = 0.043*t80102*t80190;
  t80619 = 0.043*t80021*t80223;
  t80620 = 0.043*t80141*t80255;
  t80621 = 0.043*t80115*t80308;
  t80622 = 0.043*t80171*t80320;
  t80623 = 0.043*t80154*t80337;
  t80624 = t80611 + t80613 + t80614 + t80615 + t80616 + t80617 + t80618 + t80619 + t80620 + t80621 + t80622 + t80623;
  t79079 = 0.043*t79078*t78311;
  t79236 = 0.043*t79226*t79235;
  t79304 = 0.043*t79293*t79301;
  t79319 = 0.043*t79318*t78504;
  t79328 = 0.043*t79324*t78579;
  t79384 = 0.043*t79368*t79382;
  t79430 = t79079 + t79236 + t79304 + t79319 + t79328 + t79384;
  t80434 = 0.043*t79078*t79897;
  t80435 = 0.043*t79226*t79908;
  t80436 = 0.043*t79293*t79920;
  t80437 = 0.043*t79318*t79931;
  t80438 = 0.043*t79324*t79944;
  t80439 = 0.043*t79368*t79955;
  t80440 = t80434 + t80435 + t80436 + t80437 + t80438 + t80439;
  t80349 = 0.043*t79078*t79963;
  t80350 = 0.043*t79226*t79967;
  t80351 = 0.043*t79293*t79971;
  t80352 = 0.043*t79318*t79977;
  t80353 = 0.043*t79324*t79981;
  t80354 = 0.043*t79368*t79985;
  t80355 = t80349 + t80350 + t80351 + t80352 + t80353 + t80354;
  t80704 = 0.000271*t79123*t79863;
  t80705 = 0.000271*t78545*t79901;
  t80706 = 2.e-6*t78426*t79912;
  t80707 = 2.e-6*t78866*t79925;
  t80708 = 0.000271*t78876*t79937;
  t80709 = 0.000271*t77945*t79948;
  t80710 = 0.043*t79368*t80021;
  t80711 = 0.043*t79078*t80102;
  t80712 = 0.043*t79293*t80115;
  t80713 = 0.043*t79318*t80141;
  t80714 = 0.043*t79226*t80154;
  t80715 = 0.043*t79324*t80171;
  t80716 = t80704 + t80705 + t80706 + t80707 + t80708 + t80709 + t80710 + t80711 + t80712 + t80713 + t80714 + t80715;
  t80489 = 0.000271*t79123*t78311;
  t80491 = 0.000271*t78545*t79235;
  t80492 = 2.e-6*t78426*t79301;
  t80493 = 2.e-6*t78866*t78504;
  t80496 = 0.000271*t78876*t78579;
  t80497 = 0.000271*t77945*t79382;
  t80498 = 0.043*t79368*t80190;
  t80499 = 0.043*t79078*t80223;
  t80552 = 0.043*t79293*t80255;
  t80553 = 0.043*t79318*t80308;
  t80554 = 0.043*t79226*t80320;
  t80556 = 0.043*t79324*t80337;
  t80558 = t80489 + t80491 + t80492 + t80493 + t80496 + t80497 + t80498 + t80499 + t80552 + t80553 + t80554 + t80556;
  t80763 = 0.000271*t78876*t80573;
  t80764 = 2.e-6*t78866*t80577;
  t80765 = 2.e-6*t80582*t78426;
  t80766 = 0.000271*t80587*t78545;
  t80767 = 0.000271*t77945*t80568;
  t80769 = 0.000271*t80594*t79123;
  t80770 = 0.043*t79368*t79542;
  t80771 = 0.043*t79078*t79808;
  t80772 = 0.043*t79293*t79757;
  t80773 = 0.043*t79226*t79769;
  t80774 = 0.043*t79318*t79747;
  t80775 = 0.043*t79324*t79698;
  t80786 = t80763 + t80764 + t80765 + t80766 + t80767 + t80769 + t80770 + t80771 + t80772 + t80773 + t80774 + t80775;
  t79548 = 0.043*t79542*t78311;
  t79699 = 0.043*t79698*t79235;
  t79748 = 0.043*t79747*t79301;
  t79759 = 0.043*t79757*t78504;
  t79770 = 0.043*t79769*t78579;
  t79809 = 0.043*t79808*t79382;
  t79810 = t79548 + t79699 + t79748 + t79759 + t79770 + t79809;
  t80442 = 0.043*t79542*t79897;
  t80443 = 0.043*t79698*t79908;
  t80444 = 0.043*t79747*t79920;
  t80445 = 0.043*t79757*t79931;
  t80446 = 0.043*t79769*t79944;
  t80447 = 0.043*t79808*t79955;
  t80448 = t80442 + t80443 + t80444 + t80445 + t80446 + t80447;
  t80357 = 0.043*t79542*t79963;
  t80358 = 0.043*t79698*t79967;
  t80359 = 0.043*t79747*t79971;
  t80360 = 0.043*t79757*t79977;
  t80384 = 0.043*t79769*t79981;
  t80385 = 0.043*t79808*t79985;
  t80386 = t80357 + t80358 + t80359 + t80360 + t80384 + t80385;
  t80718 = 0.000271*t80568*t79863;
  t80720 = 0.000271*t80573*t79901;
  t80721 = 2.e-6*t80577*t79912;
  t80722 = 2.e-6*t80582*t79925;
  t80723 = 0.000271*t80587*t79937;
  t80724 = 0.000271*t80594*t79948;
  t80725 = 0.043*t79808*t80021;
  t80726 = 0.043*t79542*t80102;
  t80728 = 0.043*t79747*t80115;
  t80729 = 0.043*t79757*t80141;
  t80730 = 0.043*t79698*t80154;
  t80731 = 0.043*t79769*t80171;
  t80732 = t80718 + t80720 + t80721 + t80722 + t80723 + t80724 + t80725 + t80726 + t80728 + t80729 + t80730 + t80731;
  t80569 = 0.000271*t80568*t78311;
  t80574 = 0.000271*t80573*t79235;
  t80578 = 2.e-6*t80577*t79301;
  t80583 = 2.e-6*t80582*t78504;
  t80588 = 0.000271*t80587*t78579;
  t80596 = 0.000271*t80594*t79382;
  t80597 = 0.043*t79808*t80190;
  t80598 = 0.043*t79542*t80223;
  t80599 = 0.043*t79747*t80255;
  t80600 = 0.043*t79757*t80308;
  t80601 = 0.043*t79698*t80320;
  t80602 = 0.043*t79769*t80337;
  t80603 = t80569 + t80574 + t80578 + t80583 + t80588 + t80596 + t80597 + t80598 + t80599 + t80600 + t80601 + t80602;
  t80749 = 0.000271000000004878*t77945;
  t80750 = 4.3e-9*t79368;
  t80751 = 0.004299987100129*t79293;
  t80752 = 1.28999742002322e-8*t79226;
  t80753 = t80749 + t80750 + t80751 + t80752;
  t80819 = 0.000271000000004878*t80594;
  t80824 = 4.3e-9*t79808;
  t80825 = 0.004299987100129*t79747;
  t80826 = 1.28999742002322e-8*t79698;
  t80839 = t80819 + t80824 + t80825 + t80826;
  t78341 = 4.3e-9*t78311;
  t78507 = 0.004299987100129*t78504;
  t78586 = 1.28999742002322e-8*t78579;
  t78587 = t78341 + t78507 + t78586;
  t80425 = 4.3e-9*t79897;
  t80426 = 0.004299987100129*t79931;
  t80429 = 1.28999742002322e-8*t79944;
  t80430 = t80425 + t80426 + t80429;
  t80344 = 4.3e-9*t79963;
  t80345 = 0.004299987100129*t79977;
  t80346 = 1.28999742002322e-8*t79981;
  t80347 = t80344 + t80345 + t80346;
  t80678 = 0.000271000000004878*t79863;
  t80680 = 4.3e-9*t80102;
  t80688 = 0.004299987100129*t80141;
  t80690 = 1.28999742002322e-8*t80171;
  t80691 = t80678 + t80680 + t80688 + t80690;
  t80480 = 0.000271000000004878*t78311;
  t80483 = 4.3e-9*t80223;
  t80484 = 0.004299987100129*t80308;
  t80486 = 1.28999742002322e-8*t80337;
  t80487 = t80480 + t80483 + t80484 + t80486;
  p_output1[0]=var2[21]*(-0.5*(0.086*t78579*t79235 + 0.086*t78504*t79301 + 0.086*t78311*t79382)*var2[0] - 0.5*t79987*var2[1] - 0.5*t79957*var2[2] - 0.5*t80339*var2[3] - 0.5*t80173*var2[4] - 0.5*t79430*var2[5] - 0.5*t79810*var2[19] - 0.5*t78587*var2[21]);
  p_output1[1]=var2[21]*(-0.5*t79987*var2[0] - 0.5*(0.086*t79971*t79977 + 0.086*t79967*t79981 + 0.086*t79963*t79985)*var2[1] - 0.5*t80396*var2[2] - 0.5*t80421*var2[3] - 0.5*t80413*var2[4] - 0.5*t80355*var2[5] - 0.5*t80386*var2[19] - 0.5*t80347*var2[21]);
  p_output1[2]=var2[21]*(-0.5*t79957*var2[0] - 0.5*t80396*var2[1] - 0.5*(0.086*t79920*t79931 + 0.086*t79908*t79944 + 0.086*t79897*t79955)*var2[2] - 0.5*t80475*var2[3] - 0.5*t80464*var2[4] - 0.5*t80440*var2[5] - 0.5*t80448*var2[19] - 0.5*t80430*var2[21]);
  p_output1[3]=var2[21]*(-0.5*t80339*var2[0] - 0.5*t80421*var2[1] - 0.5*t80475*var2[2] - 0.5*(0.000542*t78579*t79235 + 4.e-6*t78504*t79301 + 0.000542*t78311*t79382 + 0.086*t80190*t80223 + 0.086*t80255*t80308 + 0.086*t80320*t80337)*var2[3] - 0.5*t80624*var2[4] - 0.5*t80558*var2[5] - 0.5*t80603*var2[19] - 0.5*t80487*var2[21]);
  p_output1[4]=var2[21]*(-0.5*t80173*var2[0] - 0.5*t80413*var2[1] - 0.5*t80464*var2[2] - 0.5*t80624*var2[3] - 0.5*(4.e-6*t79912*t79925 + 0.000542*t79901*t79937 + 0.000542*t79863*t79948 + 0.086*t80021*t80102 + 0.086*t80115*t80141 + 0.086*t80154*t80171)*var2[4] - 0.5*t80716*var2[5] - 0.5*t80732*var2[19] - 0.5*t80691*var2[21]);
  p_output1[5]=var2[21]*(-0.5*t79430*var2[0] - 0.5*t80355*var2[1] - 0.5*t80440*var2[2] - 0.5*t80558*var2[3] - 0.5*t80716*var2[4] - 0.5*(4.e-6*t78426*t78866 + 0.000542*t78545*t78876 + 0.000542*t77945*t79123 + 0.086*t79293*t79318 + 0.086*t79226*t79324 + 0.086*t79078*t79368)*var2[5] - 0.5*t80786*var2[19] - 0.5*t80753*var2[21]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=var2[21]*(-0.5*t79810*var2[0] - 0.5*t80386*var2[1] - 0.5*t80448*var2[2] - 0.5*t80603*var2[3] - 0.5*t80732*var2[4] - 0.5*t80786*var2[5] - 0.5*(0.086*t79747*t79757 + 0.086*t79698*t79769 + 0.086*t79542*t79808 + 4.e-6*t80577*t80582 + 0.000542*t80573*t80587 + 0.000542*t80568*t80594)*var2[19] - 0.5*t80839*var2[21]);
  p_output1[20]=0;
  p_output1[21]=(-0.5*t78587*var2[0] - 0.5*t80347*var2[1] - 0.5*t80430*var2[2] - 0.5*t80487*var2[3] - 0.5*t80691*var2[4] - 0.5*t80753*var2[5] - 0.5*t80839*var2[19])*var2[21];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec22_minitaur.hh"

namespace FrontStance
{

void Ce2_vec22_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
