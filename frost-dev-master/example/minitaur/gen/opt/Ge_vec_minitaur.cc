/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:14:09 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t49600;
  double t54692;
  double t50451;
  double t50922;
  double t55157;
  double t43010;
  double t49201;
  double t50416;
  double t52662;
  double t56020;
  double t57258;
  double t63661;
  double t63726;
  double t63780;
  double t63801;
  double t63803;
  double t63820;
  double t64295;
  double t64321;
  double t69095;
  double t69101;
  double t69125;
  double t60475;
  double t60686;
  double t62138;
  double t68934;
  double t69861;
  double t70018;
  double t70021;
  double t69786;
  double t73674;
  double t73675;
  double t73676;
  double t73672;
  double t49606;
  double t50429;
  double t59800;
  double t74378;
  double t74379;
  double t74476;
  double t74483;
  double t63104;
  double t63110;
  double t63114;
  double t74535;
  double t74537;
  double t74539;
  double t63719;
  double t63739;
  double t63751;
  double t63753;
  double t74944;
  double t74956;
  double t74989;
  double t75395;
  double t63832;
  double t63839;
  double t63871;
  double t63906;
  double t63985;
  double t64235;
  double t64313;
  double t64325;
  double t64331;
  double t81198;
  double t81204;
  double t81207;
  double t83164;
  double t64450;
  double t64456;
  double t68579;
  double t83421;
  double t83424;
  double t83522;
  double t69004;
  double t69126;
  double t69133;
  double t69178;
  double t69187;
  double t69218;
  double t69272;
  double t88151;
  double t88224;
  double t88225;
  double t88250;
  double t88267;
  double t69283;
  double t69298;
  double t69465;
  double t69471;
  double t69472;
  double t69490;
  double t88292;
  double t88297;
  double t88304;
  double t88288;
  double t88289;
  double t88314;
  double t69655;
  double t69675;
  double t69704;
  double t69763;
  double t69765;
  double t69772;
  double t88336;
  double t88338;
  double t88339;
  double t88340;
  double t88322;
  double t88382;
  double t88386;
  double t69831;
  double t70035;
  double t70049;
  double t88504;
  double t88506;
  double t88507;
  double t88512;
  double t88517;
  double t70073;
  double t70120;
  double t88547;
  double t88548;
  double t72264;
  double t72283;
  double t72317;
  double t72929;
  double t88568;
  double t88518;
  double t88520;
  double t88572;
  double t73550;
  double t73552;
  double t73556;
  double t73616;
  double t73618;
  double t73629;
  double t88562;
  double t88563;
  double t88564;
  double t88566;
  double t88589;
  double t88674;
  double t88676;
  double t73673;
  double t73698;
  double t73720;
  double t73724;
  double t73820;
  double t73828;
  double t73860;
  double t88753;
  double t88755;
  double t88756;
  double t88763;
  double t88764;
  double t73884;
  double t73888;
  double t88783;
  double t88785;
  double t88816;
  double t88765;
  double t88780;
  double t88829;
  double t73947;
  double t74028;
  double t74029;
  double t74318;
  double t74335;
  double t74346;
  double t88795;
  double t88797;
  double t88799;
  double t88801;
  double t88842;
  double t88847;
  double t88849;
  double t88851;
  double t88832;
  double t88881;
  double t88886;
  double t89128;
  double t89129;
  double t89131;
  double t89137;
  double t62568;
  double t89507;
  double t89523;
  double t89509;
  double t89510;
  double t89516;
  double t89524;
  double t89568;
  double t89582;
  double t89584;
  double t89590;
  double t89526;
  double t89529;
  double t89530;
  double t89533;
  double t89534;
  double t89535;
  double t89133;
  double t89134;
  double t89164;
  double t89268;
  double t89313;
  double t89374;
  double t89394;
  double t89800;
  double t89801;
  double t89803;
  double t89835;
  double t89421;
  double t89449;
  double t89450;
  double t89452;
  double t89458;
  double t89461;
  double t89867;
  double t89873;
  double t89876;
  double t89489;
  double t89491;
  double t89494;
  double t89496;
  double t89497;
  double t89498;
  double t89851;
  double t89941;
  double t89916;
  double t89942;
  double t89799;
  double t89921;
  double t89820;
  double t90017;
  double t90045;
  double t90046;
  double t74597;
  double t74598;
  double t74600;
  double t74605;
  double t90047;
  double t90054;
  double t90060;
  double t74514;
  double t74517;
  double t74531;
  double t74376;
  double t74477;
  double t74487;
  double t74491;
  double t90096;
  double t90097;
  double t90098;
  double t74611;
  double t74634;
  double t74849;
  double t74850;
  double t90000;
  double t90004;
  double t75657;
  double t75658;
  double t75779;
  double t75788;
  double t90005;
  double t90006;
  double t90008;
  double t75603;
  double t75617;
  double t75652;
  double t90012;
  double t90014;
  double t90015;
  double t74943;
  double t75386;
  double t75396;
  double t75410;
  double t76208;
  double t76351;
  double t80760;
  double t80807;
  double t90025;
  double t90027;
  double t86283;
  double t86720;
  double t86883;
  double t87321;
  double t90029;
  double t90032;
  double t90033;
  double t83290;
  double t83292;
  double t83417;
  double t81120;
  double t82877;
  double t83176;
  double t83181;
  double t90185;
  double t90186;
  double t90189;
  double t87412;
  double t87413;
  double t87878;
  double t87880;
  double t90072;
  double t90073;
  double t90074;
  double t88148;
  double t88233;
  double t88291;
  double t88298;
  double t88301;
  double t90076;
  double t90078;
  double t90079;
  double t90080;
  double t88307;
  double t88324;
  double t88328;
  double t88329;
  double t88330;
  double t88342;
  double t88358;
  double t88368;
  double t88376;
  double t88377;
  double t90087;
  double t90088;
  double t90089;
  double t90091;
  double t88398;
  double t88403;
  double t90206;
  double t90207;
  double t90208;
  double t90209;
  double t88408;
  double t88412;
  double t88467;
  double t88469;
  double t88487;
  double t90117;
  double t90118;
  double t90119;
  double t88503;
  double t88509;
  double t88544;
  double t88549;
  double t88559;
  double t88569;
  double t88597;
  double t88612;
  double t88622;
  double t88623;
  double t90128;
  double t90129;
  double t90130;
  double t90131;
  double t88638;
  double t88642;
  double t88649;
  double t88656;
  double t88658;
  double t90134;
  double t90135;
  double t90136;
  double t90139;
  double t90224;
  double t90225;
  double t90226;
  double t90227;
  double t88687;
  double t88688;
  double t88702;
  double t88706;
  double t88713;
  double t88717;
  double t88727;
  double t90162;
  double t90163;
  double t90165;
  double t88751;
  double t88759;
  double t88782;
  double t88792;
  double t88793;
  double t88827;
  double t88833;
  double t88834;
  double t88835;
  double t88841;
  double t88853;
  double t88868;
  double t88869;
  double t88871;
  double t88875;
  double t90176;
  double t90177;
  double t90178;
  double t90179;
  double t90246;
  double t90247;
  double t90248;
  double t90249;
  double t88888;
  double t88889;
  double t90252;
  double t90254;
  double t90255;
  double t90256;
  double t88939;
  double t88966;
  double t89071;
  double t89085;
  double t89089;
  double t90067;
  double t90304;
  double t89561;
  double t89589;
  double t89591;
  double t89593;
  double t90305;
  double t89662;
  double t89681;
  double t89708;
  double t89714;
  double t90306;
  double t90309;
  double t90312;
  double t89612;
  double t89613;
  double t89622;
  double t90314;
  double t90316;
  double t90317;
  double t89757;
  double t89765;
  double t89717;
  double t89719;
  double t90281;
  double t90282;
  double t90283;
  double t90285;
  double t90286;
  double t90287;
  double t90288;
  double t89807;
  double t89852;
  double t89853;
  double t89877;
  double t89882;
  double t90290;
  double t90291;
  double t90293;
  double t90294;
  double t89890;
  double t89893;
  double t89924;
  double t89926;
  double t89927;
  double t89929;
  double t89930;
  double t90296;
  double t90297;
  double t90298;
  double t90299;
  double t89934;
  double t89936;
  double t89950;
  double t89951;
  double t89954;
  double t89974;
  double t89975;
  double t89977;
  double t89979;
  double t89981;
  double t90379;
  double t90380;
  double t90382;
  double t90392;
  double t90393;
  double t90395;
  double t90396;
  double t90370;
  double t90371;
  double t90372;
  double t90385;
  double t90397;
  double t90403;
  double t90408;
  double t90409;
  double t90410;
  double t90411;
  double t90412;
  double t90426;
  double t90430;
  double t90434;
  double t90584;
  double t90585;
  double t90587;
  double t90477;
  double t90479;
  double t90487;
  double t90488;
  double t90490;
  double t90494;
  double t90495;
  double t90502;
  double t90603;
  double t90604;
  double t90605;
  double t90533;
  double t90534;
  double t90549;
  double t90551;
  double t90553;
  double t90624;
  double t90625;
  double t90628;
  double t90635;
  double t90636;
  double t90637;
  double t90376;
  double t90693;
  double t90660;
  double t90661;
  double t90673;
  double t90678;
  double t90680;
  double t90663;
  double t90668;
  double t90669;
  double t90684;
  double t90685;
  double t90686;
  double t90736;
  double t90737;
  double t90738;
  double t90753;
  double t90755;
  double t90756;
  double t90757;
  double t90747;
  double t90748;
  double t90750;
  double t90751;
  double t90739;
  double t90742;
  double t90743;
  double t90745;
  double t90778;
  double t90779;
  double t90780;
  double t90781;
  double t90783;
  double t90785;
  double t90786;
  double t90787;
  double t90813;
  double t90814;
  double t90816;
  double t90817;
  double t90825;
  double t90831;
  double t90832;
  double t90833;
  double t90822;
  double t90823;
  double t90809;
  double t90810;
  double t90811;
  double t90812;
  double t90843;
  double t90872;
  double t90873;
  double t90874;
  double t90888;
  double t90889;
  double t90890;
  double t90891;
  double t90892;
  double t90893;
  double t90894;
  double t90901;
  double t90902;
  double t90903;
  double t90904;
  double t90911;
  double t90912;
  double t90914;
  double t90915;
  double t90937;
  double t90939;
  double t90942;
  double t90943;
  double t90944;
  double t90959;
  double t90960;
  double t90963;
  double t90986;
  double t90987;
  double t90982;
  double t90983;
  double t91003;
  double t90994;
  double t90996;
  double t90997;
  double t90999;
  double t91008;
  double t91009;
  double t91011;
  double t91023;
  double t91024;
  double t91026;
  double t90949;
  double t90952;
  double t90953;
  double t91094;
  double t91096;
  double t91099;
  double t91102;
  double t91103;
  double t91106;
  double t91107;
  double t91110;
  double t91138;
  double t91139;
  double t91140;
  double t91141;
  double t91142;
  double t91145;
  double t91146;
  double t91153;
  double t91154;
  double t91155;
  double t91156;
  double t91162;
  double t91163;
  double t91164;
  double t91165;
  double t91198;
  double t91199;
  double t91200;
  double t91226;
  double t91227;
  double t91218;
  double t91221;
  double t91241;
  double t91232;
  double t91233;
  double t91234;
  double t91236;
  double t91246;
  double t91247;
  double t91248;
  double t91262;
  double t91270;
  double t91272;
  double t91301;
  double t91302;
  double t91303;
  double t91304;
  double t91305;
  double t91317;
  double t91318;
  double t91319;
  double t91353;
  double t91354;
  double t91357;
  double t91358;
  double t91361;
  double t91362;
  double t91363;
  double t91392;
  double t91394;
  double t91395;
  double t91396;
  double t91400;
  double t91401;
  double t91402;
  double t91404;
  double t91308;
  double t91309;
  double t91310;
  double t91469;
  double t91470;
  double t91466;
  double t91467;
  double t91483;
  double t91477;
  double t91478;
  double t91479;
  double t91480;
  double t91490;
  double t91491;
  double t91493;
  double t91506;
  double t91507;
  double t91509;
  t49600 = Sin(var1[3]);
  t54692 = Cos(var1[3]);
  t50451 = Cos(var1[5]);
  t50922 = Sin(var1[4]);
  t55157 = Sin(var1[5]);
  t43010 = Cos(var1[4]);
  t49201 = Sin(var1[11]);
  t50416 = Cos(var1[11]);
  t52662 = t50451*t49600*t50922;
  t56020 = t54692*t55157;
  t57258 = t52662 + t56020;
  t63661 = Sin(var1[14]);
  t63726 = Cos(var1[14]);
  t63780 = -1.*t54692*t50451;
  t63801 = t49600*t50922*t55157;
  t63803 = t63780 + t63801;
  t63820 = 0.1*t63803;
  t64295 = Sin(var1[18]);
  t64321 = Cos(var1[18]);
  t69095 = Cos(var1[10]);
  t69101 = -1.*t69095;
  t69125 = 1. + t69101;
  t60475 = t54692*t50451;
  t60686 = -1.*t49600*t50922*t55157;
  t62138 = t60475 + t60686;
  t68934 = Sin(var1[10]);
  t69861 = Cos(var1[15]);
  t70018 = -1.*t69861;
  t70021 = 1. + t70018;
  t69786 = Sin(var1[15]);
  t73674 = Cos(var1[19]);
  t73675 = -1.*t73674;
  t73676 = 1. + t73675;
  t73672 = Sin(var1[19]);
  t49606 = 0.2*t43010*t49201*t49600;
  t50429 = -1. + t50416;
  t59800 = 0.2*t50429*t57258;
  t74378 = Cos(var1[13]);
  t74379 = -1.*t74378;
  t74476 = 1. + t74379;
  t74483 = Sin(var1[13]);
  t63104 = -1.*t50416*t43010*t49600;
  t63110 = t49201*t57258;
  t63114 = t63104 + t63110;
  t74535 = t43010*t49201*t49600;
  t74537 = t50416*t57258;
  t74539 = t74535 + t74537;
  t63719 = -0.2*t43010*t63661*t49600;
  t63739 = -1.*t63726;
  t63751 = 1. + t63739;
  t63753 = 0.2*t63751*t57258;
  t74944 = Cos(var1[16]);
  t74956 = -1.*t74944;
  t74989 = 1. + t74956;
  t75395 = Sin(var1[16]);
  t63832 = t43010*t63661*t49600;
  t63839 = t63726*t57258;
  t63871 = t63832 + t63839;
  t63906 = -1.*t63726*t43010*t49600;
  t63985 = t63661*t57258;
  t64235 = t63906 + t63985;
  t64313 = 0.2*t43010*t64295*t49600;
  t64325 = -1. + t64321;
  t64331 = 0.2*t64325*t57258;
  t81198 = Cos(var1[20]);
  t81204 = -1.*t81198;
  t81207 = 1. + t81204;
  t83164 = Sin(var1[20]);
  t64450 = -1.*t64321*t43010*t49600;
  t64456 = t64295*t57258;
  t68579 = t64450 + t64456;
  t83421 = t43010*t64295*t49600;
  t83424 = t64321*t57258;
  t83522 = t83421 + t83424;
  t69004 = -0.2000000000018*t43010*t68934*t49600;
  t69126 = -1.8e-12*t69125;
  t69133 = -1. + t69095;
  t69178 = 0.2*t69133;
  t69187 = t69126 + t69178;
  t69218 = t69187*t57258;
  t69272 = 6.000000000054e-7*t69125*t62138;
  t88151 = Cos(var1[12]);
  t88224 = -1.*t88151;
  t88225 = 1. + t88224;
  t88250 = -3.e-6*t88225;
  t88267 = Sin(var1[12]);
  t69283 = 3.e-6*t43010*t68934*t49600;
  t69298 = 3.e-6*t69125*t57258;
  t69465 = -9.e-12*t69125;
  t69471 = 1. + t69465;
  t69472 = t69471*t62138;
  t69490 = t69283 + t69298 + t69472;
  t88292 = 3.e-6*t88267;
  t88297 = t88250 + t88292;
  t88304 = 3.e-13*var1[12];
  t88288 = -3.e-6*t88267;
  t88289 = t88250 + t88288;
  t88314 = -9.e-12*t88225;
  t69655 = -1.000000000009*t69125;
  t69675 = 1. + t69655;
  t69704 = -1.*t69675*t43010*t49600;
  t69763 = -1.*t68934*t57258;
  t69765 = 3.e-6*t68934*t62138;
  t69772 = t69704 + t69763 + t69765;
  t88336 = -1.*t43010*t68934*t49600;
  t88338 = t69095*t57258;
  t88339 = 3.e-6*t69125*t62138;
  t88340 = t88336 + t88338 + t88339;
  t88322 = -1.*t88267;
  t88382 = 3.e-6*t88225;
  t88386 = t88382 + t88292;
  t69831 = 0.2000000000018*t43010*t69786*t49600;
  t70035 = 0.2000000000018*t70021*t57258;
  t70049 = -6.000000000054e-7*t70021*t62138;
  t88504 = Cos(var1[17]);
  t88506 = -1.*t88504;
  t88507 = 1. + t88506;
  t88512 = -3.e-6*t88507;
  t88517 = Sin(var1[17]);
  t70073 = -9.e-12*t70021;
  t70120 = 1. + t70073;
  t88547 = 3.e-6*t88517;
  t88548 = t88512 + t88547;
  t72264 = -1.*t43010*t69786*t49600;
  t72283 = t69861*t57258;
  t72317 = 3.e-6*t70021*t62138;
  t72929 = t72264 + t72283 + t72317;
  t88568 = 9.e-13*var1[17];
  t88518 = -3.e-6*t88517;
  t88520 = t88512 + t88518;
  t88572 = -9.e-12*t88507;
  t73550 = -1.000000000009*t70021;
  t73552 = 1. + t73550;
  t73556 = -1.*t73552*t43010*t49600;
  t73616 = -1.*t69786*t57258;
  t73618 = 3.e-6*t69786*t62138;
  t73629 = t73556 + t73616 + t73618;
  t88562 = 3.e-6*t43010*t69786*t49600;
  t88563 = 3.e-6*t70021*t57258;
  t88564 = t70120*t62138;
  t88566 = t88562 + t88563 + t88564;
  t88589 = -1.*t88517;
  t88674 = 3.e-6*t88507;
  t88676 = t88674 + t88547;
  t73673 = -0.2000000000018*t43010*t73672*t49600;
  t73698 = -1.8e-12*t73676;
  t73720 = -1. + t73674;
  t73724 = 0.2*t73720;
  t73820 = t73698 + t73724;
  t73828 = t73820*t57258;
  t73860 = 6.000000000054e-7*t73676*t62138;
  t88753 = Cos(var1[21]);
  t88755 = -1.*t88753;
  t88756 = 1. + t88755;
  t88763 = -3.e-6*t88756;
  t88764 = Sin(var1[21]);
  t73884 = -9.e-12*t73676;
  t73888 = 1. + t73884;
  t88783 = 3.e-6*t88764;
  t88785 = t88763 + t88783;
  t88816 = 3.e-13*var1[21];
  t88765 = -3.e-6*t88764;
  t88780 = t88763 + t88765;
  t88829 = -9.e-12*t88756;
  t73947 = -1.000000000009*t73676;
  t74028 = 1. + t73947;
  t74029 = -1.*t74028*t43010*t49600;
  t74318 = -1.*t73672*t57258;
  t74335 = 3.e-6*t73672*t62138;
  t74346 = t74029 + t74318 + t74335;
  t88795 = 3.e-6*t43010*t73672*t49600;
  t88797 = 3.e-6*t73676*t57258;
  t88799 = t73888*t62138;
  t88801 = t88795 + t88797 + t88799;
  t88842 = -1.*t43010*t73672*t49600;
  t88847 = t73674*t57258;
  t88849 = 3.e-6*t73676*t62138;
  t88851 = t88842 + t88847 + t88849;
  t88832 = -1.*t88764;
  t88881 = 3.e-6*t88756;
  t88886 = t88881 + t88783;
  t89128 = Cos(var1[6]);
  t89129 = -1.*t89128;
  t89131 = 1. + t89129;
  t89137 = Sin(var1[6]);
  t62568 = 0.1*t62138;
  t89507 = Cos(var1[7]);
  t89523 = Sin(var1[7]);
  t89509 = -1.*t89507;
  t89510 = 1. + t89509;
  t89516 = 0.2*t89510*t57258;
  t89524 = -0.2*t43010*t49600*t89523;
  t89568 = Cos(var1[9]);
  t89582 = -1.*t89568;
  t89584 = 1. + t89582;
  t89590 = Sin(var1[9]);
  t89526 = t89507*t57258;
  t89529 = t43010*t49600*t89523;
  t89530 = t89526 + t89529;
  t89533 = -1.*t43010*t89507*t49600;
  t89534 = t57258*t89523;
  t89535 = t89533 + t89534;
  t89133 = 0.2000000000018*t89131*t57258;
  t89134 = -6.000000000054e-7*t89131*t62138;
  t89164 = 0.2000000000018*t43010*t49600*t89137;
  t89268 = t89128*t57258;
  t89313 = 3.e-6*t89131*t62138;
  t89374 = -1.*t43010*t49600*t89137;
  t89394 = t89268 + t89313 + t89374;
  t89800 = Cos(var1[8]);
  t89801 = -1.*t89800;
  t89803 = 1. + t89801;
  t89835 = Sin(var1[8]);
  t89421 = 3.e-6*t89131*t57258;
  t89449 = -9.e-12*t89131;
  t89450 = 1. + t89449;
  t89452 = t89450*t62138;
  t89458 = 3.e-6*t43010*t49600*t89137;
  t89461 = t89421 + t89452 + t89458;
  t89867 = -3.e-6*t89803;
  t89873 = 3.e-6*t89835;
  t89876 = t89867 + t89873;
  t89489 = -1.000000000009*t89131;
  t89491 = 1. + t89489;
  t89494 = -1.*t43010*t89491*t49600;
  t89496 = -1.*t57258*t89137;
  t89497 = 3.e-6*t62138*t89137;
  t89498 = t89494 + t89496 + t89497;
  t89851 = -1.*t89835;
  t89941 = 3.e-6*t89803;
  t89916 = -3.e-6*t89835;
  t89942 = t89941 + t89873;
  t89799 = 9.e-13*var1[8];
  t89921 = t89867 + t89916;
  t89820 = -9.e-12*t89803;
  t90017 = -0.1*t54692*t43010*t55157;
  t90045 = -0.2*t50429*t54692*t43010*t50451;
  t90046 = 0.2*t54692*t49201*t50922;
  t74597 = -1.2e-12*var1[13];
  t74598 = 0.1000000000009*t74476;
  t74600 = 0.200000000003*t74483;
  t74605 = t74597 + t74598 + t74600;
  t90047 = -1.*t54692*t43010*t50451*t49201;
  t90054 = -1.*t50416*t54692*t50922;
  t90060 = t90047 + t90054;
  t74514 = -0.2000000000048*t74476;
  t74517 = 0.1000000000009*t74483;
  t74531 = t74514 + t74517;
  t74376 = 4.e-7*var1[13];
  t74477 = 3.000000000027e-7*t74476;
  t74487 = 6.00000000009e-7*t74483;
  t74491 = t74376 + t74477 + t74487;
  t90096 = -1.*t50416*t54692*t43010*t50451;
  t90097 = t54692*t49201*t50922;
  t90098 = t90096 + t90097;
  t74611 = -9.e-12*t74476;
  t74634 = 1. + t74611;
  t74849 = -1.000000000009*t74476;
  t74850 = 1. + t74849;
  t90000 = -0.2*t63751*t54692*t43010*t50451;
  t90004 = -0.2*t54692*t63661*t50922;
  t75657 = 1.2e-12*var1[16];
  t75658 = 0.1000000000009*t74989;
  t75779 = -0.200000000003*t75395;
  t75788 = t75657 + t75658 + t75779;
  t90005 = -1.*t54692*t43010*t50451*t63661;
  t90006 = -1.*t63726*t54692*t50922;
  t90008 = t90005 + t90006;
  t75603 = 0.2000000000048*t74989;
  t75617 = 0.1000000000009*t75395;
  t75652 = t75603 + t75617;
  t90012 = -1.*t63726*t54692*t43010*t50451;
  t90014 = t54692*t63661*t50922;
  t90015 = t90012 + t90014;
  t74943 = -4.e-7*var1[16];
  t75386 = 3.000000000027e-7*t74989;
  t75396 = -6.00000000009e-7*t75395;
  t75410 = t74943 + t75386 + t75396;
  t76208 = -9.e-12*t74989;
  t76351 = 1. + t76208;
  t80760 = -1.000000000009*t74989;
  t80807 = 1. + t80760;
  t90025 = -0.2*t64325*t54692*t43010*t50451;
  t90027 = 0.2*t54692*t64295*t50922;
  t86283 = -1.2e-12*var1[20];
  t86720 = 0.1000000000009*t81207;
  t86883 = 0.200000000003*t83164;
  t87321 = t86283 + t86720 + t86883;
  t90029 = -1.*t54692*t43010*t50451*t64295;
  t90032 = -1.*t64321*t54692*t50922;
  t90033 = t90029 + t90032;
  t83290 = -0.2000000000048*t81207;
  t83292 = 0.1000000000009*t83164;
  t83417 = t83290 + t83292;
  t81120 = 4.e-7*var1[20];
  t82877 = 3.000000000027e-7*t81207;
  t83176 = 6.00000000009e-7*t83164;
  t83181 = t81120 + t82877 + t83176;
  t90185 = -1.*t64321*t54692*t43010*t50451;
  t90186 = t54692*t64295*t50922;
  t90189 = t90185 + t90186;
  t87412 = -9.e-12*t81207;
  t87413 = 1. + t87412;
  t87878 = -1.000000000009*t81207;
  t87880 = 1. + t87878;
  t90072 = -1.*t69187*t54692*t43010*t50451;
  t90073 = -0.2000000000018*t54692*t68934*t50922;
  t90074 = 6.000000000054e-7*t69125*t54692*t43010*t55157;
  t88148 = 1.e-7*var1[12];
  t88233 = 5.4e-18*t88225;
  t88291 = -0.200000000003*t88289;
  t88298 = 0.100000000003*t88297;
  t88301 = t88148 + t88233 + t88291 + t88298;
  t90076 = -3.e-6*t69125*t54692*t43010*t50451;
  t90078 = 3.e-6*t54692*t68934*t50922;
  t90079 = t69471*t54692*t43010*t55157;
  t90080 = t90076 + t90078 + t90079;
  t88307 = -0.2000000000048*t88225;
  t88324 = t88314 + t88322;
  t88328 = 0.100000000003*t88324;
  t88329 = 3.e-7*t88297;
  t88330 = t88304 + t88307 + t88328 + t88329;
  t88342 = 0.1000000000039*t88225;
  t88358 = 3.e-7*t88289;
  t88368 = t88314 + t88267;
  t88376 = -0.200000000003*t88368;
  t88377 = t88304 + t88342 + t88358 + t88376;
  t90087 = t54692*t43010*t50451*t68934;
  t90088 = -1.*t69675*t54692*t50922;
  t90089 = 3.e-6*t54692*t43010*t68934*t55157;
  t90091 = t90087 + t90088 + t90089;
  t88398 = -1.000000000009*t88225;
  t88403 = 1. + t88398;
  t90206 = -1.*t69095*t54692*t43010*t50451;
  t90207 = -1.*t54692*t68934*t50922;
  t90208 = 3.e-6*t69125*t54692*t43010*t55157;
  t90209 = t90206 + t90207 + t90208;
  t88408 = 9.e-12*t88225;
  t88412 = t88408 + t88322;
  t88467 = -1.8e-11*t88225;
  t88469 = 1. + t88467;
  t88487 = t88382 + t88288;
  t90117 = -0.2000000000018*t70021*t54692*t43010*t50451;
  t90118 = 0.2000000000018*t54692*t69786*t50922;
  t90119 = -6.000000000054e-7*t70021*t54692*t43010*t55157;
  t88503 = 3.e-7*var1[17];
  t88509 = -1.62e-17*t88507;
  t88544 = 0.2*t88520;
  t88549 = 0.1*t88548;
  t88559 = t88503 + t88509 + t88544 + t88549;
  t88569 = 0.2000000000018*t88507;
  t88597 = t88572 + t88589;
  t88612 = 0.1*t88597;
  t88622 = -9.e-7*t88548;
  t88623 = t88568 + t88569 + t88612 + t88622;
  t90128 = -1.*t69861*t54692*t43010*t50451;
  t90129 = -1.*t54692*t69786*t50922;
  t90130 = 3.e-6*t70021*t54692*t43010*t55157;
  t90131 = t90128 + t90129 + t90130;
  t88638 = 0.1000000000009*t88507;
  t88642 = -9.e-7*t88520;
  t88649 = t88572 + t88517;
  t88656 = 0.2*t88649;
  t88658 = t88568 + t88638 + t88642 + t88656;
  t90134 = t54692*t43010*t50451*t69786;
  t90135 = -1.*t73552*t54692*t50922;
  t90136 = 3.e-6*t54692*t43010*t69786*t55157;
  t90139 = t90134 + t90135 + t90136;
  t90224 = -3.e-6*t70021*t54692*t43010*t50451;
  t90225 = 3.e-6*t54692*t69786*t50922;
  t90226 = t70120*t54692*t43010*t55157;
  t90227 = t90224 + t90225 + t90226;
  t88687 = -1.000000000009*t88507;
  t88688 = 1. + t88687;
  t88702 = 9.e-12*t88507;
  t88706 = t88702 + t88589;
  t88713 = -1.8e-11*t88507;
  t88717 = 1. + t88713;
  t88727 = t88674 + t88518;
  t90162 = -1.*t73820*t54692*t43010*t50451;
  t90163 = -0.2000000000018*t54692*t73672*t50922;
  t90165 = 6.000000000054e-7*t73676*t54692*t43010*t55157;
  t88751 = 1.e-7*var1[21];
  t88759 = 5.4e-18*t88756;
  t88782 = -0.200000000003*t88780;
  t88792 = 0.100000000003*t88785;
  t88793 = t88751 + t88759 + t88782 + t88792;
  t88827 = -0.2000000000048*t88756;
  t88833 = t88829 + t88832;
  t88834 = 0.100000000003*t88833;
  t88835 = 3.e-7*t88785;
  t88841 = t88816 + t88827 + t88834 + t88835;
  t88853 = 0.1000000000039*t88756;
  t88868 = 3.e-7*t88780;
  t88869 = t88829 + t88764;
  t88871 = -0.200000000003*t88869;
  t88875 = t88816 + t88853 + t88868 + t88871;
  t90176 = t54692*t43010*t50451*t73672;
  t90177 = -1.*t74028*t54692*t50922;
  t90178 = 3.e-6*t54692*t43010*t73672*t55157;
  t90179 = t90176 + t90177 + t90178;
  t90246 = -3.e-6*t73676*t54692*t43010*t50451;
  t90247 = 3.e-6*t54692*t73672*t50922;
  t90248 = t73888*t54692*t43010*t55157;
  t90249 = t90246 + t90247 + t90248;
  t88888 = -1.000000000009*t88756;
  t88889 = 1. + t88888;
  t90252 = -1.*t73674*t54692*t43010*t50451;
  t90254 = -1.*t54692*t73672*t50922;
  t90255 = 3.e-6*t73676*t54692*t43010*t55157;
  t90256 = t90252 + t90254 + t90255;
  t88939 = 9.e-12*t88756;
  t88966 = t88939 + t88832;
  t89071 = -1.8e-11*t88756;
  t89085 = 1. + t89071;
  t89089 = t88881 + t88765;
  t90067 = 0.1*t54692*t43010*t55157;
  t90304 = -0.2*t54692*t43010*t50451*t89510;
  t89561 = -4.e-7*var1[9];
  t89589 = 3.000000000027e-7*t89584;
  t89591 = -6.00000000009e-7*t89590;
  t89593 = t89561 + t89589 + t89591;
  t90305 = -0.2*t54692*t50922*t89523;
  t89662 = 1.2e-12*var1[9];
  t89681 = 0.1000000000009*t89584;
  t89708 = -0.200000000003*t89590;
  t89714 = t89662 + t89681 + t89708;
  t90306 = -1.*t54692*t89507*t50922;
  t90309 = -1.*t54692*t43010*t50451*t89523;
  t90312 = t90306 + t90309;
  t89612 = 0.2000000000048*t89584;
  t89613 = 0.1000000000009*t89590;
  t89622 = t89612 + t89613;
  t90314 = -1.*t54692*t43010*t50451*t89507;
  t90316 = t54692*t50922*t89523;
  t90317 = t90314 + t90316;
  t89757 = -1.000000000009*t89584;
  t89765 = 1. + t89757;
  t89717 = -9.e-12*t89584;
  t89719 = 1. + t89717;
  t90281 = -0.2000000000018*t54692*t43010*t50451*t89131;
  t90282 = -6.000000000054e-7*t54692*t43010*t89131*t55157;
  t90283 = 0.2000000000018*t54692*t50922*t89137;
  t90285 = -1.*t54692*t43010*t50451*t89128;
  t90286 = 3.e-6*t54692*t43010*t89131*t55157;
  t90287 = -1.*t54692*t50922*t89137;
  t90288 = t90285 + t90286 + t90287;
  t89807 = 0.2000000000018*t89803;
  t89852 = t89820 + t89851;
  t89853 = 0.1*t89852;
  t89877 = -9.e-7*t89876;
  t89882 = t89799 + t89807 + t89853 + t89877;
  t90290 = -3.e-6*t54692*t43010*t50451*t89131;
  t90291 = t54692*t43010*t89450*t55157;
  t90293 = 3.e-6*t54692*t50922*t89137;
  t90294 = t90290 + t90291 + t90293;
  t89890 = 3.e-7*var1[8];
  t89893 = -1.62e-17*t89803;
  t89924 = 0.2*t89921;
  t89926 = 0.1*t89876;
  t89927 = t89890 + t89893 + t89924 + t89926;
  t89929 = -1.000000000009*t89803;
  t89930 = 1. + t89929;
  t90296 = -1.*t54692*t89491*t50922;
  t90297 = t54692*t43010*t50451*t89137;
  t90298 = 3.e-6*t54692*t43010*t55157*t89137;
  t90299 = t90296 + t90297 + t90298;
  t89934 = 9.e-12*t89803;
  t89936 = t89934 + t89851;
  t89950 = -1.8e-11*t89803;
  t89951 = 1. + t89950;
  t89954 = t89941 + t89916;
  t89974 = 0.1000000000009*t89803;
  t89975 = -9.e-7*t89921;
  t89977 = t89820 + t89835;
  t89979 = 0.2*t89977;
  t89981 = t89799 + t89974 + t89975 + t89979;
  t90379 = t50451*t49600;
  t90380 = t54692*t50922*t55157;
  t90382 = t90379 + t90380;
  t90392 = -1.*t54692*t50451*t50922;
  t90393 = t49600*t55157;
  t90395 = t90392 + t90393;
  t90396 = 0.1*t90395;
  t90370 = t54692*t50451*t50922;
  t90371 = -1.*t49600*t55157;
  t90372 = t90370 + t90371;
  t90385 = 0.2*t50429*t90382;
  t90397 = 0.2*t63751*t90382;
  t90403 = 0.2*t64325*t90382;
  t90408 = 6.000000000054e-7*t69125*t90372;
  t90409 = t69187*t90382;
  t90410 = t69471*t90372;
  t90411 = 3.e-6*t69125*t90382;
  t90412 = t90410 + t90411;
  t90426 = 3.e-6*t68934*t90372;
  t90430 = -1.*t68934*t90382;
  t90434 = t90426 + t90430;
  t90584 = 3.e-6*t69125*t90372;
  t90585 = t69095*t90382;
  t90587 = t90584 + t90585;
  t90477 = -6.000000000054e-7*t70021*t90372;
  t90479 = 0.2000000000018*t70021*t90382;
  t90487 = 3.e-6*t70021*t90372;
  t90488 = t69861*t90382;
  t90490 = t90487 + t90488;
  t90494 = 3.e-6*t69786*t90372;
  t90495 = -1.*t69786*t90382;
  t90502 = t90494 + t90495;
  t90603 = t70120*t90372;
  t90604 = 3.e-6*t70021*t90382;
  t90605 = t90603 + t90604;
  t90533 = 6.000000000054e-7*t73676*t90372;
  t90534 = t73820*t90382;
  t90549 = 3.e-6*t73672*t90372;
  t90551 = -1.*t73672*t90382;
  t90553 = t90549 + t90551;
  t90624 = t73888*t90372;
  t90625 = 3.e-6*t73676*t90382;
  t90628 = t90624 + t90625;
  t90635 = 3.e-6*t73676*t90372;
  t90636 = t73674*t90382;
  t90637 = t90635 + t90636;
  t90376 = 0.1*t90372;
  t90693 = 0.2*t89510*t90382;
  t90660 = -6.000000000054e-7*t89131*t90372;
  t90661 = 0.2000000000018*t89131*t90382;
  t90673 = 3.e-6*t89131*t90372;
  t90678 = t89128*t90382;
  t90680 = t90673 + t90678;
  t90663 = t89450*t90372;
  t90668 = 3.e-6*t89131*t90382;
  t90669 = t90663 + t90668;
  t90684 = 3.e-6*t90372*t89137;
  t90685 = -1.*t90382*t89137;
  t90686 = t90684 + t90685;
  t90736 = -0.2000000000018*t54692*t43010*t89128;
  t90737 = 0.2000000000018*t90395*t89137;
  t90738 = -6.000000000054e-7*t90382*t89137;
  t90753 = t54692*t43010*t89128;
  t90755 = -1.*t90395*t89137;
  t90756 = 3.e-6*t90382*t89137;
  t90757 = t90753 + t90755 + t90756;
  t90747 = -3.e-6*t54692*t43010*t89128;
  t90748 = 3.e-6*t90395*t89137;
  t90750 = -9.e-12*t90382*t89137;
  t90751 = t90747 + t90748 + t90750;
  t90739 = -1.*t89128*t90395;
  t90742 = 3.e-6*t89128*t90382;
  t90743 = -1.000000000009*t54692*t43010*t89137;
  t90745 = t90739 + t90742 + t90743;
  t90778 = 0.2*t54692*t43010*t89507;
  t90779 = 0.2*t90395*t89523;
  t90780 = t89507*t90395;
  t90781 = -1.*t54692*t43010*t89523;
  t90783 = t90780 + t90781;
  t90785 = -1.*t54692*t43010*t89507;
  t90786 = -1.*t90395*t89523;
  t90787 = t90785 + t90786;
  t90813 = -3.e-6*t89800;
  t90814 = t90813 + t89916;
  t90816 = 3.e-6*t89800;
  t90817 = t90816 + t89916;
  t90825 = -9.e-12*t89835;
  t90831 = t89128*t90395;
  t90832 = t54692*t43010*t89137;
  t90833 = t90831 + t90668 + t90832;
  t90822 = t54692*t43010*t89491;
  t90823 = t90822 + t90755 + t90756;
  t90809 = 3.e-6*t89131*t90395;
  t90810 = t89450*t90382;
  t90811 = -3.e-6*t54692*t43010*t89137;
  t90812 = t90809 + t90810 + t90811;
  t90843 = t90816 + t89873;
  t90872 = t54692*t43010*t89507;
  t90873 = t90395*t89523;
  t90874 = t90872 + t90873;
  t90888 = 0.2000000000018*t69095*t54692*t43010;
  t90889 = -0.2000000000018*t68934*t90395;
  t90890 = 6.000000000054e-7*t68934*t90382;
  t90891 = -1.000000000009*t54692*t43010*t68934;
  t90892 = -1.*t69095*t90395;
  t90893 = 3.e-6*t69095*t90382;
  t90894 = t90891 + t90892 + t90893;
  t90901 = -3.e-6*t69095*t54692*t43010;
  t90902 = 3.e-6*t68934*t90395;
  t90903 = -9.e-12*t68934*t90382;
  t90904 = t90901 + t90902 + t90903;
  t90911 = t69095*t54692*t43010;
  t90912 = -1.*t68934*t90395;
  t90914 = 3.e-6*t68934*t90382;
  t90915 = t90911 + t90912 + t90914;
  t90937 = -0.2*t50416*t54692*t43010;
  t90939 = -0.2*t49201*t90395;
  t90942 = -1.*t54692*t43010*t49201;
  t90943 = t50416*t90395;
  t90944 = t90942 + t90943;
  t90959 = -1.*t50416*t54692*t43010;
  t90960 = -1.*t49201*t90395;
  t90963 = t90959 + t90960;
  t90986 = 3.e-6*t88151;
  t90987 = t90986 + t88288;
  t90982 = -3.e-6*t88151;
  t90983 = t90982 + t88288;
  t91003 = -9.e-12*t88267;
  t90994 = -3.e-6*t54692*t43010*t68934;
  t90996 = 3.e-6*t69125*t90395;
  t90997 = t69471*t90382;
  t90999 = t90994 + t90996 + t90997;
  t91008 = t54692*t43010*t68934;
  t91009 = t69095*t90395;
  t91011 = t91008 + t91009 + t90411;
  t91023 = t69675*t54692*t43010;
  t91024 = t91023 + t90912 + t90914;
  t91026 = t90986 + t88292;
  t90949 = t50416*t54692*t43010;
  t90952 = t49201*t90395;
  t90953 = t90949 + t90952;
  t91094 = 0.2*t63726*t54692*t43010;
  t91096 = 0.2*t63661*t90395;
  t91099 = -1.*t54692*t43010*t63661;
  t91102 = t63726*t90395;
  t91103 = t91099 + t91102;
  t91106 = -1.*t63726*t54692*t43010;
  t91107 = -1.*t63661*t90395;
  t91110 = t91106 + t91107;
  t91138 = -0.2000000000018*t69861*t54692*t43010;
  t91139 = 0.2000000000018*t69786*t90395;
  t91140 = -6.000000000054e-7*t69786*t90382;
  t91141 = -1.000000000009*t54692*t43010*t69786;
  t91142 = -1.*t69861*t90395;
  t91145 = 3.e-6*t69861*t90382;
  t91146 = t91141 + t91142 + t91145;
  t91153 = t69861*t54692*t43010;
  t91154 = -1.*t69786*t90395;
  t91155 = 3.e-6*t69786*t90382;
  t91156 = t91153 + t91154 + t91155;
  t91162 = -3.e-6*t69861*t54692*t43010;
  t91163 = 3.e-6*t69786*t90395;
  t91164 = -9.e-12*t69786*t90382;
  t91165 = t91162 + t91163 + t91164;
  t91198 = t63726*t54692*t43010;
  t91199 = t63661*t90395;
  t91200 = t91198 + t91199;
  t91226 = 3.e-6*t88504;
  t91227 = t91226 + t88518;
  t91218 = -3.e-6*t88504;
  t91221 = t91218 + t88518;
  t91241 = -9.e-12*t88517;
  t91232 = -3.e-6*t54692*t43010*t69786;
  t91233 = 3.e-6*t70021*t90395;
  t91234 = t70120*t90382;
  t91236 = t91232 + t91233 + t91234;
  t91246 = t54692*t43010*t69786;
  t91247 = t69861*t90395;
  t91248 = t91246 + t91247 + t90604;
  t91262 = t73552*t54692*t43010;
  t91270 = t91262 + t91154 + t91155;
  t91272 = t91226 + t88547;
  t91301 = -0.2*t64321*t54692*t43010;
  t91302 = -0.2*t64295*t90395;
  t91303 = -1.*t54692*t43010*t64295;
  t91304 = t64321*t90395;
  t91305 = t91303 + t91304;
  t91317 = -1.*t64321*t54692*t43010;
  t91318 = -1.*t64295*t90395;
  t91319 = t91317 + t91318;
  t91353 = 0.2000000000018*t73674*t54692*t43010;
  t91354 = -0.2000000000018*t73672*t90395;
  t91357 = 6.000000000054e-7*t73672*t90382;
  t91358 = -1.000000000009*t54692*t43010*t73672;
  t91361 = -1.*t73674*t90395;
  t91362 = 3.e-6*t73674*t90382;
  t91363 = t91358 + t91361 + t91362;
  t91392 = -3.e-6*t73674*t54692*t43010;
  t91394 = 3.e-6*t73672*t90395;
  t91395 = -9.e-12*t73672*t90382;
  t91396 = t91392 + t91394 + t91395;
  t91400 = t73674*t54692*t43010;
  t91401 = -1.*t73672*t90395;
  t91402 = 3.e-6*t73672*t90382;
  t91404 = t91400 + t91401 + t91402;
  t91308 = t64321*t54692*t43010;
  t91309 = t64295*t90395;
  t91310 = t91308 + t91309;
  t91469 = 3.e-6*t88753;
  t91470 = t91469 + t88765;
  t91466 = -3.e-6*t88753;
  t91467 = t91466 + t88765;
  t91483 = -9.e-12*t88764;
  t91477 = -3.e-6*t54692*t43010*t73672;
  t91478 = 3.e-6*t73676*t90395;
  t91479 = t73888*t90382;
  t91480 = t91477 + t91478 + t91479;
  t91490 = t54692*t43010*t73672;
  t91491 = t73674*t90395;
  t91493 = t91490 + t91491 + t90625;
  t91506 = t74028*t54692*t43010;
  t91507 = t91506 + t91401 + t91402;
  t91509 = t91469 + t88783;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=-64.6227864;
  p_output1[3]=-0.25506*(t49606 + 0.2*(-1.*t43010*t49201*t49600 - 1.*t50416*t57258) + t59800 + t62568 + 0.05*t63114) - 0.25506*(t63719 + t63753 + t63820 + 0.2*t63871 + 0.05*t64235) - 0.25506*(t63820 + t64313 + 0.2*(-1.*t43010*t49600*t64295 - 1.*t57258*t64321) + t64331 + 0.05*t68579) - 0.25506*(t69004 + 0.2*(t43010*t49600*t68934 - 1.*t57258*t69095 - 3.e-6*t62138*t69125) + t69218 + t69272 + 0.1*t69490 + 0.05*t69772) - 0.25506*(t69831 + t70035 + t70049 + 0.1*(-3.e-6*t43010*t49600*t69786 - 3.e-6*t57258*t70021 - 1.*t62138*t70120) + 0.2*t72929 + 0.05*t73629) - 0.25506*(t73673 + 0.2*(t43010*t49600*t73672 - 1.*t57258*t73674 - 3.e-6*t62138*t73676) + t73828 + t73860 + 0.1*(-3.e-6*t43010*t49600*t73672 - 3.e-6*t57258*t73676 - 1.*t62138*t73888) + 0.05*t74346) - 0.42183*(t49606 + t59800 + t62138*t74491 + t74531*t74539 + t63114*t74605 + 0.1*(-3.e-6*t63114*t74476 - 3.e-6*t74483*t74539 + t62138*t74634) + 0.2*(-3.e-6*t62138*t74483 - 1.*t63114*t74483 - 1.*t74539*t74850)) - 0.5087466*(t63719 + t63753 + t62138*t75410 + t63871*t75652 + t64235*t75788 + 0.1*(3.e-6*t64235*t74989 + 3.e-6*t63871*t75395 - 1.*t62138*t76351) + 0.2*(3.e-6*t62138*t75395 + t64235*t75395 + t63871*t80807)) - 0.5087466*(t64313 + t64331 + t62138*t83181 + t83417*t83522 + t68579*t87321 + 0.1*(3.e-6*t68579*t81207 + 3.e-6*t83164*t83522 - 1.*t62138*t87413) + 0.2*(-3.e-6*t62138*t83164 - 1.*t68579*t83164 - 1.*t83522*t87880)) - 0.5087466*(t69004 + t69218 + t69272 + t69490*t88301 + t88330*t88340 + t69772*t88377 + 0.2*(-1.*t69490*t88386 - 1.*t88340*t88403 - 1.*t69772*t88412) + 0.1*(t69772*t88386 + t69490*t88469 + t88340*t88487)) - 0.42183*(t69831 + t70035 + t70049 + t88559*t88566 + t72929*t88623 + t73629*t88658 + 0.2*(t88566*t88676 + t72929*t88688 + t73629*t88706) + 0.1*(-1.*t73629*t88676 - 1.*t88566*t88717 - 1.*t72929*t88727)) - 0.42183*(t73673 + t73828 + t73860 + t88793*t88801 + t88841*t88851 + t74346*t88875 + 0.2*(-1.*t88801*t88886 - 1.*t88851*t88889 - 1.*t74346*t88966) + 0.1*(-1.*t74346*t88886 - 1.*t88801*t89085 - 1.*t88851*t89089)) - 0.25506*(t89133 + t89134 + t89164 + 0.2*t89394 + 0.1*t89461 + 0.05*t89498) - 0.25506*(t62568 + t89516 + t89524 + 0.2*t89530 + 0.05*t89535) - 0.42183*(t89516 + t89524 + t62138*t89593 + t89530*t89622 + t89535*t89714 + 0.1*(-3.e-6*t89535*t89584 - 3.e-6*t89530*t89590 + t62138*t89719) + 0.2*(3.e-6*t62138*t89590 + t89535*t89590 + t89530*t89765)) - 0.5087466*(t89133 + t89134 + t89164 + t89394*t89882 + t89461*t89927 + 0.2*(t89394*t89930 + t89498*t89936 + t89461*t89942) + 0.1*(t89498*t89942 + t89461*t89951 + t89394*t89954) + t89498*t89981);
  p_output1[4]=-0.5087466*(t43010*t54692*t55157*t75410 + t90000 + t90004 + t75788*t90008 + t75652*t90015 + 0.1*(-1.*t43010*t54692*t55157*t76351 + 3.e-6*t74989*t90008 + 3.e-6*t75395*t90015) + 0.2*(3.e-6*t43010*t54692*t55157*t75395 + t75395*t90008 + t80807*t90015)) - 0.25506*(t90000 + t90004 + 0.05*t90008 + 0.2*t90015 + t90017) - 0.25506*(0.2*(-1.*t50922*t54692*t64295 + t43010*t50451*t54692*t64321) + t90017 + t90025 + t90027 + 0.05*t90033) - 0.25506*(0.2*(t43010*t50416*t50451*t54692 - 1.*t49201*t50922*t54692) + t90045 + t90046 + 0.05*t90060 + t90067) - 0.25506*(0.2*(t50922*t54692*t68934 + t43010*t50451*t54692*t69095 - 3.e-6*t43010*t54692*t55157*t69125) + t90072 + t90073 + t90074 + 0.1*t90080 + 0.05*t90091) - 0.42183*(t43010*t54692*t55157*t74491 + t90045 + t90046 + t74605*t90060 + t74531*t90098 + 0.1*(t43010*t54692*t55157*t74634 - 3.e-6*t74476*t90060 - 3.e-6*t74483*t90098) + 0.2*(-3.e-6*t43010*t54692*t55157*t74483 - 1.*t74483*t90060 - 1.*t74850*t90098)) - 0.25506*(0.1*(-3.e-6*t50922*t54692*t69786 + 3.e-6*t43010*t50451*t54692*t70021 - 1.*t43010*t54692*t55157*t70120) + t90117 + t90118 + t90119 + 0.2*t90131 + 0.05*t90139) - 0.25506*(0.2*(t50922*t54692*t73672 + t43010*t50451*t54692*t73674 - 3.e-6*t43010*t54692*t55157*t73676) + 0.1*(-3.e-6*t50922*t54692*t73672 + 3.e-6*t43010*t50451*t54692*t73676 - 1.*t43010*t54692*t55157*t73888) + t90162 + t90163 + t90165 + 0.05*t90179) - 0.5087466*(t43010*t54692*t55157*t83181 + t90025 + t90027 + t87321*t90033 + t83417*t90189 + 0.1*(-1.*t43010*t54692*t55157*t87413 + 3.e-6*t81207*t90033 + 3.e-6*t83164*t90189) + 0.2*(-3.e-6*t43010*t54692*t55157*t83164 - 1.*t83164*t90033 - 1.*t87880*t90189)) - 0.5087466*(t90072 + t90073 + t90074 + t88301*t90080 + t88377*t90091 + t88330*t90209 + 0.2*(-1.*t88386*t90080 - 1.*t88412*t90091 - 1.*t88403*t90209) + 0.1*(t88469*t90080 + t88386*t90091 + t88487*t90209)) - 0.42183*(t90117 + t90118 + t90119 + t88623*t90131 + t88658*t90139 + t88559*t90227 + 0.2*(t88688*t90131 + t88706*t90139 + t88676*t90227) + 0.1*(-1.*t88727*t90131 - 1.*t88676*t90139 - 1.*t88717*t90227)) - 0.42183*(t90162 + t90163 + t90165 + t88875*t90179 + t88793*t90249 + t88841*t90256 + 0.2*(-1.*t88966*t90179 - 1.*t88886*t90249 - 1.*t88889*t90256) + 0.1*(-1.*t88886*t90179 - 1.*t89085*t90249 - 1.*t89089*t90256)) - 0.25506*(t90281 + t90282 + t90283 + 0.2*t90288 + 0.1*t90294 + 0.05*t90299) - 0.5087466*(t90281 + t90282 + t90283 + t89882*t90288 + t89927*t90294 + t89981*t90299 + 0.2*(t89930*t90288 + t89942*t90294 + t89936*t90299) + 0.1*(t89954*t90288 + t89951*t90294 + t89942*t90299)) - 0.25506*(t90067 + t90304 + t90305 + 0.05*t90312 + 0.2*t90317) - 0.42183*(t43010*t54692*t55157*t89593 + t90304 + t90305 + t89714*t90312 + t89622*t90317 + 0.1*(t43010*t54692*t55157*t89719 - 3.e-6*t89584*t90312 - 3.e-6*t89590*t90317) + 0.2*(3.e-6*t43010*t54692*t55157*t89590 + t89590*t90312 + t89765*t90317));
  p_output1[5]=-0.25506*(t90376 + 0.05*t49201*t90382 - 0.2*t50416*t90382 + t90385) - 0.42183*(t74491*t90372 + t50416*t74531*t90382 + t49201*t74605*t90382 + 0.1*(t74634*t90372 - 3.e-6*t49201*t74476*t90382 - 3.e-6*t50416*t74483*t90382) + 0.2*(-3.e-6*t74483*t90372 - 1.*t49201*t74483*t90382 - 1.*t50416*t74850*t90382) + t90385) - 0.5087466*(t75410*t90372 + t63726*t75652*t90382 + t63661*t75788*t90382 + 0.1*(-1.*t76351*t90372 + 3.e-6*t63661*t74989*t90382 + 3.e-6*t63726*t75395*t90382) + 0.2*(3.e-6*t75395*t90372 + t63661*t75395*t90382 + t63726*t80807*t90382) + t90397) - 0.25506*(0.05*t63661*t90382 + 0.2*t63726*t90382 + t90396 + t90397) - 0.5087466*(t83181*t90372 + t64321*t83417*t90382 + t64295*t87321*t90382 + 0.1*(-1.*t87413*t90372 + 3.e-6*t64295*t81207*t90382 + 3.e-6*t64321*t83164*t90382) + 0.2*(-3.e-6*t83164*t90372 - 1.*t64295*t83164*t90382 - 1.*t64321*t87880*t90382) + t90403) - 0.25506*(0.05*t64295*t90382 - 0.2*t64321*t90382 + t90396 + t90403) - 0.25506*(0.2*(-3.e-6*t69125*t90372 - 1.*t69095*t90382) + t90408 + t90409 + 0.1*t90412 + 0.05*t90434) - 0.25506*(0.1*(-1.*t70120*t90372 - 3.e-6*t70021*t90382) + t90477 + t90479 + 0.2*t90490 + 0.05*t90502) - 0.25506*(0.2*(-3.e-6*t73676*t90372 - 1.*t73674*t90382) + 0.1*(-1.*t73888*t90372 - 3.e-6*t73676*t90382) + t90533 + t90534 + 0.05*t90553) - 0.5087466*(t90408 + t90409 + t88301*t90412 + t88377*t90434 + t88330*t90587 + 0.2*(-1.*t88386*t90412 - 1.*t88412*t90434 - 1.*t88403*t90587) + 0.1*(t88469*t90412 + t88386*t90434 + t88487*t90587)) - 0.42183*(t90477 + t90479 + t88623*t90490 + t88658*t90502 + t88559*t90605 + 0.2*(t88688*t90490 + t88706*t90502 + t88676*t90605) + 0.1*(-1.*t88727*t90490 - 1.*t88676*t90502 - 1.*t88717*t90605)) - 0.42183*(t90533 + t90534 + t88875*t90553 + t88793*t90628 + t88841*t90637 + 0.2*(-1.*t88966*t90553 - 1.*t88886*t90628 - 1.*t88889*t90637) + 0.1*(-1.*t88886*t90553 - 1.*t89085*t90628 - 1.*t89089*t90637)) - 0.25506*(t90660 + t90661 + 0.1*t90669 + 0.2*t90680 + 0.05*t90686) - 0.5087466*(t90660 + t90661 + t89927*t90669 + t89882*t90680 + t89981*t90686 + 0.2*(t89942*t90669 + t89930*t90680 + t89936*t90686) + 0.1*(t89951*t90669 + t89954*t90680 + t89942*t90686)) - 0.25506*(t90376 + 0.2*t89507*t90382 + 0.05*t89523*t90382 + t90693) - 0.42183*(t89593*t90372 + t89507*t89622*t90382 + t89523*t89714*t90382 + 0.1*(t89719*t90372 - 3.e-6*t89523*t89584*t90382 - 3.e-6*t89507*t89590*t90382) + 0.2*(3.e-6*t89590*t90372 + t89523*t89590*t90382 + t89507*t89765*t90382) + t90693);
  p_output1[6]=-0.25506*(t90736 + t90737 + t90738 + 0.05*t90745 + 0.1*t90751 + 0.2*t90757) - 0.5087466*(t90736 + t90737 + t90738 + t89981*t90745 + t89927*t90751 + t89882*t90757 + 0.2*(t89936*t90745 + t89942*t90751 + t89930*t90757) + 0.1*(t89942*t90745 + t89951*t90751 + t89954*t90757));
  p_output1[7]=-0.25506*(t90778 + t90779 + 0.05*t90783 + 0.2*t90787) - 0.42183*(t90778 + t90779 + t89714*t90783 + t89622*t90787 + 0.1*(-3.e-6*t89584*t90783 - 3.e-6*t89590*t90787) + 0.2*(t89590*t90783 + t89765*t90787));
  p_output1[8]=-0.5087466*(t90812*(3.e-7 - 1.62e-17*t89835 + 0.2*t90814 + 0.1*t90817) + t90823*(9.e-13 + 0.1000000000009*t89835 - 9.e-7*t90814 + 0.2*(t89800 + t90825)) + (9.e-13 + 0.2000000000018*t89835 - 9.e-7*t90817 + 0.1*(t89801 + t90825))*t90833 + 0.2*((t89801 + 9.e-12*t89835)*t90823 - 1.000000000009*t89835*t90833 + t90812*t90843) + 0.1*(-1.8e-11*t89835*t90812 + (t89873 + t90813)*t90833 + t90823*t90843));
  p_output1[9]=-0.42183*((-4.e-7 - 6.00000000009e-7*t89568 + 3.000000000027e-7*t89590)*t90382 + (0.1000000000009*t89568 + 0.2000000000048*t89590)*t90783 + (1.2e-12 - 0.200000000003*t89568 + t89613)*t90874 + 0.2*(3.e-6*t89568*t90382 - 1.000000000009*t89590*t90783 + t89568*t90874) + 0.1*(-9.e-12*t89590*t90382 - 3.e-6*t89568*t90783 - 3.e-6*t89590*t90874));
  p_output1[10]=-0.25506*(0.2*(-1.*t43010*t54692*t69095 - 3.e-6*t68934*t90382 + t68934*t90395) + t90888 + t90889 + t90890 + 0.05*t90894 + 0.1*t90904) - 0.5087466*(t90888 + t90889 + t90890 + t88377*t90894 + t88301*t90904 + t88330*t90915 + 0.2*(-1.*t88412*t90894 - 1.*t88386*t90904 - 1.*t88403*t90915) + 0.1*(t88386*t90894 + t88469*t90904 + t88487*t90915));
  p_output1[11]=-0.25506*(t90937 + t90939 + 0.05*t90944 + 0.2*t90953) - 0.42183*(t90937 + t90939 + t74605*t90944 + t74531*t90963 + 0.1*(-3.e-6*t74476*t90944 - 3.e-6*t74483*t90963) + 0.2*(-1.*t74483*t90944 - 1.*t74850*t90963));
  p_output1[12]=-0.5087466*((1.e-7 + 5.4e-18*t88267 - 0.200000000003*t90983 + 0.100000000003*t90987)*t90999 + (3.e-13 - 0.2000000000048*t88267 + 3.e-7*t90987 + 0.100000000003*(t88224 + t91003))*t91011 + (3.e-13 + 0.1000000000039*t88267 + 3.e-7*t90983 - 0.200000000003*(t88151 + t91003))*t91024 + 0.2*(1.000000000009*t88267*t91011 - 1.*(t88224 + 9.e-12*t88267)*t91024 - 1.*t90999*t91026) + 0.1*(-1.8e-11*t88267*t90999 + (t88292 + t90982)*t91011 + t91024*t91026));
  p_output1[13]=-0.42183*((4.e-7 + 6.00000000009e-7*t74378 + 3.000000000027e-7*t74483)*t90382 + (0.1000000000009*t74378 - 0.2000000000048*t74483)*t90944 + (-1.2e-12 + 0.200000000003*t74378 + t74517)*t90953 + 0.2*(-3.e-6*t74378*t90382 + 1.000000000009*t74483*t90944 - 1.*t74378*t90953) + 0.1*(-9.e-12*t74483*t90382 - 3.e-6*t74378*t90944 - 3.e-6*t74483*t90953));
  p_output1[14]=-0.25506*(t91094 + t91096 + 0.05*t91103 + 0.2*t91110) - 0.5087466*(t91094 + t91096 + t75788*t91103 + t75652*t91110 + 0.1*(3.e-6*t74989*t91103 + 3.e-6*t75395*t91110) + 0.2*(t75395*t91103 + t80807*t91110));
  p_output1[15]=-0.25506*(0.1*(3.e-6*t43010*t54692*t69861 + 9.e-12*t69786*t90382 - 3.e-6*t69786*t90395) + t91138 + t91139 + t91140 + 0.05*t91146 + 0.2*t91156) - 0.42183*(t91138 + t91139 + t91140 + t88658*t91146 + t88623*t91156 + t88559*t91165 + 0.2*(t88706*t91146 + t88688*t91156 + t88676*t91165) + 0.1*(-1.*t88676*t91146 - 1.*t88727*t91156 - 1.*t88717*t91165));
  p_output1[16]=-0.5087466*((-4.e-7 - 6.00000000009e-7*t74944 + 3.000000000027e-7*t75395)*t90382 + (0.1000000000009*t74944 + 0.2000000000048*t75395)*t91103 + (1.2e-12 - 0.200000000003*t74944 + t75617)*t91200 + 0.2*(3.e-6*t74944*t90382 - 1.000000000009*t75395*t91103 + t74944*t91200) + 0.1*(9.e-12*t75395*t90382 + 3.e-6*t74944*t91103 + 3.e-6*t75395*t91200));
  p_output1[17]=-0.42183*((3.e-7 - 1.62e-17*t88517 + 0.2*t91221 + 0.1*t91227)*t91236 + (9.e-13 + 0.2000000000018*t88517 - 9.e-7*t91227 + 0.1*(t88506 + t91241))*t91248 + (9.e-13 + 0.1000000000009*t88517 - 9.e-7*t91221 + 0.2*(t88504 + t91241))*t91270 + 0.2*(-1.000000000009*t88517*t91248 + (t88506 + 9.e-12*t88517)*t91270 + t91236*t91272) + 0.1*(1.8e-11*t88517*t91236 - 1.*(t88547 + t91218)*t91248 - 1.*t91270*t91272));
  p_output1[18]=-0.25506*(t91301 + t91302 + 0.05*t91305 + 0.2*t91310) - 0.5087466*(t91301 + t91302 + t87321*t91305 + t83417*t91319 + 0.1*(3.e-6*t81207*t91305 + 3.e-6*t83164*t91319) + 0.2*(-1.*t83164*t91305 - 1.*t87880*t91319));
  p_output1[19]=-0.25506*(0.1*(3.e-6*t43010*t54692*t73674 + 9.e-12*t73672*t90382 - 3.e-6*t73672*t90395) + 0.2*(-1.*t43010*t54692*t73674 - 3.e-6*t73672*t90382 + t73672*t90395) + t91353 + t91354 + t91357 + 0.05*t91363) - 0.42183*(t91353 + t91354 + t91357 + t88875*t91363 + t88793*t91396 + t88841*t91404 + 0.2*(-1.*t88966*t91363 - 1.*t88886*t91396 - 1.*t88889*t91404) + 0.1*(-1.*t88886*t91363 - 1.*t89085*t91396 - 1.*t89089*t91404));
  p_output1[20]=-0.5087466*((4.e-7 + 6.00000000009e-7*t81198 + 3.000000000027e-7*t83164)*t90382 + (0.1000000000009*t81198 - 0.2000000000048*t83164)*t91305 + (-1.2e-12 + 0.200000000003*t81198 + t83292)*t91310 + 0.2*(-3.e-6*t81198*t90382 + 1.000000000009*t83164*t91305 - 1.*t81198*t91310) + 0.1*(9.e-12*t83164*t90382 + 3.e-6*t81198*t91305 + 3.e-6*t83164*t91310));
  p_output1[21]=-0.42183*((1.e-7 + 5.4e-18*t88764 - 0.200000000003*t91467 + 0.100000000003*t91470)*t91480 + (3.e-13 - 0.2000000000048*t88764 + 3.e-7*t91470 + 0.100000000003*(t88755 + t91483))*t91493 + (3.e-13 + 0.1000000000039*t88764 + 3.e-7*t91467 - 0.200000000003*(t88753 + t91483))*t91507 + 0.2*(1.000000000009*t88764*t91493 - 1.*(t88755 + 9.e-12*t88764)*t91507 - 1.*t91480*t91509) + 0.1*(1.8e-11*t88764*t91480 - 1.*(t88783 + t91466)*t91493 - 1.*t91507*t91509));
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ge_vec_minitaur.hh"

namespace FrontStance
{

void Ge_vec_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
