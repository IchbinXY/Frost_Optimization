/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 22:30:51 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1270;
  double t1577;
  double t1580;
  double t1778;
  double t2265;
  double t2275;
  double t2292;
  double t2128;
  double t284;
  double t2138;
  double t2122;
  double t2271;
  double t2293;
  double t2306;
  double t2311;
  double t2729;
  double t2774;
  double t2780;
  double t2781;
  double t2782;
  double t2366;
  double t2374;
  double t2573;
  double t2686;
  double t2700;
  double t2717;
  double t2816;
  double t1991;
  double t2097;
  double t2118;
  double t2125;
  double t2165;
  double t2246;
  double t2785;
  double t2869;
  double t2975;
  double t2863;
  double t3105;
  double t3140;
  double t3151;
  double t3044;
  double t3065;
  double t3070;
  double t3126;
  double t3193;
  double t3209;
  double t3394;
  double t3357;
  double t3361;
  double t3365;
  double t3395;
  double t3092;
  double t3241;
  double t3124;
  double t3351;
  double t3352;
  double t3413;
  double t3370;
  double t3106;
  double t3127;
  double t3129;
  double t3159;
  double t3160;
  double t3221;
  double t3225;
  double t3261;
  double t3299;
  double t3305;
  double t3489;
  double t3497;
  double t3499;
  double t3526;
  double t3372;
  double t3547;
  double t3559;
  double t3560;
  double t3561;
  double t3399;
  double t3400;
  double t3565;
  double t3566;
  double t3567;
  double t3570;
  double t3444;
  double t3446;
  double t3447;
  double t3448;
  double t3450;
  double t3455;
  double t3653;
  double t3654;
  double t3655;
  double t3656;
  double t3644;
  double t3648;
  double t3660;
  double t3661;
  double t3662;
  double t3663;
  double t2300;
  double t2313;
  double t2321;
  double t2347;
  double t2725;
  double t2730;
  double t2763;
  double t2771;
  double t2772;
  double t2784;
  double t2786;
  double t2805;
  double t2812;
  double t2813;
  double t3732;
  double t3743;
  double t3728;
  double t3729;
  double t3730;
  double t3713;
  double t3714;
  double t3721;
  double t2977;
  double t2989;
  double t3467;
  double t3475;
  double t3775;
  double t3777;
  double t3784;
  double t2999;
  double t3016;
  double t3189;
  double t3350;
  double t3353;
  double t3393;
  double t3396;
  double t3397;
  double t3398;
  double t3404;
  double t3414;
  double t3422;
  double t3433;
  double t3434;
  double t3451;
  double t3453;
  double t3454;
  double t3456;
  double t3457;
  double t3458;
  double t3459;
  double t3811;
  double t3812;
  double t3813;
  double t3817;
  double t3818;
  double t3819;
  double t3873;
  double t3875;
  double t3876;
  double t3862;
  double t3863;
  double t3866;
  double t3867;
  double t3869;
  double t3870;
  double t3871;
  double t3480;
  double t3994;
  double t3996;
  double t3998;
  double t4004;
  double t4008;
  double t4009;
  double t3808;
  double t3809;
  double t3810;
  double t3814;
  double t3815;
  double t3816;
  double t3820;
  double t3821;
  double t3822;
  double t3823;
  double t3831;
  double t3832;
  double t3833;
  double t3834;
  double t3835;
  double t3836;
  double t3837;
  double t3838;
  double t3839;
  double t3844;
  double t3849;
  double t3636;
  double t3637;
  double t3641;
  double t3649;
  double t3657;
  double t3658;
  double t3659;
  double t3664;
  double t3665;
  double t3666;
  double t3669;
  double t3687;
  double t3688;
  double t3693;
  double t3700;
  double t3701;
  double t3702;
  double t3703;
  double t3704;
  double t3705;
  double t3706;
  double t3707;
  double t3868;
  double t3872;
  double t3877;
  double t3878;
  double t3881;
  double t3882;
  double t3883;
  double t3884;
  double t3886;
  double t3889;
  double t3897;
  double t3898;
  double t3899;
  double t3906;
  double t3912;
  double t3945;
  double t3965;
  double t3972;
  double t3976;
  double t3724;
  double t3731;
  double t3750;
  double t3757;
  double t3758;
  double t3759;
  double t3760;
  double t3761;
  double t3762;
  double t3763;
  double t3765;
  double t3766;
  double t3767;
  double t3768;
  double t3769;
  double t3770;
  double t3771;
  double t3772;
  double t3773;
  double t2350;
  double t2773;
  double t2815;
  double t2868;
  double t2940;
  double t2942;
  double t2965;
  double t2971;
  double t2979;
  double t2981;
  double t2983;
  double t2985;
  double t2988;
  double t2990;
  double t2991;
  double t2992;
  double t2995;
  double t2996;
  double t2997;
  double t4076;
  double t4077;
  double t4085;
  double t4086;
  double t4087;
  double t4088;
  double t4095;
  double t4097;
  double t4098;
  double t4079;
  double t4099;
  double t4102;
  double t4210;
  double t4208;
  double t4209;
  double t4211;
  double t4212;
  double t4214;
  double t4215;
  double t4216;
  double t4221;
  double t4222;
  double t4223;
  double t4224;
  double t4213;
  double t4217;
  double t4218;
  double t4219;
  double t4226;
  double t4227;
  double t4228;
  double t4229;
  double t4261;
  double t4262;
  double t4263;
  double t4271;
  double t4272;
  double t4275;
  double t4279;
  double t4280;
  double t4283;
  double t4284;
  double t4286;
  double t4311;
  double t4313;
  double t4314;
  double t4317;
  double t4318;
  double t4319;
  double t4324;
  double t4325;
  double t4327;
  double t4328;
  double t4333;
  double t4345;
  double t4346;
  double t4348;
  double t4353;
  double t4354;
  double t4355;
  double t4370;
  double t4392;
  double t4393;
  double t4394;
  double t4395;
  double t4397;
  double t4398;
  double t4400;
  double t4401;
  double t4404;
  double t4405;
  double t4406;
  double t4407;
  double t4431;
  double t4432;
  double t4433;
  double t4434;
  double t4428;
  double t4429;
  double t4438;
  double t4439;
  double t4440;
  double t4441;
  double t4489;
  double t4490;
  double t4491;
  double t4492;
  double t4481;
  double t4484;
  double t4485;
  double t4486;
  double t4463;
  double t4467;
  double t4468;
  double t4474;
  double t4516;
  double t4517;
  double t4518;
  double t4521;
  double t4522;
  double t4528;
  double t4530;
  double t4531;
  double t4323;
  double t4592;
  double t4593;
  double t4597;
  double t4599;
  double t4600;
  double t4602;
  double t4613;
  double t4616;
  double t4617;
  double t4389;
  double t4390;
  double t4391;
  double t4396;
  double t4402;
  double t4403;
  double t4408;
  double t4409;
  double t4410;
  double t4411;
  double t4412;
  double t4413;
  double t4414;
  double t4415;
  double t4416;
  double t4417;
  double t4418;
  double t4419;
  double t4420;
  double t4421;
  double t4422;
  double t4423;
  double t4677;
  double t4678;
  double t4679;
  double t4681;
  double t4674;
  double t4675;
  double t4685;
  double t4686;
  double t4687;
  double t4689;
  double t4729;
  double t4730;
  double t4731;
  double t4749;
  double t4750;
  double t4738;
  double t4739;
  double t4743;
  double t4728;
  double t4734;
  double t4735;
  double t4514;
  double t4515;
  double t4519;
  double t4523;
  double t4527;
  double t4532;
  double t4538;
  double t4540;
  double t4545;
  double t4546;
  double t4547;
  double t4553;
  double t4564;
  double t4565;
  double t4568;
  double t4569;
  double t4571;
  double t4573;
  double t4574;
  double t4577;
  double t4584;
  double t4267;
  double t4268;
  double t4278;
  double t4281;
  double t4282;
  double t4287;
  double t4288;
  double t4289;
  double t4290;
  double t4291;
  double t4292;
  double t4293;
  double t4294;
  double t4295;
  double t4296;
  double t4298;
  double t4299;
  double t4300;
  double t4301;
  double t4307;
  double t4308;
  double t4316;
  double t4322;
  double t4778;
  double t4784;
  double t4788;
  double t4827;
  double t4830;
  double t4831;
  double t4835;
  double t4836;
  double t4837;
  double t4869;
  double t4870;
  double t4871;
  double t4907;
  double t4908;
  double t4909;
  double t4868;
  double t4872;
  double t4873;
  double t4874;
  double t4880;
  double t4885;
  double t4889;
  double t4890;
  double t4946;
  double t4948;
  double t4949;
  double t4950;
  double t4956;
  double t4957;
  double t4958;
  double t4960;
  double t4668;
  double t4670;
  double t4671;
  double t4676;
  double t4682;
  double t4683;
  double t4684;
  double t4696;
  double t4705;
  double t4706;
  double t4708;
  double t4709;
  double t4712;
  double t4713;
  double t4715;
  double t4716;
  double t4717;
  double t4718;
  double t4719;
  double t4720;
  double t4722;
  double t4725;
  double t4425;
  double t4426;
  double t4427;
  double t4430;
  double t4435;
  double t4436;
  double t4437;
  double t4442;
  double t4443;
  double t4444;
  double t4445;
  double t4446;
  double t4447;
  double t4448;
  double t4449;
  double t4450;
  double t4451;
  double t4452;
  double t4453;
  double t4455;
  double t4456;
  double t4457;
  double t4824;
  double t4825;
  double t4826;
  double t4832;
  double t4833;
  double t4834;
  double t4840;
  double t4841;
  double t4842;
  double t4843;
  double t4844;
  double t4853;
  double t4857;
  double t4858;
  double t4859;
  double t4860;
  double t4861;
  double t4862;
  double t4863;
  double t4864;
  double t4865;
  double t4479;
  double t4487;
  double t4493;
  double t4494;
  double t4495;
  double t4496;
  double t4497;
  double t4498;
  double t4499;
  double t4500;
  double t4501;
  double t4502;
  double t4503;
  double t4505;
  double t4506;
  double t4507;
  double t4509;
  double t4510;
  double t4511;
  double t4220;
  double t4225;
  double t4230;
  double t4231;
  double t4232;
  double t4233;
  double t4234;
  double t4235;
  double t4236;
  double t4237;
  double t4238;
  double t4239;
  double t4243;
  double t4244;
  double t4245;
  double t4246;
  double t4250;
  double t4255;
  double t4256;
  double t4736;
  double t4747;
  double t4752;
  double t4754;
  double t4755;
  double t4756;
  double t4757;
  double t4758;
  double t4759;
  double t4760;
  double t4761;
  double t4762;
  double t4763;
  double t4764;
  double t4765;
  double t4766;
  double t4768;
  double t4769;
  double t4772;
  double t4875;
  double t4899;
  double t4910;
  double t4913;
  double t4914;
  double t4915;
  double t4916;
  double t4918;
  double t4919;
  double t4920;
  double t4921;
  double t4922;
  double t4924;
  double t4925;
  double t4927;
  double t4928;
  double t4934;
  double t4938;
  double t4941;
  double t4078;
  double t4080;
  double t4081;
  double t4082;
  double t4083;
  double t4089;
  double t4090;
  double t4091;
  double t4092;
  double t5001;
  double t5002;
  double t5003;
  double t5004;
  double t4995;
  double t4996;
  double t5008;
  double t5009;
  double t5010;
  double t4100;
  double t4110;
  double t4111;
  double t4112;
  double t4113;
  double t4117;
  double t5041;
  double t5222;
  double t5223;
  double t5224;
  double t5225;
  double t5226;
  double t5227;
  double t5228;
  double t5229;
  double t5230;
  double t5231;
  double t5232;
  double t5233;
  double t5234;
  double t5235;
  double t5236;
  double t5237;
  double t5238;
  double t5239;
  double t5170;
  double t5171;
  double t5172;
  double t5173;
  double t5174;
  double t5175;
  double t5176;
  double t5177;
  double t5178;
  double t5179;
  double t5180;
  double t5181;
  double t5182;
  double t5183;
  double t5185;
  double t5186;
  double t5187;
  double t5188;
  double t5189;
  double t5190;
  double t5078;
  double t5079;
  double t5080;
  double t5082;
  double t5083;
  double t5084;
  double t5086;
  double t5088;
  double t5110;
  double t5111;
  double t5112;
  double t5114;
  double t5115;
  double t5116;
  double t5118;
  double t5136;
  double t5141;
  double t5143;
  double t5144;
  double t5145;
  double t5146;
  double t5147;
  double t5148;
  double t5149;
  double t5150;
  double t5151;
  double t5152;
  double t5153;
  double t5154;
  double t5155;
  double t5156;
  double t5157;
  double t5158;
  double t5159;
  double t5160;
  double t5161;
  double t5162;
  double t5163;
  double t5164;
  double t5165;
  double t5166;
  double t5167;
  double t5168;
  double t5169;
  double t5194;
  double t5195;
  double t5196;
  double t5199;
  double t5200;
  double t5201;
  double t5202;
  double t5203;
  double t5204;
  double t5205;
  double t5206;
  double t5207;
  double t5208;
  double t5209;
  double t5211;
  double t5212;
  double t5213;
  double t5217;
  double t5218;
  double t5219;
  double t5220;
  double t5221;
  double t5254;
  double t5255;
  double t5256;
  double t5257;
  double t5247;
  double t5248;
  double t5251;
  double t5252;
  double t5259;
  double t5260;
  double t5261;
  double t5262;
  double t5285;
  double t5286;
  double t5288;
  double t5289;
  double t5292;
  double t5294;
  double t5295;
  double t5321;
  double t5322;
  double t5323;
  double t5325;
  double t5326;
  double t5327;
  double t5330;
  double t5331;
  double t5332;
  double t5360;
  double t5361;
  double t5363;
  double t5364;
  double t5356;
  double t5357;
  double t5368;
  double t5369;
  double t5370;
  double t5397;
  double t5400;
  double t5406;
  double t5428;
  double t5429;
  double t5425;
  double t5426;
  double t5396;
  double t5422;
  double t5423;
  double t5282;
  double t5284;
  double t5287;
  double t5290;
  double t5291;
  double t5296;
  double t5297;
  double t5300;
  double t5301;
  double t5302;
  double t5303;
  double t5304;
  double t5305;
  double t5306;
  double t5307;
  double t5308;
  double t5309;
  double t5310;
  double t5311;
  double t5313;
  double t5317;
  double t5456;
  double t5458;
  double t5462;
  double t5667;
  double t5668;
  double t5669;
  double t5673;
  double t5674;
  double t5675;
  double t5706;
  double t5707;
  double t5708;
  double t5694;
  double t5697;
  double t5699;
  double t5701;
  double t5702;
  double t5703;
  double t5704;
  double t5732;
  double t5734;
  double t5735;
  double t5736;
  double t5739;
  double t5740;
  double t5741;
  double t5742;
  double t5353;
  double t5354;
  double t5355;
  double t5358;
  double t5365;
  double t5366;
  double t5367;
  double t5371;
  double t5372;
  double t5373;
  double t5374;
  double t5375;
  double t5376;
  double t5377;
  double t5378;
  double t5379;
  double t5380;
  double t5381;
  double t5382;
  double t5389;
  double t5390;
  double t5391;
  double t5664;
  double t5665;
  double t5666;
  double t5670;
  double t5671;
  double t5672;
  double t5676;
  double t5677;
  double t5678;
  double t5679;
  double t5680;
  double t5681;
  double t5682;
  double t5683;
  double t5684;
  double t5685;
  double t5686;
  double t5687;
  double t5688;
  double t5689;
  double t5690;
  double t5253;
  double t5258;
  double t5263;
  double t5264;
  double t5265;
  double t5267;
  double t5268;
  double t5269;
  double t5270;
  double t5271;
  double t5272;
  double t5273;
  double t5274;
  double t5275;
  double t5276;
  double t5277;
  double t5278;
  double t5279;
  double t5280;
  double t5424;
  double t5427;
  double t5430;
  double t5431;
  double t5433;
  double t5434;
  double t5435;
  double t5436;
  double t5438;
  double t5439;
  double t5440;
  double t5442;
  double t5443;
  double t5445;
  double t5446;
  double t5447;
  double t5448;
  double t5450;
  double t5452;
  double t5700;
  double t5705;
  double t5709;
  double t5710;
  double t5711;
  double t5712;
  double t5713;
  double t5714;
  double t5715;
  double t5716;
  double t5717;
  double t5718;
  double t5719;
  double t5720;
  double t5721;
  double t5722;
  double t5723;
  double t5725;
  double t5726;
  double t5769;
  double t5770;
  double t5772;
  double t5773;
  double t5775;
  double t5778;
  double t5779;
  double t5780;
  double t5782;
  t1270 = Cos(var1[6]);
  t1577 = -1.*t1270;
  t1580 = 1. + t1577;
  t1778 = Sin(var1[4]);
  t2265 = Cos(var1[8]);
  t2275 = Sin(var1[8]);
  t2292 = -3.e-6*t2275;
  t2128 = Cos(var1[4]);
  t284 = Cos(var1[5]);
  t2138 = Sin(var1[6]);
  t2122 = Sin(var1[5]);
  t2271 = -3.e-6*t2265;
  t2293 = t2271 + t2292;
  t2306 = 3.e-6*t2265;
  t2311 = t2306 + t2292;
  t2729 = -9.e-12*t2275;
  t2774 = -1.*t284*t1270*t1778;
  t2780 = 3.e-6*t1580*t1778*t2122;
  t2781 = t2128*t2138;
  t2782 = t2774 + t2780 + t2781;
  t2366 = -1.000000000009*t1580;
  t2374 = 1. + t2366;
  t2573 = t2128*t2374;
  t2686 = t284*t1778*t2138;
  t2700 = 3.e-6*t1778*t2122*t2138;
  t2717 = t2573 + t2686 + t2700;
  t2816 = 3.e-6*t2275;
  t1991 = -3.e-6*t284*t1580*t1778;
  t2097 = -9.e-12*t1580;
  t2118 = 1. + t2097;
  t2125 = t2118*t1778*t2122;
  t2165 = -3.e-6*t2128*t2138;
  t2246 = t1991 + t2125 + t2165;
  t2785 = -1.*t2265;
  t2869 = t2306 + t2816;
  t2975 = 9.e-12*t2275;
  t2863 = t2271 + t2816;
  t3105 = 1. + t2785;
  t3140 = -3.e-6*t3105;
  t3151 = t3140 + t2816;
  t3044 = 3.e-6*t284*t1580*t1778;
  t3065 = t1270*t1778*t2122;
  t3070 = t3044 + t3065;
  t3126 = -1.*t2275;
  t3193 = t284*t2118*t1778;
  t3209 = t3193 + t2780;
  t3394 = 3.e-6*t3105;
  t3357 = 3.e-6*t284*t1778*t2138;
  t3361 = -1.*t1778*t2122*t2138;
  t3365 = t3357 + t3361;
  t3395 = t3394 + t2816;
  t3092 = 9.e-13*var1[8];
  t3241 = t3140 + t2292;
  t3124 = -9.e-12*t3105;
  t3351 = -1.000000000009*t3105;
  t3352 = 1. + t3351;
  t3413 = t3394 + t2292;
  t3370 = 9.e-12*t3105;
  t3106 = 0.2000000000018*t3105;
  t3127 = t3124 + t3126;
  t3129 = 0.1*t3127;
  t3159 = -9.e-7*t3151;
  t3160 = t3092 + t3106 + t3129 + t3159;
  t3221 = 3.e-7*var1[8];
  t3225 = -1.62e-17*t3105;
  t3261 = 0.2*t3241;
  t3299 = 0.1*t3151;
  t3305 = t3221 + t3225 + t3261 + t3299;
  t3489 = -1.*t2128*t284*t1270;
  t3497 = 3.e-6*t2128*t1580*t2122;
  t3499 = -1.*t1778*t2138;
  t3526 = t3489 + t3497 + t3499;
  t3372 = t3370 + t3126;
  t3547 = -3.e-6*t2128*t284*t1580;
  t3559 = t2128*t2118*t2122;
  t3560 = 3.e-6*t1778*t2138;
  t3561 = t3547 + t3559 + t3560;
  t3399 = -1.8e-11*t3105;
  t3400 = 1. + t3399;
  t3565 = -1.*t2374*t1778;
  t3566 = t2128*t284*t2138;
  t3567 = 3.e-6*t2128*t2122*t2138;
  t3570 = t3565 + t3566 + t3567;
  t3444 = 0.1000000000009*t3105;
  t3446 = -9.e-7*t3241;
  t3447 = t3124 + t2275;
  t3448 = 0.2*t3447;
  t3450 = t3092 + t3444 + t3446 + t3448;
  t3455 = t3370 + t2275;
  t3653 = -3.e-6*t2128*t1270;
  t3654 = -3.e-6*t284*t1778*t2138;
  t3655 = -9.e-12*t1778*t2122*t2138;
  t3656 = t3653 + t3654 + t3655;
  t3644 = t2128*t1270;
  t3648 = t3644 + t2686 + t2700;
  t3660 = t284*t1270*t1778;
  t3661 = 3.e-6*t1270*t1778*t2122;
  t3662 = -1.000000000009*t2128*t2138;
  t3663 = t3660 + t3661 + t3662;
  t2300 = 0.2*t2293;
  t2313 = 0.1*t2311;
  t2321 = -1.62e-17*t2275;
  t2347 = 3.e-7 + t2300 + t2313 + t2321;
  t2725 = -9.e-7*t2293;
  t2730 = t2265 + t2729;
  t2763 = 0.2*t2730;
  t2771 = 0.1000000000009*t2275;
  t2772 = 9.e-13 + t2725 + t2763 + t2771;
  t2784 = -9.e-7*t2311;
  t2786 = t2785 + t2729;
  t2805 = 0.1*t2786;
  t2812 = 0.2000000000018*t2275;
  t2813 = 9.e-13 + t2784 + t2805 + t2812;
  t3732 = -1.*t2128*t1270*t2122;
  t3743 = t3547 + t3732;
  t3728 = -3.e-6*t2128*t284*t2138;
  t3729 = t2128*t2122*t2138;
  t3730 = t3728 + t3729;
  t3713 = -1.*t2128*t284*t2118;
  t3714 = -3.e-6*t2128*t1580*t2122;
  t3721 = t3713 + t3714;
  t2977 = t2785 + t2975;
  t2989 = t2265 + t2975;
  t3467 = -0.2000000000018*t2128*t284*t1580;
  t3475 = -6.000000000054e-7*t2128*t1580*t2122;
  t3775 = t3489 + t3497;
  t3777 = t3547 + t3559;
  t3784 = t3566 + t3567;
  t2999 = -6.000000000054e-7*t284*t1580*t1778;
  t3016 = 0.2000000000018*t1580*t1778*t2122;
  t3189 = t3070*t3160;
  t3350 = t3209*t3305;
  t3353 = t3352*t3070;
  t3393 = t3365*t3372;
  t3396 = t3209*t3395;
  t3397 = t3353 + t3393 + t3396;
  t3398 = 0.2*t3397;
  t3404 = t3400*t3209;
  t3414 = t3070*t3413;
  t3422 = t3365*t3395;
  t3433 = t3404 + t3414 + t3422;
  t3434 = 0.100001*t3433;
  t3451 = t3365*t3450;
  t3453 = t3352*t3365;
  t3454 = t3209*t3413;
  t3456 = t3070*t3455;
  t3457 = t3453 + t3454 + t3456;
  t3458 = -0.3*t3457;
  t3459 = t2999 + t3016 + t3189 + t3350 + t3398 + t3434 + t3451 + t3458;
  t3811 = 9.e-12*t2128*t284*t2138;
  t3812 = -3.e-6*t2128*t2122*t2138;
  t3813 = t3811 + t3812;
  t3817 = -3.e-6*t2128*t284*t1270;
  t3818 = t2128*t1270*t2122;
  t3819 = t3817 + t3818;
  t3873 = t1270*t1778;
  t3875 = -1.*t2128*t284*t2138;
  t3876 = t3873 + t3875 + t3812;
  t3862 = -3.e-6*t1270*t1778;
  t3863 = 3.e-6*t2128*t284*t2138;
  t3866 = 9.e-12*t2128*t2122*t2138;
  t3867 = t3862 + t3863 + t3866;
  t3869 = -3.e-6*t2128*t1270*t2122;
  t3870 = -1.000000000009*t1778*t2138;
  t3871 = t3489 + t3869 + t3870;
  t3480 = 0.2000000000018*t1778*t2138;
  t3994 = t3489 + t3869 + t3499;
  t3996 = 3.e-6*t2128*t284*t1270;
  t3998 = 9.e-12*t2128*t1270*t2122;
  t4004 = t3996 + t3998 + t3560;
  t4008 = -1.000000000009*t1270*t1778;
  t4009 = t4008 + t3566 + t3567;
  t3808 = 6.000000000054e-7*t2128*t284*t2138;
  t3809 = -0.2000000000018*t2128*t2122*t2138;
  t3810 = t3730*t3160;
  t3814 = t3813*t3305;
  t3815 = t3400*t3813;
  t3816 = t3730*t3413;
  t3820 = t3819*t3395;
  t3821 = t3815 + t3816 + t3820;
  t3822 = 0.100001*t3821;
  t3823 = t3352*t3730;
  t3831 = t3819*t3372;
  t3832 = t3813*t3395;
  t3833 = t3823 + t3831 + t3832;
  t3834 = 0.2*t3833;
  t3835 = t3819*t3450;
  t3836 = t3352*t3819;
  t3837 = t3813*t3413;
  t3838 = t3730*t3455;
  t3839 = t3836 + t3837 + t3838;
  t3844 = -0.3*t3839;
  t3849 = t3808 + t3809 + t3810 + t3814 + t3822 + t3834 + t3835 + t3844;
  t3636 = -0.2000000000018*t2128*t1270;
  t3637 = -0.2000000000018*t284*t1778*t2138;
  t3641 = -6.000000000054e-7*t1778*t2122*t2138;
  t3649 = t3648*t3160;
  t3657 = t3656*t3305;
  t3658 = t3400*t3656;
  t3659 = t3648*t3413;
  t3664 = t3663*t3395;
  t3665 = t3658 + t3659 + t3664;
  t3666 = 0.100001*t3665;
  t3669 = t3352*t3648;
  t3687 = t3663*t3372;
  t3688 = t3656*t3395;
  t3693 = t3669 + t3687 + t3688;
  t3700 = 0.2*t3693;
  t3701 = t3663*t3450;
  t3702 = t3352*t3663;
  t3703 = t3656*t3413;
  t3704 = t3648*t3455;
  t3705 = t3702 + t3703 + t3704;
  t3706 = -0.3*t3705;
  t3707 = t3636 + t3637 + t3641 + t3649 + t3657 + t3666 + t3700 + t3701 + t3706;
  t3868 = t3867*t2347;
  t3872 = t3871*t2772;
  t3877 = t3876*t2813;
  t3878 = t3876*t2989;
  t3881 = t3867*t2863;
  t3882 = -1.000000000009*t3871*t2275;
  t3883 = t3878 + t3881 + t3882;
  t3884 = -0.3*t3883;
  t3886 = t3871*t2977;
  t3889 = t3867*t2869;
  t3897 = -1.000000000009*t3876*t2275;
  t3898 = t3886 + t3889 + t3897;
  t3899 = 0.2*t3898;
  t3906 = t3876*t2863;
  t3912 = t3871*t2869;
  t3945 = -1.8e-11*t3867*t2275;
  t3965 = t3906 + t3912 + t3945;
  t3972 = 0.100001*t3965;
  t3976 = t3868 + t3872 + t3877 + t3884 + t3899 + t3972;
  t3724 = t3721*t2347;
  t3731 = t3730*t2772;
  t3750 = t3743*t2813;
  t3757 = t3743*t2863;
  t3758 = t3730*t2869;
  t3759 = -1.8e-11*t3721*t2275;
  t3760 = t3757 + t3758 + t3759;
  t3761 = 0.100001*t3760;
  t3762 = t3730*t2977;
  t3763 = t3721*t2869;
  t3765 = -1.000000000009*t3743*t2275;
  t3766 = t3762 + t3763 + t3765;
  t3767 = 0.2*t3766;
  t3768 = t3743*t2989;
  t3769 = t3721*t2863;
  t3770 = -1.000000000009*t3730*t2275;
  t3771 = t3768 + t3769 + t3770;
  t3772 = -0.3*t3771;
  t3773 = t3724 + t3731 + t3750 + t3761 + t3767 + t3772;
  t2350 = t2246*t2347;
  t2773 = t2717*t2772;
  t2815 = t2782*t2813;
  t2868 = t2782*t2863;
  t2940 = t2717*t2869;
  t2942 = -1.8e-11*t2246*t2275;
  t2965 = t2868 + t2940 + t2942;
  t2971 = 0.100001*t2965;
  t2979 = t2717*t2977;
  t2981 = t2246*t2869;
  t2983 = -1.000000000009*t2782*t2275;
  t2985 = t2979 + t2981 + t2983;
  t2988 = 0.2*t2985;
  t2990 = t2782*t2989;
  t2991 = t2246*t2863;
  t2992 = -1.000000000009*t2717*t2275;
  t2995 = t2990 + t2991 + t2992;
  t2996 = -0.3*t2995;
  t2997 = t2350 + t2773 + t2815 + t2971 + t2988 + t2996;
  t4076 = t2374*t1778;
  t4077 = t4076 + t3875 + t3812;
  t4085 = 3.e-6*t2128*t284*t1580;
  t4086 = -1.*t2128*t2118*t2122;
  t4087 = -3.e-6*t1778*t2138;
  t4088 = t4085 + t4086 + t4087;
  t4095 = t2128*t284*t1270;
  t4097 = t1778*t2138;
  t4098 = t4095 + t3714 + t4097;
  t4079 = -9.e-12*t2265;
  t4099 = 9.e-12*t2265;
  t4102 = t4088*t2869;
  t4210 = Sin(var1[3]);
  t4208 = Cos(var1[3]);
  t4209 = t4208*t284*t1778;
  t4211 = -1.*t4210*t2122;
  t4212 = t4209 + t4211;
  t4214 = -1.*t284*t4210;
  t4215 = -1.*t4208*t1778*t2122;
  t4216 = t4214 + t4215;
  t4221 = -1.*t4208*t2128*t2374;
  t4222 = -1.*t4212*t2138;
  t4223 = 3.e-6*t4216*t2138;
  t4224 = t4221 + t4222 + t4223;
  t4213 = 3.e-6*t1580*t4212;
  t4217 = t2118*t4216;
  t4218 = 3.e-6*t4208*t2128*t2138;
  t4219 = t4213 + t4217 + t4218;
  t4226 = t1270*t4212;
  t4227 = 3.e-6*t1580*t4216;
  t4228 = -1.*t4208*t2128*t2138;
  t4229 = t4226 + t4227 + t4228;
  t4261 = -1.*t4208*t284*t1778;
  t4262 = t4210*t2122;
  t4263 = t4261 + t4262;
  t4271 = 3.e-6*t1580*t4263;
  t4272 = t1270*t4216;
  t4275 = t4271 + t4272;
  t4279 = t2118*t4263;
  t4280 = t4279 + t4227;
  t4283 = 3.e-6*t4263*t2138;
  t4284 = -1.*t4216*t2138;
  t4286 = t4283 + t4284;
  t4311 = -1.*t284*t4210*t1778;
  t4313 = -1.*t4208*t2122;
  t4314 = t4311 + t4313;
  t4317 = -1.*t4208*t284;
  t4318 = t4210*t1778*t2122;
  t4319 = t4317 + t4318;
  t4324 = t1270*t4314;
  t4325 = 3.e-6*t1580*t4319;
  t4327 = t2128*t4210*t2138;
  t4328 = t4324 + t4325 + t4327;
  t4333 = 3.e-6*t1580*t4314;
  t4345 = t2118*t4319;
  t4346 = -3.e-6*t2128*t4210*t2138;
  t4348 = t4333 + t4345 + t4346;
  t4353 = t2128*t2374*t4210;
  t4354 = -1.*t4314*t2138;
  t4355 = 3.e-6*t4319*t2138;
  t4370 = t4353 + t4354 + t4355;
  t4392 = t4208*t2128*t284*t1270;
  t4393 = -3.e-6*t4208*t2128*t1580*t2122;
  t4394 = t4208*t1778*t2138;
  t4395 = t4392 + t4393 + t4394;
  t4397 = 3.e-6*t4208*t2128*t284*t1580;
  t4398 = -1.*t4208*t2128*t2118*t2122;
  t4400 = -3.e-6*t4208*t1778*t2138;
  t4401 = t4397 + t4398 + t4400;
  t4404 = t4208*t2374*t1778;
  t4405 = -1.*t4208*t2128*t284*t2138;
  t4406 = -3.e-6*t4208*t2128*t2122*t2138;
  t4407 = t4404 + t4405 + t4406;
  t4431 = 3.e-6*t4208*t2128*t1270;
  t4432 = 3.e-6*t4212*t2138;
  t4433 = -9.e-12*t4216*t2138;
  t4434 = t4431 + t4432 + t4433;
  t4428 = -1.*t4208*t2128*t1270;
  t4429 = t4428 + t4222 + t4223;
  t4438 = -1.*t1270*t4212;
  t4439 = 3.e-6*t1270*t4216;
  t4440 = 1.000000000009*t4208*t2128*t2138;
  t4441 = t4438 + t4439 + t4440;
  t4489 = t2128*t284*t1270*t4210;
  t4490 = -3.e-6*t2128*t1580*t4210*t2122;
  t4491 = t4210*t1778*t2138;
  t4492 = t4489 + t4490 + t4491;
  t4481 = t2374*t4210*t1778;
  t4484 = -1.*t2128*t284*t4210*t2138;
  t4485 = -3.e-6*t2128*t4210*t2122*t2138;
  t4486 = t4481 + t4484 + t4485;
  t4463 = 3.e-6*t2128*t284*t1580*t4210;
  t4467 = -1.*t2128*t2118*t4210*t2122;
  t4468 = -3.e-6*t4210*t1778*t2138;
  t4474 = t4463 + t4467 + t4468;
  t4516 = -3.e-6*t2128*t284*t1580*t4210;
  t4517 = -1.*t2128*t1270*t4210*t2122;
  t4518 = t4516 + t4517;
  t4521 = -1.*t2128*t284*t2118*t4210;
  t4522 = t4521 + t4490;
  t4528 = -3.e-6*t2128*t284*t4210*t2138;
  t4530 = t2128*t4210*t2122*t2138;
  t4531 = t4528 + t4530;
  t4323 = -0.2000000000018*t2128*t4210*t2138;
  t4592 = -1.*t284*t1270*t4210*t1778;
  t4593 = 3.e-6*t1580*t4210*t1778*t2122;
  t4597 = t4592 + t4593 + t4327;
  t4599 = -3.e-6*t284*t1580*t4210*t1778;
  t4600 = t2118*t4210*t1778*t2122;
  t4602 = t4599 + t4600 + t4346;
  t4613 = t284*t4210*t1778*t2138;
  t4616 = 3.e-6*t4210*t1778*t2122*t2138;
  t4617 = t4353 + t4613 + t4616;
  t4389 = 0.2000000000018*t4208*t2128*t284*t1580;
  t4390 = 6.000000000054e-7*t4208*t2128*t1580*t2122;
  t4391 = -0.2000000000018*t4208*t1778*t2138;
  t4396 = t4395*t3160;
  t4402 = t4401*t3305;
  t4403 = t3352*t4395;
  t4408 = t4407*t3372;
  t4409 = t4401*t3395;
  t4410 = t4403 + t4408 + t4409;
  t4411 = 0.2*t4410;
  t4412 = t3400*t4401;
  t4413 = t4395*t3413;
  t4414 = t4407*t3395;
  t4415 = t4412 + t4413 + t4414;
  t4416 = 0.100001*t4415;
  t4417 = t4407*t3450;
  t4418 = t3352*t4407;
  t4419 = t4401*t3413;
  t4420 = t4395*t3455;
  t4421 = t4418 + t4419 + t4420;
  t4422 = -0.3*t4421;
  t4423 = t4389 + t4390 + t4391 + t4396 + t4402 + t4411 + t4416 + t4417 + t4422;
  t4677 = -3.e-6*t1270*t4210*t1778;
  t4678 = 3.e-6*t2128*t284*t4210*t2138;
  t4679 = 9.e-12*t2128*t4210*t2122*t2138;
  t4681 = t4677 + t4678 + t4679;
  t4674 = t1270*t4210*t1778;
  t4675 = t4674 + t4484 + t4485;
  t4685 = -1.*t2128*t284*t1270*t4210;
  t4686 = -3.e-6*t2128*t1270*t4210*t2122;
  t4687 = -1.000000000009*t4210*t1778*t2138;
  t4689 = t4685 + t4686 + t4687;
  t4729 = t4208*t284;
  t4730 = -1.*t4210*t1778*t2122;
  t4731 = t4729 + t4730;
  t4749 = t1270*t4731;
  t4750 = t4333 + t4749;
  t4738 = 3.e-6*t4314*t2138;
  t4739 = -1.*t4731*t2138;
  t4743 = t4738 + t4739;
  t4728 = t2118*t4314;
  t4734 = 3.e-6*t1580*t4731;
  t4735 = t4728 + t4734;
  t4514 = 6.000000000054e-7*t2128*t284*t1580*t4210;
  t4515 = -0.2000000000018*t2128*t1580*t4210*t2122;
  t4519 = t4518*t3160;
  t4523 = t4522*t3305;
  t4527 = t3352*t4518;
  t4532 = t4531*t3372;
  t4538 = t4522*t3395;
  t4540 = t4527 + t4532 + t4538;
  t4545 = 0.2*t4540;
  t4546 = t3400*t4522;
  t4547 = t4518*t3413;
  t4553 = t4531*t3395;
  t4564 = t4546 + t4547 + t4553;
  t4565 = 0.100001*t4564;
  t4568 = t4531*t3450;
  t4569 = t3352*t4531;
  t4571 = t4522*t3413;
  t4573 = t4518*t3455;
  t4574 = t4569 + t4571 + t4573;
  t4577 = -0.3*t4574;
  t4584 = t4514 + t4515 + t4519 + t4523 + t4545 + t4565 + t4568 + t4577;
  t4267 = -6.000000000054e-7*t1580*t4263;
  t4268 = 0.2000000000018*t1580*t4216;
  t4278 = t4275*t3160;
  t4281 = t4280*t3305;
  t4282 = t3352*t4275;
  t4287 = t4286*t3372;
  t4288 = t4280*t3395;
  t4289 = t4282 + t4287 + t4288;
  t4290 = 0.2*t4289;
  t4291 = t3400*t4280;
  t4292 = t4275*t3413;
  t4293 = t4286*t3395;
  t4294 = t4291 + t4292 + t4293;
  t4295 = 0.100001*t4294;
  t4296 = t4286*t3450;
  t4298 = t3352*t4286;
  t4299 = t4280*t3413;
  t4300 = t4275*t3455;
  t4301 = t4298 + t4299 + t4300;
  t4307 = -0.3*t4301;
  t4308 = t4267 + t4268 + t4278 + t4281 + t4290 + t4295 + t4296 + t4307;
  t4316 = 0.2000000000018*t1580*t4314;
  t4322 = -6.000000000054e-7*t1580*t4319;
  t4778 = t4324 + t4325;
  t4784 = t4333 + t4345;
  t4788 = t4354 + t4355;
  t4827 = -9.e-12*t4314*t2138;
  t4830 = 3.e-6*t4731*t2138;
  t4831 = t4827 + t4830;
  t4835 = 3.e-6*t1270*t4314;
  t4836 = -1.*t1270*t4731;
  t4837 = t4835 + t4836;
  t4869 = t284*t4210*t1778;
  t4870 = t4208*t2122;
  t4871 = t4869 + t4870;
  t4907 = -1.*t2128*t1270*t4210;
  t4908 = -1.*t4871*t2138;
  t4909 = t4907 + t4908 + t4830;
  t4868 = 3.e-6*t2128*t1270*t4210;
  t4872 = 3.e-6*t4871*t2138;
  t4873 = -9.e-12*t4731*t2138;
  t4874 = t4868 + t4872 + t4873;
  t4880 = -1.*t1270*t4871;
  t4885 = 3.e-6*t1270*t4731;
  t4889 = 1.000000000009*t2128*t4210*t2138;
  t4890 = t4880 + t4885 + t4889;
  t4946 = t4880 + t4885 + t4327;
  t4948 = 3.e-6*t1270*t4871;
  t4949 = -9.e-12*t1270*t4731;
  t4950 = t4948 + t4949 + t4346;
  t4956 = 1.000000000009*t2128*t1270*t4210;
  t4957 = t4871*t2138;
  t4958 = -3.e-6*t4731*t2138;
  t4960 = t4956 + t4957 + t4958;
  t4668 = -0.2000000000018*t1270*t4210*t1778;
  t4670 = 0.2000000000018*t2128*t284*t4210*t2138;
  t4671 = 6.000000000054e-7*t2128*t4210*t2122*t2138;
  t4676 = t4675*t3160;
  t4682 = t4681*t3305;
  t4683 = t3400*t4681;
  t4684 = t4675*t3413;
  t4696 = t4689*t3395;
  t4705 = t4683 + t4684 + t4696;
  t4706 = 0.100001*t4705;
  t4708 = t3352*t4675;
  t4709 = t4689*t3372;
  t4712 = t4681*t3395;
  t4713 = t4708 + t4709 + t4712;
  t4715 = 0.2*t4713;
  t4716 = t4689*t3450;
  t4717 = t3352*t4689;
  t4718 = t4681*t3413;
  t4719 = t4675*t3455;
  t4720 = t4717 + t4718 + t4719;
  t4722 = -0.3*t4720;
  t4725 = t4668 + t4670 + t4671 + t4676 + t4682 + t4706 + t4715 + t4716 + t4722;
  t4425 = 0.2000000000018*t4208*t2128*t1270;
  t4426 = 0.2000000000018*t4212*t2138;
  t4427 = -6.000000000054e-7*t4216*t2138;
  t4430 = t4429*t3160;
  t4435 = t4434*t3305;
  t4436 = t3400*t4434;
  t4437 = t4429*t3413;
  t4442 = t4441*t3395;
  t4443 = t4436 + t4437 + t4442;
  t4444 = 0.100001*t4443;
  t4445 = t3352*t4429;
  t4446 = t4441*t3372;
  t4447 = t4434*t3395;
  t4448 = t4445 + t4446 + t4447;
  t4449 = 0.2*t4448;
  t4450 = t4441*t3450;
  t4451 = t3352*t4441;
  t4452 = t4434*t3413;
  t4453 = t4429*t3455;
  t4455 = t4451 + t4452 + t4453;
  t4456 = -0.3*t4455;
  t4457 = t4425 + t4426 + t4427 + t4430 + t4435 + t4444 + t4449 + t4450 + t4456;
  t4824 = -6.000000000054e-7*t4314*t2138;
  t4825 = 0.2000000000018*t4731*t2138;
  t4826 = t4743*t3160;
  t4832 = t4831*t3305;
  t4833 = t3400*t4831;
  t4834 = t4743*t3413;
  t4840 = t4837*t3395;
  t4841 = t4833 + t4834 + t4840;
  t4842 = 0.100001*t4841;
  t4843 = t3352*t4743;
  t4844 = t4837*t3372;
  t4853 = t4831*t3395;
  t4857 = t4843 + t4844 + t4853;
  t4858 = 0.2*t4857;
  t4859 = t4837*t3450;
  t4860 = t3352*t4837;
  t4861 = t4831*t3413;
  t4862 = t4743*t3455;
  t4863 = t4860 + t4861 + t4862;
  t4864 = -0.3*t4863;
  t4865 = t4824 + t4825 + t4826 + t4832 + t4842 + t4858 + t4859 + t4864;
  t4479 = t4474*t2347;
  t4487 = t4486*t2772;
  t4493 = t4492*t2813;
  t4494 = t4492*t2863;
  t4495 = t4486*t2869;
  t4496 = -1.8e-11*t4474*t2275;
  t4497 = t4494 + t4495 + t4496;
  t4498 = 0.100001*t4497;
  t4499 = t4486*t2977;
  t4500 = t4474*t2869;
  t4501 = -1.000000000009*t4492*t2275;
  t4502 = t4499 + t4500 + t4501;
  t4503 = 0.2*t4502;
  t4505 = t4492*t2989;
  t4506 = t4474*t2863;
  t4507 = -1.000000000009*t4486*t2275;
  t4509 = t4505 + t4506 + t4507;
  t4510 = -0.3*t4509;
  t4511 = t4479 + t4487 + t4493 + t4498 + t4503 + t4510;
  t4220 = t4219*t2347;
  t4225 = t4224*t2772;
  t4230 = t4229*t2813;
  t4231 = t4224*t2977;
  t4232 = t4219*t2869;
  t4233 = -1.000000000009*t4229*t2275;
  t4234 = t4231 + t4232 + t4233;
  t4235 = 0.2*t4234;
  t4236 = t4229*t2863;
  t4237 = t4224*t2869;
  t4238 = -1.8e-11*t4219*t2275;
  t4239 = t4236 + t4237 + t4238;
  t4243 = 0.100001*t4239;
  t4244 = t4229*t2989;
  t4245 = t4219*t2863;
  t4246 = -1.000000000009*t4224*t2275;
  t4250 = t4244 + t4245 + t4246;
  t4255 = -0.3*t4250;
  t4256 = t4220 + t4225 + t4230 + t4235 + t4243 + t4255;
  t4736 = t4735*t2347;
  t4747 = t4743*t2772;
  t4752 = t4750*t2813;
  t4754 = t4750*t2863;
  t4755 = t4743*t2869;
  t4756 = -1.8e-11*t4735*t2275;
  t4757 = t4754 + t4755 + t4756;
  t4758 = 0.100001*t4757;
  t4759 = t4743*t2977;
  t4760 = t4735*t2869;
  t4761 = -1.000000000009*t4750*t2275;
  t4762 = t4759 + t4760 + t4761;
  t4763 = 0.2*t4762;
  t4764 = t4750*t2989;
  t4765 = t4735*t2863;
  t4766 = -1.000000000009*t4743*t2275;
  t4768 = t4764 + t4765 + t4766;
  t4769 = -0.3*t4768;
  t4772 = t4736 + t4747 + t4752 + t4758 + t4763 + t4769;
  t4875 = t4874*t2347;
  t4899 = t4890*t2772;
  t4910 = t4909*t2813;
  t4913 = t4909*t2989;
  t4914 = t4874*t2863;
  t4915 = -1.000000000009*t4890*t2275;
  t4916 = t4913 + t4914 + t4915;
  t4918 = -0.3*t4916;
  t4919 = t4909*t2863;
  t4920 = t4890*t2869;
  t4921 = -1.8e-11*t4874*t2275;
  t4922 = t4919 + t4920 + t4921;
  t4924 = 0.100001*t4922;
  t4925 = t4890*t2977;
  t4927 = t4874*t2869;
  t4928 = -1.000000000009*t4909*t2275;
  t4934 = t4925 + t4927 + t4928;
  t4938 = 0.2*t4934;
  t4941 = t4875 + t4899 + t4910 + t4918 + t4924 + t4938;
  t4078 = 0.1000000000009*t2265;
  t4080 = t4079 + t3126;
  t4081 = 0.2*t4080;
  t4082 = -9.e-7*t2863;
  t4083 = t4078 + t4081 + t4082;
  t4089 = -1.62e-17*t2265;
  t4090 = 0.1*t2293;
  t4091 = 0.2*t2863;
  t4092 = t4089 + t4090 + t4091;
  t5001 = 3.e-6*t1580*t4871;
  t5002 = t2118*t4731;
  t5003 = 3.e-6*t2128*t4210*t2138;
  t5004 = t5001 + t5002 + t5003;
  t4995 = -1.*t2128*t2374*t4210;
  t4996 = t4995 + t4908 + t4830;
  t5008 = t1270*t4871;
  t5009 = -1.*t2128*t4210*t2138;
  t5010 = t5008 + t4734 + t5009;
  t4100 = t4099 + t3126;
  t4110 = 0.2000000000018*t2265;
  t4111 = t4079 + t2275;
  t4112 = 0.1*t4111;
  t4113 = t4110 + t2725 + t4112;
  t4117 = t4099 + t2275;
  t5041 = t5004*t2869;
  t5222 = t5004*t2347;
  t5223 = t4996*t2772;
  t5224 = t5010*t2813;
  t5225 = t4996*t2977;
  t5226 = -1.000000000009*t5010*t2275;
  t5227 = t5225 + t5041 + t5226;
  t5228 = 0.2*t5227;
  t5229 = t5010*t2863;
  t5230 = t4996*t2869;
  t5231 = -1.8e-11*t5004*t2275;
  t5232 = t5229 + t5230 + t5231;
  t5233 = 0.100001*t5232;
  t5234 = t5010*t2989;
  t5235 = t5004*t2863;
  t5236 = -1.000000000009*t4996*t2275;
  t5237 = t5234 + t5235 + t5236;
  t5238 = -0.3*t5237;
  t5239 = t5222 + t5223 + t5224 + t5228 + t5233 + t5238;
  t5170 = -6.000000000054e-7*t1580*t4314;
  t5171 = 0.2000000000018*t1580*t4731;
  t5172 = t4750*t3160;
  t5173 = t4735*t3305;
  t5174 = t3352*t4750;
  t5175 = t4743*t3372;
  t5176 = t4735*t3395;
  t5177 = t5174 + t5175 + t5176;
  t5178 = 0.2*t5177;
  t5179 = t3400*t4735;
  t5180 = t4750*t3413;
  t5181 = t4743*t3395;
  t5182 = t5179 + t5180 + t5181;
  t5183 = 0.100001*t5182;
  t5185 = t4743*t3450;
  t5186 = t4735*t3413;
  t5187 = t4750*t3455;
  t5188 = t4843 + t5186 + t5187;
  t5189 = -0.3*t5188;
  t5190 = t5170 + t5171 + t5172 + t5173 + t5178 + t5183 + t5185 + t5189;
  t5078 = 0.2000000000018*t1580*t4212;
  t5079 = -6.000000000054e-7*t1580*t4216;
  t5080 = 0.2000000000018*t4208*t2128*t2138;
  t5082 = t4229*t3160;
  t5083 = t4219*t3305;
  t5084 = t3352*t4229;
  t5086 = t4224*t3372;
  t5088 = t4219*t3395;
  t5110 = t5084 + t5086 + t5088;
  t5111 = 0.2*t5110;
  t5112 = t3400*t4219;
  t5114 = t4229*t3413;
  t5115 = t4224*t3395;
  t5116 = t5112 + t5114 + t5115;
  t5118 = 0.100001*t5116;
  t5136 = t4224*t3450;
  t5141 = t3352*t4224;
  t5143 = t4219*t3413;
  t5144 = t4229*t3455;
  t5145 = t5141 + t5143 + t5144;
  t5146 = -0.3*t5145;
  t5147 = t5078 + t5079 + t5080 + t5082 + t5083 + t5111 + t5118 + t5136 + t5146;
  t5148 = 0.2000000000018*t2128*t284*t1580*t4210;
  t5149 = 6.000000000054e-7*t2128*t1580*t4210*t2122;
  t5150 = -0.2000000000018*t4210*t1778*t2138;
  t5151 = t4492*t3160;
  t5152 = t4474*t3305;
  t5153 = t3352*t4492;
  t5154 = t4486*t3372;
  t5155 = t4474*t3395;
  t5156 = t5153 + t5154 + t5155;
  t5157 = 0.2*t5156;
  t5158 = t3400*t4474;
  t5159 = t4492*t3413;
  t5160 = t4486*t3395;
  t5161 = t5158 + t5159 + t5160;
  t5162 = 0.100001*t5161;
  t5163 = t4486*t3450;
  t5164 = t3352*t4486;
  t5165 = t4474*t3413;
  t5166 = t4492*t3455;
  t5167 = t5164 + t5165 + t5166;
  t5168 = -0.3*t5167;
  t5169 = t5148 + t5149 + t5150 + t5151 + t5152 + t5157 + t5162 + t5163 + t5168;
  t5194 = 0.2000000000018*t2128*t1270*t4210;
  t5195 = 0.2000000000018*t4871*t2138;
  t5196 = -6.000000000054e-7*t4731*t2138;
  t5199 = t4909*t3160;
  t5200 = t4874*t3305;
  t5201 = t3400*t4874;
  t5202 = t4909*t3413;
  t5203 = t4890*t3395;
  t5204 = t5201 + t5202 + t5203;
  t5205 = 0.100001*t5204;
  t5206 = t3352*t4909;
  t5207 = t4890*t3372;
  t5208 = t4874*t3395;
  t5209 = t5206 + t5207 + t5208;
  t5211 = 0.2*t5209;
  t5212 = t4890*t3450;
  t5213 = t3352*t4890;
  t5217 = t4874*t3413;
  t5218 = t4909*t3455;
  t5219 = t5213 + t5217 + t5218;
  t5220 = -0.3*t5219;
  t5221 = t5194 + t5195 + t5196 + t5199 + t5200 + t5205 + t5211 + t5212 + t5220;
  t5254 = -1.*t4208*t2374*t1778;
  t5255 = t4208*t2128*t284*t2138;
  t5256 = 3.e-6*t4208*t2128*t2122*t2138;
  t5257 = t5254 + t5255 + t5256;
  t5247 = -3.e-6*t4208*t2128*t284*t1580;
  t5248 = t4208*t2128*t2118*t2122;
  t5251 = 3.e-6*t4208*t1778*t2138;
  t5252 = t5247 + t5248 + t5251;
  t5259 = -1.*t4208*t2128*t284*t1270;
  t5260 = 3.e-6*t4208*t2128*t1580*t2122;
  t5261 = -1.*t4208*t1778*t2138;
  t5262 = t5259 + t5260 + t5261;
  t5285 = t4208*t2128*t1270*t2122;
  t5286 = t4397 + t5285;
  t5288 = t4208*t2128*t284*t2118;
  t5289 = t5288 + t5260;
  t5292 = 3.e-6*t4208*t2128*t284*t2138;
  t5294 = -1.*t4208*t2128*t2122*t2138;
  t5295 = t5292 + t5294;
  t5321 = t4208*t284*t1270*t1778;
  t5322 = -3.e-6*t4208*t1580*t1778*t2122;
  t5323 = t5321 + t5322 + t4228;
  t5325 = 3.e-6*t4208*t284*t1580*t1778;
  t5326 = -1.*t4208*t2118*t1778*t2122;
  t5327 = t5325 + t5326 + t4218;
  t5330 = -1.*t4208*t284*t1778*t2138;
  t5331 = -3.e-6*t4208*t1778*t2122*t2138;
  t5332 = t4221 + t5330 + t5331;
  t5360 = 3.e-6*t4208*t1270*t1778;
  t5361 = -3.e-6*t4208*t2128*t284*t2138;
  t5363 = -9.e-12*t4208*t2128*t2122*t2138;
  t5364 = t5360 + t5361 + t5363;
  t5356 = -1.*t4208*t1270*t1778;
  t5357 = t5356 + t5255 + t5256;
  t5368 = 3.e-6*t4208*t2128*t1270*t2122;
  t5369 = 1.000000000009*t4208*t1778*t2138;
  t5370 = t4392 + t5368 + t5369;
  t5397 = t284*t4210;
  t5400 = t4208*t1778*t2122;
  t5406 = t5397 + t5400;
  t5428 = t1270*t5406;
  t5429 = t4213 + t5428;
  t5425 = -1.*t5406*t2138;
  t5426 = t4432 + t5425;
  t5396 = t2118*t4212;
  t5422 = 3.e-6*t1580*t5406;
  t5423 = t5396 + t5422;
  t5282 = -6.000000000054e-7*t4208*t2128*t284*t1580;
  t5284 = 0.2000000000018*t4208*t2128*t1580*t2122;
  t5287 = t5286*t3160;
  t5290 = t5289*t3305;
  t5291 = t3352*t5286;
  t5296 = t5295*t3372;
  t5297 = t5289*t3395;
  t5300 = t5291 + t5296 + t5297;
  t5301 = 0.2*t5300;
  t5302 = t3400*t5289;
  t5303 = t5286*t3413;
  t5304 = t5295*t3395;
  t5305 = t5302 + t5303 + t5304;
  t5306 = 0.100001*t5305;
  t5307 = t5295*t3450;
  t5308 = t3352*t5295;
  t5309 = t5289*t3413;
  t5310 = t5286*t3455;
  t5311 = t5308 + t5309 + t5310;
  t5313 = -0.3*t5311;
  t5317 = t5282 + t5284 + t5287 + t5290 + t5301 + t5306 + t5307 + t5313;
  t5456 = t4226 + t4227;
  t5458 = t4213 + t4217;
  t5462 = t4222 + t4223;
  t5667 = -9.e-12*t4212*t2138;
  t5668 = 3.e-6*t5406*t2138;
  t5669 = t5667 + t5668;
  t5673 = 3.e-6*t1270*t4212;
  t5674 = -1.*t1270*t5406;
  t5675 = t5673 + t5674;
  t5706 = t4208*t2128*t1270;
  t5707 = -1.*t4263*t2138;
  t5708 = t5706 + t5707 + t5668;
  t5694 = -3.e-6*t4208*t2128*t1270;
  t5697 = -9.e-12*t5406*t2138;
  t5699 = t5694 + t4283 + t5697;
  t5701 = -1.*t1270*t4263;
  t5702 = 3.e-6*t1270*t5406;
  t5703 = -1.000000000009*t4208*t2128*t2138;
  t5704 = t5701 + t5702 + t5703;
  t5732 = t5701 + t5702 + t4228;
  t5734 = 3.e-6*t1270*t4263;
  t5735 = -9.e-12*t1270*t5406;
  t5736 = t5734 + t5735 + t4218;
  t5739 = -1.000000000009*t4208*t2128*t1270;
  t5740 = t4263*t2138;
  t5741 = -3.e-6*t5406*t2138;
  t5742 = t5739 + t5740 + t5741;
  t5353 = 0.2000000000018*t4208*t1270*t1778;
  t5354 = -0.2000000000018*t4208*t2128*t284*t2138;
  t5355 = -6.000000000054e-7*t4208*t2128*t2122*t2138;
  t5358 = t5357*t3160;
  t5365 = t5364*t3305;
  t5366 = t3400*t5364;
  t5367 = t5357*t3413;
  t5371 = t5370*t3395;
  t5372 = t5366 + t5367 + t5371;
  t5373 = 0.100001*t5372;
  t5374 = t3352*t5357;
  t5375 = t5370*t3372;
  t5376 = t5364*t3395;
  t5377 = t5374 + t5375 + t5376;
  t5378 = 0.2*t5377;
  t5379 = t5370*t3450;
  t5380 = t3352*t5370;
  t5381 = t5364*t3413;
  t5382 = t5357*t3455;
  t5389 = t5380 + t5381 + t5382;
  t5390 = -0.3*t5389;
  t5391 = t5353 + t5354 + t5355 + t5358 + t5365 + t5373 + t5378 + t5379 + t5390;
  t5664 = -6.000000000054e-7*t4212*t2138;
  t5665 = 0.2000000000018*t5406*t2138;
  t5666 = t5426*t3160;
  t5670 = t5669*t3305;
  t5671 = t3400*t5669;
  t5672 = t5426*t3413;
  t5676 = t5675*t3395;
  t5677 = t5671 + t5672 + t5676;
  t5678 = 0.100001*t5677;
  t5679 = t3352*t5426;
  t5680 = t5675*t3372;
  t5681 = t5669*t3395;
  t5682 = t5679 + t5680 + t5681;
  t5683 = 0.2*t5682;
  t5684 = t5675*t3450;
  t5685 = t3352*t5675;
  t5686 = t5669*t3413;
  t5687 = t5426*t3455;
  t5688 = t5685 + t5686 + t5687;
  t5689 = -0.3*t5688;
  t5690 = t5664 + t5665 + t5666 + t5670 + t5678 + t5683 + t5684 + t5689;
  t5253 = t5252*t2347;
  t5258 = t5257*t2772;
  t5263 = t5262*t2813;
  t5264 = t5257*t2977;
  t5265 = t5252*t2869;
  t5267 = -1.000000000009*t5262*t2275;
  t5268 = t5264 + t5265 + t5267;
  t5269 = 0.2*t5268;
  t5270 = t5262*t2863;
  t5271 = t5257*t2869;
  t5272 = -1.8e-11*t5252*t2275;
  t5273 = t5270 + t5271 + t5272;
  t5274 = 0.100001*t5273;
  t5275 = t5262*t2989;
  t5276 = t5252*t2863;
  t5277 = -1.000000000009*t5257*t2275;
  t5278 = t5275 + t5276 + t5277;
  t5279 = -0.3*t5278;
  t5280 = t5253 + t5258 + t5263 + t5269 + t5274 + t5279;
  t5424 = t5423*t2347;
  t5427 = t5426*t2772;
  t5430 = t5429*t2813;
  t5431 = t5429*t2863;
  t5433 = t5426*t2869;
  t5434 = -1.8e-11*t5423*t2275;
  t5435 = t5431 + t5433 + t5434;
  t5436 = 0.100001*t5435;
  t5438 = t5426*t2977;
  t5439 = t5423*t2869;
  t5440 = -1.000000000009*t5429*t2275;
  t5442 = t5438 + t5439 + t5440;
  t5443 = 0.2*t5442;
  t5445 = t5429*t2989;
  t5446 = t5423*t2863;
  t5447 = -1.000000000009*t5426*t2275;
  t5448 = t5445 + t5446 + t5447;
  t5450 = -0.3*t5448;
  t5452 = t5424 + t5427 + t5430 + t5436 + t5443 + t5450;
  t5700 = t5699*t2347;
  t5705 = t5704*t2772;
  t5709 = t5708*t2813;
  t5710 = t5708*t2989;
  t5711 = t5699*t2863;
  t5712 = -1.000000000009*t5704*t2275;
  t5713 = t5710 + t5711 + t5712;
  t5714 = -0.3*t5713;
  t5715 = t5708*t2863;
  t5716 = t5704*t2869;
  t5717 = -1.8e-11*t5699*t2275;
  t5718 = t5715 + t5716 + t5717;
  t5719 = 0.100001*t5718;
  t5720 = t5704*t2977;
  t5721 = t5699*t2869;
  t5722 = -1.000000000009*t5708*t2275;
  t5723 = t5720 + t5721 + t5722;
  t5725 = 0.2*t5723;
  t5726 = t5700 + t5705 + t5709 + t5714 + t5719 + t5725;
  t5769 = t4208*t2128*t2374;
  t5770 = t5769 + t5707 + t5668;
  t5772 = t2118*t5406;
  t5773 = -3.e-6*t4208*t2128*t2138;
  t5775 = t4271 + t5772 + t5773;
  t5778 = t1270*t4263;
  t5779 = t4208*t2128*t2138;
  t5780 = t5778 + t5422 + t5779;
  t5782 = t5775*t2869;
  p_output1[0]=(t3467 + t3475 + t3480 + t3160*t3526 + t3305*t3561 + t3450*t3570 - 0.3*(t3455*t3526 + t3413*t3561 + t3352*t3570) + 0.2*(t3352*t3526 + t3395*t3561 + t3372*t3570) + 0.100001*(t3413*t3526 + t3400*t3561 + t3395*t3570))*var2[4] + t3459*var2[5] + t3707*var2[6] + t2997*var2[8];
  p_output1[1]=t3459*var2[4] + (t3467 + t3475 + t3160*t3775 + t3305*t3777 + t3450*t3784 - 0.3*(t3455*t3775 + t3413*t3777 + t3352*t3784) + 0.2*(t3352*t3775 + t3395*t3777 + t3372*t3784) + 0.100001*(t3413*t3775 + t3400*t3777 + t3395*t3784))*var2[5] + t3849*var2[6] + t3773*var2[8];
  p_output1[2]=t3707*var2[4] + t3849*var2[5] + (6.000000000054e-7*t1270*t2122*t2128 + 0.2000000000018*t1270*t2128*t284 + t3480 + t3160*t3994 + t3305*t4004 + t3450*t4009 - 0.3*(t3455*t3994 + t3413*t4004 + t3352*t4009) + 0.2*(t3352*t3994 + t3395*t4004 + t3372*t4009) + 0.100001*(t3413*t3994 + t3400*t4004 + t3395*t4009))*var2[6] + t3976*var2[8];
  p_output1[3]=t2997*var2[4] + t3773*var2[5] + t3976*var2[6] + (t4077*t4083 + t4088*t4092 + 0.100001*(t2311*t4077 - 1.8e-11*t2265*t4088 + t2869*t4098) - 0.3*(-1.000000000009*t2265*t4077 + t4098*t4100 + t4102) + t4098*t4113 + 0.2*(t2311*t4088 - 1.000000000009*t2265*t4098 + t4077*t4117))*var2[8];
  p_output1[4]=1.;
  p_output1[5]=-6.000000000054e-7*t1580*t1778*t2122 - 0.2000000000018*t2128*t2138 - 0.2000000000018*t1580*t1778*t284 + t2782*t3160 + t2246*t3305 + 0.2*(t2782*t3352 + t2717*t3372 + t2246*t3395) + 0.100001*(t2717*t3395 + t2246*t3400 + t2782*t3413) + t2717*t3450 - 0.3*(t2717*t3352 + t2246*t3413 + t2782*t3455);
  p_output1[6]=-0.2000000000018*t1580*t2122*t2128 + 6.000000000054e-7*t1580*t2128*t284 + t3305*t3721 + t3450*t3730 + t3160*t3743 + 0.2*(t3395*t3721 + t3372*t3730 + t3352*t3743) + 0.100001*(t3400*t3721 + t3395*t3730 + t3413*t3743) - 0.3*(t3413*t3721 + t3455*t3743 + t3823);
  p_output1[7]=-0.2000000000018*t1270*t1778 + 6.000000000054e-7*t2122*t2128*t2138 + 0.2000000000018*t2128*t2138*t284 + t3305*t3867 + t3450*t3871 + t3160*t3876 + 0.2*(t3395*t3867 + t3372*t3871 + t3352*t3876) + 0.100001*(t3400*t3867 + t3395*t3871 + t3413*t3876) - 0.3*(t3413*t3867 + t3352*t3871 + t3455*t3876);
  p_output1[8]=t2772*t4077 + t2347*t4088 + t2813*t4098 + 0.100001*(t2869*t4077 - 1.8e-11*t2275*t4088 + t2863*t4098) - 0.3*(-1.000000000009*t2275*t4077 + t2863*t4088 + t2989*t4098) + 0.2*(t2977*t4077 - 1.000000000009*t2275*t4098 + t4102);
  p_output1[9]=(t4316 + t4322 + t4323 + t3160*t4328 + t3305*t4348 + t3450*t4370 - 0.3*(t3455*t4328 + t3413*t4348 + t3352*t4370) + 0.2*(t3352*t4328 + t3395*t4348 + t3372*t4370) + 0.100001*(t3413*t4328 + t3400*t4348 + t3395*t4370))*var2[3] + t4423*var2[4] + t4308*var2[5] + t4457*var2[6] + t4256*var2[8];
  p_output1[10]=t4423*var2[3] + (-6.000000000054e-7*t1580*t1778*t2122*t4210 - 0.2000000000018*t1580*t1778*t284*t4210 + t4323 + t3160*t4597 + t3305*t4602 + t3450*t4617 - 0.3*(t3455*t4597 + t3413*t4602 + t3352*t4617) + 0.2*(t3352*t4597 + t3395*t4602 + t3372*t4617) + 0.100001*(t3413*t4597 + t3400*t4602 + t3395*t4617))*var2[4] + t4584*var2[5] + t4725*var2[6] + t4511*var2[8];
  p_output1[11]=t4308*var2[3] + t4584*var2[4] + (t4316 + t4322 + t3160*t4778 + t3305*t4784 + t3450*t4788 - 0.3*(t3455*t4778 + t3413*t4784 + t3352*t4788) + 0.2*(t3352*t4778 + t3395*t4784 + t3372*t4788) + 0.100001*(t3413*t4778 + t3400*t4784 + t3395*t4788))*var2[5] + t4865*var2[6] + t4772*var2[8];
  p_output1[12]=t4457*var2[3] + t4725*var2[4] + t4865*var2[5] + (t4323 - 6.000000000054e-7*t1270*t4731 + 0.2000000000018*t1270*t4871 + t3160*t4946 + t3305*t4950 + t3450*t4960 - 0.3*(t3455*t4946 + t3413*t4950 + t3352*t4960) + 0.2*(t3352*t4946 + t3395*t4950 + t3372*t4960) + 0.100001*(t3413*t4946 + t3400*t4950 + t3395*t4960))*var2[6] + t4941*var2[8];
  p_output1[13]=t4256*var2[3] + t4511*var2[4] + t4772*var2[5] + t4941*var2[6] + (t4083*t4996 + t4092*t5004 + t4113*t5010 + 0.2*(t4117*t4996 + t2311*t5004 - 1.000000000009*t2265*t5010) + 0.100001*(t2311*t4996 - 1.8e-11*t2265*t5004 + t2869*t5010) - 0.3*(-1.000000000009*t2265*t4996 + t4100*t5010 + t5041))*var2[8];
  p_output1[14]=1.;
  p_output1[15]=t5147;
  p_output1[16]=t5169;
  p_output1[17]=t5190;
  p_output1[18]=t5221;
  p_output1[19]=t5239;
  p_output1[20]=t5147*var2[3] + t5169*var2[4] + t5190*var2[5] + t5221*var2[6] + t5239*var2[8];
  p_output1[21]=t5169*var2[3] + (6.000000000054e-7*t1580*t1778*t2122*t4208 + 0.2000000000018*t1580*t1778*t284*t4208 + t5080 + t3160*t5323 + t3305*t5327 + t3450*t5332 - 0.3*(t3455*t5323 + t3413*t5327 + t3352*t5332) + 0.2*(t3352*t5323 + t3395*t5327 + t3372*t5332) + 0.100001*(t3413*t5323 + t3400*t5327 + t3395*t5332))*var2[4] + t5317*var2[5] + t5391*var2[6] + t5280*var2[8];
  p_output1[22]=t5190*var2[3] + t5317*var2[4] + (t5078 + t5079 + t3160*t5456 + t3305*t5458 + t3450*t5462 - 0.3*(t3455*t5456 + t3413*t5458 + t3352*t5462) + 0.2*(t3352*t5456 + t3395*t5458 + t3372*t5462) + 0.100001*(t3413*t5456 + t3400*t5458 + t3395*t5462))*var2[5] + t5690*var2[6] + t5452*var2[8];
  p_output1[23]=t5221*var2[3] + t5391*var2[4] + t5690*var2[5] + (0.2000000000018*t1270*t4263 + t5080 - 6.000000000054e-7*t1270*t5406 + t3160*t5732 + t3305*t5736 + t3450*t5742 - 0.3*(t3455*t5732 + t3413*t5736 + t3352*t5742) + 0.2*(t3352*t5732 + t3395*t5736 + t3372*t5742) + 0.100001*(t3413*t5732 + t3400*t5736 + t3395*t5742))*var2[6] + t5726*var2[8];
  p_output1[24]=t5239*var2[3] + t5280*var2[4] + t5452*var2[5] + t5726*var2[6] + (t4083*t5770 + t4092*t5775 + t4113*t5780 + 0.2*(t4117*t5770 + t2311*t5775 - 1.000000000009*t2265*t5780) + 0.100001*(t2311*t5770 - 1.8e-11*t2265*t5775 + t2869*t5780) - 0.3*(-1.000000000009*t2265*t5770 + t4100*t5780 + t5782))*var2[8];
  p_output1[25]=1.;
  p_output1[26]=0.2000000000018*t2128*t2138*t4210 - 6.000000000054e-7*t1580*t4731 + 0.2000000000018*t1580*t4871 + t3450*t4996 + t3305*t5004 + t3160*t5010 + 0.2*(t3372*t4996 + t3395*t5004 + t3352*t5010) + 0.100001*(t3395*t4996 + t3400*t5004 + t3413*t5010) - 0.3*(t3352*t4996 + t3413*t5004 + t3455*t5010);
  p_output1[27]=-6.000000000054e-7*t1580*t2122*t2128*t4208 + 0.2000000000018*t1778*t2138*t4208 - 0.2000000000018*t1580*t2128*t284*t4208 + t3305*t5252 + t3450*t5257 + t3160*t5262 + 0.2*(t3395*t5252 + t3372*t5257 + t3352*t5262) + 0.100001*(t3400*t5252 + t3395*t5257 + t3413*t5262) - 0.3*(t3413*t5252 + t3352*t5257 + t3455*t5262);
  p_output1[28]=-6.000000000054e-7*t1580*t4212 + 0.2000000000018*t1580*t5406 + t3305*t5423 + t3450*t5426 + t3160*t5429 + 0.2*(t3395*t5423 + t3372*t5426 + t3352*t5429) + 0.100001*(t3400*t5423 + t3395*t5426 + t3413*t5429) - 0.3*(t3413*t5423 + t3455*t5429 + t5679);
  p_output1[29]=-0.2000000000018*t1270*t2128*t4208 + 0.2000000000018*t2138*t4263 - 6.000000000054e-7*t2138*t5406 + t3305*t5699 + t3450*t5704 + t3160*t5708 + 0.2*(t3395*t5699 + t3372*t5704 + t3352*t5708) + 0.100001*(t3400*t5699 + t3395*t5704 + t3413*t5708) - 0.3*(t3413*t5699 + t3352*t5704 + t3455*t5708);
  p_output1[30]=t2772*t5770 + t2347*t5775 + t2813*t5780 + 0.100001*(t2869*t5770 - 1.8e-11*t2275*t5775 + t2863*t5780) - 0.3*(-1.000000000009*t2275*t5770 + t2863*t5775 + t2989*t5780) + 0.2*(t2977*t5770 - 1.000000000009*t2275*t5780 + t5782);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 31, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_LeftFrontFoot_FrontStance.hh"

namespace FrontStance
{

void J_dh_LeftFrontFoot_FrontStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
