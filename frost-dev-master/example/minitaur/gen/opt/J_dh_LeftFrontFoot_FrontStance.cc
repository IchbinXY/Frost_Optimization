/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 23:45:39 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1498;
  double t1516;
  double t2023;
  double t3025;
  double t15652;
  double t15669;
  double t15679;
  double t4219;
  double t1465;
  double t5144;
  double t3863;
  double t15660;
  double t16322;
  double t16347;
  double t16354;
  double t17794;
  double t17834;
  double t17837;
  double t17840;
  double t17859;
  double t17693;
  double t17709;
  double t17716;
  double t17723;
  double t17735;
  double t17744;
  double t18098;
  double t3357;
  double t3541;
  double t3681;
  double t3998;
  double t15581;
  double t15613;
  double t17892;
  double t19186;
  double t19529;
  double t18613;
  double t21045;
  double t21925;
  double t21980;
  double t20795;
  double t20867;
  double t20915;
  double t21155;
  double t22155;
  double t22182;
  double t34474;
  double t31137;
  double t31376;
  double t31550;
  double t34475;
  double t20958;
  double t22430;
  double t21141;
  double t28593;
  double t29227;
  double t35079;
  double t32299;
  double t21069;
  double t21202;
  double t21899;
  double t22094;
  double t22101;
  double t22423;
  double t22427;
  double t23492;
  double t28534;
  double t28553;
  double t39503;
  double t39521;
  double t39522;
  double t39564;
  double t34305;
  double t39604;
  double t39617;
  double t39619;
  double t39620;
  double t34639;
  double t34641;
  double t39624;
  double t39625;
  double t39626;
  double t39632;
  double t36705;
  double t36739;
  double t37058;
  double t37060;
  double t37335;
  double t39076;
  double t39736;
  double t39737;
  double t39738;
  double t39749;
  double t39726;
  double t39727;
  double t39756;
  double t39757;
  double t39758;
  double t39759;
  double t16342;
  double t16355;
  double t17677;
  double t17683;
  double t17769;
  double t17800;
  double t17815;
  double t17819;
  double t17821;
  double t17890;
  double t17899;
  double t17904;
  double t17906;
  double t17914;
  double t39839;
  double t39840;
  double t39834;
  double t39835;
  double t39836;
  double t39826;
  double t39831;
  double t39832;
  double t19537;
  double t19648;
  double t39437;
  double t39452;
  double t39894;
  double t39900;
  double t39908;
  double t20255;
  double t20601;
  double t22122;
  double t28574;
  double t30911;
  double t34421;
  double t34476;
  double t34479;
  double t34509;
  double t34642;
  double t35983;
  double t36481;
  double t36538;
  double t36627;
  double t37438;
  double t37502;
  double t37537;
  double t39210;
  double t39350;
  double t39420;
  double t39423;
  double t39968;
  double t39969;
  double t39970;
  double t39982;
  double t39983;
  double t39988;
  double t40033;
  double t40034;
  double t40035;
  double t40007;
  double t40008;
  double t40011;
  double t40017;
  double t40019;
  double t40028;
  double t40029;
  double t39470;
  double t40082;
  double t40084;
  double t40087;
  double t40088;
  double t40091;
  double t40092;
  double t39965;
  double t39966;
  double t39967;
  double t39971;
  double t39972;
  double t39977;
  double t39989;
  double t39990;
  double t39991;
  double t39993;
  double t39994;
  double t39995;
  double t39996;
  double t39997;
  double t39998;
  double t39999;
  double t40000;
  double t40001;
  double t40002;
  double t40003;
  double t40004;
  double t39718;
  double t39720;
  double t39721;
  double t39730;
  double t39753;
  double t39754;
  double t39755;
  double t39760;
  double t39761;
  double t39762;
  double t39763;
  double t39764;
  double t39765;
  double t39766;
  double t39767;
  double t39768;
  double t39781;
  double t39787;
  double t39793;
  double t39794;
  double t39795;
  double t39796;
  double t40018;
  double t40030;
  double t40040;
  double t40041;
  double t40042;
  double t40043;
  double t40045;
  double t40046;
  double t40047;
  double t40048;
  double t40050;
  double t40051;
  double t40054;
  double t40065;
  double t40070;
  double t40075;
  double t40076;
  double t40077;
  double t40078;
  double t39833;
  double t39838;
  double t39841;
  double t39843;
  double t39851;
  double t39852;
  double t39869;
  double t39875;
  double t39876;
  double t39880;
  double t39881;
  double t39882;
  double t39883;
  double t39884;
  double t39885;
  double t39886;
  double t39887;
  double t39888;
  double t39889;
  double t17686;
  double t17830;
  double t17928;
  double t18671;
  double t19511;
  double t19520;
  double t19524;
  double t19525;
  double t19588;
  double t19594;
  double t19631;
  double t19639;
  double t19642;
  double t19673;
  double t19678;
  double t19681;
  double t19799;
  double t19827;
  double t19828;
  double t40146;
  double t40147;
  double t40158;
  double t40159;
  double t40160;
  double t40161;
  double t40174;
  double t40175;
  double t40176;
  double t40150;
  double t40177;
  double t40183;
  double t41470;
  double t41468;
  double t41469;
  double t41471;
  double t41477;
  double t41479;
  double t41482;
  double t41485;
  double t41553;
  double t41554;
  double t41566;
  double t41581;
  double t41478;
  double t41536;
  double t41548;
  double t41549;
  double t41599;
  double t41600;
  double t41603;
  double t41606;
  double t41685;
  double t41690;
  double t41692;
  double t41698;
  double t41703;
  double t41704;
  double t41717;
  double t41718;
  double t41736;
  double t41742;
  double t41753;
  double t43286;
  double t43447;
  double t43530;
  double t43549;
  double t43581;
  double t43585;
  double t43590;
  double t43591;
  double t43599;
  double t43601;
  double t43610;
  double t43669;
  double t43686;
  double t43689;
  double t43704;
  double t43710;
  double t43712;
  double t43718;
  double t45654;
  double t45655;
  double t45656;
  double t45891;
  double t45933;
  double t46353;
  double t46526;
  double t46738;
  double t46896;
  double t46913;
  double t47121;
  double t47411;
  double t48929;
  double t48934;
  double t48935;
  double t48936;
  double t48837;
  double t48921;
  double t48961;
  double t48965;
  double t48967;
  double t48973;
  double t49436;
  double t49437;
  double t49441;
  double t49452;
  double t49278;
  double t49310;
  double t49374;
  double t49419;
  double t49071;
  double t49074;
  double t49075;
  double t49077;
  double t49626;
  double t49627;
  double t49628;
  double t49631;
  double t49633;
  double t49649;
  double t49650;
  double t49656;
  double t43588;
  double t49762;
  double t49769;
  double t49790;
  double t49796;
  double t49797;
  double t49806;
  double t49944;
  double t49946;
  double t49949;
  double t45548;
  double t45550;
  double t45642;
  double t45892;
  double t46811;
  double t46882;
  double t47415;
  double t47416;
  double t47431;
  double t47601;
  double t47602;
  double t47603;
  double t47727;
  double t47851;
  double t47852;
  double t47970;
  double t48123;
  double t48153;
  double t48319;
  double t48338;
  double t48347;
  double t48577;
  double t50605;
  double t50672;
  double t50696;
  double t50933;
  double t50486;
  double t50487;
  double t51410;
  double t51417;
  double t51423;
  double t51539;
  double t52452;
  double t52459;
  double t52497;
  double t52896;
  double t52897;
  double t52709;
  double t52769;
  double t52774;
  double t52451;
  double t52504;
  double t52632;
  double t49617;
  double t49618;
  double t49630;
  double t49638;
  double t49642;
  double t49657;
  double t49664;
  double t49670;
  double t49671;
  double t49674;
  double t49678;
  double t49682;
  double t49683;
  double t49695;
  double t49696;
  double t49708;
  double t49709;
  double t49721;
  double t49723;
  double t49731;
  double t49732;
  double t41695;
  double t41697;
  double t41706;
  double t41719;
  double t41727;
  double t41758;
  double t41761;
  double t41762;
  double t41763;
  double t41764;
  double t41775;
  double t41985;
  double t42129;
  double t42215;
  double t42279;
  double t42753;
  double t42761;
  double t42768;
  double t42814;
  double t42833;
  double t42835;
  double t43543;
  double t43587;
  double t53725;
  double t53748;
  double t53758;
  double t53895;
  double t53903;
  double t53904;
  double t53919;
  double t53925;
  double t53926;
  double t54200;
  double t54221;
  double t54223;
  double t54271;
  double t54278;
  double t54279;
  double t54197;
  double t54231;
  double t54233;
  double t54234;
  double t54248;
  double t54249;
  double t54257;
  double t54258;
  double t54358;
  double t54360;
  double t54364;
  double t54369;
  double t54383;
  double t54384;
  double t54386;
  double t54390;
  double t50337;
  double t50481;
  double t50483;
  double t50604;
  double t51071;
  double t51152;
  double t51288;
  double t51574;
  double t51637;
  double t51658;
  double t51660;
  double t51858;
  double t51993;
  double t52095;
  double t52113;
  double t52143;
  double t52186;
  double t52379;
  double t52428;
  double t52435;
  double t52436;
  double t52438;
  double t48638;
  double t48641;
  double t48835;
  double t48925;
  double t48937;
  double t48951;
  double t48955;
  double t48974;
  double t48976;
  double t48977;
  double t48985;
  double t48987;
  double t48991;
  double t48992;
  double t48993;
  double t49004;
  double t49005;
  double t49021;
  double t49027;
  double t49035;
  double t49037;
  double t49038;
  double t53884;
  double t53890;
  double t53891;
  double t53906;
  double t53908;
  double t53918;
  double t54023;
  double t54028;
  double t54038;
  double t54041;
  double t54071;
  double t54075;
  double t54147;
  double t54150;
  double t54151;
  double t54164;
  double t54165;
  double t54166;
  double t54170;
  double t54173;
  double t54175;
  double t49205;
  double t49422;
  double t49455;
  double t49471;
  double t49474;
  double t49481;
  double t49510;
  double t49511;
  double t49533;
  double t49538;
  double t49541;
  double t49546;
  double t49547;
  double t49548;
  double t49552;
  double t49555;
  double t49561;
  double t49595;
  double t49597;
  double t41550;
  double t41587;
  double t41607;
  double t41612;
  double t41625;
  double t41626;
  double t41627;
  double t41633;
  double t41635;
  double t41638;
  double t41646;
  double t41655;
  double t41660;
  double t41662;
  double t41667;
  double t41672;
  double t41673;
  double t41674;
  double t41679;
  double t52706;
  double t52892;
  double t52898;
  double t52901;
  double t53169;
  double t53192;
  double t53371;
  double t53384;
  double t53385;
  double t53386;
  double t53391;
  double t53394;
  double t53407;
  double t53411;
  double t53412;
  double t53489;
  double t53495;
  double t53603;
  double t53631;
  double t54242;
  double t54270;
  double t54286;
  double t54287;
  double t54295;
  double t54296;
  double t54302;
  double t54307;
  double t54310;
  double t54311;
  double t54312;
  double t54313;
  double t54314;
  double t54317;
  double t54321;
  double t54323;
  double t54333;
  double t54335;
  double t54336;
  double t40149;
  double t40151;
  double t40152;
  double t40153;
  double t40154;
  double t40167;
  double t40168;
  double t40169;
  double t40170;
  double t54530;
  double t54538;
  double t54551;
  double t54559;
  double t54509;
  double t54513;
  double t54578;
  double t54586;
  double t54597;
  double t40178;
  double t40213;
  double t40214;
  double t40220;
  double t40234;
  double t40240;
  double t54616;
  double t55659;
  double t55674;
  double t55679;
  double t55681;
  double t55689;
  double t55690;
  double t55694;
  double t55696;
  double t55697;
  double t55702;
  double t55709;
  double t55720;
  double t55724;
  double t55728;
  double t55737;
  double t55757;
  double t55763;
  double t55773;
  double t55187;
  double t55189;
  double t55208;
  double t55240;
  double t55267;
  double t55281;
  double t55310;
  double t55314;
  double t55315;
  double t55318;
  double t55323;
  double t55325;
  double t55331;
  double t55342;
  double t55350;
  double t55352;
  double t55357;
  double t55423;
  double t55468;
  double t55514;
  double t54650;
  double t54657;
  double t54663;
  double t54665;
  double t54669;
  double t54675;
  double t54677;
  double t54685;
  double t54686;
  double t54695;
  double t54696;
  double t54706;
  double t54708;
  double t54713;
  double t54714;
  double t54716;
  double t54727;
  double t54728;
  double t54734;
  double t54735;
  double t54799;
  double t54805;
  double t54825;
  double t54826;
  double t54866;
  double t54876;
  double t54912;
  double t54915;
  double t54928;
  double t54993;
  double t55004;
  double t55012;
  double t55015;
  double t55022;
  double t55023;
  double t55027;
  double t55034;
  double t55043;
  double t55064;
  double t55105;
  double t55112;
  double t55134;
  double t55139;
  double t55142;
  double t55527;
  double t55533;
  double t55535;
  double t55543;
  double t55544;
  double t55550;
  double t55551;
  double t55567;
  double t55568;
  double t55575;
  double t55576;
  double t55587;
  double t55588;
  double t55596;
  double t55597;
  double t55612;
  double t55615;
  double t55617;
  double t55620;
  double t55622;
  double t55627;
  double t55650;
  double t55883;
  double t55890;
  double t55893;
  double t55896;
  double t55869;
  double t55871;
  double t55874;
  double t55877;
  double t55906;
  double t55909;
  double t55955;
  double t55963;
  double t56072;
  double t56114;
  double t56123;
  double t56124;
  double t56137;
  double t56138;
  double t56139;
  double t56408;
  double t56411;
  double t56425;
  double t56433;
  double t56437;
  double t56443;
  double t56454;
  double t56455;
  double t56511;
  double t56752;
  double t56766;
  double t56787;
  double t56793;
  double t56715;
  double t56733;
  double t56808;
  double t56820;
  double t56827;
  double t56964;
  double t56969;
  double t56999;
  double t57040;
  double t57042;
  double t57022;
  double t57027;
  double t56958;
  double t57006;
  double t57013;
  double t56070;
  double t56071;
  double t56122;
  double t56128;
  double t56129;
  double t56145;
  double t56154;
  double t56173;
  double t56177;
  double t56179;
  double t56184;
  double t56201;
  double t56207;
  double t56233;
  double t56239;
  double t56244;
  double t56248;
  double t56276;
  double t56280;
  double t56299;
  double t56306;
  double t57341;
  double t57349;
  double t57377;
  double t57481;
  double t57484;
  double t57487;
  double t57509;
  double t57530;
  double t57531;
  double t57815;
  double t57817;
  double t57822;
  double t57681;
  double t57696;
  double t57716;
  double t57728;
  double t57751;
  double t57768;
  double t57811;
  double t57975;
  double t57982;
  double t57998;
  double t57999;
  double t58007;
  double t58008;
  double t58010;
  double t58059;
  double t56687;
  double t56691;
  double t56708;
  double t56749;
  double t56794;
  double t56802;
  double t56806;
  double t56833;
  double t56835;
  double t56839;
  double t56840;
  double t56844;
  double t56846;
  double t56877;
  double t56878;
  double t56894;
  double t56896;
  double t56897;
  double t56899;
  double t56903;
  double t56904;
  double t56934;
  double t57454;
  double t57474;
  double t57478;
  double t57497;
  double t57501;
  double t57505;
  double t57532;
  double t57533;
  double t57537;
  double t57538;
  double t57539;
  double t57548;
  double t57556;
  double t57617;
  double t57622;
  double t57628;
  double t57635;
  double t57641;
  double t57644;
  double t57648;
  double t57655;
  double t55878;
  double t55905;
  double t55968;
  double t55969;
  double t55975;
  double t55976;
  double t55985;
  double t55987;
  double t56023;
  double t56028;
  double t56030;
  double t56032;
  double t56035;
  double t56040;
  double t56045;
  double t56048;
  double t56053;
  double t56058;
  double t56061;
  double t57020;
  double t57036;
  double t57046;
  double t57050;
  double t57052;
  double t57057;
  double t57062;
  double t57064;
  double t57206;
  double t57208;
  double t57239;
  double t57242;
  double t57251;
  double t57278;
  double t57290;
  double t57295;
  double t57302;
  double t57311;
  double t57318;
  double t57717;
  double t57814;
  double t57824;
  double t57831;
  double t57835;
  double t57837;
  double t57838;
  double t57847;
  double t57848;
  double t57849;
  double t57850;
  double t57855;
  double t57856;
  double t57857;
  double t57912;
  double t57918;
  double t57946;
  double t57963;
  double t57966;
  double t58234;
  double t58257;
  double t58265;
  double t58267;
  double t58268;
  double t58273;
  double t58291;
  double t58294;
  double t58297;
  t1498 = Cos(var1[6]);
  t1516 = -1.*t1498;
  t2023 = 1. + t1516;
  t3025 = Sin(var1[4]);
  t15652 = Cos(var1[8]);
  t15669 = Sin(var1[8]);
  t15679 = -3.e-6*t15669;
  t4219 = Cos(var1[4]);
  t1465 = Cos(var1[5]);
  t5144 = Sin(var1[6]);
  t3863 = Sin(var1[5]);
  t15660 = -3.e-6*t15652;
  t16322 = t15660 + t15679;
  t16347 = 3.e-6*t15652;
  t16354 = t16347 + t15679;
  t17794 = -9.e-12*t15669;
  t17834 = -1.*t1465*t1498*t3025;
  t17837 = 3.e-6*t2023*t3025*t3863;
  t17840 = t4219*t5144;
  t17859 = t17834 + t17837 + t17840;
  t17693 = -1.000000000009*t2023;
  t17709 = 1. + t17693;
  t17716 = t4219*t17709;
  t17723 = t1465*t3025*t5144;
  t17735 = 3.e-6*t3025*t3863*t5144;
  t17744 = t17716 + t17723 + t17735;
  t18098 = 3.e-6*t15669;
  t3357 = -3.e-6*t1465*t2023*t3025;
  t3541 = -9.e-12*t2023;
  t3681 = 1. + t3541;
  t3998 = t3681*t3025*t3863;
  t15581 = -3.e-6*t4219*t5144;
  t15613 = t3357 + t3998 + t15581;
  t17892 = -1.*t15652;
  t19186 = t16347 + t18098;
  t19529 = 9.e-12*t15669;
  t18613 = t15660 + t18098;
  t21045 = 1. + t17892;
  t21925 = -3.e-6*t21045;
  t21980 = t21925 + t18098;
  t20795 = 3.e-6*t1465*t2023*t3025;
  t20867 = t1498*t3025*t3863;
  t20915 = t20795 + t20867;
  t21155 = -1.*t15669;
  t22155 = t1465*t3681*t3025;
  t22182 = t22155 + t17837;
  t34474 = 3.e-6*t21045;
  t31137 = 3.e-6*t1465*t3025*t5144;
  t31376 = -1.*t3025*t3863*t5144;
  t31550 = t31137 + t31376;
  t34475 = t34474 + t18098;
  t20958 = 9.e-13*var1[8];
  t22430 = t21925 + t15679;
  t21141 = -9.e-12*t21045;
  t28593 = -1.000000000009*t21045;
  t29227 = 1. + t28593;
  t35079 = t34474 + t15679;
  t32299 = 9.e-12*t21045;
  t21069 = 0.2000000000018*t21045;
  t21202 = t21141 + t21155;
  t21899 = 0.1*t21202;
  t22094 = -9.e-7*t21980;
  t22101 = t20958 + t21069 + t21899 + t22094;
  t22423 = 3.e-7*var1[8];
  t22427 = -1.62e-17*t21045;
  t23492 = 0.2*t22430;
  t28534 = 0.1*t21980;
  t28553 = t22423 + t22427 + t23492 + t28534;
  t39503 = -1.*t4219*t1465*t1498;
  t39521 = 3.e-6*t4219*t2023*t3863;
  t39522 = -1.*t3025*t5144;
  t39564 = t39503 + t39521 + t39522;
  t34305 = t32299 + t21155;
  t39604 = -3.e-6*t4219*t1465*t2023;
  t39617 = t4219*t3681*t3863;
  t39619 = 3.e-6*t3025*t5144;
  t39620 = t39604 + t39617 + t39619;
  t34639 = -1.8e-11*t21045;
  t34641 = 1. + t34639;
  t39624 = -1.*t17709*t3025;
  t39625 = t4219*t1465*t5144;
  t39626 = 3.e-6*t4219*t3863*t5144;
  t39632 = t39624 + t39625 + t39626;
  t36705 = 0.1000000000009*t21045;
  t36739 = -9.e-7*t22430;
  t37058 = t21141 + t15669;
  t37060 = 0.2*t37058;
  t37335 = t20958 + t36705 + t36739 + t37060;
  t39076 = t32299 + t15669;
  t39736 = -3.e-6*t4219*t1498;
  t39737 = -3.e-6*t1465*t3025*t5144;
  t39738 = -9.e-12*t3025*t3863*t5144;
  t39749 = t39736 + t39737 + t39738;
  t39726 = t4219*t1498;
  t39727 = t39726 + t17723 + t17735;
  t39756 = t1465*t1498*t3025;
  t39757 = 3.e-6*t1498*t3025*t3863;
  t39758 = -1.000000000009*t4219*t5144;
  t39759 = t39756 + t39757 + t39758;
  t16342 = 0.2*t16322;
  t16355 = 0.1*t16354;
  t17677 = -1.62e-17*t15669;
  t17683 = 3.e-7 + t16342 + t16355 + t17677;
  t17769 = -9.e-7*t16322;
  t17800 = t15652 + t17794;
  t17815 = 0.2*t17800;
  t17819 = 0.1000000000009*t15669;
  t17821 = 9.e-13 + t17769 + t17815 + t17819;
  t17890 = -9.e-7*t16354;
  t17899 = t17892 + t17794;
  t17904 = 0.1*t17899;
  t17906 = 0.2000000000018*t15669;
  t17914 = 9.e-13 + t17890 + t17904 + t17906;
  t39839 = -1.*t4219*t1498*t3863;
  t39840 = t39604 + t39839;
  t39834 = -3.e-6*t4219*t1465*t5144;
  t39835 = t4219*t3863*t5144;
  t39836 = t39834 + t39835;
  t39826 = -1.*t4219*t1465*t3681;
  t39831 = -3.e-6*t4219*t2023*t3863;
  t39832 = t39826 + t39831;
  t19537 = t17892 + t19529;
  t19648 = t15652 + t19529;
  t39437 = -0.2000000000018*t4219*t1465*t2023;
  t39452 = -6.000000000054e-7*t4219*t2023*t3863;
  t39894 = t39503 + t39521;
  t39900 = t39604 + t39617;
  t39908 = t39625 + t39626;
  t20255 = -6.000000000054e-7*t1465*t2023*t3025;
  t20601 = 0.2000000000018*t2023*t3025*t3863;
  t22122 = t20915*t22101;
  t28574 = t22182*t28553;
  t30911 = t29227*t20915;
  t34421 = t31550*t34305;
  t34476 = t22182*t34475;
  t34479 = t30911 + t34421 + t34476;
  t34509 = 0.2*t34479;
  t34642 = t34641*t22182;
  t35983 = t20915*t35079;
  t36481 = t31550*t34475;
  t36538 = t34642 + t35983 + t36481;
  t36627 = 0.100001*t36538;
  t37438 = t31550*t37335;
  t37502 = t29227*t31550;
  t37537 = t22182*t35079;
  t39210 = t20915*t39076;
  t39350 = t37502 + t37537 + t39210;
  t39420 = -0.3*t39350;
  t39423 = t20255 + t20601 + t22122 + t28574 + t34509 + t36627 + t37438 + t39420;
  t39968 = 9.e-12*t4219*t1465*t5144;
  t39969 = -3.e-6*t4219*t3863*t5144;
  t39970 = t39968 + t39969;
  t39982 = -3.e-6*t4219*t1465*t1498;
  t39983 = t4219*t1498*t3863;
  t39988 = t39982 + t39983;
  t40033 = t1498*t3025;
  t40034 = -1.*t4219*t1465*t5144;
  t40035 = t40033 + t40034 + t39969;
  t40007 = -3.e-6*t1498*t3025;
  t40008 = 3.e-6*t4219*t1465*t5144;
  t40011 = 9.e-12*t4219*t3863*t5144;
  t40017 = t40007 + t40008 + t40011;
  t40019 = -3.e-6*t4219*t1498*t3863;
  t40028 = -1.000000000009*t3025*t5144;
  t40029 = t39503 + t40019 + t40028;
  t39470 = 0.2000000000018*t3025*t5144;
  t40082 = t39503 + t40019 + t39522;
  t40084 = 3.e-6*t4219*t1465*t1498;
  t40087 = 9.e-12*t4219*t1498*t3863;
  t40088 = t40084 + t40087 + t39619;
  t40091 = -1.000000000009*t1498*t3025;
  t40092 = t40091 + t39625 + t39626;
  t39965 = 6.000000000054e-7*t4219*t1465*t5144;
  t39966 = -0.2000000000018*t4219*t3863*t5144;
  t39967 = t39836*t22101;
  t39971 = t39970*t28553;
  t39972 = t34641*t39970;
  t39977 = t39836*t35079;
  t39989 = t39988*t34475;
  t39990 = t39972 + t39977 + t39989;
  t39991 = 0.100001*t39990;
  t39993 = t29227*t39836;
  t39994 = t39988*t34305;
  t39995 = t39970*t34475;
  t39996 = t39993 + t39994 + t39995;
  t39997 = 0.2*t39996;
  t39998 = t39988*t37335;
  t39999 = t29227*t39988;
  t40000 = t39970*t35079;
  t40001 = t39836*t39076;
  t40002 = t39999 + t40000 + t40001;
  t40003 = -0.3*t40002;
  t40004 = t39965 + t39966 + t39967 + t39971 + t39991 + t39997 + t39998 + t40003;
  t39718 = -0.2000000000018*t4219*t1498;
  t39720 = -0.2000000000018*t1465*t3025*t5144;
  t39721 = -6.000000000054e-7*t3025*t3863*t5144;
  t39730 = t39727*t22101;
  t39753 = t39749*t28553;
  t39754 = t34641*t39749;
  t39755 = t39727*t35079;
  t39760 = t39759*t34475;
  t39761 = t39754 + t39755 + t39760;
  t39762 = 0.100001*t39761;
  t39763 = t29227*t39727;
  t39764 = t39759*t34305;
  t39765 = t39749*t34475;
  t39766 = t39763 + t39764 + t39765;
  t39767 = 0.2*t39766;
  t39768 = t39759*t37335;
  t39781 = t29227*t39759;
  t39787 = t39749*t35079;
  t39793 = t39727*t39076;
  t39794 = t39781 + t39787 + t39793;
  t39795 = -0.3*t39794;
  t39796 = t39718 + t39720 + t39721 + t39730 + t39753 + t39762 + t39767 + t39768 + t39795;
  t40018 = t40017*t17683;
  t40030 = t40029*t17821;
  t40040 = t40035*t17914;
  t40041 = t40035*t19648;
  t40042 = t40017*t18613;
  t40043 = -1.000000000009*t40029*t15669;
  t40045 = t40041 + t40042 + t40043;
  t40046 = -0.3*t40045;
  t40047 = t40029*t19537;
  t40048 = t40017*t19186;
  t40050 = -1.000000000009*t40035*t15669;
  t40051 = t40047 + t40048 + t40050;
  t40054 = 0.2*t40051;
  t40065 = t40035*t18613;
  t40070 = t40029*t19186;
  t40075 = -1.8e-11*t40017*t15669;
  t40076 = t40065 + t40070 + t40075;
  t40077 = 0.100001*t40076;
  t40078 = t40018 + t40030 + t40040 + t40046 + t40054 + t40077;
  t39833 = t39832*t17683;
  t39838 = t39836*t17821;
  t39841 = t39840*t17914;
  t39843 = t39840*t18613;
  t39851 = t39836*t19186;
  t39852 = -1.8e-11*t39832*t15669;
  t39869 = t39843 + t39851 + t39852;
  t39875 = 0.100001*t39869;
  t39876 = t39836*t19537;
  t39880 = t39832*t19186;
  t39881 = -1.000000000009*t39840*t15669;
  t39882 = t39876 + t39880 + t39881;
  t39883 = 0.2*t39882;
  t39884 = t39840*t19648;
  t39885 = t39832*t18613;
  t39886 = -1.000000000009*t39836*t15669;
  t39887 = t39884 + t39885 + t39886;
  t39888 = -0.3*t39887;
  t39889 = t39833 + t39838 + t39841 + t39875 + t39883 + t39888;
  t17686 = t15613*t17683;
  t17830 = t17744*t17821;
  t17928 = t17859*t17914;
  t18671 = t17859*t18613;
  t19511 = t17744*t19186;
  t19520 = -1.8e-11*t15613*t15669;
  t19524 = t18671 + t19511 + t19520;
  t19525 = 0.100001*t19524;
  t19588 = t17744*t19537;
  t19594 = t15613*t19186;
  t19631 = -1.000000000009*t17859*t15669;
  t19639 = t19588 + t19594 + t19631;
  t19642 = 0.2*t19639;
  t19673 = t17859*t19648;
  t19678 = t15613*t18613;
  t19681 = -1.000000000009*t17744*t15669;
  t19799 = t19673 + t19678 + t19681;
  t19827 = -0.3*t19799;
  t19828 = t17686 + t17830 + t17928 + t19525 + t19642 + t19827;
  t40146 = t17709*t3025;
  t40147 = t40146 + t40034 + t39969;
  t40158 = 3.e-6*t4219*t1465*t2023;
  t40159 = -1.*t4219*t3681*t3863;
  t40160 = -3.e-6*t3025*t5144;
  t40161 = t40158 + t40159 + t40160;
  t40174 = t4219*t1465*t1498;
  t40175 = t3025*t5144;
  t40176 = t40174 + t39831 + t40175;
  t40150 = -9.e-12*t15652;
  t40177 = 9.e-12*t15652;
  t40183 = t40161*t19186;
  t41470 = Sin(var1[3]);
  t41468 = Cos(var1[3]);
  t41469 = t41468*t1465*t3025;
  t41471 = -1.*t41470*t3863;
  t41477 = t41469 + t41471;
  t41479 = -1.*t1465*t41470;
  t41482 = -1.*t41468*t3025*t3863;
  t41485 = t41479 + t41482;
  t41553 = -1.*t41468*t4219*t17709;
  t41554 = -1.*t41477*t5144;
  t41566 = 3.e-6*t41485*t5144;
  t41581 = t41553 + t41554 + t41566;
  t41478 = 3.e-6*t2023*t41477;
  t41536 = t3681*t41485;
  t41548 = 3.e-6*t41468*t4219*t5144;
  t41549 = t41478 + t41536 + t41548;
  t41599 = t1498*t41477;
  t41600 = 3.e-6*t2023*t41485;
  t41603 = -1.*t41468*t4219*t5144;
  t41606 = t41599 + t41600 + t41603;
  t41685 = -1.*t41468*t1465*t3025;
  t41690 = t41470*t3863;
  t41692 = t41685 + t41690;
  t41698 = 3.e-6*t2023*t41692;
  t41703 = t1498*t41485;
  t41704 = t41698 + t41703;
  t41717 = t3681*t41692;
  t41718 = t41717 + t41600;
  t41736 = 3.e-6*t41692*t5144;
  t41742 = -1.*t41485*t5144;
  t41753 = t41736 + t41742;
  t43286 = -1.*t1465*t41470*t3025;
  t43447 = -1.*t41468*t3863;
  t43530 = t43286 + t43447;
  t43549 = -1.*t41468*t1465;
  t43581 = t41470*t3025*t3863;
  t43585 = t43549 + t43581;
  t43590 = t1498*t43530;
  t43591 = 3.e-6*t2023*t43585;
  t43599 = t4219*t41470*t5144;
  t43601 = t43590 + t43591 + t43599;
  t43610 = 3.e-6*t2023*t43530;
  t43669 = t3681*t43585;
  t43686 = -3.e-6*t4219*t41470*t5144;
  t43689 = t43610 + t43669 + t43686;
  t43704 = t4219*t17709*t41470;
  t43710 = -1.*t43530*t5144;
  t43712 = 3.e-6*t43585*t5144;
  t43718 = t43704 + t43710 + t43712;
  t45654 = t41468*t4219*t1465*t1498;
  t45655 = -3.e-6*t41468*t4219*t2023*t3863;
  t45656 = t41468*t3025*t5144;
  t45891 = t45654 + t45655 + t45656;
  t45933 = 3.e-6*t41468*t4219*t1465*t2023;
  t46353 = -1.*t41468*t4219*t3681*t3863;
  t46526 = -3.e-6*t41468*t3025*t5144;
  t46738 = t45933 + t46353 + t46526;
  t46896 = t41468*t17709*t3025;
  t46913 = -1.*t41468*t4219*t1465*t5144;
  t47121 = -3.e-6*t41468*t4219*t3863*t5144;
  t47411 = t46896 + t46913 + t47121;
  t48929 = 3.e-6*t41468*t4219*t1498;
  t48934 = 3.e-6*t41477*t5144;
  t48935 = -9.e-12*t41485*t5144;
  t48936 = t48929 + t48934 + t48935;
  t48837 = -1.*t41468*t4219*t1498;
  t48921 = t48837 + t41554 + t41566;
  t48961 = -1.*t1498*t41477;
  t48965 = 3.e-6*t1498*t41485;
  t48967 = 1.000000000009*t41468*t4219*t5144;
  t48973 = t48961 + t48965 + t48967;
  t49436 = t4219*t1465*t1498*t41470;
  t49437 = -3.e-6*t4219*t2023*t41470*t3863;
  t49441 = t41470*t3025*t5144;
  t49452 = t49436 + t49437 + t49441;
  t49278 = t17709*t41470*t3025;
  t49310 = -1.*t4219*t1465*t41470*t5144;
  t49374 = -3.e-6*t4219*t41470*t3863*t5144;
  t49419 = t49278 + t49310 + t49374;
  t49071 = 3.e-6*t4219*t1465*t2023*t41470;
  t49074 = -1.*t4219*t3681*t41470*t3863;
  t49075 = -3.e-6*t41470*t3025*t5144;
  t49077 = t49071 + t49074 + t49075;
  t49626 = -3.e-6*t4219*t1465*t2023*t41470;
  t49627 = -1.*t4219*t1498*t41470*t3863;
  t49628 = t49626 + t49627;
  t49631 = -1.*t4219*t1465*t3681*t41470;
  t49633 = t49631 + t49437;
  t49649 = -3.e-6*t4219*t1465*t41470*t5144;
  t49650 = t4219*t41470*t3863*t5144;
  t49656 = t49649 + t49650;
  t43588 = -0.2000000000018*t4219*t41470*t5144;
  t49762 = -1.*t1465*t1498*t41470*t3025;
  t49769 = 3.e-6*t2023*t41470*t3025*t3863;
  t49790 = t49762 + t49769 + t43599;
  t49796 = -3.e-6*t1465*t2023*t41470*t3025;
  t49797 = t3681*t41470*t3025*t3863;
  t49806 = t49796 + t49797 + t43686;
  t49944 = t1465*t41470*t3025*t5144;
  t49946 = 3.e-6*t41470*t3025*t3863*t5144;
  t49949 = t43704 + t49944 + t49946;
  t45548 = 0.2000000000018*t41468*t4219*t1465*t2023;
  t45550 = 6.000000000054e-7*t41468*t4219*t2023*t3863;
  t45642 = -0.2000000000018*t41468*t3025*t5144;
  t45892 = t45891*t22101;
  t46811 = t46738*t28553;
  t46882 = t29227*t45891;
  t47415 = t47411*t34305;
  t47416 = t46738*t34475;
  t47431 = t46882 + t47415 + t47416;
  t47601 = 0.2*t47431;
  t47602 = t34641*t46738;
  t47603 = t45891*t35079;
  t47727 = t47411*t34475;
  t47851 = t47602 + t47603 + t47727;
  t47852 = 0.100001*t47851;
  t47970 = t47411*t37335;
  t48123 = t29227*t47411;
  t48153 = t46738*t35079;
  t48319 = t45891*t39076;
  t48338 = t48123 + t48153 + t48319;
  t48347 = -0.3*t48338;
  t48577 = t45548 + t45550 + t45642 + t45892 + t46811 + t47601 + t47852 + t47970 + t48347;
  t50605 = -3.e-6*t1498*t41470*t3025;
  t50672 = 3.e-6*t4219*t1465*t41470*t5144;
  t50696 = 9.e-12*t4219*t41470*t3863*t5144;
  t50933 = t50605 + t50672 + t50696;
  t50486 = t1498*t41470*t3025;
  t50487 = t50486 + t49310 + t49374;
  t51410 = -1.*t4219*t1465*t1498*t41470;
  t51417 = -3.e-6*t4219*t1498*t41470*t3863;
  t51423 = -1.000000000009*t41470*t3025*t5144;
  t51539 = t51410 + t51417 + t51423;
  t52452 = t41468*t1465;
  t52459 = -1.*t41470*t3025*t3863;
  t52497 = t52452 + t52459;
  t52896 = t1498*t52497;
  t52897 = t43610 + t52896;
  t52709 = 3.e-6*t43530*t5144;
  t52769 = -1.*t52497*t5144;
  t52774 = t52709 + t52769;
  t52451 = t3681*t43530;
  t52504 = 3.e-6*t2023*t52497;
  t52632 = t52451 + t52504;
  t49617 = 6.000000000054e-7*t4219*t1465*t2023*t41470;
  t49618 = -0.2000000000018*t4219*t2023*t41470*t3863;
  t49630 = t49628*t22101;
  t49638 = t49633*t28553;
  t49642 = t29227*t49628;
  t49657 = t49656*t34305;
  t49664 = t49633*t34475;
  t49670 = t49642 + t49657 + t49664;
  t49671 = 0.2*t49670;
  t49674 = t34641*t49633;
  t49678 = t49628*t35079;
  t49682 = t49656*t34475;
  t49683 = t49674 + t49678 + t49682;
  t49695 = 0.100001*t49683;
  t49696 = t49656*t37335;
  t49708 = t29227*t49656;
  t49709 = t49633*t35079;
  t49721 = t49628*t39076;
  t49723 = t49708 + t49709 + t49721;
  t49731 = -0.3*t49723;
  t49732 = t49617 + t49618 + t49630 + t49638 + t49671 + t49695 + t49696 + t49731;
  t41695 = -6.000000000054e-7*t2023*t41692;
  t41697 = 0.2000000000018*t2023*t41485;
  t41706 = t41704*t22101;
  t41719 = t41718*t28553;
  t41727 = t29227*t41704;
  t41758 = t41753*t34305;
  t41761 = t41718*t34475;
  t41762 = t41727 + t41758 + t41761;
  t41763 = 0.2*t41762;
  t41764 = t34641*t41718;
  t41775 = t41704*t35079;
  t41985 = t41753*t34475;
  t42129 = t41764 + t41775 + t41985;
  t42215 = 0.100001*t42129;
  t42279 = t41753*t37335;
  t42753 = t29227*t41753;
  t42761 = t41718*t35079;
  t42768 = t41704*t39076;
  t42814 = t42753 + t42761 + t42768;
  t42833 = -0.3*t42814;
  t42835 = t41695 + t41697 + t41706 + t41719 + t41763 + t42215 + t42279 + t42833;
  t43543 = 0.2000000000018*t2023*t43530;
  t43587 = -6.000000000054e-7*t2023*t43585;
  t53725 = t43590 + t43591;
  t53748 = t43610 + t43669;
  t53758 = t43710 + t43712;
  t53895 = -9.e-12*t43530*t5144;
  t53903 = 3.e-6*t52497*t5144;
  t53904 = t53895 + t53903;
  t53919 = 3.e-6*t1498*t43530;
  t53925 = -1.*t1498*t52497;
  t53926 = t53919 + t53925;
  t54200 = t1465*t41470*t3025;
  t54221 = t41468*t3863;
  t54223 = t54200 + t54221;
  t54271 = -1.*t4219*t1498*t41470;
  t54278 = -1.*t54223*t5144;
  t54279 = t54271 + t54278 + t53903;
  t54197 = 3.e-6*t4219*t1498*t41470;
  t54231 = 3.e-6*t54223*t5144;
  t54233 = -9.e-12*t52497*t5144;
  t54234 = t54197 + t54231 + t54233;
  t54248 = -1.*t1498*t54223;
  t54249 = 3.e-6*t1498*t52497;
  t54257 = 1.000000000009*t4219*t41470*t5144;
  t54258 = t54248 + t54249 + t54257;
  t54358 = t54248 + t54249 + t43599;
  t54360 = 3.e-6*t1498*t54223;
  t54364 = -9.e-12*t1498*t52497;
  t54369 = t54360 + t54364 + t43686;
  t54383 = 1.000000000009*t4219*t1498*t41470;
  t54384 = t54223*t5144;
  t54386 = -3.e-6*t52497*t5144;
  t54390 = t54383 + t54384 + t54386;
  t50337 = -0.2000000000018*t1498*t41470*t3025;
  t50481 = 0.2000000000018*t4219*t1465*t41470*t5144;
  t50483 = 6.000000000054e-7*t4219*t41470*t3863*t5144;
  t50604 = t50487*t22101;
  t51071 = t50933*t28553;
  t51152 = t34641*t50933;
  t51288 = t50487*t35079;
  t51574 = t51539*t34475;
  t51637 = t51152 + t51288 + t51574;
  t51658 = 0.100001*t51637;
  t51660 = t29227*t50487;
  t51858 = t51539*t34305;
  t51993 = t50933*t34475;
  t52095 = t51660 + t51858 + t51993;
  t52113 = 0.2*t52095;
  t52143 = t51539*t37335;
  t52186 = t29227*t51539;
  t52379 = t50933*t35079;
  t52428 = t50487*t39076;
  t52435 = t52186 + t52379 + t52428;
  t52436 = -0.3*t52435;
  t52438 = t50337 + t50481 + t50483 + t50604 + t51071 + t51658 + t52113 + t52143 + t52436;
  t48638 = 0.2000000000018*t41468*t4219*t1498;
  t48641 = 0.2000000000018*t41477*t5144;
  t48835 = -6.000000000054e-7*t41485*t5144;
  t48925 = t48921*t22101;
  t48937 = t48936*t28553;
  t48951 = t34641*t48936;
  t48955 = t48921*t35079;
  t48974 = t48973*t34475;
  t48976 = t48951 + t48955 + t48974;
  t48977 = 0.100001*t48976;
  t48985 = t29227*t48921;
  t48987 = t48973*t34305;
  t48991 = t48936*t34475;
  t48992 = t48985 + t48987 + t48991;
  t48993 = 0.2*t48992;
  t49004 = t48973*t37335;
  t49005 = t29227*t48973;
  t49021 = t48936*t35079;
  t49027 = t48921*t39076;
  t49035 = t49005 + t49021 + t49027;
  t49037 = -0.3*t49035;
  t49038 = t48638 + t48641 + t48835 + t48925 + t48937 + t48977 + t48993 + t49004 + t49037;
  t53884 = -6.000000000054e-7*t43530*t5144;
  t53890 = 0.2000000000018*t52497*t5144;
  t53891 = t52774*t22101;
  t53906 = t53904*t28553;
  t53908 = t34641*t53904;
  t53918 = t52774*t35079;
  t54023 = t53926*t34475;
  t54028 = t53908 + t53918 + t54023;
  t54038 = 0.100001*t54028;
  t54041 = t29227*t52774;
  t54071 = t53926*t34305;
  t54075 = t53904*t34475;
  t54147 = t54041 + t54071 + t54075;
  t54150 = 0.2*t54147;
  t54151 = t53926*t37335;
  t54164 = t29227*t53926;
  t54165 = t53904*t35079;
  t54166 = t52774*t39076;
  t54170 = t54164 + t54165 + t54166;
  t54173 = -0.3*t54170;
  t54175 = t53884 + t53890 + t53891 + t53906 + t54038 + t54150 + t54151 + t54173;
  t49205 = t49077*t17683;
  t49422 = t49419*t17821;
  t49455 = t49452*t17914;
  t49471 = t49452*t18613;
  t49474 = t49419*t19186;
  t49481 = -1.8e-11*t49077*t15669;
  t49510 = t49471 + t49474 + t49481;
  t49511 = 0.100001*t49510;
  t49533 = t49419*t19537;
  t49538 = t49077*t19186;
  t49541 = -1.000000000009*t49452*t15669;
  t49546 = t49533 + t49538 + t49541;
  t49547 = 0.2*t49546;
  t49548 = t49452*t19648;
  t49552 = t49077*t18613;
  t49555 = -1.000000000009*t49419*t15669;
  t49561 = t49548 + t49552 + t49555;
  t49595 = -0.3*t49561;
  t49597 = t49205 + t49422 + t49455 + t49511 + t49547 + t49595;
  t41550 = t41549*t17683;
  t41587 = t41581*t17821;
  t41607 = t41606*t17914;
  t41612 = t41581*t19537;
  t41625 = t41549*t19186;
  t41626 = -1.000000000009*t41606*t15669;
  t41627 = t41612 + t41625 + t41626;
  t41633 = 0.2*t41627;
  t41635 = t41606*t18613;
  t41638 = t41581*t19186;
  t41646 = -1.8e-11*t41549*t15669;
  t41655 = t41635 + t41638 + t41646;
  t41660 = 0.100001*t41655;
  t41662 = t41606*t19648;
  t41667 = t41549*t18613;
  t41672 = -1.000000000009*t41581*t15669;
  t41673 = t41662 + t41667 + t41672;
  t41674 = -0.3*t41673;
  t41679 = t41550 + t41587 + t41607 + t41633 + t41660 + t41674;
  t52706 = t52632*t17683;
  t52892 = t52774*t17821;
  t52898 = t52897*t17914;
  t52901 = t52897*t18613;
  t53169 = t52774*t19186;
  t53192 = -1.8e-11*t52632*t15669;
  t53371 = t52901 + t53169 + t53192;
  t53384 = 0.100001*t53371;
  t53385 = t52774*t19537;
  t53386 = t52632*t19186;
  t53391 = -1.000000000009*t52897*t15669;
  t53394 = t53385 + t53386 + t53391;
  t53407 = 0.2*t53394;
  t53411 = t52897*t19648;
  t53412 = t52632*t18613;
  t53489 = -1.000000000009*t52774*t15669;
  t53495 = t53411 + t53412 + t53489;
  t53603 = -0.3*t53495;
  t53631 = t52706 + t52892 + t52898 + t53384 + t53407 + t53603;
  t54242 = t54234*t17683;
  t54270 = t54258*t17821;
  t54286 = t54279*t17914;
  t54287 = t54279*t19648;
  t54295 = t54234*t18613;
  t54296 = -1.000000000009*t54258*t15669;
  t54302 = t54287 + t54295 + t54296;
  t54307 = -0.3*t54302;
  t54310 = t54279*t18613;
  t54311 = t54258*t19186;
  t54312 = -1.8e-11*t54234*t15669;
  t54313 = t54310 + t54311 + t54312;
  t54314 = 0.100001*t54313;
  t54317 = t54258*t19537;
  t54321 = t54234*t19186;
  t54323 = -1.000000000009*t54279*t15669;
  t54333 = t54317 + t54321 + t54323;
  t54335 = 0.2*t54333;
  t54336 = t54242 + t54270 + t54286 + t54307 + t54314 + t54335;
  t40149 = 0.1000000000009*t15652;
  t40151 = t40150 + t21155;
  t40152 = 0.2*t40151;
  t40153 = -9.e-7*t18613;
  t40154 = t40149 + t40152 + t40153;
  t40167 = -1.62e-17*t15652;
  t40168 = 0.1*t16322;
  t40169 = 0.2*t18613;
  t40170 = t40167 + t40168 + t40169;
  t54530 = 3.e-6*t2023*t54223;
  t54538 = t3681*t52497;
  t54551 = 3.e-6*t4219*t41470*t5144;
  t54559 = t54530 + t54538 + t54551;
  t54509 = -1.*t4219*t17709*t41470;
  t54513 = t54509 + t54278 + t53903;
  t54578 = t1498*t54223;
  t54586 = -1.*t4219*t41470*t5144;
  t54597 = t54578 + t52504 + t54586;
  t40178 = t40177 + t21155;
  t40213 = 0.2000000000018*t15652;
  t40214 = t40150 + t15669;
  t40220 = 0.1*t40214;
  t40234 = t40213 + t17769 + t40220;
  t40240 = t40177 + t15669;
  t54616 = t54559*t19186;
  t55659 = t54559*t17683;
  t55674 = t54513*t17821;
  t55679 = t54597*t17914;
  t55681 = t54513*t19537;
  t55689 = -1.000000000009*t54597*t15669;
  t55690 = t55681 + t54616 + t55689;
  t55694 = 0.2*t55690;
  t55696 = t54597*t18613;
  t55697 = t54513*t19186;
  t55702 = -1.8e-11*t54559*t15669;
  t55709 = t55696 + t55697 + t55702;
  t55720 = 0.100001*t55709;
  t55724 = t54597*t19648;
  t55728 = t54559*t18613;
  t55737 = -1.000000000009*t54513*t15669;
  t55757 = t55724 + t55728 + t55737;
  t55763 = -0.3*t55757;
  t55773 = t55659 + t55674 + t55679 + t55694 + t55720 + t55763;
  t55187 = -6.000000000054e-7*t2023*t43530;
  t55189 = 0.2000000000018*t2023*t52497;
  t55208 = t52897*t22101;
  t55240 = t52632*t28553;
  t55267 = t29227*t52897;
  t55281 = t52774*t34305;
  t55310 = t52632*t34475;
  t55314 = t55267 + t55281 + t55310;
  t55315 = 0.2*t55314;
  t55318 = t34641*t52632;
  t55323 = t52897*t35079;
  t55325 = t52774*t34475;
  t55331 = t55318 + t55323 + t55325;
  t55342 = 0.100001*t55331;
  t55350 = t52774*t37335;
  t55352 = t52632*t35079;
  t55357 = t52897*t39076;
  t55423 = t54041 + t55352 + t55357;
  t55468 = -0.3*t55423;
  t55514 = t55187 + t55189 + t55208 + t55240 + t55315 + t55342 + t55350 + t55468;
  t54650 = 0.2000000000018*t2023*t41477;
  t54657 = -6.000000000054e-7*t2023*t41485;
  t54663 = 0.2000000000018*t41468*t4219*t5144;
  t54665 = t41606*t22101;
  t54669 = t41549*t28553;
  t54675 = t29227*t41606;
  t54677 = t41581*t34305;
  t54685 = t41549*t34475;
  t54686 = t54675 + t54677 + t54685;
  t54695 = 0.2*t54686;
  t54696 = t34641*t41549;
  t54706 = t41606*t35079;
  t54708 = t41581*t34475;
  t54713 = t54696 + t54706 + t54708;
  t54714 = 0.100001*t54713;
  t54716 = t41581*t37335;
  t54727 = t29227*t41581;
  t54728 = t41549*t35079;
  t54734 = t41606*t39076;
  t54735 = t54727 + t54728 + t54734;
  t54799 = -0.3*t54735;
  t54805 = t54650 + t54657 + t54663 + t54665 + t54669 + t54695 + t54714 + t54716 + t54799;
  t54825 = 0.2000000000018*t4219*t1465*t2023*t41470;
  t54826 = 6.000000000054e-7*t4219*t2023*t41470*t3863;
  t54866 = -0.2000000000018*t41470*t3025*t5144;
  t54876 = t49452*t22101;
  t54912 = t49077*t28553;
  t54915 = t29227*t49452;
  t54928 = t49419*t34305;
  t54993 = t49077*t34475;
  t55004 = t54915 + t54928 + t54993;
  t55012 = 0.2*t55004;
  t55015 = t34641*t49077;
  t55022 = t49452*t35079;
  t55023 = t49419*t34475;
  t55027 = t55015 + t55022 + t55023;
  t55034 = 0.100001*t55027;
  t55043 = t49419*t37335;
  t55064 = t29227*t49419;
  t55105 = t49077*t35079;
  t55112 = t49452*t39076;
  t55134 = t55064 + t55105 + t55112;
  t55139 = -0.3*t55134;
  t55142 = t54825 + t54826 + t54866 + t54876 + t54912 + t55012 + t55034 + t55043 + t55139;
  t55527 = 0.2000000000018*t4219*t1498*t41470;
  t55533 = 0.2000000000018*t54223*t5144;
  t55535 = -6.000000000054e-7*t52497*t5144;
  t55543 = t54279*t22101;
  t55544 = t54234*t28553;
  t55550 = t34641*t54234;
  t55551 = t54279*t35079;
  t55567 = t54258*t34475;
  t55568 = t55550 + t55551 + t55567;
  t55575 = 0.100001*t55568;
  t55576 = t29227*t54279;
  t55587 = t54258*t34305;
  t55588 = t54234*t34475;
  t55596 = t55576 + t55587 + t55588;
  t55597 = 0.2*t55596;
  t55612 = t54258*t37335;
  t55615 = t29227*t54258;
  t55617 = t54234*t35079;
  t55620 = t54279*t39076;
  t55622 = t55615 + t55617 + t55620;
  t55627 = -0.3*t55622;
  t55650 = t55527 + t55533 + t55535 + t55543 + t55544 + t55575 + t55597 + t55612 + t55627;
  t55883 = -1.*t41468*t17709*t3025;
  t55890 = t41468*t4219*t1465*t5144;
  t55893 = 3.e-6*t41468*t4219*t3863*t5144;
  t55896 = t55883 + t55890 + t55893;
  t55869 = -3.e-6*t41468*t4219*t1465*t2023;
  t55871 = t41468*t4219*t3681*t3863;
  t55874 = 3.e-6*t41468*t3025*t5144;
  t55877 = t55869 + t55871 + t55874;
  t55906 = -1.*t41468*t4219*t1465*t1498;
  t55909 = 3.e-6*t41468*t4219*t2023*t3863;
  t55955 = -1.*t41468*t3025*t5144;
  t55963 = t55906 + t55909 + t55955;
  t56072 = t41468*t4219*t1498*t3863;
  t56114 = t45933 + t56072;
  t56123 = t41468*t4219*t1465*t3681;
  t56124 = t56123 + t55909;
  t56137 = 3.e-6*t41468*t4219*t1465*t5144;
  t56138 = -1.*t41468*t4219*t3863*t5144;
  t56139 = t56137 + t56138;
  t56408 = t41468*t1465*t1498*t3025;
  t56411 = -3.e-6*t41468*t2023*t3025*t3863;
  t56425 = t56408 + t56411 + t41603;
  t56433 = 3.e-6*t41468*t1465*t2023*t3025;
  t56437 = -1.*t41468*t3681*t3025*t3863;
  t56443 = t56433 + t56437 + t41548;
  t56454 = -1.*t41468*t1465*t3025*t5144;
  t56455 = -3.e-6*t41468*t3025*t3863*t5144;
  t56511 = t41553 + t56454 + t56455;
  t56752 = 3.e-6*t41468*t1498*t3025;
  t56766 = -3.e-6*t41468*t4219*t1465*t5144;
  t56787 = -9.e-12*t41468*t4219*t3863*t5144;
  t56793 = t56752 + t56766 + t56787;
  t56715 = -1.*t41468*t1498*t3025;
  t56733 = t56715 + t55890 + t55893;
  t56808 = 3.e-6*t41468*t4219*t1498*t3863;
  t56820 = 1.000000000009*t41468*t3025*t5144;
  t56827 = t45654 + t56808 + t56820;
  t56964 = t1465*t41470;
  t56969 = t41468*t3025*t3863;
  t56999 = t56964 + t56969;
  t57040 = t1498*t56999;
  t57042 = t41478 + t57040;
  t57022 = -1.*t56999*t5144;
  t57027 = t48934 + t57022;
  t56958 = t3681*t41477;
  t57006 = 3.e-6*t2023*t56999;
  t57013 = t56958 + t57006;
  t56070 = -6.000000000054e-7*t41468*t4219*t1465*t2023;
  t56071 = 0.2000000000018*t41468*t4219*t2023*t3863;
  t56122 = t56114*t22101;
  t56128 = t56124*t28553;
  t56129 = t29227*t56114;
  t56145 = t56139*t34305;
  t56154 = t56124*t34475;
  t56173 = t56129 + t56145 + t56154;
  t56177 = 0.2*t56173;
  t56179 = t34641*t56124;
  t56184 = t56114*t35079;
  t56201 = t56139*t34475;
  t56207 = t56179 + t56184 + t56201;
  t56233 = 0.100001*t56207;
  t56239 = t56139*t37335;
  t56244 = t29227*t56139;
  t56248 = t56124*t35079;
  t56276 = t56114*t39076;
  t56280 = t56244 + t56248 + t56276;
  t56299 = -0.3*t56280;
  t56306 = t56070 + t56071 + t56122 + t56128 + t56177 + t56233 + t56239 + t56299;
  t57341 = t41599 + t41600;
  t57349 = t41478 + t41536;
  t57377 = t41554 + t41566;
  t57481 = -9.e-12*t41477*t5144;
  t57484 = 3.e-6*t56999*t5144;
  t57487 = t57481 + t57484;
  t57509 = 3.e-6*t1498*t41477;
  t57530 = -1.*t1498*t56999;
  t57531 = t57509 + t57530;
  t57815 = t41468*t4219*t1498;
  t57817 = -1.*t41692*t5144;
  t57822 = t57815 + t57817 + t57484;
  t57681 = -3.e-6*t41468*t4219*t1498;
  t57696 = -9.e-12*t56999*t5144;
  t57716 = t57681 + t41736 + t57696;
  t57728 = -1.*t1498*t41692;
  t57751 = 3.e-6*t1498*t56999;
  t57768 = -1.000000000009*t41468*t4219*t5144;
  t57811 = t57728 + t57751 + t57768;
  t57975 = t57728 + t57751 + t41603;
  t57982 = 3.e-6*t1498*t41692;
  t57998 = -9.e-12*t1498*t56999;
  t57999 = t57982 + t57998 + t41548;
  t58007 = -1.000000000009*t41468*t4219*t1498;
  t58008 = t41692*t5144;
  t58010 = -3.e-6*t56999*t5144;
  t58059 = t58007 + t58008 + t58010;
  t56687 = 0.2000000000018*t41468*t1498*t3025;
  t56691 = -0.2000000000018*t41468*t4219*t1465*t5144;
  t56708 = -6.000000000054e-7*t41468*t4219*t3863*t5144;
  t56749 = t56733*t22101;
  t56794 = t56793*t28553;
  t56802 = t34641*t56793;
  t56806 = t56733*t35079;
  t56833 = t56827*t34475;
  t56835 = t56802 + t56806 + t56833;
  t56839 = 0.100001*t56835;
  t56840 = t29227*t56733;
  t56844 = t56827*t34305;
  t56846 = t56793*t34475;
  t56877 = t56840 + t56844 + t56846;
  t56878 = 0.2*t56877;
  t56894 = t56827*t37335;
  t56896 = t29227*t56827;
  t56897 = t56793*t35079;
  t56899 = t56733*t39076;
  t56903 = t56896 + t56897 + t56899;
  t56904 = -0.3*t56903;
  t56934 = t56687 + t56691 + t56708 + t56749 + t56794 + t56839 + t56878 + t56894 + t56904;
  t57454 = -6.000000000054e-7*t41477*t5144;
  t57474 = 0.2000000000018*t56999*t5144;
  t57478 = t57027*t22101;
  t57497 = t57487*t28553;
  t57501 = t34641*t57487;
  t57505 = t57027*t35079;
  t57532 = t57531*t34475;
  t57533 = t57501 + t57505 + t57532;
  t57537 = 0.100001*t57533;
  t57538 = t29227*t57027;
  t57539 = t57531*t34305;
  t57548 = t57487*t34475;
  t57556 = t57538 + t57539 + t57548;
  t57617 = 0.2*t57556;
  t57622 = t57531*t37335;
  t57628 = t29227*t57531;
  t57635 = t57487*t35079;
  t57641 = t57027*t39076;
  t57644 = t57628 + t57635 + t57641;
  t57648 = -0.3*t57644;
  t57655 = t57454 + t57474 + t57478 + t57497 + t57537 + t57617 + t57622 + t57648;
  t55878 = t55877*t17683;
  t55905 = t55896*t17821;
  t55968 = t55963*t17914;
  t55969 = t55896*t19537;
  t55975 = t55877*t19186;
  t55976 = -1.000000000009*t55963*t15669;
  t55985 = t55969 + t55975 + t55976;
  t55987 = 0.2*t55985;
  t56023 = t55963*t18613;
  t56028 = t55896*t19186;
  t56030 = -1.8e-11*t55877*t15669;
  t56032 = t56023 + t56028 + t56030;
  t56035 = 0.100001*t56032;
  t56040 = t55963*t19648;
  t56045 = t55877*t18613;
  t56048 = -1.000000000009*t55896*t15669;
  t56053 = t56040 + t56045 + t56048;
  t56058 = -0.3*t56053;
  t56061 = t55878 + t55905 + t55968 + t55987 + t56035 + t56058;
  t57020 = t57013*t17683;
  t57036 = t57027*t17821;
  t57046 = t57042*t17914;
  t57050 = t57042*t18613;
  t57052 = t57027*t19186;
  t57057 = -1.8e-11*t57013*t15669;
  t57062 = t57050 + t57052 + t57057;
  t57064 = 0.100001*t57062;
  t57206 = t57027*t19537;
  t57208 = t57013*t19186;
  t57239 = -1.000000000009*t57042*t15669;
  t57242 = t57206 + t57208 + t57239;
  t57251 = 0.2*t57242;
  t57278 = t57042*t19648;
  t57290 = t57013*t18613;
  t57295 = -1.000000000009*t57027*t15669;
  t57302 = t57278 + t57290 + t57295;
  t57311 = -0.3*t57302;
  t57318 = t57020 + t57036 + t57046 + t57064 + t57251 + t57311;
  t57717 = t57716*t17683;
  t57814 = t57811*t17821;
  t57824 = t57822*t17914;
  t57831 = t57822*t19648;
  t57835 = t57716*t18613;
  t57837 = -1.000000000009*t57811*t15669;
  t57838 = t57831 + t57835 + t57837;
  t57847 = -0.3*t57838;
  t57848 = t57822*t18613;
  t57849 = t57811*t19186;
  t57850 = -1.8e-11*t57716*t15669;
  t57855 = t57848 + t57849 + t57850;
  t57856 = 0.100001*t57855;
  t57857 = t57811*t19537;
  t57912 = t57716*t19186;
  t57918 = -1.000000000009*t57822*t15669;
  t57946 = t57857 + t57912 + t57918;
  t57963 = 0.2*t57946;
  t57966 = t57717 + t57814 + t57824 + t57847 + t57856 + t57963;
  t58234 = t41468*t4219*t17709;
  t58257 = t58234 + t57817 + t57484;
  t58265 = t3681*t56999;
  t58267 = -3.e-6*t41468*t4219*t5144;
  t58268 = t41698 + t58265 + t58267;
  t58273 = t1498*t41692;
  t58291 = t41468*t4219*t5144;
  t58294 = t58273 + t57006 + t58291;
  t58297 = t58268*t19186;
  p_output1[0]=(t39437 + t39452 + t39470 + t22101*t39564 + t28553*t39620 + t37335*t39632 - 0.3*(t39076*t39564 + t35079*t39620 + t29227*t39632) + 0.2*(t29227*t39564 + t34475*t39620 + t34305*t39632) + 0.100001*(t35079*t39564 + t34641*t39620 + t34475*t39632))*var2[4] + t39423*var2[5] + t39796*var2[6] + t19828*var2[8];
  p_output1[1]=t39423*var2[4] + (t39437 + t39452 + t22101*t39894 + t28553*t39900 + t37335*t39908 - 0.3*(t39076*t39894 + t35079*t39900 + t29227*t39908) + 0.2*(t29227*t39894 + t34475*t39900 + t34305*t39908) + 0.100001*(t35079*t39894 + t34641*t39900 + t34475*t39908))*var2[5] + t40004*var2[6] + t39889*var2[8];
  p_output1[2]=t39796*var2[4] + t40004*var2[5] + (t39470 + t22101*t40082 + t28553*t40088 + t37335*t40092 - 0.3*(t39076*t40082 + t35079*t40088 + t29227*t40092) + 0.2*(t29227*t40082 + t34475*t40088 + t34305*t40092) + 0.100001*(t35079*t40082 + t34641*t40088 + t34475*t40092) + 0.2000000000018*t1465*t1498*t4219 + 6.000000000054e-7*t1498*t3863*t4219)*var2[6] + t40078*var2[8];
  p_output1[3]=t19828*var2[4] + t39889*var2[5] + t40078*var2[6] + (t40147*t40154 + t40161*t40170 + 0.100001*(t16354*t40147 - 1.8e-11*t15652*t40161 + t19186*t40176) - 0.3*(-1.000000000009*t15652*t40147 + t40176*t40178 + t40183) + t40176*t40234 + 0.2*(t16354*t40161 - 1.000000000009*t15652*t40176 + t40147*t40240))*var2[8];
  p_output1[4]=1.;
  p_output1[5]=t17859*t22101 + t15613*t28553 - 0.2000000000018*t1465*t2023*t3025 + 0.2*(t17859*t29227 + t17744*t34305 + t15613*t34475) + 0.100001*(t17744*t34475 + t15613*t34641 + t17859*t35079) + t17744*t37335 - 6.000000000054e-7*t2023*t3025*t3863 - 0.3*(t17744*t29227 + t15613*t35079 + t17859*t39076) - 0.2000000000018*t4219*t5144;
  p_output1[6]=t28553*t39832 + t37335*t39836 + t22101*t39840 + 0.2*(t34475*t39832 + t34305*t39836 + t29227*t39840) + 0.100001*(t34641*t39832 + t34475*t39836 + t35079*t39840) - 0.3*(t35079*t39832 + t39076*t39840 + t39993) + 6.000000000054e-7*t1465*t2023*t4219 - 0.2000000000018*t2023*t3863*t4219;
  p_output1[7]=-0.2000000000018*t1498*t3025 + t28553*t40017 + t37335*t40029 + t22101*t40035 + 0.2*(t34475*t40017 + t34305*t40029 + t29227*t40035) + 0.100001*(t34641*t40017 + t34475*t40029 + t35079*t40035) - 0.3*(t35079*t40017 + t29227*t40029 + t39076*t40035) + 0.2000000000018*t1465*t4219*t5144 + 6.000000000054e-7*t3863*t4219*t5144;
  p_output1[8]=t17821*t40147 + t17683*t40161 + t17914*t40176 + 0.100001*(t19186*t40147 - 1.8e-11*t15669*t40161 + t18613*t40176) - 0.3*(-1.000000000009*t15669*t40147 + t18613*t40161 + t19648*t40176) + 0.2*(t19537*t40147 - 1.000000000009*t15669*t40176 + t40183);
  p_output1[9]=(t43543 + t43587 + t43588 + t22101*t43601 + t28553*t43689 + t37335*t43718 - 0.3*(t39076*t43601 + t35079*t43689 + t29227*t43718) + 0.2*(t29227*t43601 + t34475*t43689 + t34305*t43718) + 0.100001*(t35079*t43601 + t34641*t43689 + t34475*t43718))*var2[3] + t48577*var2[4] + t42835*var2[5] + t49038*var2[6] + t41679*var2[8];
  p_output1[10]=t48577*var2[3] + (-0.2000000000018*t1465*t2023*t3025*t41470 - 6.000000000054e-7*t2023*t3025*t3863*t41470 + t43588 + t22101*t49790 + t28553*t49806 + t37335*t49949 - 0.3*(t39076*t49790 + t35079*t49806 + t29227*t49949) + 0.2*(t29227*t49790 + t34475*t49806 + t34305*t49949) + 0.100001*(t35079*t49790 + t34641*t49806 + t34475*t49949))*var2[4] + t49732*var2[5] + t52438*var2[6] + t49597*var2[8];
  p_output1[11]=t42835*var2[3] + t49732*var2[4] + (t43543 + t43587 + t22101*t53725 + t28553*t53748 + t37335*t53758 - 0.3*(t39076*t53725 + t35079*t53748 + t29227*t53758) + 0.2*(t29227*t53725 + t34475*t53748 + t34305*t53758) + 0.100001*(t35079*t53725 + t34641*t53748 + t34475*t53758))*var2[5] + t54175*var2[6] + t53631*var2[8];
  p_output1[12]=t49038*var2[3] + t52438*var2[4] + t54175*var2[5] + (t43588 - 6.000000000054e-7*t1498*t52497 + 0.2000000000018*t1498*t54223 + t22101*t54358 + t28553*t54369 + t37335*t54390 - 0.3*(t39076*t54358 + t35079*t54369 + t29227*t54390) + 0.2*(t29227*t54358 + t34475*t54369 + t34305*t54390) + 0.100001*(t35079*t54358 + t34641*t54369 + t34475*t54390))*var2[6] + t54336*var2[8];
  p_output1[13]=t41679*var2[3] + t49597*var2[4] + t53631*var2[5] + t54336*var2[6] + (t40154*t54513 + t40170*t54559 + t40234*t54597 + 0.2*(t40240*t54513 + t16354*t54559 - 1.000000000009*t15652*t54597) + 0.100001*(t16354*t54513 - 1.8e-11*t15652*t54559 + t19186*t54597) - 0.3*(-1.000000000009*t15652*t54513 + t40178*t54597 + t54616))*var2[8];
  p_output1[14]=1.;
  p_output1[15]=t54805;
  p_output1[16]=t55142;
  p_output1[17]=t55514;
  p_output1[18]=t55650;
  p_output1[19]=t55773;
  p_output1[20]=t54805*var2[3] + t55142*var2[4] + t55514*var2[5] + t55650*var2[6] + t55773*var2[8];
  p_output1[21]=t55142*var2[3] + (0.2000000000018*t1465*t2023*t3025*t41468 + 6.000000000054e-7*t2023*t3025*t3863*t41468 + t54663 + t22101*t56425 + t28553*t56443 + t37335*t56511 - 0.3*(t39076*t56425 + t35079*t56443 + t29227*t56511) + 0.2*(t29227*t56425 + t34475*t56443 + t34305*t56511) + 0.100001*(t35079*t56425 + t34641*t56443 + t34475*t56511))*var2[4] + t56306*var2[5] + t56934*var2[6] + t56061*var2[8];
  p_output1[22]=t55514*var2[3] + t56306*var2[4] + (t54650 + t54657 + t22101*t57341 + t28553*t57349 + t37335*t57377 - 0.3*(t39076*t57341 + t35079*t57349 + t29227*t57377) + 0.2*(t29227*t57341 + t34475*t57349 + t34305*t57377) + 0.100001*(t35079*t57341 + t34641*t57349 + t34475*t57377))*var2[5] + t57655*var2[6] + t57318*var2[8];
  p_output1[23]=t55650*var2[3] + t56934*var2[4] + t57655*var2[5] + (0.2000000000018*t1498*t41692 + t54663 - 6.000000000054e-7*t1498*t56999 + t22101*t57975 + t28553*t57999 + t37335*t58059 - 0.3*(t39076*t57975 + t35079*t57999 + t29227*t58059) + 0.2*(t29227*t57975 + t34475*t57999 + t34305*t58059) + 0.100001*(t35079*t57975 + t34641*t57999 + t34475*t58059))*var2[6] + t57966*var2[8];
  p_output1[24]=t55773*var2[3] + t56061*var2[4] + t57318*var2[5] + t57966*var2[6] + (t40154*t58257 + t40170*t58268 + t40234*t58294 + 0.2*(t40240*t58257 + t16354*t58268 - 1.000000000009*t15652*t58294) + 0.100001*(t16354*t58257 - 1.8e-11*t15652*t58268 + t19186*t58294) - 0.3*(-1.000000000009*t15652*t58257 + t40178*t58294 + t58297))*var2[8];
  p_output1[25]=1.;
  p_output1[26]=0.2000000000018*t41470*t4219*t5144 - 6.000000000054e-7*t2023*t52497 + 0.2000000000018*t2023*t54223 + t37335*t54513 + t28553*t54559 + t22101*t54597 + 0.2*(t34305*t54513 + t34475*t54559 + t29227*t54597) + 0.100001*(t34475*t54513 + t34641*t54559 + t35079*t54597) - 0.3*(t29227*t54513 + t35079*t54559 + t39076*t54597);
  p_output1[27]=-0.2000000000018*t1465*t2023*t41468*t4219 - 6.000000000054e-7*t2023*t3863*t41468*t4219 + 0.2000000000018*t3025*t41468*t5144 + t28553*t55877 + t37335*t55896 + t22101*t55963 + 0.2*(t34475*t55877 + t34305*t55896 + t29227*t55963) + 0.100001*(t34641*t55877 + t34475*t55896 + t35079*t55963) - 0.3*(t35079*t55877 + t29227*t55896 + t39076*t55963);
  p_output1[28]=-6.000000000054e-7*t2023*t41477 + 0.2000000000018*t2023*t56999 + t28553*t57013 + t37335*t57027 + t22101*t57042 + 0.2*(t34475*t57013 + t34305*t57027 + t29227*t57042) + 0.100001*(t34641*t57013 + t34475*t57027 + t35079*t57042) - 0.3*(t35079*t57013 + t39076*t57042 + t57538);
  p_output1[29]=-0.2000000000018*t1498*t41468*t4219 + 0.2000000000018*t41692*t5144 - 6.000000000054e-7*t5144*t56999 + t28553*t57716 + t37335*t57811 + t22101*t57822 + 0.2*(t34475*t57716 + t34305*t57811 + t29227*t57822) + 0.100001*(t34641*t57716 + t34475*t57811 + t35079*t57822) - 0.3*(t35079*t57716 + t29227*t57811 + t39076*t57822);
  p_output1[30]=t17821*t58257 + t17683*t58268 + t17914*t58294 + 0.100001*(t19186*t58257 - 1.8e-11*t15669*t58268 + t18613*t58294) - 0.3*(-1.000000000009*t15669*t58257 + t18613*t58268 + t19648*t58294) + 0.2*(t19537*t58257 - 1.000000000009*t15669*t58294 + t58297);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 31, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_LeftFrontFoot_FrontStance.hh"

namespace FrontStance
{

void J_dh_LeftFrontFoot_FrontStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
