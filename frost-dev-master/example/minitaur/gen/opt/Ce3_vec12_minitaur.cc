/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:13:10 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t12426;
  double t44271;
  double t44374;
  double t45323;
  double t48134;
  double t48148;
  double t49641;
  double t48276;
  double t48418;
  double t48438;
  double t50411;
  double t50468;
  double t50617;
  double t50618;
  double t50624;
  double t50744;
  double t50816;
  double t50851;
  double t50873;
  double t49101;
  double t49137;
  double t49367;
  double t49599;
  double t50245;
  double t50323;
  double t33212;
  double t12490;
  double t11039;
  double t39164;
  double t160;
  double t51654;
  double t51733;
  double t8409;
  double t12671;
  double t48492;
  double t48746;
  double t50384;
  double t51198;
  double t50627;
  double t50884;
  double t51268;
  double t53660;
  double t53669;
  double t53701;
  double t50985;
  double t51393;
  double t51466;
  double t55384;
  double t55395;
  double t55469;
  double t11993;
  double t12772;
  double t15067;
  double t45386;
  double t45445;
  double t47231;
  double t48084;
  double t50912;
  double t50932;
  double t51496;
  double t51502;
  double t51551;
  double t51645;
  double t51748;
  double t51859;
  double t52051;
  double t52072;
  double t52124;
  double t52172;
  double t52182;
  double t52388;
  double t52470;
  double t52488;
  double t52491;
  double t52505;
  double t52534;
  double t52753;
  double t53260;
  double t53421;
  double t53541;
  double t53556;
  double t53620;
  double t53763;
  double t53794;
  double t53889;
  double t54103;
  double t54210;
  double t54273;
  double t54467;
  double t54523;
  double t54539;
  double t54671;
  double t54723;
  double t54894;
  double t55000;
  double t55197;
  double t55206;
  double t55224;
  double t55356;
  double t55508;
  double t55520;
  double t55593;
  double t55611;
  double t55625;
  double t55656;
  double t55718;
  double t55758;
  double t55786;
  double t55800;
  double t55824;
  double t56480;
  double t56497;
  double t56498;
  double t56508;
  double t56510;
  double t56918;
  double t56953;
  double t56970;
  double t56975;
  double t57140;
  double t57142;
  double t57143;
  double t57436;
  double t57438;
  double t57441;
  double t57468;
  double t57469;
  double t57473;
  double t57475;
  double t57545;
  double t57551;
  double t57553;
  double t57557;
  double t57692;
  double t57695;
  double t57699;
  double t57787;
  double t57827;
  double t58217;
  double t57457;
  double t57587;
  double t57589;
  double t57675;
  double t57676;
  double t57678;
  double t59834;
  double t59851;
  double t60124;
  double t61137;
  double t61140;
  double t61147;
  double t61179;
  double t61186;
  double t61187;
  double t61196;
  double t61201;
  double t61204;
  double t61208;
  double t61748;
  double t61759;
  double t61801;
  double t61821;
  double t61852;
  double t61855;
  double t61374;
  double t61568;
  double t61711;
  double t61182;
  double t61220;
  double t61224;
  double t61036;
  double t61067;
  double t61126;
  double t62011;
  double t62012;
  double t62039;
  double t62116;
  double t62122;
  double t62126;
  double t62441;
  double t62451;
  double t62458;
  double t62462;
  double t62463;
  double t62473;
  double t62475;
  double t62483;
  double t60474;
  double t62616;
  double t62618;
  double t62624;
  double t60900;
  double t62040;
  double t62094;
  double t62730;
  double t62731;
  double t62740;
  double t62179;
  double t62231;
  double t62332;
  double t62414;
  double t59830;
  double t59832;
  double t60693;
  double t62626;
  double t62646;
  double t60779;
  double t60832;
  double t60908;
  double t62745;
  double t62748;
  double t62790;
  double t62799;
  double t62042;
  double t62044;
  double t62045;
  double t62098;
  double t62102;
  double t62110;
  double t62837;
  double t62840;
  double t62181;
  double t62188;
  double t62190;
  double t62870;
  double t62874;
  double t62236;
  double t62237;
  double t62272;
  double t62895;
  double t62899;
  double t62345;
  double t62361;
  double t62363;
  double t62938;
  double t62941;
  double t62415;
  double t62416;
  double t62425;
  double t62705;
  double t63421;
  double t63422;
  double t63433;
  double t63477;
  double t63492;
  double t63497;
  double t62754;
  double t62816;
  double t63441;
  double t63451;
  double t63456;
  double t62850;
  double t62887;
  double t62909;
  double t57684;
  double t57685;
  double t57689;
  double t64018;
  double t64022;
  double t64032;
  double t64046;
  double t64048;
  double t64050;
  double t64080;
  double t64086;
  double t64100;
  double t64210;
  double t64216;
  double t64219;
  double t62612;
  double t62613;
  double t63507;
  double t62719;
  double t62722;
  double t63552;
  double t63568;
  double t62758;
  double t62762;
  double t63641;
  double t62823;
  double t62825;
  double t63722;
  double t63783;
  double t62855;
  double t62856;
  double t63840;
  double t63852;
  double t62888;
  double t62889;
  double t63924;
  double t63941;
  double t62916;
  double t62922;
  double t63980;
  double t63981;
  double t63984;
  double t63990;
  double t63993;
  double t63997;
  double t64001;
  double t64004;
  double t64007;
  double t66992;
  double t66994;
  double t66996;
  double t66426;
  double t66562;
  double t66888;
  double t67037;
  double t67038;
  double t67107;
  double t64465;
  double t64471;
  double t64472;
  double t64514;
  double t64516;
  double t64541;
  double t64545;
  double t67195;
  double t67203;
  double t67210;
  double t67218;
  double t67381;
  double t67489;
  double t64594;
  double t64596;
  double t64612;
  double t64629;
  double t64701;
  double t64718;
  double t64975;
  double t65434;
  double t68979;
  double t68997;
  double t69020;
  double t69025;
  double t69032;
  double t69033;
  double t69034;
  double t69002;
  double t69003;
  double t69030;
  double t69031;
  double t69035;
  double t69039;
  double t69044;
  double t69048;
  double t69050;
  double t69051;
  double t69078;
  double t69080;
  double t68976;
  double t69027;
  double t69028;
  double t69029;
  double t69040;
  double t69045;
  double t69049;
  double t69063;
  double t69068;
  double t69069;
  double t69071;
  double t69076;
  double t69077;
  double t69081;
  double t69085;
  double t69086;
  double t69087;
  double t69091;
  double t69092;
  double t69093;
  double t69094;
  double t63472;
  double t63474;
  double t63584;
  double t63590;
  double t63592;
  double t63662;
  double t63665;
  double t63687;
  double t63689;
  double t63695;
  double t63890;
  double t63896;
  double t63909;
  double t63915;
  double t69115;
  double t69117;
  double t69120;
  double t69193;
  double t69206;
  double t69209;
  double t69256;
  double t69258;
  double t69259;
  double t69110;
  double t69112;
  double t69324;
  double t69325;
  double t69506;
  double t69507;
  double t69611;
  double t69613;
  double t69617;
  double t69738;
  double t69745;
  double t69750;
  double t56011;
  double t56013;
  double t56060;
  double t56224;
  double t56284;
  double t56291;
  double t69835;
  double t69877;
  double t69891;
  double t69897;
  double t69935;
  double t69943;
  double t69997;
  double t70001;
  double t70014;
  double t70024;
  double t70027;
  double t70031;
  double t56302;
  double t56343;
  double t56349;
  double t69225;
  double t69393;
  double t69424;
  double t70195;
  double t70196;
  double t70201;
  double t70191;
  double t70192;
  double t70193;
  double t69488;
  double t69491;
  double t69504;
  double t69505;
  double t69517;
  double t69538;
  double t69539;
  double t69604;
  double t69687;
  double t69699;
  double t69735;
  double t69752;
  double t69758;
  double t71567;
  double t71911;
  double t71937;
  double t72301;
  double t72302;
  double t72307;
  double t72326;
  double t72328;
  double t72329;
  double t70194;
  double t70229;
  double t70231;
  double t70276;
  double t70277;
  double t70246;
  double t70247;
  t12426 = Cos(var1[11]);
  t44271 = Cos(var1[13]);
  t44374 = -1.*t44271;
  t45323 = 1. + t44374;
  t48134 = -9.e-12*t45323;
  t48148 = 1. + t48134;
  t49641 = Sin(var1[13]);
  t48276 = -3.e-6*t48148;
  t48418 = 3.e-6*t45323;
  t48438 = t48276 + t48418;
  t50411 = 4.e-7*var1[13];
  t50468 = 0.1*t48148;
  t50617 = 3.000000000027e-7*t45323;
  t50618 = 9.e-18*t49641;
  t50624 = t50411 + t50468 + t50617 + t50618;
  t50744 = -1.2e-12*var1[13];
  t50816 = 0.0999997000009*t45323;
  t50851 = 3.e-12*t49641;
  t50873 = t50744 + t50816 + t50851;
  t49101 = 1.000000000009*t45323;
  t49137 = -1. + t49101;
  t49367 = 0.2*t49137;
  t49599 = -0.2000000000048*t45323;
  t50245 = 0.0999997000009*t49641;
  t50323 = t49367 + t49599 + t50245;
  t33212 = Sin(var1[3]);
  t12490 = Cos(var1[5]);
  t11039 = Sin(var1[11]);
  t39164 = Sin(var1[5]);
  t160 = Cos(var1[3]);
  t51654 = 3.e-6*t44271;
  t51733 = t48418 + t51654;
  t8409 = Cos(var1[4]);
  t12671 = Sin(var1[4]);
  t48492 = -1.000000000009*t45323;
  t48746 = 1. + t48492;
  t50384 = t48746*t50323;
  t51198 = 9.e-12*t45323;
  t50627 = 3.e-6*t50624*t49641;
  t50884 = t50873*t49641;
  t51268 = t51198 + t44374;
  t53660 = t51268*t11039;
  t53669 = 1.000000000009*t12426*t49641;
  t53701 = t53660 + t53669;
  t50985 = -1.*t48438*t50624;
  t51393 = -1.*t51268*t50873;
  t51466 = -1.000000000009*t50323*t49641;
  t55384 = t12426*t48746;
  t55395 = t11039*t49641;
  t55469 = t55384 + t55395;
  t11993 = -1.*t8409*t11039;
  t12772 = -1.*t12426*t12490*t12671;
  t15067 = t11993 + t12772;
  t45386 = -3.e-6*t45323;
  t45445 = -3.e-6*t44271;
  t47231 = t45386 + t45445;
  t48084 = 0.2*t47231;
  t50912 = t50384 + t50627 + t50884;
  t50932 = t48438*t50912;
  t51496 = t50985 + t51393 + t51466;
  t51502 = 3.e-6*t49641*t51496;
  t51551 = t48084 + t50932 + t51502;
  t51645 = -1.*t12490;
  t51748 = t51733*t11039*t39164;
  t51859 = t51645 + t51748;
  t52051 = t12426*t51733*t8409;
  t52072 = t51733*t12490*t11039;
  t52124 = t52072 + t39164;
  t52172 = -1.*t12671*t52124;
  t52182 = t52051 + t52172;
  t52388 = t48134 + t44271;
  t52470 = 0.2*t52388;
  t52488 = -4.e-7*var1[13];
  t52491 = -1. + t51198;
  t52505 = 0.1*t52491;
  t52534 = -3.000000000027e-7*t45323;
  t52753 = t51733*t50873;
  t53260 = -9.e-18*t49641;
  t53421 = t52488 + t52505 + t52534 + t52753 + t53260;
  t53541 = 3.e-6*t53421*t49641;
  t53556 = t52470 + t50384 + t53541 + t50627 + t50884;
  t53620 = t48438*t12490;
  t53763 = t53701*t39164;
  t53794 = t53620 + t53763;
  t53889 = t12426*t51268;
  t54103 = -1.000000000009*t11039*t49641;
  t54210 = t53889 + t54103;
  t54273 = t8409*t54210;
  t54467 = t12490*t53701;
  t54523 = -1.*t48438*t39164;
  t54539 = t54467 + t54523;
  t54671 = -1.*t12671*t54539;
  t54723 = t54273 + t54671;
  t54894 = -1.*t51733*t50873;
  t55000 = t50411 + t50468 + t50617 + t54894 + t50618;
  t55197 = t48438*t55000;
  t55206 = -0.2*t49641;
  t55224 = t50985 + t55197 + t51393 + t55206 + t51466;
  t55356 = 3.e-6*t12490*t49641;
  t55508 = t55469*t39164;
  t55520 = t55356 + t55508;
  t55593 = -1.*t48746*t11039;
  t55611 = t12426*t49641;
  t55625 = t55593 + t55611;
  t55656 = t8409*t55625;
  t55718 = t12490*t55469;
  t55758 = -3.e-6*t49641*t39164;
  t55786 = t55718 + t55758;
  t55800 = -1.*t12671*t55786;
  t55824 = t55656 + t55800;
  t56480 = -1.*t12426*t8409*t12490;
  t56497 = t11039*t12671;
  t56498 = t56480 + t56497;
  t56508 = -1.*t12426*t51733*t12671;
  t56510 = -1.*t8409*t52124;
  t56918 = t56508 + t56510;
  t56953 = -1.*t54210*t12671;
  t56970 = -1.*t8409*t54539;
  t56975 = t56953 + t56970;
  t57140 = -1.*t55625*t12671;
  t57142 = -1.*t8409*t55786;
  t57143 = t57140 + t57142;
  t57436 = t12426*t8409;
  t57438 = -1.*t12490*t11039*t12671;
  t57441 = t57436 + t57438;
  t57468 = -1. + t12426;
  t57469 = 0.2*t57468;
  t57473 = -0.2*t12426;
  t57475 = 0.05*t11039;
  t57545 = t57469 + t57473 + t57475;
  t57551 = t12490*t57545;
  t57553 = -0.1*t39164;
  t57557 = t57551 + t57553;
  t57692 = 0.05*t12426*t8409;
  t57695 = -1.*t12671*t57557;
  t57699 = t57692 + t57695;
  t57787 = t8409*t12490*t11039;
  t57827 = t12426*t12671;
  t58217 = t57787 + t57827;
  t57457 = -0.05*t12426*t12671;
  t57587 = -1.*t8409*t57557;
  t57589 = t57457 + t57587;
  t57675 = 0.05*t12426*t12671;
  t57676 = t8409*t57557;
  t57678 = t57675 + t57676;
  t59834 = 0.1*t12490;
  t59851 = t57545*t39164;
  t60124 = t59834 + t59851;
  t61137 = -0.2*t11039;
  t61140 = t12426*t50873;
  t61147 = -1.*t11039*t50323;
  t61179 = t61137 + t61140 + t61147;
  t61186 = t11039*t50873;
  t61187 = t12426*t50323;
  t61196 = t57469 + t61186 + t61187;
  t61201 = t12490*t61196;
  t61204 = -1.*t50624*t39164;
  t61208 = t61201 + t61204;
  t61748 = t8409*t61179;
  t61759 = -1.*t12671*t61208;
  t61801 = t61748 + t61759;
  t61821 = t12426*t51733*t12671;
  t61852 = t8409*t52124;
  t61855 = t61821 + t61852;
  t61374 = t61179*t12671;
  t61568 = t8409*t61208;
  t61711 = t61374 + t61568;
  t61182 = -1.*t61179*t12671;
  t61220 = -1.*t8409*t61208;
  t61224 = t61182 + t61220;
  t61036 = t54210*t12671;
  t61067 = t8409*t54539;
  t61126 = t61036 + t61067;
  t62011 = t12490*t50624;
  t62012 = t61196*t39164;
  t62039 = t62011 + t62012;
  t62116 = t55625*t12671;
  t62122 = t8409*t55786;
  t62126 = t62116 + t62122;
  t62441 = -1.*t51733*t11039*t39164;
  t62451 = t12490 + t62441;
  t62458 = -1.*t48438*t12490;
  t62462 = -1.*t53701*t39164;
  t62463 = t62458 + t62462;
  t62473 = -3.e-6*t12490*t49641;
  t62475 = -1.*t55469*t39164;
  t62483 = t62473 + t62475;
  t60474 = -1.*t12490*t60124;
  t62616 = -0.1*t12490;
  t62618 = -1.*t57545*t39164;
  t62624 = t62616 + t62618;
  t60900 = t11039*t39164*t60124;
  t62040 = -1.*t51859*t62039;
  t62094 = t62039*t53794;
  t62730 = -1.*t12490*t50624;
  t62731 = -1.*t61196*t39164;
  t62740 = t62730 + t62731;
  t62179 = t51859*t62039;
  t62231 = -1.*t62039*t55520;
  t62332 = -1.*t62039*t53794;
  t62414 = t62039*t55520;
  t59830 = t8409*t57678*t39164;
  t59832 = -1.*t12671*t57699*t39164;
  t60693 = t59830 + t59832 + t60474;
  t62626 = t12490*t11039*t60124;
  t62646 = t39164*t60124;
  t60779 = t58217*t57678;
  t60832 = t57441*t57699;
  t60908 = t60779 + t60832 + t60900;
  t62745 = -1.*t52124*t62039;
  t62748 = -1.*t51859*t61208;
  t62790 = t54539*t62039;
  t62799 = t61208*t53794;
  t62042 = -1.*t61855*t61711;
  t62044 = -1.*t52182*t61801;
  t62045 = t62040 + t62042 + t62044;
  t62098 = t61126*t61711;
  t62102 = t54723*t61801;
  t62110 = t62094 + t62098 + t62102;
  t62837 = t52124*t62039;
  t62840 = t51859*t61208;
  t62181 = t61855*t61711;
  t62188 = t52182*t61801;
  t62190 = t62179 + t62181 + t62188;
  t62870 = -1.*t62039*t55786;
  t62874 = -1.*t61208*t55520;
  t62236 = -1.*t61711*t62126;
  t62237 = -1.*t61801*t55824;
  t62272 = t62231 + t62236 + t62237;
  t62895 = -1.*t54539*t62039;
  t62899 = -1.*t61208*t53794;
  t62345 = -1.*t61126*t61711;
  t62361 = -1.*t54723*t61801;
  t62363 = t62332 + t62345 + t62361;
  t62938 = t62039*t55786;
  t62941 = t61208*t55520;
  t62415 = t61711*t62126;
  t62416 = t61801*t55824;
  t62425 = t62414 + t62415 + t62416;
  t62705 = -1.*t12426*t51733*t61179;
  t63421 = -1.*t51268*t11039;
  t63422 = -1.000000000009*t12426*t49641;
  t63433 = t63421 + t63422;
  t63477 = -1.*t11039*t50873;
  t63492 = -1.*t12426*t50323;
  t63497 = t57473 + t63477 + t63492;
  t62754 = t61179*t54210;
  t62816 = t12426*t51733*t61179;
  t63441 = -1.*t12426*t48746;
  t63451 = -1.*t11039*t49641;
  t63456 = t63441 + t63451;
  t62850 = -1.*t61179*t55625;
  t62887 = -1.*t61179*t54210;
  t62909 = t61179*t55625;
  t57684 = -1.*t8409*t12490*t11039;
  t57685 = -1.*t12426*t12671;
  t57689 = t57684 + t57685;
  t64018 = -1.*t51733*t8409*t11039;
  t64022 = -1.*t12426*t51733*t12490*t12671;
  t64032 = t64018 + t64022;
  t64046 = -1.*t12426*t8409;
  t64048 = t12490*t11039*t12671;
  t64050 = t64046 + t64048;
  t64080 = t8409*t63456;
  t64086 = -1.*t12490*t55625*t12671;
  t64100 = t64080 + t64086;
  t64210 = t8409*t63433;
  t64216 = -1.*t12490*t54210*t12671;
  t64219 = t64210 + t64216;
  t62612 = t57557*t39164;
  t62613 = t62612 + t60474;
  t63507 = -1.*t12426*t51733*t63497;
  t62719 = -1.*t52124*t61208;
  t62722 = t62705 + t62040 + t62719;
  t63552 = t61179*t63433;
  t63568 = t63497*t54210;
  t62758 = t54539*t61208;
  t62762 = t62754 + t62758 + t62094;
  t63641 = t12426*t51733*t63497;
  t62823 = t52124*t61208;
  t62825 = t62816 + t62179 + t62823;
  t63722 = -1.*t63497*t55625;
  t63783 = -1.*t61179*t63456;
  t62855 = -1.*t61208*t55786;
  t62856 = t62850 + t62855 + t62231;
  t63840 = -1.*t61179*t63433;
  t63852 = -1.*t63497*t54210;
  t62888 = -1.*t54539*t61208;
  t62889 = t62887 + t62888 + t62332;
  t63924 = t63497*t55625;
  t63941 = t61179*t63456;
  t62916 = t61208*t55786;
  t62922 = t62909 + t62916 + t62414;
  t63980 = t12426*t51733*t8409*t12490;
  t63981 = -1.*t51733*t11039*t12671;
  t63984 = t63980 + t63981;
  t63990 = t8409*t12490*t54210;
  t63993 = t63433*t12671;
  t63997 = t63990 + t63993;
  t64001 = t8409*t12490*t55625;
  t64004 = t63456*t12671;
  t64007 = t64001 + t64004;
  t66992 = 0.05*t12426*t8409*t12490;
  t66994 = -0.05*t11039*t12671;
  t66996 = t66992 + t66994;
  t66426 = -0.05*t8409*t11039;
  t66562 = -0.05*t12426*t12490*t12671;
  t66888 = t66426 + t66562;
  t67037 = t12426*t8409*t12490;
  t67038 = -1.*t11039*t12671;
  t67107 = t67037 + t67038;
  t64465 = Power(t39164,2);
  t64471 = 0.05*t12426*t11039*t64465;
  t64472 = t12426*t39164*t60124;
  t64514 = -1.*t61179*t39164*t51859;
  t64516 = -1.*t12426*t51733*t39164*t62039;
  t64541 = t54210*t39164*t62039;
  t64545 = t61179*t39164*t53794;
  t67195 = t8409*t12490*t61179;
  t67203 = t63497*t12671;
  t67210 = t67195 + t67203;
  t67218 = t8409*t63497;
  t67381 = -1.*t12490*t61179*t12671;
  t67489 = t67218 + t67381;
  t64594 = t61179*t39164*t51859;
  t64596 = t12426*t51733*t39164*t62039;
  t64612 = -1.*t55625*t39164*t62039;
  t64629 = -1.*t61179*t39164*t55520;
  t64701 = -1.*t54210*t39164*t62039;
  t64718 = -1.*t61179*t39164*t53794;
  t64975 = t55625*t39164*t62039;
  t65434 = t61179*t39164*t55520;
  t68979 = 9.e-18*t44271;
  t68997 = 2.999991000027e-7*t49641;
  t69020 = 3.e-12*t44271;
  t69025 = -1.2e-12 + t69020 + t50245;
  t69032 = 0.0999997000009*t44271;
  t69033 = -3.000000000027e-12*t49641;
  t69034 = t69032 + t69033;
  t69002 = 4.e-7 + t68979 + t68997;
  t69003 = -1.*t48438*t69002;
  t69030 = -1.000000000009*t44271*t50323;
  t69031 = -1.*t51268*t69025;
  t69035 = -1.000000000009*t69034*t49641;
  t69039 = -3.000000000027e-6*t50624*t49641;
  t69044 = -1.000000000009*t50873*t49641;
  t69048 = t48746*t69034;
  t69050 = 3.e-6*t44271*t50624;
  t69051 = t44271*t50873;
  t69078 = 3.e-6*t69002*t49641;
  t69080 = t69025*t49641;
  t68976 = -0.2*t44271;
  t69027 = -1.*t51733*t69025;
  t69028 = 4.e-7 + t68979 + t69027 + t68997;
  t69029 = t48438*t69028;
  t69040 = 3.000000000027e-6*t55000*t49641;
  t69045 = t68976 + t69003 + t69029 + t69030 + t69031 + t69035 + t69039 + t69040 + t69044;
  t69049 = 3.e-6*t44271*t53421;
  t69063 = -0.2000000000018*t49641;
  t69068 = -9.e-18*t44271;
  t69069 = t51733*t69025;
  t69071 = -2.999991000027e-7*t49641;
  t69076 = -4.e-7 + t69068 + t69069 + t69071;
  t69077 = 3.e-6*t69076*t49641;
  t69081 = t69048 + t69049 + t69050 + t69051 + t69063 + t69077 + t69078 + t51466 + t69080;
  t69085 = t69003 + t69030 + t69031 + t69035 + t69039 + t69044;
  t69086 = 3.e-6*t49641*t69085;
  t69087 = 3.000000000027e-6*t49641*t50912;
  t69091 = 3.e-6*t44271*t51496;
  t69092 = t69048 + t69050 + t69051 + t69078 + t51466 + t69080;
  t69093 = t48438*t69092;
  t69094 = t69086 + t69087 + t69091 + t69093;
  t63472 = -1.*t51733*t11039*t61196;
  t63474 = t50411 + t50468 + t50617 + t63472 + t62705 + t50618;
  t63584 = t48438*t50624;
  t63590 = t61196*t53701;
  t63592 = t63584 + t63590 + t62754;
  t63662 = t51733*t11039*t61196;
  t63665 = t52488 + t52505 + t52534 + t63662 + t62816 + t53260;
  t63687 = -3.e-6*t50624*t49641;
  t63689 = -1.*t61196*t55469;
  t63695 = t63687 + t62850 + t63689;
  t63890 = -1.*t61196*t53701;
  t63896 = t50985 + t63890 + t62887;
  t63909 = t61196*t55469;
  t63915 = t50627 + t62909 + t63909;
  t69115 = t12426*t44271;
  t69117 = 1.000000000009*t11039*t49641;
  t69120 = t69115 + t69117;
  t69193 = -1.*t11039*t69034;
  t69206 = t12426*t69025;
  t69209 = t69193 + t69206;
  t69256 = t12426*t69034;
  t69258 = t11039*t69025;
  t69259 = t69256 + t69258;
  t69110 = -1.000000000009*t44271*t11039;
  t69112 = t69110 + t53669;
  t69324 = t44271*t11039;
  t69325 = t69324 + t63422;
  t69506 = 1.000000000009*t12426*t44271;
  t69507 = t69506 + t69117;
  t69611 = t12490*t69325;
  t69613 = -3.e-6*t44271*t39164;
  t69617 = t69611 + t69613;
  t69738 = t12490*t69507;
  t69745 = -3.000000000027e-6*t49641*t39164;
  t69750 = t69738 + t69745;
  t56011 = t160*t51859;
  t56013 = -1.*t33212*t52182;
  t56060 = t56011 + t56013;
  t56224 = t160*t53794;
  t56284 = -1.*t33212*t54723;
  t56291 = t56224 + t56284;
  t69835 = 3.e-6*t44271*t12490;
  t69877 = t69325*t39164;
  t69891 = t69835 + t69877;
  t69897 = t8409*t69120;
  t69935 = -1.*t12671*t69617;
  t69943 = t69897 + t69935;
  t69997 = 3.000000000027e-6*t12490*t49641;
  t70001 = t69507*t39164;
  t70014 = t69997 + t70001;
  t70024 = t8409*t69112;
  t70027 = -1.*t12671*t69750;
  t70031 = t70024 + t70027;
  t56302 = t160*t55520;
  t56343 = -1.*t33212*t55824;
  t56349 = t56302 + t56343;
  t69225 = t12426*t51733*t69209;
  t69393 = -1.*t69209*t55625;
  t69424 = -1.*t61179*t69120;
  t70195 = t12490*t69259;
  t70196 = -1.*t69002*t39164;
  t70201 = t70195 + t70196;
  t70191 = t12490*t69002;
  t70192 = t69259*t39164;
  t70193 = t70191 + t70192;
  t69488 = t69209*t55625;
  t69491 = t61179*t69120;
  t69504 = -1.*t61179*t69112;
  t69505 = -1.*t69209*t54210;
  t69517 = -1.*t12426*t51733*t69209;
  t69538 = t61179*t69112;
  t69539 = t69209*t54210;
  t69604 = t69120*t12671;
  t69687 = t8409*t69617;
  t69699 = t69604 + t69687;
  t69735 = t69112*t12671;
  t69752 = t8409*t69750;
  t69758 = t69735 + t69752;
  t71567 = -1.*t51859*t70193;
  t71911 = t70193*t53794;
  t71937 = t62039*t70014;
  t72301 = t69209*t12671;
  t72302 = t8409*t70201;
  t72307 = t72301 + t72302;
  t72326 = t8409*t69209;
  t72328 = -1.*t12671*t70201;
  t72329 = t72326 + t72328;
  t70194 = t51859*t70193;
  t70229 = -1.*t62039*t69891;
  t70231 = -1.*t70193*t55520;
  t70276 = -1.*t70193*t53794;
  t70277 = -1.*t62039*t70014;
  t70246 = t62039*t69891;
  t70247 = t70193*t55520;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.0013*(-1.*t15067*t160 - 1.*t12426*t33212*t39164) - 0.043*t51551*(-1.*t33212*t51859 - 1.*t160*t52182) - 0.043*t53556*(-1.*t33212*t53794 - 1.*t160*t54723) - 0.043*t55224*(-1.*t33212*t55520 - 1.*t160*t55824))*var2[1] - 0.5*(-0.0013*(-1.*t15067*t33212 + t12426*t160*t39164) - 0.043*t51551*t56060 - 0.043*t53556*t56291 - 0.043*t55224*t56349)*var2[2])*var2[11];
  p_output1[4]=(-0.5*(-0.0013*t15067 - 0.043*t51551*t52182 - 0.043*t53556*t54723 - 0.043*t55224*t55824)*var2[0] - 0.5*(0.0013*t33212*t56498 + 0.043*t33212*t51551*t56918 + 0.043*t33212*t53556*t56975 + 0.043*t33212*t55224*t57143)*var2[1] - 0.5*(-0.0013*t160*t56498 - 0.043*t160*t51551*t56918 - 0.043*t160*t53556*t56975 - 0.043*t160*t55224*t57143)*var2[2] - 0.5*(-0.000046*t12671*t39164 + 0.000271*t52182 - 0.000271*t48438*t54723 - 6.e-12*t49641*t55824 - 0.043*t55224*((t54723*t61224 + t54723*t61711 + t56975*t61801 + t61126*t61801)*t61855 + t61126*(-1.*t52182*t61224 - 1.*t52182*t61711 - 1.*t56918*t61801 - 1.*t61801*t61855) + t54723*t62045 + t52182*t62110) - 0.043*t53556*((t52182*t61224 + t52182*t61711 + t56918*t61801 + t61801*t61855)*t62126 + t61855*(-1.*t55824*t61224 - 1.*t55824*t61711 - 1.*t57143*t61801 - 1.*t61801*t62126) + t55824*t62190 + t52182*t62272) - 0.043*t51551*((-1.*t54723*t61224 - 1.*t54723*t61711 - 1.*t56975*t61801 - 1.*t61126*t61801)*t62126 + t61126*(t55824*t61224 + t55824*t61711 + t57143*t61801 + t61801*t62126) + t55824*t62363 + t54723*t62425) - 0.0013*((-1.*t12671*t39164*t57589 - 1.*t12671*t39164*t57678)*t58217 + t57441*t60693 + t12671*t39164*t60908 - 1.*t39164*(t57441*t57589 + t57441*t57678 + t57689*t57699 + t57699*t58217)*t8409))*var2[3])*var2[11];
  p_output1[5]=(-0.5*(0.0013*t12426*t39164*t8409 - 0.043*t51551*t62451*t8409 - 0.043*t53556*t62463*t8409 - 0.043*t55224*t62483*t8409)*var2[0] - 0.5*(-0.0013*(t12426*t12490*t160 - 1.*t12426*t12671*t33212*t39164) - 0.043*t51551*(t160*t52124 + t12671*t33212*t62451) - 0.043*t53556*(t160*t54539 + t12671*t33212*t62463) - 0.043*t55224*(t160*t55786 + t12671*t33212*t62483))*var2[1] - 0.5*(-0.0013*(t12426*t12490*t33212 + t12426*t12671*t160*t39164) - 0.043*t51551*(t33212*t52124 - 1.*t12671*t160*t62451) - 0.043*t53556*(t33212*t54539 - 1.*t12671*t160*t62463) - 0.043*t55224*(t33212*t55786 - 1.*t12671*t160*t62483))*var2[2] - 0.5*(0.000046*t12490*t8409 + 0.000271*t62451*t8409 - 0.000271*t48438*t62463*t8409 - 6.e-12*t49641*t62483*t8409 - 0.043*t55224*(t62110*t62451*t8409 + t62045*t62463*t8409 + t61855*(-1.*t12671*t61801*t62463 - 1.*t12671*t54723*t62740 + t62790 + t62799 + t61711*t62463*t8409 + t61126*t62740*t8409) + t61126*(t12671*t61801*t62451 + t12671*t52182*t62740 + t62745 + t62748 - 1.*t61711*t62451*t8409 - 1.*t61855*t62740*t8409)) - 0.043*t53556*(t62272*t62451*t8409 + t62190*t62483*t8409 + t62126*(-1.*t12671*t61801*t62451 - 1.*t12671*t52182*t62740 + t62837 + t62840 + t61711*t62451*t8409 + t61855*t62740*t8409) + t61855*(t12671*t61801*t62483 + t12671*t55824*t62740 + t62870 + t62874 - 1.*t61711*t62483*t8409 - 1.*t62126*t62740*t8409)) - 0.043*t51551*(t62425*t62463*t8409 + t62363*t62483*t8409 + t62126*(t12671*t61801*t62463 + t12671*t54723*t62740 + t62895 + t62899 - 1.*t61711*t62463*t8409 - 1.*t61126*t62740*t8409) + t61126*(-1.*t12671*t61801*t62483 - 1.*t12671*t55824*t62740 + t62938 + t62941 + t61711*t62483*t8409 + t62126*t62740*t8409)) - 0.0013*(-1.*t11039*t39164*t60693*t8409 - 1.*t12490*t60908*t8409 - 1.*t39164*t8409*(t11039*t39164*t57557 + t11039*t12671*t39164*t57699 - 1.*t12671*t57441*t62624 + t62626 - 1.*t11039*t39164*t57678*t8409 + t58217*t62624*t8409) + t58217*(-1.*t12490*t57557 - 1.*t12490*t12671*t57699 + Power(t12671,2)*t39164*t62624 + t62646 + t12490*t57678*t8409 + t39164*t62624*Power(t8409,2))))*var2[3] - 0.5*(0.000046*t39164 + 0.000271*t52124 - 0.000271*t48438*t54539 - 6.e-12*t49641*t55786 - 0.0013*(-1.*t39164*(0.05*Power(t12426,2) + t11039*t12490*t57557 + t60900) + t11039*t12490*t62613 + t12490*(t11039*t12490*t62624 + t62626) + t11039*t39164*(t39164*t62624 + t62646)) - 0.043*t55224*(t54539*t62722 + t53794*(-1.*t61208*t62451 - 1.*t52124*t62740 + t62745 + t62748) + t52124*t62762 + t51859*(t61208*t62463 + t54539*t62740 + t62790 + t62799)) - 0.043*t53556*(t55786*t62825 + t55520*(t61208*t62451 + t52124*t62740 + t62837 + t62840) + t52124*t62856 + t51859*(-1.*t61208*t62483 - 1.*t55786*t62740 + t62870 + t62874)) - 0.043*t51551*(t55786*t62889 + t55520*(-1.*t61208*t62463 - 1.*t54539*t62740 + t62895 + t62899) + t54539*t62922 + t53794*(t61208*t62483 + t55786*t62740 + t62938 + t62941)))*var2[4])*var2[11];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=(-0.5*(-0.0013*t57689 - 0.043*t51551*t63984 - 0.043*t53556*t63997 - 0.043*t55224*t64007)*var2[0] - 0.5*(-0.043*t51551*(t12426*t160*t39164*t51733 - 1.*t33212*t64032) - 0.0013*(-1.*t11039*t160*t39164 - 1.*t33212*t64050) - 0.043*t55224*(t160*t39164*t55625 - 1.*t33212*t64100) - 0.043*t53556*(t160*t39164*t54210 - 1.*t33212*t64219))*var2[1] - 0.5*(-0.043*t51551*(t12426*t33212*t39164*t51733 + t160*t64032) - 0.0013*(-1.*t11039*t33212*t39164 + t160*t64050) - 0.043*t55224*(t33212*t39164*t55625 + t160*t64100) - 0.043*t53556*(t33212*t39164*t54210 + t160*t64219))*var2[2] - 0.5*(0.000271*t63984 - 0.000271*t48438*t63997 - 6.e-12*t49641*t64007 - 0.043*t55224*(t62110*t63984 + t62045*t63997 + t61126*(-1.*t61711*t63984 - 1.*t61801*t64032 + t64514 + t64516 - 1.*t61855*t67210 - 1.*t52182*t67489) + t61855*(t61711*t63997 + t61801*t64219 + t64541 + t64545 + t61126*t67210 + t54723*t67489)) - 0.043*t53556*(t62272*t63984 + t62190*t64007 + t62126*(t61711*t63984 + t61801*t64032 + t64594 + t64596 + t61855*t67210 + t52182*t67489) + t61855*(-1.*t61711*t64007 - 1.*t61801*t64100 + t64612 + t64629 - 1.*t62126*t67210 - 1.*t55824*t67489)) - 0.043*t51551*(t62425*t63997 + t62363*t64007 + t62126*(-1.*t61711*t63997 - 1.*t61801*t64219 + t64701 + t64718 - 1.*t61126*t67210 - 1.*t54723*t67489) + t61126*(t61711*t64007 + t61801*t64100 + t64975 + t65434 + t62126*t67210 + t55824*t67489)) - 0.0013*(t60693*t67107 - 1.*t39164*(t15067*t57699 + t64471 + t64472 + t57441*t66888 + t58217*t66996 + t57678*t67107)*t8409 + t58217*(-0.05*t12426*t12490*t39164 - 1.*t12671*t39164*t66888 + t39164*t66996*t8409)))*var2[3] - 0.5*(0.000271*t12426*t39164*t51733 - 0.000271*t39164*t48438*t54210 - 6.e-12*t39164*t49641*t55625 - 0.0013*(t12426*t39164*t62613 + t12490*(-0.1*t11039*t12426 + 0.05*t11039*t12426*Power(t12490,2) + t12426*t12490*t57557 + t64471 + t64472)) - 0.043*t55224*(t39164*t54210*t62722 + t12426*t39164*t51733*t62762 + t53794*(t11039*t51733*t61179 - 1.*t12490*t52124*t61179 - 1.*t12426*t12490*t51733*t61208 + t63507 + t64514 + t64516) + t51859*(t12490*t54539*t61179 + t12490*t54210*t61208 + t63552 + t63568 + t64541 + t64545)) - 0.043*t53556*(t39164*t55625*t62825 + t12426*t39164*t51733*t62856 + t55520*(-1.*t11039*t51733*t61179 + t12490*t52124*t61179 + t12426*t12490*t51733*t61208 + t63641 + t64594 + t64596) + t51859*(-1.*t12490*t55786*t61179 - 1.*t12490*t55625*t61208 + t63722 + t63783 + t64612 + t64629)) - 0.043*t51551*(t39164*t55625*t62889 + t39164*t54210*t62922 + t55520*(-1.*t12490*t54539*t61179 - 1.*t12490*t54210*t61208 + t63840 + t63852 + t64701 + t64718) + t53794*(t12490*t55786*t61179 + t12490*t55625*t61208 + t63924 + t63941 + t64975 + t65434)))*var2[4] - 0.5*(-0.00013*t11039 - 0.000271*t11039*t51733 - 0.000271*t48438*t63433 - 6.e-12*t49641*t63456 - 0.043*t55224*(t63433*t63474 + t54210*(-1.*t12426*t51733*t61196 + t63507) + t12426*t51733*(t53701*t61179 + t54210*t61196 + t63552 + t63568) - 1.*t11039*t51733*t63592) - 0.043*t53556*(t55625*(t12426*t51733*t61196 + t63641) + t63456*t63665 - 1.*t11039*t51733*t63695 + t12426*t51733*(-1.*t55469*t61179 - 1.*t55625*t61196 + t63722 + t63783)) - 0.043*t51551*(t55625*(-1.*t53701*t61179 - 1.*t54210*t61196 + t63840 + t63852) + t63456*t63896 + t63433*t63915 + t54210*(t55469*t61179 + t55625*t61196 + t63924 + t63941)))*var2[5])*var2[11];
  p_output1[12]=0;
  p_output1[13]=var2[11]*(-0.5*(-0.043*t62126*t69045 - 0.043*t61126*t69081 - 0.043*t61855*t69094 - 0.043*t55224*t69699 - 0.043*t53556*t69758)*var2[0] - 0.5*(-0.043*t56349*t69045 - 0.043*t56291*t69081 - 0.043*t56060*t69094 - 0.043*t55224*(t160*t69891 - 1.*t33212*t69943) - 0.043*t53556*(t160*t70014 - 1.*t33212*t70031))*var2[1] - 0.5*(-0.043*(t33212*t55520 + t160*t55824)*t69045 - 0.043*(t33212*t53794 + t160*t54723)*t69081 - 0.043*(t33212*t51859 + t160*t52182)*t69094 - 0.043*t55224*(t33212*t69891 + t160*t69943) - 0.043*t53556*(t33212*t70014 + t160*t70031))*var2[2] - 0.5*(-8.13000000007317e-10*t49641*t61126 - 6.e-12*t44271*t62126 - 0.043*(t61126*t62045 + t61855*t62110)*t69045 - 0.043*(t62126*t62190 + t61855*t62272)*t69081 - 0.043*(t62126*t62363 + t61126*t62425)*t69094 - 6.e-12*t49641*t69699 - 0.000271*t48438*t69758 - 0.043*t55224*(t62045*t69758 + t61126*(t71567 - 1.*t61855*t72307 - 1.*t52182*t72329) + t61855*(t61711*t69758 + t61801*t70031 + t71911 + t71937 + t61126*t72307 + t54723*t72329)) - 0.043*t53556*(t62190*t69699 + t62126*(t70194 + t61855*t72307 + t52182*t72329) + t61855*(-1.*t61711*t69699 - 1.*t61801*t69943 + t70229 + t70231 - 1.*t62126*t72307 - 1.*t55824*t72329)) - 0.043*t51551*(t62363*t69699 + t62425*t69758 + t62126*(-1.*t61711*t69758 - 1.*t61801*t70031 + t70276 + t70277 - 1.*t61126*t72307 - 1.*t54723*t72329) + t61126*(t61711*t69699 + t61801*t69943 + t70246 + t70247 + t62126*t72307 + t55824*t72329)))*var2[3] - 0.5*(-8.13000000007317e-10*t49641*t53794 - 6.e-12*t44271*t55520 - 0.043*(t53794*t62722 + t51859*t62762)*t69045 - 0.043*(t55520*t62825 + t51859*t62856)*t69081 - 0.043*(t55520*t62889 + t53794*t62922)*t69094 - 6.e-12*t49641*t69891 - 0.000271*t48438*t70014 - 0.043*t53556*(t62825*t69891 + t55520*(t69225 + t70194 + t52124*t70201) + t51859*(t69393 + t69424 - 1.*t61208*t69617 - 1.*t55786*t70201 + t70229 + t70231)) - 0.043*t51551*(t62889*t69891 + t62922*t70014 + t53794*(t69488 + t69491 + t61208*t69617 + t55786*t70201 + t70246 + t70247) + t55520*(t69504 + t69505 - 1.*t61208*t69750 - 1.*t54539*t70201 + t70276 + t70277)) - 0.043*t55224*(t62722*t70014 + t53794*(t69517 - 1.*t52124*t70201 + t71567) + t51859*(t69538 + t69539 + t61208*t69750 + t54539*t70201 + t71911 + t71937)))*var2[4] - 0.5*(-8.13000000007317e-10*t49641*t54210 - 6.e-12*t44271*t55625 - 0.043*(t54210*t63474 + t12426*t51733*t63592)*t69045 - 0.043*(t55625*t63665 + t12426*t51733*t63695)*t69081 - 0.043*(t55625*t63896 + t54210*t63915)*t69094 - 0.000271*t48438*t69112 - 6.e-12*t49641*t69120 - 0.043*t53556*(t63665*t69120 + t55625*(-4.e-7 + t69068 + t69071 + t69225 + t11039*t51733*t69259) + t12426*t51733*(-3.e-6*t44271*t50624 - 3.e-6*t49641*t69002 - 1.*t55469*t69259 - 1.*t61196*t69325 + t69393 + t69424)) - 0.043*t51551*(t63915*t69112 + t63896*t69120 + t54210*(t69050 + t69078 + t55469*t69259 + t61196*t69325 + t69488 + t69491) + t55625*(t69003 + t69039 - 1.*t53701*t69259 + t69504 + t69505 - 1.*t61196*t69507)) - 0.043*t55224*(t63474*t69112 + t54210*(4.e-7 + t68979 + t68997 - 1.*t11039*t51733*t69259 + t69517) + t12426*t51733*(3.000000000027e-6*t49641*t50624 + t48438*t69002 + t53701*t69259 + t61196*t69507 + t69538 + t69539)))*var2[5] - 0.5*(-3.6e-17*t44271*t49641 - 1.62600000001463e-9*t48438*t49641 - 0.086*t55224*t69045 - 0.086*t53556*t69081 - 0.086*t51551*t69094)*var2[11] - 0.5*(-0.0042999871*t69045 + 5.16e-14*t69081 + 1.72e-8*t69094)*var2[13]);
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec12_minitaur.hh"

namespace FrontStance
{

void Ce3_vec12_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
