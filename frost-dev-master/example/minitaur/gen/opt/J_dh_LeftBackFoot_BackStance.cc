/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 22:42:41 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t176;
  double t302;
  double t621;
  double t3574;
  double t5222;
  double t5671;
  double t6274;
  double t6386;
  double t6390;
  double t4004;
  double t4390;
  double t4670;
  double t4718;
  double t7067;
  double t7170;
  double t8369;
  double t7010;
  double t7039;
  double t8524;
  double t7331;
  double t7335;
  double t8341;
  double t8342;
  double t8343;
  double t8346;
  double t14925;
  double t14986;
  double t15190;
  double t15205;
  double t15447;
  double t15450;
  double t15451;
  double t15452;
  double t15453;
  double t15455;
  double t15457;
  double t15520;
  double t15553;
  double t15465;
  double t8536;
  double t15458;
  double t17068;
  double t657;
  double t844;
  double t1991;
  double t2814;
  double t5167;
  double t6371;
  double t7057;
  double t7208;
  double t7230;
  double t8375;
  double t12514;
  double t14693;
  double t14783;
  double t14876;
  double t15408;
  double t15435;
  double t15442;
  double t15443;
  double t15444;
  double t17304;
  double t17681;
  double t19167;
  double t15473;
  double t19600;
  double t19602;
  double t19633;
  double t19687;
  double t19688;
  double t19689;
  double t17080;
  double t17084;
  double t17085;
  double t19869;
  double t19876;
  double t19865;
  double t19866;
  double t19893;
  double t19883;
  double t19884;
  double t19885;
  double t19886;
  double t19930;
  double t19949;
  double t20019;
  double t20033;
  double t20034;
  double t20214;
  double t20215;
  double t20253;
  double t24642;
  double t20403;
  double t27640;
  double t27645;
  double t27647;
  double t27673;
  double t28650;
  double t29078;
  double t29087;
  double t29178;
  double t29181;
  double t29183;
  double t4385;
  double t4722;
  double t29456;
  double t29458;
  double t29472;
  double t19867;
  double t19878;
  double t19881;
  double t19882;
  double t19888;
  double t19899;
  double t19909;
  double t19915;
  double t19919;
  double t20022;
  double t20024;
  double t20027;
  double t20029;
  double t20031;
  double t29654;
  double t29669;
  double t29670;
  double t29675;
  double t29694;
  double t20639;
  double t29707;
  double t29713;
  double t29720;
  double t27431;
  double t29995;
  double t29997;
  double t30007;
  double t30014;
  double t30016;
  double t30019;
  double t17239;
  double t17273;
  double t19537;
  double t19635;
  double t19692;
  double t19705;
  double t19709;
  double t19712;
  double t19713;
  double t19715;
  double t19716;
  double t19717;
  double t19718;
  double t19719;
  double t19720;
  double t19725;
  double t19726;
  double t19727;
  double t19737;
  double t19852;
  double t19861;
  double t30241;
  double t30253;
  double t30261;
  double t30350;
  double t30373;
  double t30377;
  double t30384;
  double t30385;
  double t30391;
  double t30405;
  double t4713;
  double t30479;
  double t30489;
  double t30491;
  double t30492;
  double t30499;
  double t30507;
  double t29990;
  double t29992;
  double t30012;
  double t30025;
  double t30057;
  double t30085;
  double t30117;
  double t30119;
  double t30121;
  double t30128;
  double t30145;
  double t30147;
  double t30149;
  double t30153;
  double t30154;
  double t30167;
  double t30186;
  double t30206;
  double t30207;
  double t30213;
  double t30218;
  double t27630;
  double t27636;
  double t27638;
  double t28024;
  double t29179;
  double t29271;
  double t29329;
  double t29334;
  double t29336;
  double t29339;
  double t29340;
  double t29347;
  double t29354;
  double t29377;
  double t29381;
  double t29382;
  double t29399;
  double t29402;
  double t29404;
  double t29415;
  double t29426;
  double t29435;
  double t30774;
  double t30744;
  double t30746;
  double t30757;
  double t30759;
  double t30780;
  double t30781;
  double t30782;
  double t30802;
  double t30804;
  double t30813;
  double t30318;
  double t30382;
  double t30408;
  double t30409;
  double t30414;
  double t30417;
  double t30418;
  double t30426;
  double t30429;
  double t30434;
  double t30437;
  double t30444;
  double t30445;
  double t30447;
  double t30454;
  double t30455;
  double t30461;
  double t30466;
  double t30467;
  double t29672;
  double t29701;
  double t29725;
  double t29729;
  double t29732;
  double t29758;
  double t29777;
  double t29791;
  double t29796;
  double t29848;
  double t29915;
  double t29920;
  double t29937;
  double t29943;
  double t29959;
  double t29960;
  double t29962;
  double t29981;
  double t29986;
  double t19887;
  double t20020;
  double t20249;
  double t20345;
  double t20346;
  double t21170;
  double t21982;
  double t22154;
  double t24632;
  double t27062;
  double t27066;
  double t27334;
  double t27355;
  double t27400;
  double t27436;
  double t27582;
  double t27590;
  double t27612;
  double t27621;
  double t31325;
  double t31334;
  double t31335;
  double t31337;
  double t31340;
  double t31351;
  double t31353;
  double t31359;
  double t31363;
  double t31367;
  double t31372;
  double t31378;
  double t31379;
  double t31456;
  double t31454;
  double t31471;
  double t31489;
  double t31492;
  double t31498;
  double t31512;
  double t31518;
  double t31529;
  double t31541;
  double t31557;
  double t31560;
  double t31566;
  double t31575;
  double t31576;
  double t31578;
  double t31684;
  double t31685;
  double t31691;
  double t31683;
  double t31693;
  double t31696;
  double t31698;
  double t31714;
  double t31718;
  double t31727;
  double t31735;
  double t31747;
  double t31749;
  double t31751;
  double t31805;
  double t31806;
  double t31807;
  double t31811;
  double t31826;
  double t31827;
  double t31828;
  double t31830;
  double t31832;
  double t31835;
  double t31874;
  double t31876;
  double t31890;
  double t31898;
  double t31903;
  double t31907;
  double t31915;
  double t31919;
  double t31920;
  double t31925;
  double t31936;
  double t31940;
  double t31954;
  double t31955;
  double t31959;
  double t31970;
  double t31975;
  double t31978;
  double t31326;
  double t31328;
  double t31332;
  double t31350;
  double t31366;
  double t31381;
  double t31382;
  double t31383;
  double t31406;
  double t31410;
  double t31411;
  double t31412;
  double t31414;
  double t31417;
  double t31418;
  double t31424;
  double t31428;
  double t31430;
  double t31436;
  double t31438;
  double t31444;
  double t31449;
  double t32138;
  double t32139;
  double t32143;
  double t32144;
  double t32148;
  double t32155;
  double t32165;
  double t32167;
  double t32175;
  double t32202;
  double t32214;
  double t32217;
  double t32273;
  double t32275;
  double t32276;
  double t32277;
  double t32289;
  double t32291;
  double t32300;
  double t32308;
  double t32309;
  double t32316;
  double t32378;
  double t32386;
  double t32390;
  double t32397;
  double t32399;
  double t32408;
  double t32410;
  double t32411;
  double t31872;
  double t32494;
  double t32495;
  double t32496;
  double t32501;
  double t32517;
  double t32518;
  double t32550;
  double t32555;
  double t32562;
  double t32373;
  double t32374;
  double t32387;
  double t32404;
  double t32413;
  double t32421;
  double t32422;
  double t32424;
  double t32428;
  double t32432;
  double t32439;
  double t32443;
  double t32444;
  double t32446;
  double t32455;
  double t32462;
  double t32465;
  double t32469;
  double t32471;
  double t32473;
  double t32474;
  double t31491;
  double t31516;
  double t31546;
  double t31574;
  double t31593;
  double t31607;
  double t31608;
  double t31627;
  double t31634;
  double t31639;
  double t31654;
  double t31655;
  double t31656;
  double t31657;
  double t31658;
  double t31666;
  double t31670;
  double t31676;
  double t31677;
  double t31678;
  double t31680;
  double t32647;
  double t32648;
  double t32651;
  double t32643;
  double t32652;
  double t32656;
  double t32678;
  double t32680;
  double t32693;
  double t32696;
  double t32700;
  double t32806;
  double t32811;
  double t32835;
  double t32863;
  double t32864;
  double t32865;
  double t31896;
  double t31914;
  double t32966;
  double t32969;
  double t32979;
  double t32268;
  double t32270;
  double t32272;
  double t32283;
  double t32296;
  double t32318;
  double t32320;
  double t32321;
  double t32325;
  double t32330;
  double t32332;
  double t32333;
  double t32334;
  double t32340;
  double t32341;
  double t32343;
  double t32348;
  double t32351;
  double t32362;
  double t32363;
  double t32364;
  double t32366;
  double t31801;
  double t31802;
  double t31804;
  double t31813;
  double t31831;
  double t31837;
  double t31838;
  double t31839;
  double t31840;
  double t31845;
  double t31852;
  double t31853;
  double t31856;
  double t31857;
  double t31859;
  double t31860;
  double t31862;
  double t31863;
  double t31864;
  double t31866;
  double t31868;
  double t31869;
  double t33082;
  double t33088;
  double t33101;
  double t33112;
  double t33113;
  double t33119;
  double t33125;
  double t33127;
  double t33129;
  double t33132;
  double t33135;
  double t33136;
  double t33140;
  double t32801;
  double t32802;
  double t32851;
  double t32854;
  double t32873;
  double t32880;
  double t32884;
  double t32885;
  double t32887;
  double t32891;
  double t32904;
  double t32912;
  double t32913;
  double t32922;
  double t32923;
  double t32935;
  double t32938;
  double t32940;
  double t32941;
  double t32942;
  double t32943;
  double t33185;
  double t33188;
  double t33191;
  double t33192;
  double t33193;
  double t33194;
  double t33199;
  double t33202;
  double t33203;
  double t32146;
  double t32174;
  double t32218;
  double t32221;
  double t32225;
  double t32226;
  double t32227;
  double t32228;
  double t32229;
  double t32231;
  double t32232;
  double t32238;
  double t32241;
  double t32242;
  double t32249;
  double t32251;
  double t32252;
  double t32260;
  double t32261;
  double t31706;
  double t31734;
  double t31759;
  double t31764;
  double t31766;
  double t31769;
  double t31770;
  double t31773;
  double t31776;
  double t31777;
  double t31785;
  double t31786;
  double t31788;
  double t31793;
  double t31794;
  double t31795;
  double t31796;
  double t31797;
  double t31799;
  double t32672;
  double t32683;
  double t32701;
  double t32704;
  double t32707;
  double t32709;
  double t32712;
  double t32718;
  double t32721;
  double t32724;
  double t32727;
  double t32730;
  double t32752;
  double t32758;
  double t32775;
  double t32776;
  double t32783;
  double t32785;
  double t32790;
  double t30688;
  double t30691;
  double t30719;
  double t30725;
  double t30764;
  double t30775;
  double t30776;
  double t30778;
  double t30786;
  double t30787;
  double t30789;
  double t30793;
  double t30799;
  double t33262;
  double t33265;
  double t33267;
  double t33269;
  double t30814;
  double t33273;
  double t33274;
  double t33276;
  double t33283;
  double t33290;
  double t30878;
  double t33190;
  double t33197;
  double t33204;
  double t33205;
  double t33206;
  double t33211;
  double t33226;
  double t33227;
  double t33228;
  double t33230;
  double t33231;
  double t33236;
  double t33239;
  double t33241;
  double t33242;
  double t33244;
  double t33249;
  double t33253;
  double t33254;
  double t33522;
  double t33524;
  double t33530;
  double t33532;
  double t33534;
  double t33539;
  double t33569;
  double t33574;
  double t33576;
  double t33585;
  double t33590;
  double t33592;
  double t33595;
  double t33598;
  double t33603;
  double t33604;
  double t33605;
  double t33624;
  double t33625;
  double t33648;
  double t33649;
  double t33657;
  double t33353;
  double t33359;
  double t33361;
  double t33363;
  double t33365;
  double t33375;
  double t33376;
  double t33379;
  double t33380;
  double t33381;
  double t33384;
  double t33386;
  double t33389;
  double t33392;
  double t33402;
  double t33415;
  double t33422;
  double t33453;
  double t33464;
  double t33472;
  double t33509;
  double t33512;
  double t33658;
  double t33678;
  double t33689;
  double t33691;
  double t33695;
  double t33701;
  double t33704;
  double t33709;
  double t33712;
  double t33718;
  double t33733;
  double t33778;
  double t33782;
  double t33785;
  double t33796;
  double t33799;
  double t33801;
  double t33806;
  double t33811;
  double t33812;
  double t33815;
  double t34112;
  double t34120;
  double t34140;
  double t34141;
  double t34144;
  double t34145;
  double t34147;
  double t34148;
  double t34151;
  double t34153;
  double t34155;
  double t34156;
  double t34157;
  double t34161;
  double t34162;
  double t34163;
  double t34169;
  double t34171;
  double t34173;
  double t33816;
  double t33817;
  double t33827;
  double t33846;
  double t33936;
  double t34018;
  double t34052;
  double t34078;
  double t34081;
  double t34082;
  double t34083;
  double t34084;
  double t34086;
  double t34087;
  double t34091;
  double t34096;
  double t34097;
  double t34100;
  double t34101;
  double t34105;
  double t34110;
  double t34111;
  double t34208;
  double t34212;
  double t34215;
  double t34304;
  double t34305;
  double t34310;
  double t34315;
  double t34316;
  double t34390;
  double t34391;
  double t34398;
  double t34408;
  double t34410;
  double t34411;
  double t34418;
  double t34420;
  double t34422;
  double t34423;
  double t34425;
  double t34465;
  double t34466;
  double t34468;
  double t34479;
  double t34488;
  double t34489;
  double t34490;
  double t34497;
  double t34498;
  double t34595;
  double t34631;
  double t34633;
  double t34636;
  double t34648;
  double t34650;
  double t34675;
  double t34728;
  double t34731;
  double t34203;
  double t34204;
  double t34218;
  double t34307;
  double t34337;
  double t34338;
  double t34340;
  double t34349;
  double t34354;
  double t34357;
  double t34358;
  double t34360;
  double t34368;
  double t34370;
  double t34371;
  double t34377;
  double t34378;
  double t34381;
  double t34384;
  double t34385;
  double t34387;
  double t35525;
  double t35646;
  double t35661;
  double t35860;
  double t35862;
  double t35863;
  double t35856;
  double t35864;
  double t35867;
  double t35877;
  double t35878;
  double t35889;
  double t35891;
  double t36090;
  double t36093;
  double t36094;
  double t36124;
  double t36134;
  double t36138;
  double t34460;
  double t34462;
  double t34463;
  double t34477;
  double t34493;
  double t34499;
  double t34500;
  double t34509;
  double t34512;
  double t34522;
  double t34538;
  double t34539;
  double t34540;
  double t34543;
  double t34544;
  double t34553;
  double t34556;
  double t34557;
  double t34560;
  double t34565;
  double t34567;
  double t34579;
  double t36223;
  double t36227;
  double t36231;
  double t36257;
  double t36267;
  double t36269;
  double t36272;
  double t36275;
  double t36278;
  double t36282;
  double t36086;
  double t36088;
  double t36103;
  double t36109;
  double t36143;
  double t36156;
  double t36159;
  double t36160;
  double t36166;
  double t36167;
  double t36168;
  double t36172;
  double t36174;
  double t36176;
  double t36178;
  double t36185;
  double t36186;
  double t36193;
  double t36195;
  double t36199;
  double t36200;
  double t36344;
  double t36345;
  double t36349;
  double t36351;
  double t36352;
  double t36357;
  double t36366;
  double t36367;
  double t34409;
  double t34419;
  double t34426;
  double t34427;
  double t34430;
  double t34434;
  double t34435;
  double t34436;
  double t34438;
  double t34439;
  double t34440;
  double t34445;
  double t34446;
  double t34447;
  double t34449;
  double t34451;
  double t34453;
  double t34454;
  double t34457;
  double t35876;
  double t35884;
  double t35900;
  double t35934;
  double t35944;
  double t35956;
  double t35960;
  double t35972;
  double t35978;
  double t35981;
  double t35998;
  double t36002;
  double t36011;
  double t36031;
  double t36038;
  double t36061;
  double t36064;
  double t36068;
  double t36069;
  double t36519;
  double t36526;
  double t36527;
  double t36548;
  double t36551;
  double t36557;
  double t36570;
  double t36595;
  double t36346;
  double t36353;
  double t36395;
  double t36396;
  double t36410;
  double t36411;
  double t36417;
  double t36419;
  double t36429;
  double t36430;
  double t36433;
  double t36434;
  double t36452;
  double t36454;
  double t36462;
  double t36464;
  double t36469;
  double t36476;
  double t36482;
  t176 = Cos(var1[10]);
  t302 = -1.*t176;
  t621 = 1. + t302;
  t3574 = Cos(var1[4]);
  t5222 = Cos(var1[12]);
  t5671 = -1.*t5222;
  t6274 = 1. + t5671;
  t6386 = -3.e-6*t6274;
  t6390 = Sin(var1[12]);
  t4004 = Cos(var1[5]);
  t4390 = Sin(var1[10]);
  t4670 = Sin(var1[4]);
  t4718 = Sin(var1[5]);
  t7067 = 3.e-6*t6390;
  t7170 = t6386 + t7067;
  t8369 = 3.e-13*var1[12];
  t7010 = -3.e-6*t6390;
  t7039 = t6386 + t7010;
  t8524 = -9.e-12*t6274;
  t7331 = -3.e-6*t621*t3574*t4004;
  t7335 = 3.e-6*t4390*t4670;
  t8341 = -9.e-12*t621;
  t8342 = 1. + t8341;
  t8343 = t8342*t3574*t4718;
  t8346 = t7331 + t7335 + t8343;
  t14925 = -1.*t176*t3574*t4004;
  t14986 = -1.*t4390*t4670;
  t15190 = 3.e-6*t621*t3574*t4718;
  t15205 = t14925 + t14986 + t15190;
  t15447 = t3574*t4004*t4390;
  t15450 = -1.000000000009*t621;
  t15451 = 1. + t15450;
  t15452 = -1.*t15451*t4670;
  t15453 = 3.e-6*t3574*t4390*t4718;
  t15455 = t15447 + t15452 + t15453;
  t15457 = 3.e-6*t6274;
  t15520 = -1.000000000009*t6274;
  t15553 = 1. + t15520;
  t15465 = 9.e-12*t6274;
  t8536 = -1.*t6390;
  t15458 = t15457 + t7010;
  t17068 = t15457 + t7067;
  t657 = -1.8e-12*t621;
  t844 = -1. + t176;
  t1991 = 0.2*t844;
  t2814 = t657 + t1991;
  t5167 = 1.e-7*var1[12];
  t6371 = 5.4e-18*t6274;
  t7057 = -0.200000000003*t7039;
  t7208 = 0.100000000003*t7170;
  t7230 = t5167 + t6371 + t7057 + t7208;
  t8375 = -0.2000000000048*t6274;
  t12514 = t8524 + t8536;
  t14693 = 0.100000000003*t12514;
  t14783 = 3.e-7*t7170;
  t14876 = t8369 + t8375 + t14693 + t14783;
  t15408 = 0.1000000000039*t6274;
  t15435 = 3.e-7*t7039;
  t15442 = t8524 + t6390;
  t15443 = -0.200000000003*t15442;
  t15444 = t8369 + t15408 + t15435 + t15443;
  t17304 = t8342*t4004*t4670;
  t17681 = 3.e-6*t621*t4670*t4718;
  t19167 = t17304 + t17681;
  t15473 = t15465 + t6390;
  t19600 = 3.e-6*t621*t4004*t4670;
  t19602 = t176*t4670*t4718;
  t19633 = t19600 + t19602;
  t19687 = 3.e-6*t4004*t4390*t4670;
  t19688 = -1.*t4390*t4670*t4718;
  t19689 = t19687 + t19688;
  t17080 = t15465 + t8536;
  t17084 = -1.8e-11*t6274;
  t17085 = 1. + t17084;
  t19869 = 3.e-6*t5222;
  t19876 = t19869 + t7010;
  t19865 = -3.e-6*t5222;
  t19866 = t19865 + t7010;
  t19893 = -9.e-12*t6390;
  t19883 = -3.e-6*t3574*t4390;
  t19884 = -3.e-6*t621*t4004*t4670;
  t19885 = t8342*t4670*t4718;
  t19886 = t19883 + t19884 + t19885;
  t19930 = t3574*t4390;
  t19949 = -1.*t176*t4004*t4670;
  t20019 = t19930 + t19949 + t17681;
  t20033 = t15451*t3574;
  t20034 = t4004*t4390*t4670;
  t20214 = 3.e-6*t4390*t4670*t4718;
  t20215 = t20033 + t20034 + t20214;
  t20253 = t19869 + t7067;
  t24642 = t19865 + t7067;
  t20403 = 9.e-12*t6390;
  t27640 = -1.000000000009*t3574*t4390;
  t27645 = t176*t4004*t4670;
  t27647 = 3.e-6*t176*t4670*t4718;
  t27673 = t27640 + t27645 + t27647;
  t28650 = -3.e-6*t176*t3574;
  t29078 = -3.e-6*t4004*t4390*t4670;
  t29087 = -9.e-12*t4390*t4670*t4718;
  t29178 = t28650 + t29078 + t29087;
  t29181 = t176*t3574;
  t29183 = t29181 + t20034 + t20214;
  t4385 = -1.*t2814*t3574*t4004;
  t4722 = 6.000000000054e-7*t621*t3574*t4718;
  t29456 = t7331 + t8343;
  t29458 = t14925 + t15190;
  t29472 = t15447 + t15453;
  t19867 = -0.200000000003*t19866;
  t19878 = 0.100000000003*t19876;
  t19881 = 5.4e-18*t6390;
  t19882 = 1.e-7 + t19867 + t19878 + t19881;
  t19888 = 3.e-7*t19876;
  t19899 = t5671 + t19893;
  t19909 = 0.100000000003*t19899;
  t19915 = -0.2000000000048*t6390;
  t19919 = 3.e-13 + t19888 + t19909 + t19915;
  t20022 = 3.e-7*t19866;
  t20024 = t5222 + t19893;
  t20027 = -0.200000000003*t20024;
  t20029 = 0.1000000000039*t6390;
  t20031 = 3.e-13 + t20022 + t20027 + t20029;
  t29654 = -1.*t8342*t3574*t4004;
  t29669 = -3.e-6*t621*t3574*t4718;
  t29670 = t29654 + t29669;
  t29675 = -1.*t176*t3574*t4718;
  t29694 = t7331 + t29675;
  t20639 = t5671 + t20403;
  t29707 = -3.e-6*t3574*t4004*t4390;
  t29713 = t3574*t4390*t4718;
  t29720 = t29707 + t29713;
  t27431 = t5222 + t20403;
  t29995 = -3.e-6*t176*t3574*t4004;
  t29997 = t176*t3574*t4718;
  t30007 = t29995 + t29997;
  t30014 = 9.e-12*t3574*t4004*t4390;
  t30016 = -3.e-6*t3574*t4390*t4718;
  t30019 = t30014 + t30016;
  t17239 = 6.000000000054e-7*t621*t4004*t4670;
  t17273 = t2814*t4670*t4718;
  t19537 = t7230*t19167;
  t19635 = t14876*t19633;
  t19692 = t15444*t19689;
  t19705 = t15458*t19167;
  t19709 = t15473*t19633;
  t19712 = t15553*t19689;
  t19713 = t19705 + t19709 + t19712;
  t19715 = -0.3*t19713;
  t19716 = -1.*t17068*t19167;
  t19717 = -1.*t15553*t19633;
  t19718 = -1.*t17080*t19689;
  t19719 = t19716 + t19717 + t19718;
  t19720 = 0.2*t19719;
  t19725 = t17085*t19167;
  t19726 = t15458*t19633;
  t19727 = t17068*t19689;
  t19737 = t19725 + t19726 + t19727;
  t19852 = 0.100001*t19737;
  t19861 = t17239 + t17273 + t19537 + t19635 + t19692 + t19715 + t19720 + t19852;
  t30241 = -1.000000000009*t4390*t4670;
  t30253 = -3.e-6*t176*t3574*t4718;
  t30261 = t14925 + t30241 + t30253;
  t30350 = -1.*t3574*t4004*t4390;
  t30373 = t176*t4670;
  t30377 = t30350 + t30373 + t30016;
  t30384 = 3.e-6*t3574*t4004*t4390;
  t30385 = -3.e-6*t176*t4670;
  t30391 = 9.e-12*t3574*t4390*t4718;
  t30405 = t30384 + t30385 + t30391;
  t4713 = -0.2000000000018*t4390*t4670;
  t30479 = t14925 + t14986 + t30253;
  t30489 = 3.e-6*t176*t3574*t4004;
  t30491 = 9.e-12*t176*t3574*t4718;
  t30492 = t30489 + t7335 + t30491;
  t30499 = -1.000000000009*t176*t4670;
  t30507 = t15447 + t30499 + t15453;
  t29990 = -6.000000000054e-7*t3574*t4004*t4390;
  t29992 = 0.2000000000018*t3574*t4390*t4718;
  t30012 = t15444*t30007;
  t30025 = t7230*t30019;
  t30057 = t14876*t29720;
  t30085 = -1.*t17080*t30007;
  t30117 = -1.*t17068*t30019;
  t30119 = -1.*t15553*t29720;
  t30121 = t30085 + t30117 + t30119;
  t30128 = 0.2*t30121;
  t30145 = t17068*t30007;
  t30147 = t17085*t30019;
  t30149 = t15458*t29720;
  t30153 = t30145 + t30147 + t30149;
  t30154 = 0.100001*t30153;
  t30167 = t15553*t30007;
  t30186 = t15458*t30019;
  t30206 = t15473*t29720;
  t30207 = t30167 + t30186 + t30206;
  t30213 = -0.3*t30207;
  t30218 = t29990 + t29992 + t30012 + t30025 + t30057 + t30128 + t30154 + t30213;
  t27630 = 0.2000000000018*t176*t3574;
  t27636 = 0.2000000000018*t4004*t4390*t4670;
  t27638 = 6.000000000054e-7*t4390*t4670*t4718;
  t28024 = t15444*t27673;
  t29179 = t7230*t29178;
  t29271 = t14876*t29183;
  t29329 = -1.*t17080*t27673;
  t29334 = -1.*t17068*t29178;
  t29336 = -1.*t15553*t29183;
  t29339 = t29329 + t29334 + t29336;
  t29340 = 0.2*t29339;
  t29347 = t17068*t27673;
  t29354 = t17085*t29178;
  t29377 = t15458*t29183;
  t29381 = t29347 + t29354 + t29377;
  t29382 = 0.100001*t29381;
  t29399 = t15553*t27673;
  t29402 = t15458*t29178;
  t29404 = t15473*t29183;
  t29415 = t29399 + t29402 + t29404;
  t29426 = -0.3*t29415;
  t29435 = t27630 + t27636 + t27638 + t28024 + t29179 + t29271 + t29340 + t29382 + t29426;
  t30774 = -9.e-12*t5222;
  t30744 = 3.e-6*t621*t3574*t4004;
  t30746 = -3.e-6*t4390*t4670;
  t30757 = -1.*t8342*t3574*t4718;
  t30759 = t30744 + t30746 + t30757;
  t30780 = t176*t3574*t4004;
  t30781 = t4390*t4670;
  t30782 = t30780 + t30781 + t29669;
  t30802 = t15451*t4670;
  t30804 = t30350 + t30802 + t30016;
  t30813 = 9.e-12*t5222;
  t30318 = t20031*t30261;
  t30382 = t19919*t30377;
  t30408 = t19882*t30405;
  t30409 = -1.000000000009*t6390*t30261;
  t30414 = t27431*t30377;
  t30417 = t24642*t30405;
  t30418 = t30409 + t30414 + t30417;
  t30426 = -0.3*t30418;
  t30429 = -1.*t20639*t30261;
  t30434 = 1.000000000009*t6390*t30377;
  t30437 = -1.*t20253*t30405;
  t30444 = t30429 + t30434 + t30437;
  t30445 = 0.2*t30444;
  t30447 = t20253*t30261;
  t30454 = t24642*t30377;
  t30455 = -1.8e-11*t6390*t30405;
  t30461 = t30447 + t30454 + t30455;
  t30466 = 0.100001*t30461;
  t30467 = t30318 + t30382 + t30408 + t30426 + t30445 + t30466;
  t29672 = t19882*t29670;
  t29701 = t19919*t29694;
  t29725 = t20031*t29720;
  t29729 = -1.*t20253*t29670;
  t29732 = 1.000000000009*t6390*t29694;
  t29758 = -1.*t20639*t29720;
  t29777 = t29729 + t29732 + t29758;
  t29791 = 0.2*t29777;
  t29796 = -1.8e-11*t6390*t29670;
  t29848 = t24642*t29694;
  t29915 = t20253*t29720;
  t29920 = t29796 + t29848 + t29915;
  t29937 = 0.100001*t29920;
  t29943 = t24642*t29670;
  t29959 = t27431*t29694;
  t29960 = -1.000000000009*t6390*t29720;
  t29962 = t29943 + t29959 + t29960;
  t29981 = -0.3*t29962;
  t29986 = t29672 + t29701 + t29725 + t29791 + t29937 + t29981;
  t19887 = t19882*t19886;
  t20020 = t19919*t20019;
  t20249 = t20031*t20215;
  t20345 = -1.*t20253*t19886;
  t20346 = 1.000000000009*t6390*t20019;
  t21170 = -1.*t20639*t20215;
  t21982 = t20345 + t20346 + t21170;
  t22154 = 0.2*t21982;
  t24632 = -1.8e-11*t6390*t19886;
  t27062 = t24642*t20019;
  t27066 = t20253*t20215;
  t27334 = t24632 + t27062 + t27066;
  t27355 = 0.100001*t27334;
  t27400 = t24642*t19886;
  t27436 = t27431*t20019;
  t27582 = -1.000000000009*t6390*t20215;
  t27590 = t27400 + t27436 + t27582;
  t27612 = -0.3*t27590;
  t27621 = t19887 + t20020 + t20249 + t22154 + t27355 + t27612;
  t31325 = Cos(var1[3]);
  t31334 = 3.e-6*t621*t31325*t3574*t4004;
  t31335 = -3.e-6*t31325*t4390*t4670;
  t31337 = -1.*t8342*t31325*t3574*t4718;
  t31340 = t31334 + t31335 + t31337;
  t31351 = t176*t31325*t3574*t4004;
  t31353 = t31325*t4390*t4670;
  t31359 = -3.e-6*t621*t31325*t3574*t4718;
  t31363 = t31351 + t31353 + t31359;
  t31367 = -1.*t31325*t3574*t4004*t4390;
  t31372 = t15451*t31325*t4670;
  t31378 = -3.e-6*t31325*t3574*t4390*t4718;
  t31379 = t31367 + t31372 + t31378;
  t31456 = Sin(var1[3]);
  t31454 = -1.*t31325*t4004*t4670;
  t31471 = t31456*t4718;
  t31489 = t31454 + t31471;
  t31492 = -1.*t4004*t31456;
  t31498 = -1.*t31325*t4670*t4718;
  t31512 = t31492 + t31498;
  t31518 = t8342*t31489;
  t31529 = 3.e-6*t621*t31512;
  t31541 = t31518 + t31529;
  t31557 = 3.e-6*t621*t31489;
  t31560 = t176*t31512;
  t31566 = t31557 + t31560;
  t31575 = 3.e-6*t4390*t31489;
  t31576 = -1.*t4390*t31512;
  t31578 = t31575 + t31576;
  t31684 = t31325*t4004*t4670;
  t31685 = -1.*t31456*t4718;
  t31691 = t31684 + t31685;
  t31683 = 3.e-6*t31325*t3574*t4390;
  t31693 = 3.e-6*t621*t31691;
  t31696 = t8342*t31512;
  t31698 = t31683 + t31693 + t31696;
  t31714 = -1.*t31325*t3574*t4390;
  t31718 = t176*t31691;
  t31727 = t31714 + t31718 + t31529;
  t31735 = -1.*t15451*t31325*t3574;
  t31747 = -1.*t4390*t31691;
  t31749 = 3.e-6*t4390*t31512;
  t31751 = t31735 + t31747 + t31749;
  t31805 = 1.000000000009*t31325*t3574*t4390;
  t31806 = -1.*t176*t31691;
  t31807 = 3.e-6*t176*t31512;
  t31811 = t31805 + t31806 + t31807;
  t31826 = 3.e-6*t176*t31325*t3574;
  t31827 = 3.e-6*t4390*t31691;
  t31828 = -9.e-12*t4390*t31512;
  t31830 = t31826 + t31827 + t31828;
  t31832 = -1.*t176*t31325*t3574;
  t31835 = t31832 + t31747 + t31749;
  t31874 = -1.*t4004*t31456*t4670;
  t31876 = -1.*t31325*t4718;
  t31890 = t31874 + t31876;
  t31898 = -1.*t31325*t4004;
  t31903 = t31456*t4670*t4718;
  t31907 = t31898 + t31903;
  t31915 = -3.e-6*t3574*t4390*t31456;
  t31919 = 3.e-6*t621*t31890;
  t31920 = t8342*t31907;
  t31925 = t31915 + t31919 + t31920;
  t31936 = t3574*t4390*t31456;
  t31940 = t176*t31890;
  t31954 = 3.e-6*t621*t31907;
  t31955 = t31936 + t31940 + t31954;
  t31959 = t15451*t3574*t31456;
  t31970 = -1.*t4390*t31890;
  t31975 = 3.e-6*t4390*t31907;
  t31978 = t31959 + t31970 + t31975;
  t31326 = t2814*t31325*t3574*t4004;
  t31328 = 0.2000000000018*t31325*t4390*t4670;
  t31332 = -6.000000000054e-7*t621*t31325*t3574*t4718;
  t31350 = t7230*t31340;
  t31366 = t14876*t31363;
  t31381 = t15444*t31379;
  t31382 = t15458*t31340;
  t31383 = t15473*t31363;
  t31406 = t15553*t31379;
  t31410 = t31382 + t31383 + t31406;
  t31411 = -0.3*t31410;
  t31412 = -1.*t17068*t31340;
  t31414 = -1.*t15553*t31363;
  t31417 = -1.*t17080*t31379;
  t31418 = t31412 + t31414 + t31417;
  t31424 = 0.2*t31418;
  t31428 = t17085*t31340;
  t31430 = t15458*t31363;
  t31436 = t17068*t31379;
  t31438 = t31428 + t31430 + t31436;
  t31444 = 0.100001*t31438;
  t31449 = t31326 + t31328 + t31332 + t31350 + t31366 + t31381 + t31411 + t31424 + t31444;
  t32138 = 3.e-6*t621*t3574*t4004*t31456;
  t32139 = -3.e-6*t4390*t31456*t4670;
  t32143 = -1.*t8342*t3574*t31456*t4718;
  t32144 = t32138 + t32139 + t32143;
  t32148 = t176*t3574*t4004*t31456;
  t32155 = t4390*t31456*t4670;
  t32165 = -3.e-6*t621*t3574*t31456*t4718;
  t32167 = t32148 + t32155 + t32165;
  t32175 = -1.*t3574*t4004*t4390*t31456;
  t32202 = t15451*t31456*t4670;
  t32214 = -3.e-6*t3574*t4390*t31456*t4718;
  t32217 = t32175 + t32202 + t32214;
  t32273 = -1.*t176*t3574*t4004*t31456;
  t32275 = -1.000000000009*t4390*t31456*t4670;
  t32276 = -3.e-6*t176*t3574*t31456*t4718;
  t32277 = t32273 + t32275 + t32276;
  t32289 = t176*t31456*t4670;
  t32291 = t32175 + t32289 + t32214;
  t32300 = 3.e-6*t3574*t4004*t4390*t31456;
  t32308 = -3.e-6*t176*t31456*t4670;
  t32309 = 9.e-12*t3574*t4390*t31456*t4718;
  t32316 = t32300 + t32308 + t32309;
  t32378 = -1.*t8342*t3574*t4004*t31456;
  t32386 = t32378 + t32165;
  t32390 = -3.e-6*t621*t3574*t4004*t31456;
  t32397 = -1.*t176*t3574*t31456*t4718;
  t32399 = t32390 + t32397;
  t32408 = -3.e-6*t3574*t4004*t4390*t31456;
  t32410 = t3574*t4390*t31456*t4718;
  t32411 = t32408 + t32410;
  t31872 = 0.2000000000018*t3574*t4390*t31456;
  t32494 = -3.e-6*t621*t4004*t31456*t4670;
  t32495 = t8342*t31456*t4670*t4718;
  t32496 = t31915 + t32494 + t32495;
  t32501 = -1.*t176*t4004*t31456*t4670;
  t32517 = 3.e-6*t621*t31456*t4670*t4718;
  t32518 = t31936 + t32501 + t32517;
  t32550 = t4004*t4390*t31456*t4670;
  t32555 = 3.e-6*t4390*t31456*t4670*t4718;
  t32562 = t31959 + t32550 + t32555;
  t32373 = -6.000000000054e-7*t621*t3574*t4004*t31456;
  t32374 = -1.*t2814*t3574*t31456*t4718;
  t32387 = t7230*t32386;
  t32404 = t14876*t32399;
  t32413 = t15444*t32411;
  t32421 = t15458*t32386;
  t32422 = t15473*t32399;
  t32424 = t15553*t32411;
  t32428 = t32421 + t32422 + t32424;
  t32432 = -0.3*t32428;
  t32439 = -1.*t17068*t32386;
  t32443 = -1.*t15553*t32399;
  t32444 = -1.*t17080*t32411;
  t32446 = t32439 + t32443 + t32444;
  t32455 = 0.2*t32446;
  t32462 = t17085*t32386;
  t32465 = t15458*t32399;
  t32469 = t17068*t32411;
  t32471 = t32462 + t32465 + t32469;
  t32473 = 0.100001*t32471;
  t32474 = t32373 + t32374 + t32387 + t32404 + t32413 + t32432 + t32455 + t32473;
  t31491 = 6.000000000054e-7*t621*t31489;
  t31516 = t2814*t31512;
  t31546 = t7230*t31541;
  t31574 = t14876*t31566;
  t31593 = t15444*t31578;
  t31607 = t15458*t31541;
  t31608 = t15473*t31566;
  t31627 = t15553*t31578;
  t31634 = t31607 + t31608 + t31627;
  t31639 = -0.3*t31634;
  t31654 = -1.*t17068*t31541;
  t31655 = -1.*t15553*t31566;
  t31656 = -1.*t17080*t31578;
  t31657 = t31654 + t31655 + t31656;
  t31658 = 0.2*t31657;
  t31666 = t17085*t31541;
  t31670 = t15458*t31566;
  t31676 = t17068*t31578;
  t31677 = t31666 + t31670 + t31676;
  t31678 = 0.100001*t31677;
  t31680 = t31491 + t31516 + t31546 + t31574 + t31593 + t31639 + t31658 + t31678;
  t32647 = t31325*t4004;
  t32648 = -1.*t31456*t4670*t4718;
  t32651 = t32647 + t32648;
  t32643 = t8342*t31890;
  t32652 = 3.e-6*t621*t32651;
  t32656 = t32643 + t32652;
  t32678 = t176*t32651;
  t32680 = t31919 + t32678;
  t32693 = 3.e-6*t4390*t31890;
  t32696 = -1.*t4390*t32651;
  t32700 = t32693 + t32696;
  t32806 = 3.e-6*t176*t31890;
  t32811 = -1.*t176*t32651;
  t32835 = t32806 + t32811;
  t32863 = -9.e-12*t4390*t31890;
  t32864 = 3.e-6*t4390*t32651;
  t32865 = t32863 + t32864;
  t31896 = t2814*t31890;
  t31914 = 6.000000000054e-7*t621*t31907;
  t32966 = t31919 + t31920;
  t32969 = t31940 + t31954;
  t32979 = t31970 + t31975;
  t32268 = -0.2000000000018*t3574*t4004*t4390*t31456;
  t32270 = 0.2000000000018*t176*t31456*t4670;
  t32272 = -6.000000000054e-7*t3574*t4390*t31456*t4718;
  t32283 = t15444*t32277;
  t32296 = t14876*t32291;
  t32318 = t7230*t32316;
  t32320 = t17068*t32277;
  t32321 = t15458*t32291;
  t32325 = t17085*t32316;
  t32330 = t32320 + t32321 + t32325;
  t32332 = 0.100001*t32330;
  t32333 = t15553*t32277;
  t32334 = t15473*t32291;
  t32340 = t15458*t32316;
  t32341 = t32333 + t32334 + t32340;
  t32343 = -0.3*t32341;
  t32348 = -1.*t17080*t32277;
  t32351 = -1.*t15553*t32291;
  t32362 = -1.*t17068*t32316;
  t32363 = t32348 + t32351 + t32362;
  t32364 = 0.2*t32363;
  t32366 = t32268 + t32270 + t32272 + t32283 + t32296 + t32318 + t32332 + t32343 + t32364;
  t31801 = -0.2000000000018*t176*t31325*t3574;
  t31802 = -0.2000000000018*t4390*t31691;
  t31804 = 6.000000000054e-7*t4390*t31512;
  t31813 = t15444*t31811;
  t31831 = t7230*t31830;
  t31837 = t14876*t31835;
  t31838 = -1.*t17080*t31811;
  t31839 = -1.*t17068*t31830;
  t31840 = -1.*t15553*t31835;
  t31845 = t31838 + t31839 + t31840;
  t31852 = 0.2*t31845;
  t31853 = t17068*t31811;
  t31856 = t17085*t31830;
  t31857 = t15458*t31835;
  t31859 = t31853 + t31856 + t31857;
  t31860 = 0.100001*t31859;
  t31862 = t15553*t31811;
  t31863 = t15458*t31830;
  t31864 = t15473*t31835;
  t31866 = t31862 + t31863 + t31864;
  t31868 = -0.3*t31866;
  t31869 = t31801 + t31802 + t31804 + t31813 + t31831 + t31837 + t31852 + t31860 + t31868;
  t33082 = t4004*t31456*t4670;
  t33088 = t31325*t4718;
  t33101 = t33082 + t33088;
  t33112 = 3.e-6*t176*t33101;
  t33113 = -9.e-12*t176*t32651;
  t33119 = t31915 + t33112 + t33113;
  t33125 = -1.*t176*t33101;
  t33127 = 3.e-6*t176*t32651;
  t33129 = t31936 + t33125 + t33127;
  t33132 = 1.000000000009*t176*t3574*t31456;
  t33135 = t4390*t33101;
  t33136 = -3.e-6*t4390*t32651;
  t33140 = t33132 + t33135 + t33136;
  t32801 = 6.000000000054e-7*t4390*t31890;
  t32802 = -0.2000000000018*t4390*t32651;
  t32851 = t15444*t32835;
  t32854 = t14876*t32700;
  t32873 = t7230*t32865;
  t32880 = t17068*t32835;
  t32884 = t15458*t32700;
  t32885 = t17085*t32865;
  t32887 = t32880 + t32884 + t32885;
  t32891 = 0.100001*t32887;
  t32904 = t15553*t32835;
  t32912 = t15473*t32700;
  t32913 = t15458*t32865;
  t32922 = t32904 + t32912 + t32913;
  t32923 = -0.3*t32922;
  t32935 = -1.*t17080*t32835;
  t32938 = -1.*t15553*t32700;
  t32940 = -1.*t17068*t32865;
  t32941 = t32935 + t32938 + t32940;
  t32942 = 0.2*t32941;
  t32943 = t32801 + t32802 + t32851 + t32854 + t32873 + t32891 + t32923 + t32942;
  t33185 = 1.000000000009*t3574*t4390*t31456;
  t33188 = t33185 + t33125 + t33127;
  t33191 = 3.e-6*t176*t3574*t31456;
  t33192 = 3.e-6*t4390*t33101;
  t33193 = -9.e-12*t4390*t32651;
  t33194 = t33191 + t33192 + t33193;
  t33199 = -1.*t176*t3574*t31456;
  t33202 = -1.*t4390*t33101;
  t33203 = t33199 + t33202 + t32864;
  t32146 = t19882*t32144;
  t32174 = t19919*t32167;
  t32218 = t20031*t32217;
  t32221 = -1.*t20253*t32144;
  t32225 = 1.000000000009*t6390*t32167;
  t32226 = -1.*t20639*t32217;
  t32227 = t32221 + t32225 + t32226;
  t32228 = 0.2*t32227;
  t32229 = -1.8e-11*t6390*t32144;
  t32231 = t24642*t32167;
  t32232 = t20253*t32217;
  t32238 = t32229 + t32231 + t32232;
  t32241 = 0.100001*t32238;
  t32242 = t24642*t32144;
  t32249 = t27431*t32167;
  t32251 = -1.000000000009*t6390*t32217;
  t32252 = t32242 + t32249 + t32251;
  t32260 = -0.3*t32252;
  t32261 = t32146 + t32174 + t32218 + t32228 + t32241 + t32260;
  t31706 = t19882*t31698;
  t31734 = t19919*t31727;
  t31759 = t20031*t31751;
  t31764 = -1.*t20253*t31698;
  t31766 = 1.000000000009*t6390*t31727;
  t31769 = -1.*t20639*t31751;
  t31770 = t31764 + t31766 + t31769;
  t31773 = 0.2*t31770;
  t31776 = -1.8e-11*t6390*t31698;
  t31777 = t24642*t31727;
  t31785 = t20253*t31751;
  t31786 = t31776 + t31777 + t31785;
  t31788 = 0.100001*t31786;
  t31793 = t24642*t31698;
  t31794 = t27431*t31727;
  t31795 = -1.000000000009*t6390*t31751;
  t31796 = t31793 + t31794 + t31795;
  t31797 = -0.3*t31796;
  t31799 = t31706 + t31734 + t31759 + t31773 + t31788 + t31797;
  t32672 = t19882*t32656;
  t32683 = t19919*t32680;
  t32701 = t20031*t32700;
  t32704 = -1.*t20253*t32656;
  t32707 = 1.000000000009*t6390*t32680;
  t32709 = -1.*t20639*t32700;
  t32712 = t32704 + t32707 + t32709;
  t32718 = 0.2*t32712;
  t32721 = -1.8e-11*t6390*t32656;
  t32724 = t24642*t32680;
  t32727 = t20253*t32700;
  t32730 = t32721 + t32724 + t32727;
  t32752 = 0.100001*t32730;
  t32758 = t24642*t32656;
  t32775 = t27431*t32680;
  t32776 = -1.000000000009*t6390*t32700;
  t32783 = t32758 + t32775 + t32776;
  t32785 = -0.3*t32783;
  t32790 = t32672 + t32683 + t32701 + t32718 + t32752 + t32785;
  t30688 = 5.4e-18*t5222;
  t30691 = 0.100000000003*t19866;
  t30719 = -0.200000000003*t24642;
  t30725 = t30688 + t30691 + t30719;
  t30764 = -0.2000000000048*t5222;
  t30775 = t30774 + t6390;
  t30776 = 0.100000000003*t30775;
  t30778 = t30764 + t20022 + t30776;
  t30786 = 0.1000000000039*t5222;
  t30787 = t30774 + t8536;
  t30789 = -0.200000000003*t30787;
  t30793 = 3.e-7*t24642;
  t30799 = t30786 + t30789 + t30793;
  t33262 = 3.e-6*t3574*t4390*t31456;
  t33265 = 3.e-6*t621*t33101;
  t33267 = t8342*t32651;
  t33269 = t33262 + t33265 + t33267;
  t30814 = t30813 + t8536;
  t33273 = -1.*t3574*t4390*t31456;
  t33274 = t176*t33101;
  t33276 = t33273 + t33274 + t32652;
  t33283 = -1.*t15451*t3574*t31456;
  t33290 = t33283 + t33202 + t32864;
  t30878 = t30813 + t6390;
  t33190 = t20031*t33188;
  t33197 = t19882*t33194;
  t33204 = t19919*t33203;
  t33205 = -1.000000000009*t6390*t33188;
  t33206 = t24642*t33194;
  t33211 = t27431*t33203;
  t33226 = t33205 + t33206 + t33211;
  t33227 = -0.3*t33226;
  t33228 = t20253*t33188;
  t33230 = -1.8e-11*t6390*t33194;
  t33231 = t24642*t33203;
  t33236 = t33228 + t33230 + t33231;
  t33239 = 0.100001*t33236;
  t33241 = -1.*t20639*t33188;
  t33242 = -1.*t20253*t33194;
  t33244 = 1.000000000009*t6390*t33203;
  t33249 = t33241 + t33242 + t33244;
  t33253 = 0.2*t33249;
  t33254 = t33190 + t33197 + t33204 + t33227 + t33239 + t33253;
  t33522 = t2814*t3574*t4004*t31456;
  t33524 = 0.2000000000018*t4390*t31456*t4670;
  t33530 = -6.000000000054e-7*t621*t3574*t31456*t4718;
  t33532 = t7230*t32144;
  t33534 = t14876*t32167;
  t33539 = t15444*t32217;
  t33569 = t15458*t32144;
  t33574 = t15473*t32167;
  t33576 = t15553*t32217;
  t33585 = t33569 + t33574 + t33576;
  t33590 = -0.3*t33585;
  t33592 = -1.*t17068*t32144;
  t33595 = -1.*t15553*t32167;
  t33598 = -1.*t17080*t32217;
  t33603 = t33592 + t33595 + t33598;
  t33604 = 0.2*t33603;
  t33605 = t17085*t32144;
  t33624 = t15458*t32167;
  t33625 = t17068*t32217;
  t33648 = t33605 + t33624 + t33625;
  t33649 = 0.100001*t33648;
  t33657 = t33522 + t33524 + t33530 + t33532 + t33534 + t33539 + t33590 + t33604 + t33649;
  t33353 = -0.2000000000018*t31325*t3574*t4390;
  t33359 = t2814*t31691;
  t33361 = 6.000000000054e-7*t621*t31512;
  t33363 = t7230*t31698;
  t33365 = t14876*t31727;
  t33375 = t15444*t31751;
  t33376 = t15458*t31698;
  t33379 = t15473*t31727;
  t33380 = t15553*t31751;
  t33381 = t33376 + t33379 + t33380;
  t33384 = -0.3*t33381;
  t33386 = -1.*t17068*t31698;
  t33389 = -1.*t15553*t31727;
  t33392 = -1.*t17080*t31751;
  t33402 = t33386 + t33389 + t33392;
  t33415 = 0.2*t33402;
  t33422 = t17085*t31698;
  t33453 = t15458*t31727;
  t33464 = t17068*t31751;
  t33472 = t33422 + t33453 + t33464;
  t33509 = 0.100001*t33472;
  t33512 = t33353 + t33359 + t33361 + t33363 + t33365 + t33375 + t33384 + t33415 + t33509;
  t33658 = 6.000000000054e-7*t621*t31890;
  t33678 = t2814*t32651;
  t33689 = t7230*t32656;
  t33691 = t14876*t32680;
  t33695 = t15444*t32700;
  t33701 = t15458*t32656;
  t33704 = t15473*t32680;
  t33709 = t15553*t32700;
  t33712 = t33701 + t33704 + t33709;
  t33718 = -0.3*t33712;
  t33733 = -1.*t17068*t32656;
  t33778 = -1.*t15553*t32680;
  t33782 = -1.*t17080*t32700;
  t33785 = t33733 + t33778 + t33782;
  t33796 = 0.2*t33785;
  t33799 = t17085*t32656;
  t33801 = t15458*t32680;
  t33806 = t17068*t32700;
  t33811 = t33799 + t33801 + t33806;
  t33812 = 0.100001*t33811;
  t33815 = t33658 + t33678 + t33689 + t33691 + t33695 + t33718 + t33796 + t33812;
  t34112 = t19882*t33269;
  t34120 = t19919*t33276;
  t34140 = t20031*t33290;
  t34141 = -1.*t20253*t33269;
  t34144 = 1.000000000009*t6390*t33276;
  t34145 = -1.*t20639*t33290;
  t34147 = t34141 + t34144 + t34145;
  t34148 = 0.2*t34147;
  t34151 = -1.8e-11*t6390*t33269;
  t34153 = t24642*t33276;
  t34155 = t20253*t33290;
  t34156 = t34151 + t34153 + t34155;
  t34157 = 0.100001*t34156;
  t34161 = t24642*t33269;
  t34162 = t27431*t33276;
  t34163 = -1.000000000009*t6390*t33290;
  t34169 = t34161 + t34162 + t34163;
  t34171 = -0.3*t34169;
  t34173 = t34112 + t34120 + t34140 + t34148 + t34157 + t34171;
  t33816 = -0.2000000000018*t176*t3574*t31456;
  t33817 = -0.2000000000018*t4390*t33101;
  t33827 = 6.000000000054e-7*t4390*t32651;
  t33846 = t15444*t33188;
  t33936 = t7230*t33194;
  t34018 = t14876*t33203;
  t34052 = -1.*t17080*t33188;
  t34078 = -1.*t17068*t33194;
  t34081 = -1.*t15553*t33203;
  t34082 = t34052 + t34078 + t34081;
  t34083 = 0.2*t34082;
  t34084 = t17068*t33188;
  t34086 = t17085*t33194;
  t34087 = t15458*t33203;
  t34091 = t34084 + t34086 + t34087;
  t34096 = 0.100001*t34091;
  t34097 = t15553*t33188;
  t34100 = t15458*t33194;
  t34101 = t15473*t33203;
  t34105 = t34097 + t34100 + t34101;
  t34110 = -0.3*t34105;
  t34111 = t33816 + t33817 + t33827 + t33846 + t33936 + t34018 + t34083 + t34096 + t34110;
  t34208 = t8342*t31325*t3574*t4004;
  t34212 = 3.e-6*t621*t31325*t3574*t4718;
  t34215 = t34208 + t34212;
  t34304 = t176*t31325*t3574*t4718;
  t34305 = t31334 + t34304;
  t34310 = 3.e-6*t31325*t3574*t4004*t4390;
  t34315 = -1.*t31325*t3574*t4390*t4718;
  t34316 = t34310 + t34315;
  t34390 = -3.e-6*t621*t31325*t3574*t4004;
  t34391 = 3.e-6*t31325*t4390*t4670;
  t34398 = t8342*t31325*t3574*t4718;
  t34408 = t34390 + t34391 + t34398;
  t34410 = -1.*t176*t31325*t3574*t4004;
  t34411 = -1.*t31325*t4390*t4670;
  t34418 = t34410 + t34411 + t34212;
  t34420 = t31325*t3574*t4004*t4390;
  t34422 = -1.*t15451*t31325*t4670;
  t34423 = 3.e-6*t31325*t3574*t4390*t4718;
  t34425 = t34420 + t34422 + t34423;
  t34465 = 1.000000000009*t31325*t4390*t4670;
  t34466 = 3.e-6*t176*t31325*t3574*t4718;
  t34468 = t31351 + t34465 + t34466;
  t34479 = -3.e-6*t31325*t3574*t4004*t4390;
  t34488 = 3.e-6*t176*t31325*t4670;
  t34489 = -9.e-12*t31325*t3574*t4390*t4718;
  t34490 = t34479 + t34488 + t34489;
  t34497 = -1.*t176*t31325*t4670;
  t34498 = t34420 + t34497 + t34423;
  t34595 = 3.e-6*t621*t31325*t4004*t4670;
  t34631 = -1.*t8342*t31325*t4670*t4718;
  t34633 = t31683 + t34595 + t34631;
  t34636 = t176*t31325*t4004*t4670;
  t34648 = -3.e-6*t621*t31325*t4670*t4718;
  t34650 = t31714 + t34636 + t34648;
  t34675 = -1.*t31325*t4004*t4390*t4670;
  t34728 = -3.e-6*t31325*t4390*t4670*t4718;
  t34731 = t31735 + t34675 + t34728;
  t34203 = 6.000000000054e-7*t621*t31325*t3574*t4004;
  t34204 = t2814*t31325*t3574*t4718;
  t34218 = t7230*t34215;
  t34307 = t14876*t34305;
  t34337 = t15444*t34316;
  t34338 = t15458*t34215;
  t34340 = t15473*t34305;
  t34349 = t15553*t34316;
  t34354 = t34338 + t34340 + t34349;
  t34357 = -0.3*t34354;
  t34358 = -1.*t17068*t34215;
  t34360 = -1.*t15553*t34305;
  t34368 = -1.*t17080*t34316;
  t34370 = t34358 + t34360 + t34368;
  t34371 = 0.2*t34370;
  t34377 = t17085*t34215;
  t34378 = t15458*t34305;
  t34381 = t17068*t34316;
  t34384 = t34377 + t34378 + t34381;
  t34385 = 0.100001*t34384;
  t34387 = t34203 + t34204 + t34218 + t34307 + t34337 + t34357 + t34371 + t34385;
  t35525 = t31693 + t31696;
  t35646 = t31718 + t31529;
  t35661 = t31747 + t31749;
  t35860 = t4004*t31456;
  t35862 = t31325*t4670*t4718;
  t35863 = t35860 + t35862;
  t35856 = t8342*t31691;
  t35864 = 3.e-6*t621*t35863;
  t35867 = t35856 + t35864;
  t35877 = t176*t35863;
  t35878 = t31693 + t35877;
  t35889 = -1.*t4390*t35863;
  t35891 = t31827 + t35889;
  t36090 = 3.e-6*t176*t31691;
  t36093 = -1.*t176*t35863;
  t36094 = t36090 + t36093;
  t36124 = -9.e-12*t4390*t31691;
  t36134 = 3.e-6*t4390*t35863;
  t36138 = t36124 + t36134;
  t34460 = 0.2000000000018*t31325*t3574*t4004*t4390;
  t34462 = -0.2000000000018*t176*t31325*t4670;
  t34463 = 6.000000000054e-7*t31325*t3574*t4390*t4718;
  t34477 = t15444*t34468;
  t34493 = t7230*t34490;
  t34499 = t14876*t34498;
  t34500 = -1.*t17080*t34468;
  t34509 = -1.*t17068*t34490;
  t34512 = -1.*t15553*t34498;
  t34522 = t34500 + t34509 + t34512;
  t34538 = 0.2*t34522;
  t34539 = t17068*t34468;
  t34540 = t17085*t34490;
  t34543 = t15458*t34498;
  t34544 = t34539 + t34540 + t34543;
  t34553 = 0.100001*t34544;
  t34556 = t15553*t34468;
  t34557 = t15458*t34490;
  t34560 = t15473*t34498;
  t34565 = t34556 + t34557 + t34560;
  t34567 = -0.3*t34565;
  t34579 = t34460 + t34462 + t34463 + t34477 + t34493 + t34499 + t34538 + t34553 + t34567;
  t36223 = 3.e-6*t176*t31489;
  t36227 = -9.e-12*t176*t35863;
  t36231 = t31683 + t36223 + t36227;
  t36257 = -1.*t176*t31489;
  t36267 = 3.e-6*t176*t35863;
  t36269 = t31714 + t36257 + t36267;
  t36272 = -1.000000000009*t176*t31325*t3574;
  t36275 = t4390*t31489;
  t36278 = -3.e-6*t4390*t35863;
  t36282 = t36272 + t36275 + t36278;
  t36086 = 6.000000000054e-7*t4390*t31691;
  t36088 = -0.2000000000018*t4390*t35863;
  t36103 = t15444*t36094;
  t36109 = t14876*t35891;
  t36143 = t7230*t36138;
  t36156 = t17068*t36094;
  t36159 = t15458*t35891;
  t36160 = t17085*t36138;
  t36166 = t36156 + t36159 + t36160;
  t36167 = 0.100001*t36166;
  t36168 = t15553*t36094;
  t36172 = t15473*t35891;
  t36174 = t15458*t36138;
  t36176 = t36168 + t36172 + t36174;
  t36178 = -0.3*t36176;
  t36185 = -1.*t17080*t36094;
  t36186 = -1.*t15553*t35891;
  t36193 = -1.*t17068*t36138;
  t36195 = t36185 + t36186 + t36193;
  t36199 = 0.2*t36195;
  t36200 = t36086 + t36088 + t36103 + t36109 + t36143 + t36167 + t36178 + t36199;
  t36344 = -1.000000000009*t31325*t3574*t4390;
  t36345 = t36344 + t36257 + t36267;
  t36349 = -3.e-6*t176*t31325*t3574;
  t36351 = -9.e-12*t4390*t35863;
  t36352 = t36349 + t31575 + t36351;
  t36357 = t176*t31325*t3574;
  t36366 = -1.*t4390*t31489;
  t36367 = t36357 + t36366 + t36134;
  t34409 = t19882*t34408;
  t34419 = t19919*t34418;
  t34426 = t20031*t34425;
  t34427 = -1.*t20253*t34408;
  t34430 = 1.000000000009*t6390*t34418;
  t34434 = -1.*t20639*t34425;
  t34435 = t34427 + t34430 + t34434;
  t34436 = 0.2*t34435;
  t34438 = -1.8e-11*t6390*t34408;
  t34439 = t24642*t34418;
  t34440 = t20253*t34425;
  t34445 = t34438 + t34439 + t34440;
  t34446 = 0.100001*t34445;
  t34447 = t24642*t34408;
  t34449 = t27431*t34418;
  t34451 = -1.000000000009*t6390*t34425;
  t34453 = t34447 + t34449 + t34451;
  t34454 = -0.3*t34453;
  t34457 = t34409 + t34419 + t34426 + t34436 + t34446 + t34454;
  t35876 = t19882*t35867;
  t35884 = t19919*t35878;
  t35900 = t20031*t35891;
  t35934 = -1.*t20253*t35867;
  t35944 = 1.000000000009*t6390*t35878;
  t35956 = -1.*t20639*t35891;
  t35960 = t35934 + t35944 + t35956;
  t35972 = 0.2*t35960;
  t35978 = -1.8e-11*t6390*t35867;
  t35981 = t24642*t35878;
  t35998 = t20253*t35891;
  t36002 = t35978 + t35981 + t35998;
  t36011 = 0.100001*t36002;
  t36031 = t24642*t35867;
  t36038 = t27431*t35878;
  t36061 = -1.000000000009*t6390*t35891;
  t36064 = t36031 + t36038 + t36061;
  t36068 = -0.3*t36064;
  t36069 = t35876 + t35884 + t35900 + t35972 + t36011 + t36068;
  t36519 = -3.e-6*t31325*t3574*t4390;
  t36526 = t8342*t35863;
  t36527 = t36519 + t31557 + t36526;
  t36548 = t31325*t3574*t4390;
  t36551 = t176*t31489;
  t36557 = t36548 + t36551 + t35864;
  t36570 = t15451*t31325*t3574;
  t36595 = t36570 + t36366 + t36134;
  t36346 = t20031*t36345;
  t36353 = t19882*t36352;
  t36395 = t19919*t36367;
  t36396 = -1.000000000009*t6390*t36345;
  t36410 = t24642*t36352;
  t36411 = t27431*t36367;
  t36417 = t36396 + t36410 + t36411;
  t36419 = -0.3*t36417;
  t36429 = t20253*t36345;
  t36430 = -1.8e-11*t6390*t36352;
  t36433 = t24642*t36367;
  t36434 = t36429 + t36430 + t36433;
  t36452 = 0.100001*t36434;
  t36454 = -1.*t20639*t36345;
  t36462 = -1.*t20253*t36352;
  t36464 = 1.000000000009*t6390*t36367;
  t36469 = t36454 + t36462 + t36464;
  t36476 = 0.2*t36469;
  t36482 = t36346 + t36353 + t36395 + t36419 + t36452 + t36476;
  p_output1[0]=(t14876*t15205 + t15444*t15455 + t4385 + t4713 + t4722 + t7230*t8346 - 0.3*(t15205*t15473 + t15455*t15553 + t15458*t8346) + 0.2*(-1.*t15205*t15553 - 1.*t15455*t17080 - 1.*t17068*t8346) + 0.100001*(t15205*t15458 + t15455*t17068 + t17085*t8346))*var2[4] + t19861*var2[5] + t29435*var2[10] + t27621*var2[12];
  p_output1[1]=t19861*var2[4] + (t14876*t29458 + t15444*t29472 - 0.3*(t15458*t29456 + t15473*t29458 + t15553*t29472) + 0.100001*(t17085*t29456 + t15458*t29458 + t17068*t29472) + 0.2*(-1.*t17068*t29456 - 1.*t15553*t29458 - 1.*t17080*t29472) + t4385 + t4722 + t29456*t7230)*var2[5] + t30218*var2[10] + t29986*var2[12];
  p_output1[2]=t29435*var2[4] + t30218*var2[5] + (t14876*t30479 + t15444*t30507 - 0.3*(t15473*t30479 + t15458*t30492 + t15553*t30507) + 0.100001*(t15458*t30479 + t17085*t30492 + t17068*t30507) + 0.2*(-1.*t15553*t30479 - 1.*t17068*t30492 - 1.*t17080*t30507) - 0.2000000000018*t176*t3574*t4004 + t4713 - 6.000000000054e-7*t176*t3574*t4718 + t30492*t7230)*var2[10] + t30467*var2[12];
  p_output1[3]=t27621*var2[4] + t29986*var2[5] + t30467*var2[10] + (t30725*t30759 + t30778*t30782 + t30799*t30804 + 0.100001*(t20253*t30782 + t19876*t30804 - 1.8e-11*t30759*t5222) + 0.2*(-1.*t19876*t30759 - 1.*t30804*t30878 + 1.000000000009*t30782*t5222) - 0.3*(t20253*t30759 + t30782*t30814 - 1.000000000009*t30804*t5222))*var2[12];
  p_output1[4]=1.;
  p_output1[5]=t14876*t20019 + t15444*t20215 - 0.3*(t15458*t19886 + t15473*t20019 + t15553*t20215) + 0.100001*(t17085*t19886 + t15458*t20019 + t17068*t20215) + 0.2*(-1.*t17068*t19886 - 1.*t15553*t20019 - 1.*t17080*t20215) + 0.2000000000018*t3574*t4390 - 1.*t2814*t4004*t4670 + 6.000000000054e-7*t4670*t4718*t621 + t19886*t7230;
  p_output1[6]=t14876*t29694 + t15444*t29720 - 0.3*(t15458*t29670 + t15473*t29694 + t15553*t29720) + 0.100001*(t17085*t29670 + t15458*t29694 + t17068*t29720) + 0.2*(-1.*t17068*t29670 - 1.*t15553*t29694 - 1.*t17080*t29720) - 1.*t2814*t3574*t4718 - 6.000000000054e-7*t3574*t4004*t621 + t29670*t7230;
  p_output1[7]=t15444*t30261 + t14876*t30377 - 0.3*(t15553*t30261 + t15473*t30377 + t15458*t30405) + 0.2*(-1.*t17080*t30261 - 1.*t15553*t30377 - 1.*t17068*t30405) + 0.100001*(t17068*t30261 + t15458*t30377 + t17085*t30405) - 0.2000000000018*t3574*t4004*t4390 + 0.2000000000018*t176*t4670 - 6.000000000054e-7*t3574*t4390*t4718 + t30405*t7230;
  p_output1[8]=t19882*t30759 + t19919*t30782 + t20031*t30804 + 0.100001*(t24642*t30782 + t20253*t30804 - 1.8e-11*t30759*t6390) + 0.2*(-1.*t20253*t30759 - 1.*t20639*t30804 + 1.000000000009*t30782*t6390) - 0.3*(t24642*t30759 + t27431*t30782 - 1.000000000009*t30804*t6390);
  p_output1[9]=(t31872 + t31896 + t31914 + t14876*t31955 + t15444*t31978 - 0.3*(t15458*t31925 + t15473*t31955 + t15553*t31978) + 0.100001*(t17085*t31925 + t15458*t31955 + t17068*t31978) + 0.2*(-1.*t17068*t31925 - 1.*t15553*t31955 - 1.*t17080*t31978) + t31925*t7230)*var2[3] + t31449*var2[4] + t31680*var2[5] + t31869*var2[10] + t31799*var2[12];
  p_output1[10]=t31449*var2[3] + (t31872 + t14876*t32518 + t15444*t32562 - 0.3*(t15458*t32496 + t15473*t32518 + t15553*t32562) + 0.100001*(t17085*t32496 + t15458*t32518 + t17068*t32562) + 0.2*(-1.*t17068*t32496 - 1.*t15553*t32518 - 1.*t17080*t32562) - 1.*t2814*t31456*t4004*t4670 + 6.000000000054e-7*t31456*t4670*t4718*t621 + t32496*t7230)*var2[4] + t32474*var2[5] + t32366*var2[10] + t32261*var2[12];
  p_output1[11]=t31680*var2[3] + t32474*var2[4] + (t31896 + t31914 + t14876*t32969 + t15444*t32979 - 0.3*(t15458*t32966 + t15473*t32969 + t15553*t32979) + 0.100001*(t17085*t32966 + t15458*t32969 + t17068*t32979) + 0.2*(-1.*t17068*t32966 - 1.*t15553*t32969 - 1.*t17080*t32979) + t32966*t7230)*var2[5] + t32943*var2[10] + t32790*var2[12];
  p_output1[12]=t31869*var2[3] + t32366*var2[4] + t32943*var2[5] + (t31872 + 6.000000000054e-7*t176*t32651 - 0.2000000000018*t176*t33101 + t14876*t33129 + t15444*t33140 - 0.3*(t15458*t33119 + t15473*t33129 + t15553*t33140) + 0.100001*(t17085*t33119 + t15458*t33129 + t17068*t33140) + 0.2*(-1.*t17068*t33119 - 1.*t15553*t33129 - 1.*t17080*t33140) + t33119*t7230)*var2[10] + t33254*var2[12];
  p_output1[13]=t31799*var2[3] + t32261*var2[4] + t32790*var2[5] + t33254*var2[10] + (t30725*t33269 + t30778*t33276 + t30799*t33290 + 0.100001*(t20253*t33276 + t19876*t33290 - 1.8e-11*t33269*t5222) + 0.2*(-1.*t19876*t33269 - 1.*t30878*t33290 + 1.000000000009*t33276*t5222) - 0.3*(t20253*t33269 + t30814*t33276 - 1.000000000009*t33290*t5222))*var2[12];
  p_output1[14]=1.;
  p_output1[15]=t33512;
  p_output1[16]=t33657;
  p_output1[17]=t33815;
  p_output1[18]=t34111;
  p_output1[19]=t34173;
  p_output1[20]=t33512*var2[3] + t33657*var2[4] + t33815*var2[5] + t34111*var2[10] + t34173*var2[12];
  p_output1[21]=t33657*var2[3] + (t33353 + t14876*t34650 + t15444*t34731 - 0.3*(t15458*t34633 + t15473*t34650 + t15553*t34731) + 0.100001*(t17085*t34633 + t15458*t34650 + t17068*t34731) + 0.2*(-1.*t17068*t34633 - 1.*t15553*t34650 - 1.*t17080*t34731) + t2814*t31325*t4004*t4670 - 6.000000000054e-7*t31325*t4670*t4718*t621 + t34633*t7230)*var2[4] + t34387*var2[5] + t34579*var2[10] + t34457*var2[12];
  p_output1[22]=t33815*var2[3] + t34387*var2[4] + (t33359 + t33361 + t14876*t35646 + t15444*t35661 - 0.3*(t15458*t35525 + t15473*t35646 + t15553*t35661) + 0.100001*(t17085*t35525 + t15458*t35646 + t17068*t35661) + 0.2*(-1.*t17068*t35525 - 1.*t15553*t35646 - 1.*t17080*t35661) + t35525*t7230)*var2[5] + t36200*var2[10] + t36069*var2[12];
  p_output1[23]=t34111*var2[3] + t34579*var2[4] + t36200*var2[5] + (-0.2000000000018*t176*t31489 + t33353 + 6.000000000054e-7*t176*t35863 + t14876*t36269 + t15444*t36282 - 0.3*(t15458*t36231 + t15473*t36269 + t15553*t36282) + 0.100001*(t17085*t36231 + t15458*t36269 + t17068*t36282) + 0.2*(-1.*t17068*t36231 - 1.*t15553*t36269 - 1.*t17080*t36282) + t36231*t7230)*var2[10] + t36482*var2[12];
  p_output1[24]=t34173*var2[3] + t34457*var2[4] + t36069*var2[5] + t36482*var2[10] + (t30725*t36527 + t30778*t36557 + t30799*t36595 + 0.100001*(t20253*t36557 + t19876*t36595 - 1.8e-11*t36527*t5222) + 0.2*(-1.*t19876*t36527 - 1.*t30878*t36595 + 1.000000000009*t36557*t5222) - 0.3*(t20253*t36527 + t30814*t36557 - 1.000000000009*t36595*t5222))*var2[12];
  p_output1[25]=1.;
  p_output1[26]=t2814*t33101 + t14876*t33276 + t15444*t33290 - 0.3*(t15458*t33269 + t15473*t33276 + t15553*t33290) + 0.100001*(t17085*t33269 + t15458*t33276 + t17068*t33290) + 0.2*(-1.*t17068*t33269 - 1.*t15553*t33276 - 1.*t17080*t33290) - 0.2000000000018*t31456*t3574*t4390 + 6.000000000054e-7*t32651*t621 + t33269*t7230;
  p_output1[27]=t14876*t34418 + t15444*t34425 - 0.3*(t15458*t34408 + t15473*t34418 + t15553*t34425) + 0.100001*(t17085*t34408 + t15458*t34418 + t17068*t34425) + 0.2*(-1.*t17068*t34408 - 1.*t15553*t34418 - 1.*t17080*t34425) - 1.*t2814*t31325*t3574*t4004 - 0.2000000000018*t31325*t4390*t4670 + 6.000000000054e-7*t31325*t3574*t4718*t621 + t34408*t7230;
  p_output1[28]=t2814*t35863 + t14876*t35878 + t15444*t35891 - 0.3*(t15458*t35867 + t15473*t35878 + t15553*t35891) + 0.100001*(t17085*t35867 + t15458*t35878 + t17068*t35891) + 0.2*(-1.*t17068*t35867 - 1.*t15553*t35878 - 1.*t17080*t35891) + 6.000000000054e-7*t31691*t621 + t35867*t7230;
  p_output1[29]=0.2000000000018*t176*t31325*t3574 + t15444*t36345 + t14876*t36367 + 0.100001*(t17068*t36345 + t17085*t36352 + t15458*t36367) - 0.3*(t15553*t36345 + t15458*t36352 + t15473*t36367) + 0.2*(-1.*t17080*t36345 - 1.*t17068*t36352 - 1.*t15553*t36367) - 0.2000000000018*t31489*t4390 + 6.000000000054e-7*t35863*t4390 + t36352*t7230;
  p_output1[30]=t19882*t36527 + t19919*t36557 + t20031*t36595 + 0.100001*(t24642*t36557 + t20253*t36595 - 1.8e-11*t36527*t6390) + 0.2*(-1.*t20253*t36527 - 1.*t20639*t36595 + 1.000000000009*t36557*t6390) - 0.3*(t24642*t36527 + t27431*t36557 - 1.000000000009*t36595*t6390);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 31, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_LeftBackFoot_BackStance.hh"

namespace BackStance
{

void J_dh_LeftBackFoot_BackStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
