/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 15:13:07 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t295;
  double t296;
  double t406;
  double t12118;
  double t27665;
  double t27667;
  double t27669;
  double t28759;
  double t28880;
  double t13239;
  double t16843;
  double t17368;
  double t27446;
  double t29227;
  double t29244;
  double t30693;
  double t28998;
  double t29212;
  double t30701;
  double t29250;
  double t29296;
  double t29305;
  double t29318;
  double t30417;
  double t30450;
  double t33939;
  double t33941;
  double t33947;
  double t33948;
  double t34760;
  double t36080;
  double t36382;
  double t36520;
  double t36570;
  double t36604;
  double t36640;
  double t36795;
  double t36937;
  double t36730;
  double t30702;
  double t36641;
  double t37144;
  double t462;
  double t520;
  double t618;
  double t12003;
  double t27615;
  double t28395;
  double t29226;
  double t29245;
  double t29246;
  double t30698;
  double t30705;
  double t31423;
  double t33937;
  double t33938;
  double t33951;
  double t33953;
  double t33987;
  double t33988;
  double t33990;
  double t38018;
  double t38019;
  double t38055;
  double t36731;
  double t38115;
  double t38121;
  double t38122;
  double t38150;
  double t38167;
  double t38170;
  double t37177;
  double t37213;
  double t37852;
  double t38382;
  double t38389;
  double t38347;
  double t38349;
  double t39126;
  double t39048;
  double t39049;
  double t39065;
  double t39067;
  double t39293;
  double t39307;
  double t39377;
  double t39567;
  double t39582;
  double t39600;
  double t39603;
  double t39605;
  double t39692;
  double t39640;
  double t39740;
  double t39741;
  double t39742;
  double t39743;
  double t39746;
  double t39747;
  double t39748;
  double t39749;
  double t39752;
  double t39753;
  double t16594;
  double t27581;
  double t39792;
  double t39794;
  double t39796;
  double t38377;
  double t38603;
  double t38987;
  double t39041;
  double t39125;
  double t39151;
  double t39180;
  double t39193;
  double t39254;
  double t39388;
  double t39389;
  double t39415;
  double t39504;
  double t39540;
  double t39832;
  double t39833;
  double t39834;
  double t39837;
  double t39841;
  double t39641;
  double t39849;
  double t39853;
  double t39854;
  double t39721;
  double t39894;
  double t39895;
  double t39896;
  double t39900;
  double t39901;
  double t39902;
  double t38002;
  double t38006;
  double t38086;
  double t38123;
  double t38172;
  double t38178;
  double t38252;
  double t38263;
  double t38267;
  double t38268;
  double t38269;
  double t38270;
  double t38271;
  double t38272;
  double t38273;
  double t38275;
  double t38280;
  double t38311;
  double t38315;
  double t38316;
  double t38317;
  double t39939;
  double t39941;
  double t39942;
  double t39944;
  double t39945;
  double t39946;
  double t39948;
  double t39950;
  double t39951;
  double t39952;
  double t21439;
  double t39977;
  double t39979;
  double t39980;
  double t39981;
  double t39985;
  double t39988;
  double t39892;
  double t39893;
  double t39897;
  double t39903;
  double t39904;
  double t39905;
  double t39906;
  double t39907;
  double t39908;
  double t39909;
  double t39911;
  double t39912;
  double t39913;
  double t39914;
  double t39916;
  double t39921;
  double t39927;
  double t39930;
  double t39931;
  double t39932;
  double t39933;
  double t39737;
  double t39738;
  double t39739;
  double t39745;
  double t39750;
  double t39754;
  double t39760;
  double t39767;
  double t39771;
  double t39772;
  double t39773;
  double t39774;
  double t39775;
  double t39776;
  double t39777;
  double t39779;
  double t39780;
  double t39781;
  double t39782;
  double t39783;
  double t39784;
  double t39786;
  double t40026;
  double t40018;
  double t40020;
  double t40021;
  double t40022;
  double t40031;
  double t40032;
  double t40033;
  double t40041;
  double t40042;
  double t40047;
  double t39943;
  double t39947;
  double t39954;
  double t39955;
  double t39956;
  double t39957;
  double t39958;
  double t39960;
  double t39961;
  double t39962;
  double t39963;
  double t39964;
  double t39965;
  double t39967;
  double t39969;
  double t39970;
  double t39971;
  double t39972;
  double t39973;
  double t39835;
  double t39846;
  double t39855;
  double t39856;
  double t39858;
  double t39859;
  double t39860;
  double t39861;
  double t39862;
  double t39863;
  double t39864;
  double t39865;
  double t39866;
  double t39867;
  double t39868;
  double t39871;
  double t39872;
  double t39873;
  double t39882;
  double t39124;
  double t39385;
  double t39604;
  double t39606;
  double t39607;
  double t39646;
  double t39647;
  double t39667;
  double t39669;
  double t39693;
  double t39694;
  double t39695;
  double t39700;
  double t39707;
  double t39725;
  double t39731;
  double t39732;
  double t39734;
  double t39735;
  double t40188;
  double t40194;
  double t40195;
  double t40197;
  double t40198;
  double t40200;
  double t40201;
  double t40202;
  double t40204;
  double t40207;
  double t40208;
  double t40209;
  double t40212;
  double t40241;
  double t40239;
  double t40243;
  double t40244;
  double t40247;
  double t40248;
  double t40249;
  double t40251;
  double t40253;
  double t40255;
  double t40257;
  double t40259;
  double t40261;
  double t40264;
  double t40265;
  double t40266;
  double t40296;
  double t40298;
  double t40299;
  double t40295;
  double t40300;
  double t40302;
  double t40304;
  double t40306;
  double t40309;
  double t40310;
  double t40313;
  double t40314;
  double t40316;
  double t40318;
  double t40345;
  double t40346;
  double t40348;
  double t40349;
  double t40353;
  double t40354;
  double t40355;
  double t40356;
  double t40359;
  double t40360;
  double t40385;
  double t40386;
  double t40389;
  double t40392;
  double t40393;
  double t40394;
  double t40396;
  double t40398;
  double t40399;
  double t40400;
  double t40403;
  double t40405;
  double t40406;
  double t40409;
  double t40412;
  double t40413;
  double t40415;
  double t40416;
  double t40190;
  double t40191;
  double t40192;
  double t40199;
  double t40206;
  double t40213;
  double t40215;
  double t40216;
  double t40218;
  double t40219;
  double t40221;
  double t40222;
  double t40223;
  double t40225;
  double t40226;
  double t40227;
  double t40228;
  double t40229;
  double t40230;
  double t40233;
  double t40234;
  double t40236;
  double t40445;
  double t40446;
  double t40448;
  double t40449;
  double t40452;
  double t40453;
  double t40454;
  double t40455;
  double t40458;
  double t40459;
  double t40460;
  double t40462;
  double t40496;
  double t40498;
  double t40499;
  double t40500;
  double t40504;
  double t40505;
  double t40509;
  double t40510;
  double t40512;
  double t40513;
  double t40542;
  double t40543;
  double t40546;
  double t40548;
  double t40549;
  double t40552;
  double t40553;
  double t40555;
  double t40384;
  double t40585;
  double t40586;
  double t40587;
  double t40593;
  double t40594;
  double t40596;
  double t40598;
  double t40600;
  double t40602;
  double t40539;
  double t40541;
  double t40545;
  double t40551;
  double t40556;
  double t40557;
  double t40559;
  double t40561;
  double t40562;
  double t40563;
  double t40565;
  double t40566;
  double t40567;
  double t40569;
  double t40571;
  double t40572;
  double t40573;
  double t40575;
  double t40576;
  double t40578;
  double t40579;
  double t40245;
  double t40250;
  double t40256;
  double t40262;
  double t40267;
  double t40268;
  double t40271;
  double t40273;
  double t40274;
  double t40277;
  double t40279;
  double t40280;
  double t40282;
  double t40283;
  double t40284;
  double t40285;
  double t40286;
  double t40288;
  double t40289;
  double t40290;
  double t40292;
  double t40636;
  double t40637;
  double t40640;
  double t40634;
  double t40641;
  double t40642;
  double t40645;
  double t40646;
  double t40649;
  double t40650;
  double t40652;
  double t40684;
  double t40685;
  double t40686;
  double t40693;
  double t40694;
  double t40696;
  double t40390;
  double t40395;
  double t40722;
  double t40725;
  double t40728;
  double t40492;
  double t40493;
  double t40494;
  double t40502;
  double t40506;
  double t40514;
  double t40515;
  double t40516;
  double t40518;
  double t40519;
  double t40520;
  double t40521;
  double t40523;
  double t40525;
  double t40526;
  double t40527;
  double t40530;
  double t40531;
  double t40532;
  double t40533;
  double t40535;
  double t40536;
  double t40342;
  double t40343;
  double t40344;
  double t40352;
  double t40358;
  double t40362;
  double t40363;
  double t40364;
  double t40365;
  double t40366;
  double t40368;
  double t40369;
  double t40370;
  double t40372;
  double t40373;
  double t40374;
  double t40375;
  double t40376;
  double t40378;
  double t40379;
  double t40380;
  double t40382;
  double t40762;
  double t40765;
  double t40766;
  double t40770;
  double t40772;
  double t40773;
  double t40776;
  double t40777;
  double t40780;
  double t40783;
  double t40785;
  double t40786;
  double t40787;
  double t40681;
  double t40682;
  double t40689;
  double t40690;
  double t40697;
  double t40698;
  double t40701;
  double t40702;
  double t40704;
  double t40705;
  double t40706;
  double t40708;
  double t40709;
  double t40710;
  double t40712;
  double t40713;
  double t40714;
  double t40716;
  double t40717;
  double t40718;
  double t40720;
  double t40812;
  double t40814;
  double t40816;
  double t40817;
  double t40818;
  double t40819;
  double t40822;
  double t40823;
  double t40824;
  double t40450;
  double t40456;
  double t40463;
  double t40464;
  double t40465;
  double t40466;
  double t40469;
  double t40472;
  double t40473;
  double t40474;
  double t40476;
  double t40478;
  double t40479;
  double t40480;
  double t40482;
  double t40483;
  double t40484;
  double t40486;
  double t40489;
  double t40305;
  double t40312;
  double t40319;
  double t40320;
  double t40322;
  double t40323;
  double t40324;
  double t40326;
  double t40327;
  double t40328;
  double t40329;
  double t40330;
  double t40332;
  double t40333;
  double t40334;
  double t40335;
  double t40336;
  double t40338;
  double t40339;
  double t40644;
  double t40648;
  double t40653;
  double t40654;
  double t40656;
  double t40657;
  double t40658;
  double t40660;
  double t40661;
  double t40662;
  double t40664;
  double t40665;
  double t40669;
  double t40672;
  double t40673;
  double t40674;
  double t40676;
  double t40677;
  double t40678;
  double t40014;
  double t40015;
  double t40016;
  double t40017;
  double t40024;
  double t40027;
  double t40028;
  double t40029;
  double t40035;
  double t40036;
  double t40037;
  double t40038;
  double t40039;
  double t40851;
  double t40852;
  double t40853;
  double t40855;
  double t40048;
  double t40857;
  double t40858;
  double t40860;
  double t40862;
  double t40863;
  double t40063;
  double t40815;
  double t40820;
  double t40825;
  double t40826;
  double t40827;
  double t40828;
  double t40830;
  double t40831;
  double t40832;
  double t40833;
  double t40834;
  double t40836;
  double t40837;
  double t40839;
  double t40840;
  double t40841;
  double t40842;
  double t40843;
  double t40844;
  double t40915;
  double t40916;
  double t40917;
  double t40918;
  double t40919;
  double t40920;
  double t40922;
  double t40924;
  double t40925;
  double t40926;
  double t40927;
  double t40928;
  double t40929;
  double t40930;
  double t40933;
  double t40936;
  double t40937;
  double t40938;
  double t40939;
  double t40940;
  double t40941;
  double t40942;
  double t40889;
  double t40890;
  double t40891;
  double t40892;
  double t40893;
  double t40894;
  double t40897;
  double t40898;
  double t40899;
  double t40900;
  double t40901;
  double t40902;
  double t40904;
  double t40905;
  double t40906;
  double t40907;
  double t40908;
  double t40909;
  double t40910;
  double t40912;
  double t40913;
  double t40914;
  double t40943;
  double t40944;
  double t40945;
  double t40946;
  double t40947;
  double t40949;
  double t40950;
  double t40951;
  double t40952;
  double t40953;
  double t40955;
  double t40956;
  double t40957;
  double t40959;
  double t40960;
  double t40961;
  double t40962;
  double t40963;
  double t40964;
  double t40965;
  double t40966;
  double t40993;
  double t40994;
  double t40995;
  double t40997;
  double t40998;
  double t40999;
  double t41000;
  double t41001;
  double t41002;
  double t41003;
  double t41004;
  double t41005;
  double t41006;
  double t41008;
  double t41009;
  double t41010;
  double t41011;
  double t41012;
  double t41013;
  double t40967;
  double t40968;
  double t40970;
  double t40971;
  double t40972;
  double t40973;
  double t40974;
  double t40975;
  double t40976;
  double t40978;
  double t40979;
  double t40980;
  double t40981;
  double t40982;
  double t40984;
  double t40985;
  double t40987;
  double t40988;
  double t40989;
  double t40990;
  double t40991;
  double t40992;
  double t41022;
  double t41024;
  double t41025;
  double t41027;
  double t41028;
  double t41030;
  double t41031;
  double t41032;
  double t41054;
  double t41055;
  double t41056;
  double t41057;
  double t41060;
  double t41061;
  double t41062;
  double t41064;
  double t41065;
  double t41066;
  double t41067;
  double t41096;
  double t41097;
  double t41098;
  double t41100;
  double t41101;
  double t41102;
  double t41103;
  double t41106;
  double t41107;
  double t41135;
  double t41136;
  double t41137;
  double t41140;
  double t41141;
  double t41143;
  double t41145;
  double t41147;
  double t41148;
  double t41020;
  double t41021;
  double t41026;
  double t41029;
  double t41034;
  double t41035;
  double t41036;
  double t41037;
  double t41038;
  double t41039;
  double t41040;
  double t41041;
  double t41042;
  double t41044;
  double t41045;
  double t41046;
  double t41047;
  double t41048;
  double t41049;
  double t41050;
  double t41052;
  double t41175;
  double t41178;
  double t41181;
  double t41206;
  double t41207;
  double t41208;
  double t41204;
  double t41209;
  double t41210;
  double t41212;
  double t41213;
  double t41216;
  double t41218;
  double t41246;
  double t41247;
  double t41248;
  double t41255;
  double t41256;
  double t41257;
  double t41092;
  double t41093;
  double t41095;
  double t41099;
  double t41105;
  double t41108;
  double t41109;
  double t41110;
  double t41111;
  double t41112;
  double t41113;
  double t41114;
  double t41116;
  double t41117;
  double t41118;
  double t41120;
  double t41121;
  double t41122;
  double t41124;
  double t41126;
  double t41127;
  double t41129;
  double t41287;
  double t41289;
  double t41290;
  double t41293;
  double t41295;
  double t41297;
  double t41300;
  double t41301;
  double t41302;
  double t41303;
  double t41244;
  double t41245;
  double t41249;
  double t41251;
  double t41258;
  double t41259;
  double t41260;
  double t41261;
  double t41262;
  double t41264;
  double t41267;
  double t41268;
  double t41270;
  double t41271;
  double t41272;
  double t41273;
  double t41274;
  double t41275;
  double t41276;
  double t41277;
  double t41279;
  double t41331;
  double t41332;
  double t41334;
  double t41337;
  double t41338;
  double t41341;
  double t41344;
  double t41345;
  double t41058;
  double t41063;
  double t41068;
  double t41070;
  double t41071;
  double t41072;
  double t41073;
  double t41074;
  double t41075;
  double t41076;
  double t41077;
  double t41078;
  double t41081;
  double t41083;
  double t41084;
  double t41086;
  double t41087;
  double t41088;
  double t41089;
  double t41211;
  double t41214;
  double t41219;
  double t41220;
  double t41221;
  double t41222;
  double t41223;
  double t41224;
  double t41226;
  double t41227;
  double t41228;
  double t41230;
  double t41232;
  double t41234;
  double t41235;
  double t41236;
  double t41239;
  double t41240;
  double t41241;
  double t41377;
  double t41378;
  double t41381;
  double t41383;
  double t41384;
  double t41385;
  double t41387;
  double t41388;
  double t41333;
  double t41340;
  double t41346;
  double t41347;
  double t41348;
  double t41349;
  double t41350;
  double t41352;
  double t41353;
  double t41354;
  double t41356;
  double t41358;
  double t41359;
  double t41360;
  double t41363;
  double t41364;
  double t41365;
  double t41366;
  double t41367;
  t295 = Cos(var1[10]);
  t296 = -1.*t295;
  t406 = 1. + t296;
  t12118 = Cos(var1[4]);
  t27665 = Cos(var1[12]);
  t27667 = -1.*t27665;
  t27669 = 1. + t27667;
  t28759 = -3.e-6*t27669;
  t28880 = Sin(var1[12]);
  t13239 = Cos(var1[5]);
  t16843 = Sin(var1[10]);
  t17368 = Sin(var1[4]);
  t27446 = Sin(var1[5]);
  t29227 = 3.e-6*t28880;
  t29244 = t28759 + t29227;
  t30693 = 3.e-13*var1[12];
  t28998 = -3.e-6*t28880;
  t29212 = t28759 + t28998;
  t30701 = -9.e-12*t27669;
  t29250 = -3.e-6*t406*t12118*t13239;
  t29296 = 3.e-6*t16843*t17368;
  t29305 = -9.e-12*t406;
  t29318 = 1. + t29305;
  t30417 = t29318*t12118*t27446;
  t30450 = t29250 + t29296 + t30417;
  t33939 = -1.*t295*t12118*t13239;
  t33941 = -1.*t16843*t17368;
  t33947 = 3.e-6*t406*t12118*t27446;
  t33948 = t33939 + t33941 + t33947;
  t34760 = t12118*t13239*t16843;
  t36080 = -1.000000000009*t406;
  t36382 = 1. + t36080;
  t36520 = -1.*t36382*t17368;
  t36570 = 3.e-6*t12118*t16843*t27446;
  t36604 = t34760 + t36520 + t36570;
  t36640 = 3.e-6*t27669;
  t36795 = -1.000000000009*t27669;
  t36937 = 1. + t36795;
  t36730 = 9.e-12*t27669;
  t30702 = -1.*t28880;
  t36641 = t36640 + t28998;
  t37144 = t36640 + t29227;
  t462 = -1.8e-12*t406;
  t520 = -1. + t295;
  t618 = 0.2*t520;
  t12003 = t462 + t618;
  t27615 = 1.e-7*var1[12];
  t28395 = 5.4e-18*t27669;
  t29226 = -0.200000000003*t29212;
  t29245 = 0.100000000003*t29244;
  t29246 = t27615 + t28395 + t29226 + t29245;
  t30698 = -0.2000000000048*t27669;
  t30705 = t30701 + t30702;
  t31423 = 0.100000000003*t30705;
  t33937 = 3.e-7*t29244;
  t33938 = t30693 + t30698 + t31423 + t33937;
  t33951 = 0.1000000000039*t27669;
  t33953 = 3.e-7*t29212;
  t33987 = t30701 + t28880;
  t33988 = -0.200000000003*t33987;
  t33990 = t30693 + t33951 + t33953 + t33988;
  t38018 = t29318*t13239*t17368;
  t38019 = 3.e-6*t406*t17368*t27446;
  t38055 = t38018 + t38019;
  t36731 = t36730 + t28880;
  t38115 = 3.e-6*t406*t13239*t17368;
  t38121 = t295*t17368*t27446;
  t38122 = t38115 + t38121;
  t38150 = 3.e-6*t13239*t16843*t17368;
  t38167 = -1.*t16843*t17368*t27446;
  t38170 = t38150 + t38167;
  t37177 = t36730 + t30702;
  t37213 = -1.8e-11*t27669;
  t37852 = 1. + t37213;
  t38382 = 3.e-6*t27665;
  t38389 = t38382 + t28998;
  t38347 = -3.e-6*t27665;
  t38349 = t38347 + t28998;
  t39126 = -9.e-12*t28880;
  t39048 = -3.e-6*t12118*t16843;
  t39049 = -3.e-6*t406*t13239*t17368;
  t39065 = t29318*t17368*t27446;
  t39067 = t39048 + t39049 + t39065;
  t39293 = t12118*t16843;
  t39307 = -1.*t295*t13239*t17368;
  t39377 = t39293 + t39307 + t38019;
  t39567 = t36382*t12118;
  t39582 = t13239*t16843*t17368;
  t39600 = 3.e-6*t16843*t17368*t27446;
  t39603 = t39567 + t39582 + t39600;
  t39605 = t38382 + t29227;
  t39692 = t38347 + t29227;
  t39640 = 9.e-12*t28880;
  t39740 = -1.000000000009*t12118*t16843;
  t39741 = t295*t13239*t17368;
  t39742 = 3.e-6*t295*t17368*t27446;
  t39743 = t39740 + t39741 + t39742;
  t39746 = -3.e-6*t295*t12118;
  t39747 = -3.e-6*t13239*t16843*t17368;
  t39748 = -9.e-12*t16843*t17368*t27446;
  t39749 = t39746 + t39747 + t39748;
  t39752 = t295*t12118;
  t39753 = t39752 + t39582 + t39600;
  t16594 = -1.*t12003*t12118*t13239;
  t27581 = 6.000000000054e-7*t406*t12118*t27446;
  t39792 = t29250 + t30417;
  t39794 = t33939 + t33947;
  t39796 = t34760 + t36570;
  t38377 = -0.200000000003*t38349;
  t38603 = 0.100000000003*t38389;
  t38987 = 5.4e-18*t28880;
  t39041 = 1.e-7 + t38377 + t38603 + t38987;
  t39125 = 3.e-7*t38389;
  t39151 = t27667 + t39126;
  t39180 = 0.100000000003*t39151;
  t39193 = -0.2000000000048*t28880;
  t39254 = 3.e-13 + t39125 + t39180 + t39193;
  t39388 = 3.e-7*t38349;
  t39389 = t27665 + t39126;
  t39415 = -0.200000000003*t39389;
  t39504 = 0.1000000000039*t28880;
  t39540 = 3.e-13 + t39388 + t39415 + t39504;
  t39832 = -1.*t29318*t12118*t13239;
  t39833 = -3.e-6*t406*t12118*t27446;
  t39834 = t39832 + t39833;
  t39837 = -1.*t295*t12118*t27446;
  t39841 = t29250 + t39837;
  t39641 = t27667 + t39640;
  t39849 = -3.e-6*t12118*t13239*t16843;
  t39853 = t12118*t16843*t27446;
  t39854 = t39849 + t39853;
  t39721 = t27665 + t39640;
  t39894 = -3.e-6*t295*t12118*t13239;
  t39895 = t295*t12118*t27446;
  t39896 = t39894 + t39895;
  t39900 = 9.e-12*t12118*t13239*t16843;
  t39901 = -3.e-6*t12118*t16843*t27446;
  t39902 = t39900 + t39901;
  t38002 = 6.000000000054e-7*t406*t13239*t17368;
  t38006 = t12003*t17368*t27446;
  t38086 = t29246*t38055;
  t38123 = t33938*t38122;
  t38172 = t33990*t38170;
  t38178 = t36641*t38055;
  t38252 = t36731*t38122;
  t38263 = t36937*t38170;
  t38267 = t38178 + t38252 + t38263;
  t38268 = -0.3*t38267;
  t38269 = -1.*t37144*t38055;
  t38270 = -1.*t36937*t38122;
  t38271 = -1.*t37177*t38170;
  t38272 = t38269 + t38270 + t38271;
  t38273 = 0.2*t38272;
  t38275 = t37852*t38055;
  t38280 = t36641*t38122;
  t38311 = t37144*t38170;
  t38315 = t38275 + t38280 + t38311;
  t38316 = 0.100001*t38315;
  t38317 = t38002 + t38006 + t38086 + t38123 + t38172 + t38268 + t38273 + t38316;
  t39939 = -1.000000000009*t16843*t17368;
  t39941 = -3.e-6*t295*t12118*t27446;
  t39942 = t33939 + t39939 + t39941;
  t39944 = -1.*t12118*t13239*t16843;
  t39945 = t295*t17368;
  t39946 = t39944 + t39945 + t39901;
  t39948 = 3.e-6*t12118*t13239*t16843;
  t39950 = -3.e-6*t295*t17368;
  t39951 = 9.e-12*t12118*t16843*t27446;
  t39952 = t39948 + t39950 + t39951;
  t21439 = -0.2000000000018*t16843*t17368;
  t39977 = t33939 + t33941 + t39941;
  t39979 = 3.e-6*t295*t12118*t13239;
  t39980 = 9.e-12*t295*t12118*t27446;
  t39981 = t39979 + t29296 + t39980;
  t39985 = -1.000000000009*t295*t17368;
  t39988 = t34760 + t39985 + t36570;
  t39892 = -6.000000000054e-7*t12118*t13239*t16843;
  t39893 = 0.2000000000018*t12118*t16843*t27446;
  t39897 = t33990*t39896;
  t39903 = t29246*t39902;
  t39904 = t33938*t39854;
  t39905 = -1.*t37177*t39896;
  t39906 = -1.*t37144*t39902;
  t39907 = -1.*t36937*t39854;
  t39908 = t39905 + t39906 + t39907;
  t39909 = 0.2*t39908;
  t39911 = t37144*t39896;
  t39912 = t37852*t39902;
  t39913 = t36641*t39854;
  t39914 = t39911 + t39912 + t39913;
  t39916 = 0.100001*t39914;
  t39921 = t36937*t39896;
  t39927 = t36641*t39902;
  t39930 = t36731*t39854;
  t39931 = t39921 + t39927 + t39930;
  t39932 = -0.3*t39931;
  t39933 = t39892 + t39893 + t39897 + t39903 + t39904 + t39909 + t39916 + t39932;
  t39737 = 0.2000000000018*t295*t12118;
  t39738 = 0.2000000000018*t13239*t16843*t17368;
  t39739 = 6.000000000054e-7*t16843*t17368*t27446;
  t39745 = t33990*t39743;
  t39750 = t29246*t39749;
  t39754 = t33938*t39753;
  t39760 = -1.*t37177*t39743;
  t39767 = -1.*t37144*t39749;
  t39771 = -1.*t36937*t39753;
  t39772 = t39760 + t39767 + t39771;
  t39773 = 0.2*t39772;
  t39774 = t37144*t39743;
  t39775 = t37852*t39749;
  t39776 = t36641*t39753;
  t39777 = t39774 + t39775 + t39776;
  t39779 = 0.100001*t39777;
  t39780 = t36937*t39743;
  t39781 = t36641*t39749;
  t39782 = t36731*t39753;
  t39783 = t39780 + t39781 + t39782;
  t39784 = -0.3*t39783;
  t39786 = t39737 + t39738 + t39739 + t39745 + t39750 + t39754 + t39773 + t39779 + t39784;
  t40026 = -9.e-12*t27665;
  t40018 = 3.e-6*t406*t12118*t13239;
  t40020 = -3.e-6*t16843*t17368;
  t40021 = -1.*t29318*t12118*t27446;
  t40022 = t40018 + t40020 + t40021;
  t40031 = t295*t12118*t13239;
  t40032 = t16843*t17368;
  t40033 = t40031 + t40032 + t39833;
  t40041 = t36382*t17368;
  t40042 = t39944 + t40041 + t39901;
  t40047 = 9.e-12*t27665;
  t39943 = t39540*t39942;
  t39947 = t39254*t39946;
  t39954 = t39041*t39952;
  t39955 = -1.000000000009*t28880*t39942;
  t39956 = t39721*t39946;
  t39957 = t39692*t39952;
  t39958 = t39955 + t39956 + t39957;
  t39960 = -0.3*t39958;
  t39961 = -1.*t39641*t39942;
  t39962 = 1.000000000009*t28880*t39946;
  t39963 = -1.*t39605*t39952;
  t39964 = t39961 + t39962 + t39963;
  t39965 = 0.2*t39964;
  t39967 = t39605*t39942;
  t39969 = t39692*t39946;
  t39970 = -1.8e-11*t28880*t39952;
  t39971 = t39967 + t39969 + t39970;
  t39972 = 0.100001*t39971;
  t39973 = t39943 + t39947 + t39954 + t39960 + t39965 + t39972;
  t39835 = t39041*t39834;
  t39846 = t39254*t39841;
  t39855 = t39540*t39854;
  t39856 = -1.*t39605*t39834;
  t39858 = 1.000000000009*t28880*t39841;
  t39859 = -1.*t39641*t39854;
  t39860 = t39856 + t39858 + t39859;
  t39861 = 0.2*t39860;
  t39862 = -1.8e-11*t28880*t39834;
  t39863 = t39692*t39841;
  t39864 = t39605*t39854;
  t39865 = t39862 + t39863 + t39864;
  t39866 = 0.100001*t39865;
  t39867 = t39692*t39834;
  t39868 = t39721*t39841;
  t39871 = -1.000000000009*t28880*t39854;
  t39872 = t39867 + t39868 + t39871;
  t39873 = -0.3*t39872;
  t39882 = t39835 + t39846 + t39855 + t39861 + t39866 + t39873;
  t39124 = t39041*t39067;
  t39385 = t39254*t39377;
  t39604 = t39540*t39603;
  t39606 = -1.*t39605*t39067;
  t39607 = 1.000000000009*t28880*t39377;
  t39646 = -1.*t39641*t39603;
  t39647 = t39606 + t39607 + t39646;
  t39667 = 0.2*t39647;
  t39669 = -1.8e-11*t28880*t39067;
  t39693 = t39692*t39377;
  t39694 = t39605*t39603;
  t39695 = t39669 + t39693 + t39694;
  t39700 = 0.100001*t39695;
  t39707 = t39692*t39067;
  t39725 = t39721*t39377;
  t39731 = -1.000000000009*t28880*t39603;
  t39732 = t39707 + t39725 + t39731;
  t39734 = -0.3*t39732;
  t39735 = t39124 + t39385 + t39604 + t39667 + t39700 + t39734;
  t40188 = Cos(var1[3]);
  t40194 = 3.e-6*t406*t40188*t12118*t13239;
  t40195 = -3.e-6*t40188*t16843*t17368;
  t40197 = -1.*t29318*t40188*t12118*t27446;
  t40198 = t40194 + t40195 + t40197;
  t40200 = t295*t40188*t12118*t13239;
  t40201 = t40188*t16843*t17368;
  t40202 = -3.e-6*t406*t40188*t12118*t27446;
  t40204 = t40200 + t40201 + t40202;
  t40207 = -1.*t40188*t12118*t13239*t16843;
  t40208 = t36382*t40188*t17368;
  t40209 = -3.e-6*t40188*t12118*t16843*t27446;
  t40212 = t40207 + t40208 + t40209;
  t40241 = Sin(var1[3]);
  t40239 = -1.*t40188*t13239*t17368;
  t40243 = t40241*t27446;
  t40244 = t40239 + t40243;
  t40247 = -1.*t13239*t40241;
  t40248 = -1.*t40188*t17368*t27446;
  t40249 = t40247 + t40248;
  t40251 = t29318*t40244;
  t40253 = 3.e-6*t406*t40249;
  t40255 = t40251 + t40253;
  t40257 = 3.e-6*t406*t40244;
  t40259 = t295*t40249;
  t40261 = t40257 + t40259;
  t40264 = 3.e-6*t16843*t40244;
  t40265 = -1.*t16843*t40249;
  t40266 = t40264 + t40265;
  t40296 = t40188*t13239*t17368;
  t40298 = -1.*t40241*t27446;
  t40299 = t40296 + t40298;
  t40295 = 3.e-6*t40188*t12118*t16843;
  t40300 = 3.e-6*t406*t40299;
  t40302 = t29318*t40249;
  t40304 = t40295 + t40300 + t40302;
  t40306 = -1.*t40188*t12118*t16843;
  t40309 = t295*t40299;
  t40310 = t40306 + t40309 + t40253;
  t40313 = -1.*t36382*t40188*t12118;
  t40314 = -1.*t16843*t40299;
  t40316 = 3.e-6*t16843*t40249;
  t40318 = t40313 + t40314 + t40316;
  t40345 = 1.000000000009*t40188*t12118*t16843;
  t40346 = -1.*t295*t40299;
  t40348 = 3.e-6*t295*t40249;
  t40349 = t40345 + t40346 + t40348;
  t40353 = 3.e-6*t295*t40188*t12118;
  t40354 = 3.e-6*t16843*t40299;
  t40355 = -9.e-12*t16843*t40249;
  t40356 = t40353 + t40354 + t40355;
  t40359 = -1.*t295*t40188*t12118;
  t40360 = t40359 + t40314 + t40316;
  t40385 = -1.*t13239*t40241*t17368;
  t40386 = -1.*t40188*t27446;
  t40389 = t40385 + t40386;
  t40392 = -1.*t40188*t13239;
  t40393 = t40241*t17368*t27446;
  t40394 = t40392 + t40393;
  t40396 = -3.e-6*t12118*t16843*t40241;
  t40398 = 3.e-6*t406*t40389;
  t40399 = t29318*t40394;
  t40400 = t40396 + t40398 + t40399;
  t40403 = t12118*t16843*t40241;
  t40405 = t295*t40389;
  t40406 = 3.e-6*t406*t40394;
  t40409 = t40403 + t40405 + t40406;
  t40412 = t36382*t12118*t40241;
  t40413 = -1.*t16843*t40389;
  t40415 = 3.e-6*t16843*t40394;
  t40416 = t40412 + t40413 + t40415;
  t40190 = t12003*t40188*t12118*t13239;
  t40191 = 0.2000000000018*t40188*t16843*t17368;
  t40192 = -6.000000000054e-7*t406*t40188*t12118*t27446;
  t40199 = t29246*t40198;
  t40206 = t33938*t40204;
  t40213 = t33990*t40212;
  t40215 = t36641*t40198;
  t40216 = t36731*t40204;
  t40218 = t36937*t40212;
  t40219 = t40215 + t40216 + t40218;
  t40221 = -0.3*t40219;
  t40222 = -1.*t37144*t40198;
  t40223 = -1.*t36937*t40204;
  t40225 = -1.*t37177*t40212;
  t40226 = t40222 + t40223 + t40225;
  t40227 = 0.2*t40226;
  t40228 = t37852*t40198;
  t40229 = t36641*t40204;
  t40230 = t37144*t40212;
  t40233 = t40228 + t40229 + t40230;
  t40234 = 0.100001*t40233;
  t40236 = t40190 + t40191 + t40192 + t40199 + t40206 + t40213 + t40221 + t40227 + t40234;
  t40445 = 3.e-6*t406*t12118*t13239*t40241;
  t40446 = -3.e-6*t16843*t40241*t17368;
  t40448 = -1.*t29318*t12118*t40241*t27446;
  t40449 = t40445 + t40446 + t40448;
  t40452 = t295*t12118*t13239*t40241;
  t40453 = t16843*t40241*t17368;
  t40454 = -3.e-6*t406*t12118*t40241*t27446;
  t40455 = t40452 + t40453 + t40454;
  t40458 = -1.*t12118*t13239*t16843*t40241;
  t40459 = t36382*t40241*t17368;
  t40460 = -3.e-6*t12118*t16843*t40241*t27446;
  t40462 = t40458 + t40459 + t40460;
  t40496 = -1.*t295*t12118*t13239*t40241;
  t40498 = -1.000000000009*t16843*t40241*t17368;
  t40499 = -3.e-6*t295*t12118*t40241*t27446;
  t40500 = t40496 + t40498 + t40499;
  t40504 = t295*t40241*t17368;
  t40505 = t40458 + t40504 + t40460;
  t40509 = 3.e-6*t12118*t13239*t16843*t40241;
  t40510 = -3.e-6*t295*t40241*t17368;
  t40512 = 9.e-12*t12118*t16843*t40241*t27446;
  t40513 = t40509 + t40510 + t40512;
  t40542 = -1.*t29318*t12118*t13239*t40241;
  t40543 = t40542 + t40454;
  t40546 = -3.e-6*t406*t12118*t13239*t40241;
  t40548 = -1.*t295*t12118*t40241*t27446;
  t40549 = t40546 + t40548;
  t40552 = -3.e-6*t12118*t13239*t16843*t40241;
  t40553 = t12118*t16843*t40241*t27446;
  t40555 = t40552 + t40553;
  t40384 = 0.2000000000018*t12118*t16843*t40241;
  t40585 = -3.e-6*t406*t13239*t40241*t17368;
  t40586 = t29318*t40241*t17368*t27446;
  t40587 = t40396 + t40585 + t40586;
  t40593 = -1.*t295*t13239*t40241*t17368;
  t40594 = 3.e-6*t406*t40241*t17368*t27446;
  t40596 = t40403 + t40593 + t40594;
  t40598 = t13239*t16843*t40241*t17368;
  t40600 = 3.e-6*t16843*t40241*t17368*t27446;
  t40602 = t40412 + t40598 + t40600;
  t40539 = -6.000000000054e-7*t406*t12118*t13239*t40241;
  t40541 = -1.*t12003*t12118*t40241*t27446;
  t40545 = t29246*t40543;
  t40551 = t33938*t40549;
  t40556 = t33990*t40555;
  t40557 = t36641*t40543;
  t40559 = t36731*t40549;
  t40561 = t36937*t40555;
  t40562 = t40557 + t40559 + t40561;
  t40563 = -0.3*t40562;
  t40565 = -1.*t37144*t40543;
  t40566 = -1.*t36937*t40549;
  t40567 = -1.*t37177*t40555;
  t40569 = t40565 + t40566 + t40567;
  t40571 = 0.2*t40569;
  t40572 = t37852*t40543;
  t40573 = t36641*t40549;
  t40575 = t37144*t40555;
  t40576 = t40572 + t40573 + t40575;
  t40578 = 0.100001*t40576;
  t40579 = t40539 + t40541 + t40545 + t40551 + t40556 + t40563 + t40571 + t40578;
  t40245 = 6.000000000054e-7*t406*t40244;
  t40250 = t12003*t40249;
  t40256 = t29246*t40255;
  t40262 = t33938*t40261;
  t40267 = t33990*t40266;
  t40268 = t36641*t40255;
  t40271 = t36731*t40261;
  t40273 = t36937*t40266;
  t40274 = t40268 + t40271 + t40273;
  t40277 = -0.3*t40274;
  t40279 = -1.*t37144*t40255;
  t40280 = -1.*t36937*t40261;
  t40282 = -1.*t37177*t40266;
  t40283 = t40279 + t40280 + t40282;
  t40284 = 0.2*t40283;
  t40285 = t37852*t40255;
  t40286 = t36641*t40261;
  t40288 = t37144*t40266;
  t40289 = t40285 + t40286 + t40288;
  t40290 = 0.100001*t40289;
  t40292 = t40245 + t40250 + t40256 + t40262 + t40267 + t40277 + t40284 + t40290;
  t40636 = t40188*t13239;
  t40637 = -1.*t40241*t17368*t27446;
  t40640 = t40636 + t40637;
  t40634 = t29318*t40389;
  t40641 = 3.e-6*t406*t40640;
  t40642 = t40634 + t40641;
  t40645 = t295*t40640;
  t40646 = t40398 + t40645;
  t40649 = 3.e-6*t16843*t40389;
  t40650 = -1.*t16843*t40640;
  t40652 = t40649 + t40650;
  t40684 = 3.e-6*t295*t40389;
  t40685 = -1.*t295*t40640;
  t40686 = t40684 + t40685;
  t40693 = -9.e-12*t16843*t40389;
  t40694 = 3.e-6*t16843*t40640;
  t40696 = t40693 + t40694;
  t40390 = t12003*t40389;
  t40395 = 6.000000000054e-7*t406*t40394;
  t40722 = t40398 + t40399;
  t40725 = t40405 + t40406;
  t40728 = t40413 + t40415;
  t40492 = -0.2000000000018*t12118*t13239*t16843*t40241;
  t40493 = 0.2000000000018*t295*t40241*t17368;
  t40494 = -6.000000000054e-7*t12118*t16843*t40241*t27446;
  t40502 = t33990*t40500;
  t40506 = t33938*t40505;
  t40514 = t29246*t40513;
  t40515 = t37144*t40500;
  t40516 = t36641*t40505;
  t40518 = t37852*t40513;
  t40519 = t40515 + t40516 + t40518;
  t40520 = 0.100001*t40519;
  t40521 = t36937*t40500;
  t40523 = t36731*t40505;
  t40525 = t36641*t40513;
  t40526 = t40521 + t40523 + t40525;
  t40527 = -0.3*t40526;
  t40530 = -1.*t37177*t40500;
  t40531 = -1.*t36937*t40505;
  t40532 = -1.*t37144*t40513;
  t40533 = t40530 + t40531 + t40532;
  t40535 = 0.2*t40533;
  t40536 = t40492 + t40493 + t40494 + t40502 + t40506 + t40514 + t40520 + t40527 + t40535;
  t40342 = -0.2000000000018*t295*t40188*t12118;
  t40343 = -0.2000000000018*t16843*t40299;
  t40344 = 6.000000000054e-7*t16843*t40249;
  t40352 = t33990*t40349;
  t40358 = t29246*t40356;
  t40362 = t33938*t40360;
  t40363 = -1.*t37177*t40349;
  t40364 = -1.*t37144*t40356;
  t40365 = -1.*t36937*t40360;
  t40366 = t40363 + t40364 + t40365;
  t40368 = 0.2*t40366;
  t40369 = t37144*t40349;
  t40370 = t37852*t40356;
  t40372 = t36641*t40360;
  t40373 = t40369 + t40370 + t40372;
  t40374 = 0.100001*t40373;
  t40375 = t36937*t40349;
  t40376 = t36641*t40356;
  t40378 = t36731*t40360;
  t40379 = t40375 + t40376 + t40378;
  t40380 = -0.3*t40379;
  t40382 = t40342 + t40343 + t40344 + t40352 + t40358 + t40362 + t40368 + t40374 + t40380;
  t40762 = t13239*t40241*t17368;
  t40765 = t40188*t27446;
  t40766 = t40762 + t40765;
  t40770 = 3.e-6*t295*t40766;
  t40772 = -9.e-12*t295*t40640;
  t40773 = t40396 + t40770 + t40772;
  t40776 = -1.*t295*t40766;
  t40777 = 3.e-6*t295*t40640;
  t40780 = t40403 + t40776 + t40777;
  t40783 = 1.000000000009*t295*t12118*t40241;
  t40785 = t16843*t40766;
  t40786 = -3.e-6*t16843*t40640;
  t40787 = t40783 + t40785 + t40786;
  t40681 = 6.000000000054e-7*t16843*t40389;
  t40682 = -0.2000000000018*t16843*t40640;
  t40689 = t33990*t40686;
  t40690 = t33938*t40652;
  t40697 = t29246*t40696;
  t40698 = t37144*t40686;
  t40701 = t36641*t40652;
  t40702 = t37852*t40696;
  t40704 = t40698 + t40701 + t40702;
  t40705 = 0.100001*t40704;
  t40706 = t36937*t40686;
  t40708 = t36731*t40652;
  t40709 = t36641*t40696;
  t40710 = t40706 + t40708 + t40709;
  t40712 = -0.3*t40710;
  t40713 = -1.*t37177*t40686;
  t40714 = -1.*t36937*t40652;
  t40716 = -1.*t37144*t40696;
  t40717 = t40713 + t40714 + t40716;
  t40718 = 0.2*t40717;
  t40720 = t40681 + t40682 + t40689 + t40690 + t40697 + t40705 + t40712 + t40718;
  t40812 = 1.000000000009*t12118*t16843*t40241;
  t40814 = t40812 + t40776 + t40777;
  t40816 = 3.e-6*t295*t12118*t40241;
  t40817 = 3.e-6*t16843*t40766;
  t40818 = -9.e-12*t16843*t40640;
  t40819 = t40816 + t40817 + t40818;
  t40822 = -1.*t295*t12118*t40241;
  t40823 = -1.*t16843*t40766;
  t40824 = t40822 + t40823 + t40694;
  t40450 = t39041*t40449;
  t40456 = t39254*t40455;
  t40463 = t39540*t40462;
  t40464 = -1.*t39605*t40449;
  t40465 = 1.000000000009*t28880*t40455;
  t40466 = -1.*t39641*t40462;
  t40469 = t40464 + t40465 + t40466;
  t40472 = 0.2*t40469;
  t40473 = -1.8e-11*t28880*t40449;
  t40474 = t39692*t40455;
  t40476 = t39605*t40462;
  t40478 = t40473 + t40474 + t40476;
  t40479 = 0.100001*t40478;
  t40480 = t39692*t40449;
  t40482 = t39721*t40455;
  t40483 = -1.000000000009*t28880*t40462;
  t40484 = t40480 + t40482 + t40483;
  t40486 = -0.3*t40484;
  t40489 = t40450 + t40456 + t40463 + t40472 + t40479 + t40486;
  t40305 = t39041*t40304;
  t40312 = t39254*t40310;
  t40319 = t39540*t40318;
  t40320 = -1.*t39605*t40304;
  t40322 = 1.000000000009*t28880*t40310;
  t40323 = -1.*t39641*t40318;
  t40324 = t40320 + t40322 + t40323;
  t40326 = 0.2*t40324;
  t40327 = -1.8e-11*t28880*t40304;
  t40328 = t39692*t40310;
  t40329 = t39605*t40318;
  t40330 = t40327 + t40328 + t40329;
  t40332 = 0.100001*t40330;
  t40333 = t39692*t40304;
  t40334 = t39721*t40310;
  t40335 = -1.000000000009*t28880*t40318;
  t40336 = t40333 + t40334 + t40335;
  t40338 = -0.3*t40336;
  t40339 = t40305 + t40312 + t40319 + t40326 + t40332 + t40338;
  t40644 = t39041*t40642;
  t40648 = t39254*t40646;
  t40653 = t39540*t40652;
  t40654 = -1.*t39605*t40642;
  t40656 = 1.000000000009*t28880*t40646;
  t40657 = -1.*t39641*t40652;
  t40658 = t40654 + t40656 + t40657;
  t40660 = 0.2*t40658;
  t40661 = -1.8e-11*t28880*t40642;
  t40662 = t39692*t40646;
  t40664 = t39605*t40652;
  t40665 = t40661 + t40662 + t40664;
  t40669 = 0.100001*t40665;
  t40672 = t39692*t40642;
  t40673 = t39721*t40646;
  t40674 = -1.000000000009*t28880*t40652;
  t40676 = t40672 + t40673 + t40674;
  t40677 = -0.3*t40676;
  t40678 = t40644 + t40648 + t40653 + t40660 + t40669 + t40677;
  t40014 = 5.4e-18*t27665;
  t40015 = 0.100000000003*t38349;
  t40016 = -0.200000000003*t39692;
  t40017 = t40014 + t40015 + t40016;
  t40024 = -0.2000000000048*t27665;
  t40027 = t40026 + t28880;
  t40028 = 0.100000000003*t40027;
  t40029 = t40024 + t39388 + t40028;
  t40035 = 0.1000000000039*t27665;
  t40036 = t40026 + t30702;
  t40037 = -0.200000000003*t40036;
  t40038 = 3.e-7*t39692;
  t40039 = t40035 + t40037 + t40038;
  t40851 = 3.e-6*t12118*t16843*t40241;
  t40852 = 3.e-6*t406*t40766;
  t40853 = t29318*t40640;
  t40855 = t40851 + t40852 + t40853;
  t40048 = t40047 + t30702;
  t40857 = -1.*t12118*t16843*t40241;
  t40858 = t295*t40766;
  t40860 = t40857 + t40858 + t40641;
  t40862 = -1.*t36382*t12118*t40241;
  t40863 = t40862 + t40823 + t40694;
  t40063 = t40047 + t28880;
  t40815 = t39540*t40814;
  t40820 = t39041*t40819;
  t40825 = t39254*t40824;
  t40826 = -1.000000000009*t28880*t40814;
  t40827 = t39692*t40819;
  t40828 = t39721*t40824;
  t40830 = t40826 + t40827 + t40828;
  t40831 = -0.3*t40830;
  t40832 = t39605*t40814;
  t40833 = -1.8e-11*t28880*t40819;
  t40834 = t39692*t40824;
  t40836 = t40832 + t40833 + t40834;
  t40837 = 0.100001*t40836;
  t40839 = -1.*t39641*t40814;
  t40840 = -1.*t39605*t40819;
  t40841 = 1.000000000009*t28880*t40824;
  t40842 = t40839 + t40840 + t40841;
  t40843 = 0.2*t40842;
  t40844 = t40815 + t40820 + t40825 + t40831 + t40837 + t40843;
  t40915 = t12003*t12118*t13239*t40241;
  t40916 = 0.2000000000018*t16843*t40241*t17368;
  t40917 = -6.000000000054e-7*t406*t12118*t40241*t27446;
  t40918 = t29246*t40449;
  t40919 = t33938*t40455;
  t40920 = t33990*t40462;
  t40922 = t36641*t40449;
  t40924 = t36731*t40455;
  t40925 = t36937*t40462;
  t40926 = t40922 + t40924 + t40925;
  t40927 = -0.3*t40926;
  t40928 = -1.*t37144*t40449;
  t40929 = -1.*t36937*t40455;
  t40930 = -1.*t37177*t40462;
  t40933 = t40928 + t40929 + t40930;
  t40936 = 0.2*t40933;
  t40937 = t37852*t40449;
  t40938 = t36641*t40455;
  t40939 = t37144*t40462;
  t40940 = t40937 + t40938 + t40939;
  t40941 = 0.100001*t40940;
  t40942 = t40915 + t40916 + t40917 + t40918 + t40919 + t40920 + t40927 + t40936 + t40941;
  t40889 = -0.2000000000018*t40188*t12118*t16843;
  t40890 = t12003*t40299;
  t40891 = 6.000000000054e-7*t406*t40249;
  t40892 = t29246*t40304;
  t40893 = t33938*t40310;
  t40894 = t33990*t40318;
  t40897 = t36641*t40304;
  t40898 = t36731*t40310;
  t40899 = t36937*t40318;
  t40900 = t40897 + t40898 + t40899;
  t40901 = -0.3*t40900;
  t40902 = -1.*t37144*t40304;
  t40904 = -1.*t36937*t40310;
  t40905 = -1.*t37177*t40318;
  t40906 = t40902 + t40904 + t40905;
  t40907 = 0.2*t40906;
  t40908 = t37852*t40304;
  t40909 = t36641*t40310;
  t40910 = t37144*t40318;
  t40912 = t40908 + t40909 + t40910;
  t40913 = 0.100001*t40912;
  t40914 = t40889 + t40890 + t40891 + t40892 + t40893 + t40894 + t40901 + t40907 + t40913;
  t40943 = 6.000000000054e-7*t406*t40389;
  t40944 = t12003*t40640;
  t40945 = t29246*t40642;
  t40946 = t33938*t40646;
  t40947 = t33990*t40652;
  t40949 = t36641*t40642;
  t40950 = t36731*t40646;
  t40951 = t36937*t40652;
  t40952 = t40949 + t40950 + t40951;
  t40953 = -0.3*t40952;
  t40955 = -1.*t37144*t40642;
  t40956 = -1.*t36937*t40646;
  t40957 = -1.*t37177*t40652;
  t40959 = t40955 + t40956 + t40957;
  t40960 = 0.2*t40959;
  t40961 = t37852*t40642;
  t40962 = t36641*t40646;
  t40963 = t37144*t40652;
  t40964 = t40961 + t40962 + t40963;
  t40965 = 0.100001*t40964;
  t40966 = t40943 + t40944 + t40945 + t40946 + t40947 + t40953 + t40960 + t40965;
  t40993 = t39041*t40855;
  t40994 = t39254*t40860;
  t40995 = t39540*t40863;
  t40997 = -1.*t39605*t40855;
  t40998 = 1.000000000009*t28880*t40860;
  t40999 = -1.*t39641*t40863;
  t41000 = t40997 + t40998 + t40999;
  t41001 = 0.2*t41000;
  t41002 = -1.8e-11*t28880*t40855;
  t41003 = t39692*t40860;
  t41004 = t39605*t40863;
  t41005 = t41002 + t41003 + t41004;
  t41006 = 0.100001*t41005;
  t41008 = t39692*t40855;
  t41009 = t39721*t40860;
  t41010 = -1.000000000009*t28880*t40863;
  t41011 = t41008 + t41009 + t41010;
  t41012 = -0.3*t41011;
  t41013 = t40993 + t40994 + t40995 + t41001 + t41006 + t41012;
  t40967 = -0.2000000000018*t295*t12118*t40241;
  t40968 = -0.2000000000018*t16843*t40766;
  t40970 = 6.000000000054e-7*t16843*t40640;
  t40971 = t33990*t40814;
  t40972 = t29246*t40819;
  t40973 = t33938*t40824;
  t40974 = -1.*t37177*t40814;
  t40975 = -1.*t37144*t40819;
  t40976 = -1.*t36937*t40824;
  t40978 = t40974 + t40975 + t40976;
  t40979 = 0.2*t40978;
  t40980 = t37144*t40814;
  t40981 = t37852*t40819;
  t40982 = t36641*t40824;
  t40984 = t40980 + t40981 + t40982;
  t40985 = 0.100001*t40984;
  t40987 = t36937*t40814;
  t40988 = t36641*t40819;
  t40989 = t36731*t40824;
  t40990 = t40987 + t40988 + t40989;
  t40991 = -0.3*t40990;
  t40992 = t40967 + t40968 + t40970 + t40971 + t40972 + t40973 + t40979 + t40985 + t40991;
  t41022 = t29318*t40188*t12118*t13239;
  t41024 = 3.e-6*t406*t40188*t12118*t27446;
  t41025 = t41022 + t41024;
  t41027 = t295*t40188*t12118*t27446;
  t41028 = t40194 + t41027;
  t41030 = 3.e-6*t40188*t12118*t13239*t16843;
  t41031 = -1.*t40188*t12118*t16843*t27446;
  t41032 = t41030 + t41031;
  t41054 = -3.e-6*t406*t40188*t12118*t13239;
  t41055 = 3.e-6*t40188*t16843*t17368;
  t41056 = t29318*t40188*t12118*t27446;
  t41057 = t41054 + t41055 + t41056;
  t41060 = -1.*t295*t40188*t12118*t13239;
  t41061 = -1.*t40188*t16843*t17368;
  t41062 = t41060 + t41061 + t41024;
  t41064 = t40188*t12118*t13239*t16843;
  t41065 = -1.*t36382*t40188*t17368;
  t41066 = 3.e-6*t40188*t12118*t16843*t27446;
  t41067 = t41064 + t41065 + t41066;
  t41096 = 1.000000000009*t40188*t16843*t17368;
  t41097 = 3.e-6*t295*t40188*t12118*t27446;
  t41098 = t40200 + t41096 + t41097;
  t41100 = -3.e-6*t40188*t12118*t13239*t16843;
  t41101 = 3.e-6*t295*t40188*t17368;
  t41102 = -9.e-12*t40188*t12118*t16843*t27446;
  t41103 = t41100 + t41101 + t41102;
  t41106 = -1.*t295*t40188*t17368;
  t41107 = t41064 + t41106 + t41066;
  t41135 = 3.e-6*t406*t40188*t13239*t17368;
  t41136 = -1.*t29318*t40188*t17368*t27446;
  t41137 = t40295 + t41135 + t41136;
  t41140 = t295*t40188*t13239*t17368;
  t41141 = -3.e-6*t406*t40188*t17368*t27446;
  t41143 = t40306 + t41140 + t41141;
  t41145 = -1.*t40188*t13239*t16843*t17368;
  t41147 = -3.e-6*t40188*t16843*t17368*t27446;
  t41148 = t40313 + t41145 + t41147;
  t41020 = 6.000000000054e-7*t406*t40188*t12118*t13239;
  t41021 = t12003*t40188*t12118*t27446;
  t41026 = t29246*t41025;
  t41029 = t33938*t41028;
  t41034 = t33990*t41032;
  t41035 = t36641*t41025;
  t41036 = t36731*t41028;
  t41037 = t36937*t41032;
  t41038 = t41035 + t41036 + t41037;
  t41039 = -0.3*t41038;
  t41040 = -1.*t37144*t41025;
  t41041 = -1.*t36937*t41028;
  t41042 = -1.*t37177*t41032;
  t41044 = t41040 + t41041 + t41042;
  t41045 = 0.2*t41044;
  t41046 = t37852*t41025;
  t41047 = t36641*t41028;
  t41048 = t37144*t41032;
  t41049 = t41046 + t41047 + t41048;
  t41050 = 0.100001*t41049;
  t41052 = t41020 + t41021 + t41026 + t41029 + t41034 + t41039 + t41045 + t41050;
  t41175 = t40300 + t40302;
  t41178 = t40309 + t40253;
  t41181 = t40314 + t40316;
  t41206 = t13239*t40241;
  t41207 = t40188*t17368*t27446;
  t41208 = t41206 + t41207;
  t41204 = t29318*t40299;
  t41209 = 3.e-6*t406*t41208;
  t41210 = t41204 + t41209;
  t41212 = t295*t41208;
  t41213 = t40300 + t41212;
  t41216 = -1.*t16843*t41208;
  t41218 = t40354 + t41216;
  t41246 = 3.e-6*t295*t40299;
  t41247 = -1.*t295*t41208;
  t41248 = t41246 + t41247;
  t41255 = -9.e-12*t16843*t40299;
  t41256 = 3.e-6*t16843*t41208;
  t41257 = t41255 + t41256;
  t41092 = 0.2000000000018*t40188*t12118*t13239*t16843;
  t41093 = -0.2000000000018*t295*t40188*t17368;
  t41095 = 6.000000000054e-7*t40188*t12118*t16843*t27446;
  t41099 = t33990*t41098;
  t41105 = t29246*t41103;
  t41108 = t33938*t41107;
  t41109 = -1.*t37177*t41098;
  t41110 = -1.*t37144*t41103;
  t41111 = -1.*t36937*t41107;
  t41112 = t41109 + t41110 + t41111;
  t41113 = 0.2*t41112;
  t41114 = t37144*t41098;
  t41116 = t37852*t41103;
  t41117 = t36641*t41107;
  t41118 = t41114 + t41116 + t41117;
  t41120 = 0.100001*t41118;
  t41121 = t36937*t41098;
  t41122 = t36641*t41103;
  t41124 = t36731*t41107;
  t41126 = t41121 + t41122 + t41124;
  t41127 = -0.3*t41126;
  t41129 = t41092 + t41093 + t41095 + t41099 + t41105 + t41108 + t41113 + t41120 + t41127;
  t41287 = 3.e-6*t295*t40244;
  t41289 = -9.e-12*t295*t41208;
  t41290 = t40295 + t41287 + t41289;
  t41293 = -1.*t295*t40244;
  t41295 = 3.e-6*t295*t41208;
  t41297 = t40306 + t41293 + t41295;
  t41300 = -1.000000000009*t295*t40188*t12118;
  t41301 = t16843*t40244;
  t41302 = -3.e-6*t16843*t41208;
  t41303 = t41300 + t41301 + t41302;
  t41244 = 6.000000000054e-7*t16843*t40299;
  t41245 = -0.2000000000018*t16843*t41208;
  t41249 = t33990*t41248;
  t41251 = t33938*t41218;
  t41258 = t29246*t41257;
  t41259 = t37144*t41248;
  t41260 = t36641*t41218;
  t41261 = t37852*t41257;
  t41262 = t41259 + t41260 + t41261;
  t41264 = 0.100001*t41262;
  t41267 = t36937*t41248;
  t41268 = t36731*t41218;
  t41270 = t36641*t41257;
  t41271 = t41267 + t41268 + t41270;
  t41272 = -0.3*t41271;
  t41273 = -1.*t37177*t41248;
  t41274 = -1.*t36937*t41218;
  t41275 = -1.*t37144*t41257;
  t41276 = t41273 + t41274 + t41275;
  t41277 = 0.2*t41276;
  t41279 = t41244 + t41245 + t41249 + t41251 + t41258 + t41264 + t41272 + t41277;
  t41331 = -1.000000000009*t40188*t12118*t16843;
  t41332 = t41331 + t41293 + t41295;
  t41334 = -3.e-6*t295*t40188*t12118;
  t41337 = -9.e-12*t16843*t41208;
  t41338 = t41334 + t40264 + t41337;
  t41341 = t295*t40188*t12118;
  t41344 = -1.*t16843*t40244;
  t41345 = t41341 + t41344 + t41256;
  t41058 = t39041*t41057;
  t41063 = t39254*t41062;
  t41068 = t39540*t41067;
  t41070 = -1.*t39605*t41057;
  t41071 = 1.000000000009*t28880*t41062;
  t41072 = -1.*t39641*t41067;
  t41073 = t41070 + t41071 + t41072;
  t41074 = 0.2*t41073;
  t41075 = -1.8e-11*t28880*t41057;
  t41076 = t39692*t41062;
  t41077 = t39605*t41067;
  t41078 = t41075 + t41076 + t41077;
  t41081 = 0.100001*t41078;
  t41083 = t39692*t41057;
  t41084 = t39721*t41062;
  t41086 = -1.000000000009*t28880*t41067;
  t41087 = t41083 + t41084 + t41086;
  t41088 = -0.3*t41087;
  t41089 = t41058 + t41063 + t41068 + t41074 + t41081 + t41088;
  t41211 = t39041*t41210;
  t41214 = t39254*t41213;
  t41219 = t39540*t41218;
  t41220 = -1.*t39605*t41210;
  t41221 = 1.000000000009*t28880*t41213;
  t41222 = -1.*t39641*t41218;
  t41223 = t41220 + t41221 + t41222;
  t41224 = 0.2*t41223;
  t41226 = -1.8e-11*t28880*t41210;
  t41227 = t39692*t41213;
  t41228 = t39605*t41218;
  t41230 = t41226 + t41227 + t41228;
  t41232 = 0.100001*t41230;
  t41234 = t39692*t41210;
  t41235 = t39721*t41213;
  t41236 = -1.000000000009*t28880*t41218;
  t41239 = t41234 + t41235 + t41236;
  t41240 = -0.3*t41239;
  t41241 = t41211 + t41214 + t41219 + t41224 + t41232 + t41240;
  t41377 = -3.e-6*t40188*t12118*t16843;
  t41378 = t29318*t41208;
  t41381 = t41377 + t40257 + t41378;
  t41383 = t40188*t12118*t16843;
  t41384 = t295*t40244;
  t41385 = t41383 + t41384 + t41209;
  t41387 = t36382*t40188*t12118;
  t41388 = t41387 + t41344 + t41256;
  t41333 = t39540*t41332;
  t41340 = t39041*t41338;
  t41346 = t39254*t41345;
  t41347 = -1.000000000009*t28880*t41332;
  t41348 = t39692*t41338;
  t41349 = t39721*t41345;
  t41350 = t41347 + t41348 + t41349;
  t41352 = -0.3*t41350;
  t41353 = t39605*t41332;
  t41354 = -1.8e-11*t28880*t41338;
  t41356 = t39692*t41345;
  t41358 = t41353 + t41354 + t41356;
  t41359 = 0.100001*t41358;
  t41360 = -1.*t39641*t41332;
  t41363 = -1.*t39605*t41338;
  t41364 = 1.000000000009*t28880*t41345;
  t41365 = t41360 + t41363 + t41364;
  t41366 = 0.2*t41365;
  t41367 = t41333 + t41340 + t41346 + t41352 + t41359 + t41366;
  p_output1[0]=(t16594 + t21439 + t27581 + t29246*t30450 + t33938*t33948 + t33990*t36604 - 0.3*(t30450*t36641 + t33948*t36731 + t36604*t36937) + 0.2*(-1.*t33948*t36937 - 1.*t30450*t37144 - 1.*t36604*t37177) + 0.100001*(t33948*t36641 + t36604*t37144 + t30450*t37852))*var2[4] + t38317*var2[5] + t39786*var2[10] + t39735*var2[12];
  p_output1[1]=t38317*var2[4] + (t16594 + t27581 + t29246*t39792 + t33938*t39794 + t33990*t39796 - 0.3*(t36641*t39792 + t36731*t39794 + t36937*t39796) + 0.100001*(t37852*t39792 + t36641*t39794 + t37144*t39796) + 0.2*(-1.*t37144*t39792 - 1.*t36937*t39794 - 1.*t37177*t39796))*var2[5] + t39933*var2[10] + t39882*var2[12];
  p_output1[2]=t39786*var2[4] + t39933*var2[5] + (t21439 - 0.2000000000018*t12118*t13239*t295 - 6.000000000054e-7*t12118*t27446*t295 + t33938*t39977 + t29246*t39981 + t33990*t39988 - 0.3*(t36731*t39977 + t36641*t39981 + t36937*t39988) + 0.100001*(t36641*t39977 + t37852*t39981 + t37144*t39988) + 0.2*(-1.*t36937*t39977 - 1.*t37144*t39981 - 1.*t37177*t39988))*var2[10] + t39973*var2[12];
  p_output1[3]=t39735*var2[4] + t39882*var2[5] + t39973*var2[10] + (t40017*t40022 + t40029*t40033 + t40039*t40042 + 0.100001*(-1.8e-11*t27665*t40022 + t39605*t40033 + t38389*t40042) - 0.3*(t39605*t40022 - 1.000000000009*t27665*t40042 + t40033*t40048) + 0.2*(-1.*t38389*t40022 + 1.000000000009*t27665*t40033 - 1.*t40042*t40063))*var2[12];
  p_output1[4]=1.;
  p_output1[5]=0.2000000000018*t12118*t16843 - 1.*t12003*t13239*t17368 + t29246*t39067 + t33938*t39377 + t33990*t39603 - 0.3*(t36641*t39067 + t36731*t39377 + t36937*t39603) + 0.100001*(t37852*t39067 + t36641*t39377 + t37144*t39603) + 0.2*(-1.*t37144*t39067 - 1.*t36937*t39377 - 1.*t37177*t39603) + 6.000000000054e-7*t17368*t27446*t406;
  p_output1[6]=-1.*t12003*t12118*t27446 + t29246*t39834 + t33938*t39841 + t33990*t39854 - 0.3*(t36641*t39834 + t36731*t39841 + t36937*t39854) + 0.100001*(t37852*t39834 + t36641*t39841 + t37144*t39854) + 0.2*(-1.*t37144*t39834 - 1.*t36937*t39841 - 1.*t37177*t39854) - 6.000000000054e-7*t12118*t13239*t406;
  p_output1[7]=-0.2000000000018*t12118*t13239*t16843 - 6.000000000054e-7*t12118*t16843*t27446 + 0.2000000000018*t17368*t295 + t33990*t39942 + t33938*t39946 + t29246*t39952 - 0.3*(t36937*t39942 + t36731*t39946 + t36641*t39952) + 0.2*(-1.*t37177*t39942 - 1.*t36937*t39946 - 1.*t37144*t39952) + 0.100001*(t37144*t39942 + t36641*t39946 + t37852*t39952);
  p_output1[8]=t39041*t40022 + t39254*t40033 + t39540*t40042 - 0.3*(t39692*t40022 + t39721*t40033 - 1.000000000009*t28880*t40042) + 0.100001*(-1.8e-11*t28880*t40022 + t39692*t40033 + t39605*t40042) + 0.2*(-1.*t39605*t40022 + 1.000000000009*t28880*t40033 - 1.*t39641*t40042);
  p_output1[9]=(t40384 + t40390 + t40395 + t29246*t40400 + t33938*t40409 + t33990*t40416 - 0.3*(t36641*t40400 + t36731*t40409 + t36937*t40416) + 0.100001*(t37852*t40400 + t36641*t40409 + t37144*t40416) + 0.2*(-1.*t37144*t40400 - 1.*t36937*t40409 - 1.*t37177*t40416))*var2[3] + t40236*var2[4] + t40292*var2[5] + t40382*var2[10] + t40339*var2[12];
  p_output1[10]=t40236*var2[3] + (-1.*t12003*t13239*t17368*t40241 + t40384 + t29246*t40587 + t33938*t40596 + 6.000000000054e-7*t17368*t27446*t40241*t406 + t33990*t40602 - 0.3*(t36641*t40587 + t36731*t40596 + t36937*t40602) + 0.100001*(t37852*t40587 + t36641*t40596 + t37144*t40602) + 0.2*(-1.*t37144*t40587 - 1.*t36937*t40596 - 1.*t37177*t40602))*var2[4] + t40579*var2[5] + t40536*var2[10] + t40489*var2[12];
  p_output1[11]=t40292*var2[3] + t40579*var2[4] + (t40390 + t40395 + t29246*t40722 + t33938*t40725 + t33990*t40728 - 0.3*(t36641*t40722 + t36731*t40725 + t36937*t40728) + 0.100001*(t37852*t40722 + t36641*t40725 + t37144*t40728) + 0.2*(-1.*t37144*t40722 - 1.*t36937*t40725 - 1.*t37177*t40728))*var2[5] + t40720*var2[10] + t40678*var2[12];
  p_output1[12]=t40382*var2[3] + t40536*var2[4] + t40720*var2[5] + (t40384 + 6.000000000054e-7*t295*t40640 - 0.2000000000018*t295*t40766 + t29246*t40773 + t33938*t40780 + t33990*t40787 - 0.3*(t36641*t40773 + t36731*t40780 + t36937*t40787) + 0.100001*(t37852*t40773 + t36641*t40780 + t37144*t40787) + 0.2*(-1.*t37144*t40773 - 1.*t36937*t40780 - 1.*t37177*t40787))*var2[10] + t40844*var2[12];
  p_output1[13]=t40339*var2[3] + t40489*var2[4] + t40678*var2[5] + t40844*var2[10] + (t40017*t40855 + t40029*t40860 + t40039*t40863 - 0.3*(t39605*t40855 + t40048*t40860 - 1.000000000009*t27665*t40863) + 0.100001*(-1.8e-11*t27665*t40855 + t39605*t40860 + t38389*t40863) + 0.2*(-1.*t38389*t40855 + 1.000000000009*t27665*t40860 - 1.*t40063*t40863))*var2[12];
  p_output1[14]=1.;
  p_output1[15]=t40914;
  p_output1[16]=t40942;
  p_output1[17]=t40966;
  p_output1[18]=t40992;
  p_output1[19]=t41013;
  p_output1[20]=t40914*var2[3] + t40942*var2[4] + t40966*var2[5] + t40992*var2[10] + t41013*var2[12];
  p_output1[21]=t40942*var2[3] + (t12003*t13239*t17368*t40188 - 6.000000000054e-7*t17368*t27446*t40188*t406 + t40889 + t29246*t41137 + t33938*t41143 + t33990*t41148 - 0.3*(t36641*t41137 + t36731*t41143 + t36937*t41148) + 0.100001*(t37852*t41137 + t36641*t41143 + t37144*t41148) + 0.2*(-1.*t37144*t41137 - 1.*t36937*t41143 - 1.*t37177*t41148))*var2[4] + t41052*var2[5] + t41129*var2[10] + t41089*var2[12];
  p_output1[22]=t40966*var2[3] + t41052*var2[4] + (t40890 + t40891 + t29246*t41175 + t33938*t41178 + t33990*t41181 - 0.3*(t36641*t41175 + t36731*t41178 + t36937*t41181) + 0.100001*(t37852*t41175 + t36641*t41178 + t37144*t41181) + 0.2*(-1.*t37144*t41175 - 1.*t36937*t41178 - 1.*t37177*t41181))*var2[5] + t41279*var2[10] + t41241*var2[12];
  p_output1[23]=t40992*var2[3] + t41129*var2[4] + t41279*var2[5] + (-0.2000000000018*t295*t40244 + t40889 + 6.000000000054e-7*t295*t41208 + t29246*t41290 + t33938*t41297 + t33990*t41303 - 0.3*(t36641*t41290 + t36731*t41297 + t36937*t41303) + 0.100001*(t37852*t41290 + t36641*t41297 + t37144*t41303) + 0.2*(-1.*t37144*t41290 - 1.*t36937*t41297 - 1.*t37177*t41303))*var2[10] + t41367*var2[12];
  p_output1[24]=t41013*var2[3] + t41089*var2[4] + t41241*var2[5] + t41367*var2[10] + (t40017*t41381 + t40029*t41385 + t40039*t41388 - 0.3*(t39605*t41381 + t40048*t41385 - 1.000000000009*t27665*t41388) + 0.100001*(-1.8e-11*t27665*t41381 + t39605*t41385 + t38389*t41388) + 0.2*(-1.*t38389*t41381 + 1.000000000009*t27665*t41385 - 1.*t40063*t41388))*var2[12];
  p_output1[25]=1.;
  p_output1[26]=-0.2000000000018*t12118*t16843*t40241 + 6.000000000054e-7*t406*t40640 + t12003*t40766 + t29246*t40855 + t33938*t40860 + t33990*t40863 - 0.3*(t36641*t40855 + t36731*t40860 + t36937*t40863) + 0.100001*(t37852*t40855 + t36641*t40860 + t37144*t40863) + 0.2*(-1.*t37144*t40855 - 1.*t36937*t40860 - 1.*t37177*t40863);
  p_output1[27]=-1.*t12003*t12118*t13239*t40188 - 0.2000000000018*t16843*t17368*t40188 + 6.000000000054e-7*t12118*t27446*t40188*t406 + t29246*t41057 + t33938*t41062 + t33990*t41067 - 0.3*(t36641*t41057 + t36731*t41062 + t36937*t41067) + 0.100001*(t37852*t41057 + t36641*t41062 + t37144*t41067) + 0.2*(-1.*t37144*t41057 - 1.*t36937*t41062 - 1.*t37177*t41067);
  p_output1[28]=6.000000000054e-7*t40299*t406 + t12003*t41208 + t29246*t41210 + t33938*t41213 + t33990*t41218 - 0.3*(t36641*t41210 + t36731*t41213 + t36937*t41218) + 0.100001*(t37852*t41210 + t36641*t41213 + t37144*t41218) + 0.2*(-1.*t37144*t41210 - 1.*t36937*t41213 - 1.*t37177*t41218);
  p_output1[29]=0.2000000000018*t12118*t295*t40188 - 0.2000000000018*t16843*t40244 + 6.000000000054e-7*t16843*t41208 + t33990*t41332 + t29246*t41338 + t33938*t41345 + 0.100001*(t37144*t41332 + t37852*t41338 + t36641*t41345) - 0.3*(t36937*t41332 + t36641*t41338 + t36731*t41345) + 0.2*(-1.*t37177*t41332 - 1.*t37144*t41338 - 1.*t36937*t41345);
  p_output1[30]=t39041*t41381 + t39254*t41385 + t39540*t41388 - 0.3*(t39692*t41381 + t39721*t41385 - 1.000000000009*t28880*t41388) + 0.100001*(-1.8e-11*t28880*t41381 + t39692*t41385 + t39605*t41388) + 0.2*(-1.*t39605*t41381 + 1.000000000009*t28880*t41385 - 1.*t39641*t41388);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 31, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_LeftBackFoot_BackStance.hh"

namespace BackStance
{

void J_dh_LeftBackFoot_BackStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
