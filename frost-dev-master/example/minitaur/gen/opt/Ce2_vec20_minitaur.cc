/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:11:28 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t23642;
  double t29958;
  double t41649;
  double t47074;
  double t47075;
  double t48689;
  double t47107;
  double t46637;
  double t47146;
  double t47200;
  double t47201;
  double t19515;
  double t49029;
  double t50149;
  double t50169;
  double t50216;
  double t50288;
  double t50345;
  double t50523;
  double t50546;
  double t50766;
  double t50774;
  double t50788;
  double t51081;
  double t51083;
  double t51088;
  double t51763;
  double t51935;
  double t51947;
  double t51340;
  double t52436;
  double t52468;
  double t52495;
  double t52528;
  double t52345;
  double t52554;
  double t52557;
  double t52573;
  double t52593;
  double t52662;
  double t52695;
  double t53006;
  double t53037;
  double t53077;
  double t53081;
  double t53095;
  double t53204;
  double t53206;
  double t53208;
  double t53230;
  double t53233;
  double t53235;
  double t53242;
  double t53246;
  double t53254;
  double t53277;
  double t53284;
  double t53285;
  double t53288;
  double t53289;
  double t53109;
  double t53141;
  double t53158;
  double t53160;
  double t53163;
  double t53167;
  double t53217;
  double t53223;
  double t53227;
  double t53111;
  double t53114;
  double t53117;
  double t53168;
  double t53175;
  double t53185;
  double t53493;
  double t53502;
  double t53555;
  double t53561;
  double t53565;
  double t53566;
  double t53588;
  double t53595;
  double t53636;
  double t53641;
  double t53643;
  double t53662;
  double t53680;
  double t53795;
  double t53812;
  double t53833;
  double t53914;
  double t53922;
  double t54048;
  double t53613;
  double t53625;
  double t51926;
  double t51937;
  double t51948;
  double t51955;
  double t54461;
  double t54531;
  double t54409;
  double t54353;
  double t54370;
  double t54373;
  double t54393;
  double t54399;
  double t54423;
  double t54467;
  double t54524;
  double t54536;
  double t54539;
  double t54541;
  double t54567;
  double t54612;
  double t54652;
  double t54656;
  double t54671;
  double t54688;
  double t54692;
  double t54723;
  double t54732;
  double t51972;
  double t51973;
  double t51974;
  double t51981;
  double t55037;
  double t51992;
  double t51996;
  double t51998;
  double t52056;
  double t52374;
  double t52580;
  double t52732;
  double t52748;
  double t54996;
  double t55009;
  double t55015;
  double t55016;
  double t54352;
  double t54529;
  double t54667;
  double t54757;
  double t54797;
  double t54827;
  double t54828;
  double t54832;
  double t55046;
  double t55048;
  double t55050;
  double t55060;
  double t54859;
  double t54871;
  double t54882;
  double t54900;
  double t55063;
  double t55071;
  double t55134;
  double t55138;
  double t55141;
  double t54255;
  double t54261;
  double t54266;
  double t54267;
  double t54905;
  double t54916;
  double t54925;
  double t54958;
  double t54974;
  double t55186;
  double t55187;
  double t55188;
  double t55191;
  double t54837;
  double t54840;
  double t54843;
  double t54848;
  double t54853;
  double t55194;
  double t55197;
  double t55203;
  double t52754;
  double t52759;
  double t52770;
  double t52776;
  double t52782;
  double t52786;
  double t52807;
  double t52809;
  double t55018;
  double t55035;
  double t55039;
  double t55042;
  double t50518;
  double t55175;
  double t55176;
  double t55178;
  double t55179;
  double t55192;
  double t55206;
  double t55222;
  double t55224;
  double t48318;
  double t50825;
  double t51031;
  double t51082;
  double t51103;
  double t51107;
  double t51114;
  double t51117;
  double t51123;
  double t51125;
  double t51207;
  double t51293;
  double t51339;
  double t51385;
  double t51608;
  double t51748;
  double t51749;
  double t55297;
  double t55310;
  double t55311;
  double t55312;
  double t55316;
  double t55317;
  double t55318;
  double t55320;
  double t55322;
  double t55325;
  double t55329;
  double t51958;
  double t51988;
  double t52260;
  double t52315;
  double t52328;
  double t52340;
  double t55375;
  double t55383;
  double t55385;
  double t55386;
  double t55390;
  double t55391;
  double t55393;
  double t55396;
  double t55700;
  double t55701;
  double t55703;
  double t55710;
  double t55827;
  double t55828;
  double t55846;
  double t55847;
  double t52749;
  double t52778;
  double t52825;
  double t52826;
  double t52834;
  double t52848;
  double t53701;
  double t53712;
  double t53732;
  double t53737;
  double t53757;
  double t54222;
  double t54225;
  double t54240;
  double t54243;
  double t54246;
  double t54253;
  double t55913;
  double t55914;
  double t55920;
  double t55929;
  double t55931;
  double t55937;
  double t55938;
  double t55954;
  double t56015;
  double t56018;
  double t56019;
  double t56020;
  double t56025;
  double t56026;
  double t56027;
  double t56031;
  double t56102;
  double t56103;
  double t56112;
  double t56113;
  double t56124;
  double t56136;
  double t56138;
  double t56141;
  double t55314;
  double t55319;
  double t55331;
  double t55337;
  double t55342;
  double t55347;
  double t55621;
  double t55630;
  double t55636;
  double t55637;
  double t55642;
  double t55672;
  double t55852;
  double t55854;
  double t55856;
  double t55857;
  double t55859;
  double t55861;
  double t56218;
  double t56226;
  double t56228;
  double t56219;
  double t56221;
  double t56224;
  double t56238;
  double t56248;
  double t56286;
  double t56288;
  double t56290;
  double t56292;
  double t56293;
  double t56315;
  double t56316;
  double t56317;
  double t56319;
  double t56320;
  double t56330;
  double t56395;
  double t56404;
  double t56409;
  double t56429;
  double t56436;
  double t56441;
  double t56498;
  double t56503;
  double t56507;
  double t56510;
  double t56516;
  double t56519;
  double t56532;
  double t56534;
  double t56539;
  double t56544;
  double t56553;
  double t56554;
  double t56601;
  double t56617;
  double t56623;
  double t56626;
  double t56650;
  double t56653;
  double t56685;
  double t56693;
  double t56703;
  double t56706;
  double t56716;
  double t56728;
  double t56740;
  double t56742;
  double t56747;
  double t56750;
  double t56751;
  double t56753;
  double t56763;
  double t56764;
  double t56765;
  double t56773;
  double t56776;
  double t56777;
  double t53508;
  double t53511;
  double t57135;
  double t57137;
  double t57138;
  double t53456;
  double t57140;
  double t57141;
  double t57142;
  double t57144;
  double t57148;
  double t57150;
  double t53374;
  double t57241;
  double t57242;
  double t57243;
  double t57248;
  double t57249;
  double t57250;
  double t57254;
  double t57258;
  double t57259;
  double t57143;
  double t57152;
  double t57158;
  double t53431;
  double t53330;
  double t53209;
  double t53229;
  double t57588;
  double t57589;
  double t57595;
  double t57639;
  double t57642;
  double t57643;
  double t57636;
  double t57671;
  double t57673;
  double t55715;
  double t55740;
  double t55789;
  double t55798;
  double t57685;
  double t57689;
  double t57692;
  double t57698;
  double t57699;
  double t57700;
  double t57675;
  double t57676;
  double t57678;
  double t57776;
  double t57777;
  double t57783;
  double t55423;
  double t55467;
  double t57787;
  double t57793;
  double t57799;
  double t55515;
  double t55573;
  double t54800;
  double t55044;
  double t57812;
  double t57816;
  double t57818;
  double t57821;
  double t57825;
  double t57827;
  double t55240;
  double t55267;
  double t57193;
  double t75313;
  double t75314;
  double t75315;
  double t75317;
  double t75320;
  double t75321;
  double t57244;
  double t57267;
  double t57357;
  double t75391;
  double t75392;
  double t75393;
  double t75395;
  double t75396;
  double t75397;
  double t75434;
  double t75436;
  double t75442;
  double t57392;
  double t57415;
  double t75316;
  double t75333;
  double t75347;
  double t57430;
  double t57441;
  double t57475;
  double t57503;
  double t57529;
  double t57542;
  double t57551;
  double t57554;
  double t75696;
  double t75704;
  double t75705;
  double t75707;
  double t75708;
  double t75709;
  double t75706;
  double t75723;
  double t75724;
  double t57695;
  double t57704;
  double t57708;
  double t57742;
  double t75733;
  double t75734;
  double t75735;
  double t75737;
  double t75739;
  double t75740;
  double t75726;
  double t75727;
  double t75728;
  double t75756;
  double t75757;
  double t75758;
  double t57841;
  double t57910;
  double t75760;
  double t75761;
  double t75762;
  double t57924;
  double t57926;
  double t74032;
  double t74039;
  double t75766;
  double t75767;
  double t75768;
  double t75770;
  double t75771;
  double t75772;
  double t74515;
  double t74890;
  double t56953;
  double t56970;
  double t56975;
  double t56996;
  double t56997;
  double t57029;
  double t57122;
  double t57124;
  double t57125;
  double t53135;
  double t53187;
  double t53262;
  double t53305;
  double t53308;
  double t53320;
  double t53333;
  double t53354;
  double t53356;
  double t53361;
  double t53369;
  double t53372;
  double t53392;
  double t53426;
  double t53440;
  double t53446;
  double t53448;
  double t53452;
  double t53466;
  double t53476;
  double t53479;
  double t53529;
  double t53541;
  double t56814;
  double t56826;
  double t56834;
  double t56850;
  double t56855;
  double t56884;
  double t56888;
  double t56899;
  double t56902;
  double t54065;
  double t54103;
  double t54121;
  double t54171;
  double t56919;
  double t56920;
  double t56923;
  double t54854;
  double t54992;
  double t55062;
  double t55142;
  double t55149;
  double t55151;
  double t55185;
  double t55225;
  double t55234;
  double t55248;
  double t55250;
  double t55253;
  double t55283;
  double t55292;
  double t55296;
  double t56927;
  double t56928;
  double t56937;
  double t55351;
  double t55361;
  double t55369;
  double t55389;
  double t55409;
  double t55414;
  double t55420;
  double t55427;
  double t55466;
  double t55468;
  double t55503;
  double t55506;
  double t55508;
  double t55511;
  double t55513;
  double t55518;
  double t55519;
  double t55552;
  double t55602;
  double t55609;
  double t55618;
  double t57034;
  double t57035;
  double t57045;
  double t55713;
  double t55716;
  double t55718;
  double t55761;
  double t55769;
  double t55772;
  double t55786;
  double t55794;
  double t55797;
  double t55803;
  double t55807;
  double t55808;
  double t55826;
  double t55849;
  double t55851;
  double t57056;
  double t57060;
  double t57065;
  double t55864;
  double t55867;
  double t55868;
  double t55911;
  double t55930;
  double t55973;
  double t55992;
  double t55993;
  double t56000;
  double t56004;
  double t56010;
  double t56013;
  double t56021;
  double t56033;
  double t56041;
  double t56043;
  double t56060;
  double t56064;
  double t56069;
  double t56093;
  double t56114;
  double t56142;
  double t56143;
  double t56144;
  double t56145;
  double t56146;
  double t56147;
  double t56845;
  double t56886;
  double t56918;
  double t56926;
  double t56951;
  double t56995;
  double t57033;
  double t57048;
  double t57113;
  double t57128;
  double t57131;
  double t56318;
  double t56331;
  double t56373;
  double t56291;
  double t56302;
  double t56309;
  double t56418;
  double t56445;
  double t56480;
  double t56225;
  double t56250;
  double t56270;
  double t56542;
  double t56566;
  double t56593;
  double t56509;
  double t56522;
  double t56524;
  double t56704;
  double t56731;
  double t56732;
  double t56625;
  double t56661;
  double t56682;
  double t56768;
  double t56788;
  double t56792;
  double t56749;
  double t56754;
  double t56755;
  double t57185;
  double t57206;
  double t57236;
  double t57237;
  double t57238;
  double t57251;
  double t57252;
  double t57253;
  double t57260;
  double t57265;
  double t57356;
  double t57358;
  double t57359;
  double t57361;
  double t57368;
  double t57383;
  double t57391;
  double t57393;
  double t57394;
  double t57401;
  double t57404;
  double t57417;
  double t57418;
  double t57419;
  double t57423;
  double t57424;
  double t57427;
  double t57431;
  double t57440;
  double t57442;
  double t57468;
  double t57471;
  double t75820;
  double t75821;
  double t75822;
  double t57480;
  double t57495;
  double t57502;
  double t57519;
  double t57534;
  double t57536;
  double t57541;
  double t57546;
  double t57549;
  double t57550;
  double t57552;
  double t57553;
  double t57556;
  double t57557;
  double t57582;
  double t57684;
  double t57703;
  double t57705;
  double t57706;
  double t57707;
  double t57709;
  double t57743;
  double t57744;
  double t57746;
  double t57748;
  double t57753;
  double t57785;
  double t57802;
  double t57809;
  double t57819;
  double t57829;
  double t57830;
  double t57674;
  double t57679;
  double t57680;
  double t57840;
  double t57844;
  double t57913;
  double t57915;
  double t57920;
  double t57922;
  double t57923;
  double t57927;
  double t61175;
  double t63214;
  double t72378;
  double t74038;
  double t74043;
  double t74047;
  double t74051;
  double t74055;
  double t74056;
  double t74376;
  double t75226;
  double t75227;
  double t75228;
  double t75233;
  double t75361;
  double t75362;
  double t75363;
  double t75369;
  double t75375;
  double t75389;
  double t75394;
  double t75400;
  double t75416;
  double t75432;
  double t75456;
  double t75529;
  double t75530;
  double t75531;
  double t75532;
  double t75562;
  double t75564;
  double t75565;
  double t75567;
  double t75568;
  double t75569;
  double t75570;
  double t75571;
  double t75572;
  double t75574;
  double t75575;
  double t75576;
  double t75577;
  double t75578;
  double t75585;
  double t75594;
  double t75628;
  double t75629;
  double t75630;
  double t75631;
  double t75632;
  double t75634;
  double t75635;
  double t75636;
  double t75637;
  double t75638;
  double t75639;
  double t75640;
  double t75641;
  double t75642;
  double t75643;
  double t75644;
  double t75645;
  double t75646;
  double t75652;
  double t75667;
  double t75668;
  double t75669;
  double t75679;
  double t75680;
  double t75681;
  double t75694;
  double t75725;
  double t75729;
  double t75730;
  double t75732;
  double t75736;
  double t75741;
  double t75742;
  double t75743;
  double t75744;
  double t75746;
  double t75747;
  double t75748;
  double t75749;
  double t75750;
  double t75751;
  double t75752;
  double t75753;
  double t75754;
  double t75759;
  double t75763;
  double t75764;
  double t75769;
  double t75773;
  double t75774;
  double t75776;
  double t75777;
  double t75778;
  double t75779;
  double t75780;
  double t75781;
  double t75782;
  double t75783;
  double t75784;
  double t75785;
  double t75786;
  double t75787;
  double t75788;
  double t75789;
  double t75790;
  double t75792;
  double t75793;
  double t75794;
  double t75796;
  double t75797;
  double t75798;
  double t75799;
  double t75800;
  double t75801;
  double t75802;
  double t75803;
  double t75804;
  double t75805;
  double t75806;
  double t75807;
  double t56285;
  double t56312;
  double t56384;
  double t56497;
  double t56525;
  double t56596;
  double t56683;
  double t56737;
  double t56759;
  double t56796;
  double t56809;
  double t75852;
  double t75853;
  double t75854;
  double t75856;
  double t75857;
  double t75858;
  double t75859;
  double t75860;
  double t75861;
  double t75862;
  double t75863;
  double t75951;
  double t75952;
  double t75953;
  double t76070;
  double t75390;
  double t75566;
  double t75573;
  double t75633;
  double t75695;
  double t75731;
  double t75755;
  double t75765;
  double t75775;
  double t75791;
  double t75808;
  double t75809;
  double t76009;
  double t76010;
  double t76011;
  double t76014;
  double t76016;
  double t76017;
  double t76018;
  double t76020;
  double t76021;
  double t76022;
  double t76023;
  double t76024;
  double t75930;
  double t75931;
  double t75932;
  double t75933;
  double t75934;
  double t75935;
  double t75936;
  double t75937;
  double t75938;
  double t75939;
  double t75940;
  double t75941;
  double t76048;
  double t76051;
  double t76052;
  double t76110;
  double t76112;
  double t76113;
  double t76057;
  double t76058;
  double t76059;
  double t76072;
  double t76074;
  double t76076;
  double t76077;
  double t76079;
  double t76080;
  double t76081;
  double t76082;
  double t57239;
  double t57377;
  double t57413;
  double t57473;
  double t57585;
  double t57682;
  double t57774;
  double t57810;
  double t57834;
  double t73291;
  double t75239;
  double t75311;
  double t75985;
  double t75986;
  double t75987;
  double t75988;
  double t75989;
  double t75990;
  double t75991;
  double t75999;
  double t76000;
  double t76001;
  double t76002;
  double t76005;
  double t75885;
  double t75886;
  double t75887;
  double t75888;
  double t75889;
  double t75899;
  double t75900;
  double t75901;
  double t75912;
  double t75913;
  double t75914;
  double t75916;
  double t76094;
  double t76095;
  double t76096;
  double t76097;
  double t76098;
  double t76099;
  double t76100;
  double t76101;
  double t76102;
  double t76103;
  double t76104;
  double t76106;
  double t76107;
  double t76108;
  double t76109;
  double t76114;
  double t76115;
  double t76116;
  double t76117;
  double t76118;
  double t76119;
  double t76121;
  double t76122;
  double t53520;
  double t53605;
  double t53635;
  double t53794;
  double t54060;
  double t54220;
  double t54254;
  double t55350;
  double t55372;
  double t55416;
  double t55692;
  double t55862;
  double t55875;
  double t55880;
  double t75954;
  double t75955;
  double t75956;
  double t75957;
  double t75958;
  double t75959;
  double t75960;
  double t75961;
  double t75962;
  double t75963;
  double t75964;
  double t75965;
  double t75966;
  double t75967;
  double t75823;
  double t75824;
  double t75826;
  double t75827;
  double t75831;
  double t75832;
  double t75833;
  double t75834;
  double t75835;
  double t75836;
  double t75837;
  double t75838;
  double t75840;
  double t75841;
  double t76192;
  double t76194;
  double t76196;
  double t76197;
  double t76198;
  double t76200;
  double t76201;
  double t76202;
  double t76203;
  double t76204;
  double t76205;
  double t76206;
  double t76207;
  double t76208;
  double t76209;
  double t76210;
  double t76211;
  double t76212;
  double t76213;
  double t76214;
  double t76215;
  double t76216;
  double t76217;
  double t76219;
  double t76220;
  double t76034;
  double t76036;
  double t76037;
  double t76038;
  double t76039;
  double t76040;
  double t76041;
  double t76042;
  double t76043;
  double t76044;
  double t76045;
  double t76046;
  double t76047;
  double t76053;
  double t76054;
  double t76055;
  double t76056;
  double t76060;
  double t76061;
  double t76062;
  double t76063;
  double t76064;
  double t76065;
  double t76067;
  double t76068;
  double t76347;
  double t76348;
  double t76349;
  double t76350;
  double t76351;
  double t76352;
  double t76353;
  double t76354;
  double t76356;
  double t76358;
  double t76359;
  double t55904;
  double t55907;
  double t56011;
  double t56073;
  double t56148;
  double t56149;
  double t75969;
  double t75970;
  double t75971;
  double t75972;
  double t75973;
  double t75974;
  double t75843;
  double t75845;
  double t75846;
  double t75847;
  double t75848;
  double t75849;
  double t76222;
  double t76223;
  double t76224;
  double t76225;
  double t76226;
  double t76229;
  double t76230;
  double t76231;
  double t76232;
  double t76075;
  double t76078;
  double t76083;
  double t76084;
  double t76085;
  double t76086;
  double t76087;
  double t76088;
  double t76089;
  double t76260;
  double t76267;
  double t76269;
  double t76275;
  double t76290;
  double t51758;
  double t52343;
  double t52980;
  double t52997;
  double t75945;
  double t75947;
  double t75948;
  double t75949;
  double t75813;
  double t75814;
  double t75817;
  double t75818;
  double t76184;
  double t76186;
  double t76187;
  double t76188;
  double t76189;
  double t76028;
  double t76029;
  double t76030;
  double t76031;
  double t76032;
  t23642 = Cos(var1[21]);
  t29958 = -1.*t23642;
  t41649 = 1. + t29958;
  t47074 = 3.e-6*t41649;
  t47075 = Sin(var1[21]);
  t48689 = Cos(var1[19]);
  t47107 = 3.e-6*t47075;
  t46637 = 1.000000000009*t41649;
  t47146 = t47074 + t47107;
  t47200 = 3.e-6*t47146;
  t47201 = -1. + t46637 + t47200;
  t19515 = Sin(var1[19]);
  t49029 = -9.e-12*t41649;
  t50149 = -3.e-6*t47075;
  t50169 = t47074 + t50149;
  t50216 = 3.e-6*t50169;
  t50288 = -1.*t47075;
  t50345 = t49029 + t50216 + t50288;
  t50523 = -1.8e-11*t41649;
  t50546 = 1. + t50523;
  t50766 = 3.e-6*t50546;
  t50774 = -3.e-6*t41649;
  t50788 = t50766 + t50774 + t47107;
  t51081 = Sin(var1[4]);
  t51083 = Cos(var1[4]);
  t51088 = Cos(var1[5]);
  t51763 = -1. + t46637 + t50216;
  t51935 = t50766 + t50774 + t50149;
  t51947 = t49029 + t47200 + t47075;
  t51340 = Sin(var1[5]);
  t52436 = -1.000000000009*t41649;
  t52468 = 1. + t52436;
  t52495 = 3.e-6*t52468;
  t52528 = 9.e-12*t41649;
  t52345 = 1. + t50523 + t50216 + t47200;
  t52554 = t52528 + t50288;
  t52557 = 3.e-6*t52554;
  t52573 = t52495 + t47074 + t52557 + t47107;
  t52593 = t52528 + t47075;
  t52662 = 3.e-6*t52593;
  t52695 = t52495 + t47074 + t50149 + t52662;
  t53006 = -1.*t48689;
  t53037 = 1. + t53006;
  t53077 = -1.000000000009*t53037;
  t53081 = 1. + t53077;
  t53095 = 9.e-12*t53037;
  t53204 = 0.05*t53081;
  t53206 = 3.000018e-7*t19515;
  t53208 = t53204 + t53206;
  t53230 = -3.000018e-7*t53037;
  t53233 = -1. + t48689;
  t53235 = 0.2*t53233;
  t53242 = -0.2*t48689;
  t53246 = -0.05*t19515;
  t53254 = t53230 + t53235 + t53242 + t53246;
  t53277 = -1. + t53095;
  t53284 = 0.1*t53277;
  t53285 = 5.4e-18*t53037;
  t53288 = 1.5e-7*t19515;
  t53289 = t53284 + t53285 + t53288;
  t53109 = t53095 + t53006;
  t53141 = -9.e-12*t53037;
  t53158 = 1. + t53141;
  t53160 = 3.e-6*t53158;
  t53163 = -3.e-6*t53037;
  t53167 = t53160 + t53163;
  t53217 = 3.000018e-7*t48689;
  t53223 = -0.05000000000045*t19515;
  t53227 = t53217 + t53223;
  t53111 = -0.05*t48689;
  t53114 = -3.000018e-7*t19515;
  t53117 = t53111 + t53114;
  t53168 = 1.5e-7*t48689;
  t53175 = 9.000054e-13*t19515;
  t53185 = t53168 + t53175;
  t53493 = -3.e-6*t48689;
  t53502 = t53163 + t53493;
  t53555 = -1.000000000009*t19515*t51081;
  t53561 = t53109*t51088;
  t53565 = -1.*t53167*t51340;
  t53566 = t53561 + t53565;
  t53588 = t51083*t53566;
  t53595 = t53555 + t53588;
  t53636 = 0.1*t53158;
  t53641 = -5.4e-18*t53037;
  t53643 = t53502*t53254;
  t53662 = -1.5e-7*t19515;
  t53680 = t53636 + t53641 + t53643 + t53662;
  t53795 = t53081*t51081;
  t53812 = -1.*t51088*t19515;
  t53833 = -3.e-6*t19515*t51340;
  t53914 = t53812 + t53833;
  t53922 = t51083*t53914;
  t54048 = t53795 + t53922;
  t53613 = -1.*t53502*t53254;
  t53625 = t53284 + t53285 + t53613 + t53288;
  t51926 = t48689*t51763;
  t51937 = -3.e-6*t48689*t51935;
  t51948 = -1.000000000009*t19515*t51947;
  t51955 = t51926 + t51937 + t51948;
  t54461 = t50774 + t47107;
  t54531 = 3.e-13*var1[21];
  t54409 = t50774 + t50149;
  t54353 = 1.e-7*var1[21];
  t54370 = 1.8e-11*t41649;
  t54373 = -1. + t54370;
  t54393 = 0.1*t54373;
  t54399 = 5.4e-18*t41649;
  t54423 = -3.e-12*t54409;
  t54467 = 0.100000000003*t54461;
  t54524 = t54353 + t54393 + t54399 + t54423 + t54467;
  t54536 = -1. + t46637;
  t54539 = 0.2*t54536;
  t54541 = -0.2000000000048*t41649;
  t54567 = t49029 + t50288;
  t54612 = 0.100000000003*t54567;
  t54652 = 0.1000003*t54461;
  t54656 = t54531 + t54539 + t54541 + t54612 + t54652;
  t54671 = 0.1000000000039*t41649;
  t54688 = 0.1000003*t54409;
  t54692 = t49029 + t47075;
  t54723 = -3.e-12*t54692;
  t54732 = t54531 + t54671 + t54688 + t54723;
  t51972 = -1.*t19515*t51763;
  t51973 = 3.e-6*t19515*t51935;
  t51974 = -1.*t48689*t51947;
  t51981 = t51972 + t51973 + t51974;
  t55037 = t48689*t54656;
  t51992 = 3.e-6*t19515*t51763;
  t51996 = -9.e-12*t19515*t51935;
  t51998 = 3.e-6*t48689*t51947;
  t52056 = t51992 + t51996 + t51998;
  t52374 = -3.e-6*t48689*t52345;
  t52580 = -1.000000000009*t19515*t52573;
  t52732 = t48689*t52695;
  t52748 = t52374 + t52580 + t52732;
  t54996 = t19515*t51763;
  t55009 = -3.e-6*t19515*t51935;
  t55015 = t53081*t51947;
  t55016 = t54996 + t55009 + t55015;
  t54352 = 0.2000000000018*t19515;
  t54529 = -3.e-6*t19515*t54524;
  t54667 = t19515*t54656;
  t54757 = t53081*t54732;
  t54797 = t54352 + t54529 + t54667 + t54757;
  t54827 = 3.e-6*t53037*t51935;
  t54828 = -1.*t19515*t51947;
  t54832 = t51926 + t54827 + t54828;
  t55046 = -1.8e-12*t53037;
  t55048 = 3.e-6*t53037*t54524;
  t55050 = -1.*t19515*t54732;
  t55060 = t55046 + t53235 + t55048 + t55037 + t55050;
  t54859 = 3.e-6*t53037*t51763;
  t54871 = t53158*t51935;
  t54882 = 3.e-6*t19515*t51947;
  t54900 = t54859 + t54871 + t54882;
  t55063 = 6.000000000054e-7*t53037;
  t55071 = t53158*t54524;
  t55134 = 3.e-6*t53037*t54656;
  t55138 = 3.e-6*t19515*t54732;
  t55141 = t55063 + t55071 + t55134 + t55138;
  t54255 = -3.e-6*t19515*t52345;
  t54261 = t53081*t52573;
  t54266 = t19515*t52695;
  t54267 = t54255 + t54261 + t54266;
  t54905 = 6.000000000054e-7*t19515;
  t54916 = -9.e-12*t19515*t54524;
  t54925 = 3.e-6*t19515*t54656;
  t54958 = 3.e-6*t48689*t54732;
  t54974 = t54905 + t54916 + t54925 + t54958;
  t55186 = t53158*t52345;
  t55187 = 3.e-6*t19515*t52573;
  t55188 = 3.e-6*t53037*t52695;
  t55191 = t55186 + t55187 + t55188;
  t54837 = -0.2000000000018*t19515;
  t54840 = 3.e-6*t19515*t54524;
  t54843 = -1.*t19515*t54656;
  t54848 = -1.*t48689*t54732;
  t54853 = t54837 + t54840 + t54843 + t54848;
  t55194 = 3.e-6*t53037*t52345;
  t55197 = -1.*t19515*t52573;
  t55203 = t55194 + t55197 + t52732;
  t52754 = 3.e-6*t19515*t52345;
  t52759 = -1.*t48689*t52573;
  t52770 = -1.*t19515*t52695;
  t52776 = t52754 + t52759 + t52770;
  t52782 = -9.e-12*t19515*t52345;
  t52786 = 3.e-6*t48689*t52573;
  t52807 = 3.e-6*t19515*t52695;
  t52809 = t52782 + t52786 + t52807;
  t55018 = 0.2000000000018*t48689;
  t55035 = -3.e-6*t48689*t54524;
  t55039 = -1.000000000009*t19515*t54732;
  t55042 = t55018 + t55035 + t55037 + t55039;
  t50518 = t48689*t50345;
  t55175 = -1.*t55016*t54797;
  t55176 = -1.*t54832*t55060;
  t55178 = -1.*t54900*t55141;
  t55179 = t55175 + t55176 + t55178;
  t55192 = t55141*t55191;
  t55206 = t55060*t55203;
  t55222 = t54797*t54267;
  t55224 = t55192 + t55206 + t55222;
  t48318 = -1.000000000009*t19515*t47201;
  t50825 = -3.e-6*t48689*t50788;
  t51031 = t48318 + t50518 + t50825;
  t51082 = t51031*t51081;
  t51103 = -1.*t48689*t47201;
  t51107 = -1.*t19515*t50345;
  t51114 = 3.e-6*t19515*t50788;
  t51117 = t51103 + t51107 + t51114;
  t51123 = t51088*t51117;
  t51125 = 3.e-6*t48689*t47201;
  t51207 = 3.e-6*t19515*t50345;
  t51293 = -9.e-12*t19515*t50788;
  t51339 = t51125 + t51207 + t51293;
  t51385 = -1.*t51339*t51340;
  t51608 = t51123 + t51385;
  t51748 = t51083*t51608;
  t51749 = t51082 + t51748;
  t55297 = t53081*t47201;
  t55310 = t19515*t50345;
  t55311 = -3.e-6*t19515*t50788;
  t55312 = t55297 + t55310 + t55311;
  t55316 = -1.*t19515*t47201;
  t55317 = 3.e-6*t53037*t50788;
  t55318 = t55316 + t50518 + t55317;
  t55320 = 3.e-6*t19515*t47201;
  t55322 = 3.e-6*t53037*t50345;
  t55325 = t53158*t50788;
  t55329 = t55320 + t55322 + t55325;
  t51958 = t51955*t51081;
  t51988 = t51088*t51981;
  t52260 = -1.*t52056*t51340;
  t52315 = t51988 + t52260;
  t52328 = t51083*t52315;
  t52340 = t51958 + t52328;
  t55375 = t55312*t54797;
  t55383 = t55318*t55060;
  t55385 = t55329*t55141;
  t55386 = t55375 + t55383 + t55385;
  t55390 = -1.*t55141*t55191;
  t55391 = -1.*t55060*t55203;
  t55393 = -1.*t54797*t54267;
  t55396 = t55390 + t55391 + t55393;
  t55700 = -1.*t55312*t54797;
  t55701 = -1.*t55318*t55060;
  t55703 = -1.*t55329*t55141;
  t55710 = t55700 + t55701 + t55703;
  t55827 = t55016*t54797;
  t55828 = t54832*t55060;
  t55846 = t54900*t55141;
  t55847 = t55827 + t55828 + t55846;
  t52749 = t52748*t51081;
  t52778 = t51088*t52776;
  t52825 = -1.*t52809*t51340;
  t52826 = t52778 + t52825;
  t52834 = t51083*t52826;
  t52848 = t52749 + t52834;
  t53701 = -1.*t48689*t51088;
  t53712 = -3.e-6*t48689*t51340;
  t53732 = t53701 + t53712;
  t53737 = t51083*t53732;
  t53757 = t53555 + t53737;
  t54222 = -1.000000000009*t48689*t51081;
  t54225 = 1.000000000009*t51088*t19515;
  t54240 = 3.000000000027e-6*t19515*t51340;
  t54243 = t54225 + t54240;
  t54246 = t51083*t54243;
  t54253 = t54222 + t54246;
  t55913 = -1.*t51763*t54656;
  t55914 = -1.*t54524*t51935;
  t55920 = -1.*t51947*t54732;
  t55929 = t55913 + t55914 + t55920;
  t55931 = t54524*t52345;
  t55937 = t52573*t54732;
  t55938 = t54656*t52695;
  t55954 = t55931 + t55937 + t55938;
  t56015 = t54656*t50345;
  t56018 = t54524*t50788;
  t56019 = t47201*t54732;
  t56020 = t56015 + t56018 + t56019;
  t56025 = -1.*t54524*t52345;
  t56026 = -1.*t52573*t54732;
  t56027 = -1.*t54656*t52695;
  t56031 = t56025 + t56026 + t56027;
  t56102 = -1.*t54656*t50345;
  t56103 = -1.*t54524*t50788;
  t56112 = -1.*t47201*t54732;
  t56113 = t56102 + t56103 + t56112;
  t56124 = t51763*t54656;
  t56136 = t54524*t51935;
  t56138 = t51947*t54732;
  t56141 = t56124 + t56136 + t56138;
  t55314 = t55312*t51081;
  t55319 = t51088*t55318;
  t55331 = -1.*t55329*t51340;
  t55337 = t55319 + t55331;
  t55342 = t51083*t55337;
  t55347 = t55314 + t55342;
  t55621 = t55016*t51081;
  t55630 = t51088*t54832;
  t55636 = -1.*t54900*t51340;
  t55637 = t55630 + t55636;
  t55642 = t51083*t55637;
  t55672 = t55621 + t55642;
  t55852 = t54267*t51081;
  t55854 = t51088*t55203;
  t55856 = -1.*t55191*t51340;
  t55857 = t55854 + t55856;
  t55859 = t51083*t55857;
  t55861 = t55852 + t55859;
  t56218 = Sin(var1[3]);
  t56226 = Cos(var1[3]);
  t56228 = -1.000000000009*t51083*t19515;
  t56219 = t53167*t51088;
  t56221 = t53109*t51340;
  t56224 = t56219 + t56221;
  t56238 = -1.*t51081*t53566;
  t56248 = t56228 + t56238;
  t56286 = 3.e-6*t48689*t51088;
  t56288 = -1.*t48689*t51340;
  t56290 = t56286 + t56288;
  t56292 = -1.*t51081*t53732;
  t56293 = t56228 + t56292;
  t56315 = 3.e-6*t51088*t19515;
  t56316 = -1.*t19515*t51340;
  t56317 = t56315 + t56316;
  t56319 = t53081*t51083;
  t56320 = -1.*t51081*t53914;
  t56330 = t56319 + t56320;
  t56395 = -3.000000000027e-6*t51088*t19515;
  t56404 = 1.000000000009*t19515*t51340;
  t56409 = t56395 + t56404;
  t56429 = -1.000000000009*t48689*t51083;
  t56436 = -1.*t51081*t54243;
  t56441 = t56429 + t56436;
  t56498 = t51088*t55329;
  t56503 = t55318*t51340;
  t56507 = t56498 + t56503;
  t56510 = t51083*t55312;
  t56516 = -1.*t51081*t55337;
  t56519 = t56510 + t56516;
  t56532 = t51088*t51339;
  t56534 = t51117*t51340;
  t56539 = t56532 + t56534;
  t56544 = t51083*t51031;
  t56553 = -1.*t51081*t51608;
  t56554 = t56544 + t56553;
  t56601 = t51088*t52056;
  t56617 = t51981*t51340;
  t56623 = t56601 + t56617;
  t56626 = t51083*t51955;
  t56650 = -1.*t51081*t52315;
  t56653 = t56626 + t56650;
  t56685 = t51088*t54900;
  t56693 = t54832*t51340;
  t56703 = t56685 + t56693;
  t56706 = t51083*t55016;
  t56716 = -1.*t51081*t55637;
  t56728 = t56706 + t56716;
  t56740 = t51088*t55191;
  t56742 = t55203*t51340;
  t56747 = t56740 + t56742;
  t56750 = t51083*t54267;
  t56751 = -1.*t51081*t55857;
  t56753 = t56750 + t56751;
  t56763 = t51088*t52809;
  t56764 = t52776*t51340;
  t56765 = t56763 + t56764;
  t56773 = t51083*t52748;
  t56776 = -1.*t51081*t52826;
  t56777 = t56773 + t56776;
  t53508 = t53502*t51088;
  t53511 = t53508 + t51340;
  t57135 = -1.*t51088;
  t57137 = t53502*t51340;
  t57138 = t57135 + t57137;
  t53456 = 1.000000000009*t53208*t19515;
  t57140 = t51088*t53289;
  t57141 = t53254*t51340;
  t57142 = t57140 + t57141;
  t57144 = t51088*t53254;
  t57148 = -1.*t53289*t51340;
  t57150 = t57144 + t57148;
  t53374 = -1.000000000009*t53208*t19515;
  t57241 = t51088*t53185;
  t57242 = t53117*t51340;
  t57243 = t57241 + t57242;
  t57248 = t51088*t53117;
  t57249 = -1.*t53185*t51340;
  t57250 = t57248 + t57249;
  t57254 = -1.*t57138*t57142;
  t57258 = -1.*t53511*t57150;
  t57259 = t57254 + t57258;
  t57143 = t57138*t57142;
  t57152 = t53511*t57150;
  t57158 = t57143 + t57152;
  t53431 = -1.*t53081*t53227;
  t53330 = -1.*t53081*t53208;
  t53209 = -1.000000000009*t48689*t53208;
  t53229 = -1.000000000009*t53227*t19515;
  t57588 = t51088*t55141;
  t57589 = t55060*t51340;
  t57595 = t57588 + t57589;
  t57639 = t51088*t55060;
  t57642 = -1.*t55141*t51340;
  t57643 = t57639 + t57642;
  t57636 = -1.*t56507*t57595;
  t57671 = -1.*t55337*t57643;
  t57673 = t55700 + t57636 + t57671;
  t55715 = -1.*t51031*t54797;
  t55740 = -1.*t55312*t55042;
  t55789 = t51955*t54797;
  t55798 = t55016*t55042;
  t57685 = t51088*t54974;
  t57689 = t54853*t51340;
  t57692 = t57685 + t57689;
  t57698 = t51088*t54853;
  t57699 = -1.*t54974*t51340;
  t57700 = t57698 + t57699;
  t57675 = t56703*t57595;
  t57676 = t55637*t57643;
  t57678 = t55827 + t57675 + t57676;
  t57776 = t56507*t57595;
  t57777 = t55337*t57643;
  t57783 = t55375 + t57776 + t57777;
  t55423 = t51031*t54797;
  t55467 = t55312*t55042;
  t57787 = -1.*t57643*t55857;
  t57793 = -1.*t57595*t56747;
  t57799 = t55393 + t57787 + t57793;
  t55515 = -1.*t54797*t52748;
  t55573 = -1.*t55042*t54267;
  t54800 = -1.*t51955*t54797;
  t55044 = -1.*t55016*t55042;
  t57812 = -1.*t56703*t57595;
  t57816 = -1.*t55637*t57643;
  t57818 = t55175 + t57812 + t57816;
  t57821 = t57643*t55857;
  t57825 = t57595*t56747;
  t57827 = t55222 + t57821 + t57825;
  t55240 = t54797*t52748;
  t55267 = t55042*t54267;
  t57193 = -1.*t56224*t57142;
  t75313 = t53208*t51081;
  t75314 = t51083*t57150;
  t75315 = t75313 + t75314;
  t75317 = t51083*t53208;
  t75320 = -1.*t51081*t57150;
  t75321 = t75317 + t75320;
  t57244 = -1.*t57138*t57243;
  t57267 = t56290*t57142;
  t57357 = t57243*t56317;
  t75391 = t53227*t51081;
  t75392 = t51083*t57250;
  t75393 = t75391 + t75392;
  t75395 = t51083*t53227;
  t75396 = -1.*t51081*t57250;
  t75397 = t75395 + t75396;
  t75434 = -1.*t51083*t53511*t75315;
  t75436 = t51081*t53511*t75321;
  t75442 = t57254 + t75434 + t75436;
  t57392 = t57142*t56317;
  t57415 = t57138*t57243;
  t75316 = t51083*t53511*t75315;
  t75333 = -1.*t51081*t53511*t75321;
  t75347 = t57143 + t75316 + t75333;
  t57430 = -1.*t56224*t57243;
  t57441 = -1.*t57142*t56409;
  t57475 = t56224*t57142;
  t57503 = -1.*t56290*t57142;
  t57529 = -1.*t57243*t56317;
  t57542 = -1.*t57142*t56317;
  t57551 = t56224*t57243;
  t57554 = t57142*t56409;
  t75696 = t54797*t51081;
  t75704 = t51083*t57643;
  t75705 = t75696 + t75704;
  t75707 = t51083*t54797;
  t75708 = -1.*t51081*t57643;
  t75709 = t75707 + t75708;
  t75706 = -1.*t55347*t75705;
  t75723 = -1.*t56519*t75709;
  t75724 = t57636 + t75706 + t75723;
  t57695 = -1.*t56507*t57692;
  t57704 = -1.*t56539*t57595;
  t57708 = t56703*t57692;
  t57742 = t56623*t57595;
  t75733 = t55042*t51081;
  t75734 = t51083*t57700;
  t75735 = t75733 + t75734;
  t75737 = t51083*t55042;
  t75739 = -1.*t51081*t57700;
  t75740 = t75737 + t75739;
  t75726 = t55672*t75705;
  t75727 = t56728*t75709;
  t75728 = t57675 + t75726 + t75727;
  t75756 = t55347*t75705;
  t75757 = t56519*t75709;
  t75758 = t57776 + t75756 + t75757;
  t57841 = t56507*t57692;
  t57910 = t56539*t57595;
  t75760 = -1.*t75705*t55861;
  t75761 = -1.*t75709*t56753;
  t75762 = t57793 + t75760 + t75761;
  t57924 = -1.*t57692*t56747;
  t57926 = -1.*t57595*t56765;
  t74032 = -1.*t56703*t57692;
  t74039 = -1.*t56623*t57595;
  t75766 = -1.*t55672*t75705;
  t75767 = -1.*t56728*t75709;
  t75768 = t57812 + t75766 + t75767;
  t75770 = t75705*t55861;
  t75771 = t75709*t56753;
  t75772 = t57825 + t75770 + t75771;
  t74515 = t57692*t56747;
  t74890 = t57595*t56765;
  t56953 = t56226*t56539;
  t56970 = -1.*t56218*t56554;
  t56975 = t56953 + t56970;
  t56996 = t56226*t56623;
  t56997 = -1.*t56218*t56653;
  t57029 = t56996 + t56997;
  t57122 = t56226*t56765;
  t57124 = -1.*t56218*t56777;
  t57125 = t57122 + t57124;
  t53135 = t53109*t53117;
  t53187 = t53167*t53185;
  t53262 = 1.000000000009*t53254*t19515;
  t53305 = -3.000000000027e-6*t53289*t19515;
  t53308 = t53135 + t53187 + t53209 + t53229 + t53262 + t53305;
  t53320 = t53081*t53308;
  t53333 = t53254*t19515;
  t53354 = -3.e-6*t53289*t19515;
  t53356 = t53330 + t53333 + t53354;
  t53361 = -1.000000000009*t48689*t53356;
  t53369 = t53109*t53254;
  t53372 = t53167*t53289;
  t53392 = t53369 + t53372 + t53374;
  t53426 = -1.000000000009*t19515*t53392;
  t53440 = t48689*t53254;
  t53446 = -3.e-6*t48689*t53289;
  t53448 = t53117*t19515;
  t53452 = -3.e-6*t53185*t19515;
  t53466 = t53431 + t53440 + t53446 + t53448 + t53452 + t53456;
  t53476 = -1.000000000009*t19515*t53466;
  t53479 = t53320 + t53361 + t53426 + t53476;
  t53529 = -1.*t53502*t53117;
  t53541 = t53168 + t53529 + t53175;
  t56814 = t56226*t56224;
  t56826 = -1.*t56218*t56248;
  t56834 = t56814 + t56826;
  t56850 = t56226*t56290;
  t56855 = -1.*t56218*t56293;
  t56884 = t56850 + t56855;
  t56888 = t56226*t56317;
  t56899 = -1.*t56218*t56330;
  t56902 = t56888 + t56899;
  t54065 = -1.5e-7*t48689;
  t54103 = t53502*t53117;
  t54121 = -9.000054e-13*t19515;
  t54171 = t54065 + t54103 + t54121;
  t56919 = t56226*t56409;
  t56920 = -1.*t56218*t56441;
  t56923 = t56919 + t56920;
  t54854 = -1.*t54832*t54853;
  t54992 = -1.*t54900*t54974;
  t55062 = -1.*t51981*t55060;
  t55142 = -1.*t52056*t55141;
  t55149 = t54800 + t54854 + t54992 + t55044 + t55062 + t55142;
  t55151 = t54267*t55149;
  t55185 = t52748*t55179;
  t55225 = t51955*t55224;
  t55234 = t54974*t55191;
  t55248 = t54853*t55203;
  t55250 = t55060*t52776;
  t55253 = t55141*t52809;
  t55283 = t55234 + t55240 + t55248 + t55250 + t55253 + t55267;
  t55292 = t55016*t55283;
  t55296 = t55151 + t55185 + t55225 + t55292;
  t56927 = t56226*t56507;
  t56928 = -1.*t56218*t56519;
  t56937 = t56927 + t56928;
  t55351 = t54267*t55179;
  t55361 = t55016*t55224;
  t55369 = t55351 + t55361;
  t55389 = t54267*t55386;
  t55409 = t55312*t55396;
  t55414 = t55389 + t55409;
  t55420 = t52748*t55386;
  t55427 = t55318*t54853;
  t55466 = t55329*t54974;
  t55468 = t51117*t55060;
  t55503 = t51339*t55141;
  t55506 = t55423 + t55427 + t55466 + t55467 + t55468 + t55503;
  t55508 = t54267*t55506;
  t55511 = t51031*t55396;
  t55513 = -1.*t54974*t55191;
  t55518 = -1.*t54853*t55203;
  t55519 = -1.*t55060*t52776;
  t55552 = -1.*t55141*t52809;
  t55602 = t55513 + t55515 + t55518 + t55519 + t55552 + t55573;
  t55609 = t55312*t55602;
  t55618 = t55420 + t55508 + t55511 + t55609;
  t57034 = t56226*t56703;
  t57035 = -1.*t56218*t56728;
  t57045 = t57034 + t57035;
  t55713 = t51955*t55710;
  t55716 = -1.*t55318*t54853;
  t55718 = -1.*t55329*t54974;
  t55761 = -1.*t51117*t55060;
  t55769 = -1.*t51339*t55141;
  t55772 = t55715 + t55716 + t55718 + t55740 + t55761 + t55769;
  t55786 = t55016*t55772;
  t55794 = t54832*t54853;
  t55797 = t54900*t54974;
  t55803 = t51981*t55060;
  t55807 = t52056*t55141;
  t55808 = t55789 + t55794 + t55797 + t55798 + t55803 + t55807;
  t55826 = t55312*t55808;
  t55849 = t51031*t55847;
  t55851 = t55713 + t55786 + t55826 + t55849;
  t57056 = t56226*t56747;
  t57060 = -1.*t56218*t56753;
  t57065 = t57056 + t57060;
  t55864 = t55016*t55710;
  t55867 = t55312*t55847;
  t55868 = t55864 + t55867;
  t55911 = 0.2*t47201;
  t55930 = -1.*t52345*t55929;
  t55973 = -1.*t51935*t55954;
  t55992 = t52695*t55929;
  t55993 = t51763*t55954;
  t56000 = t55992 + t55993;
  t56004 = -3.e-6*t56000;
  t56010 = t55911 + t55930 + t55973 + t56004;
  t56013 = 0.2*t51947;
  t56021 = -1.*t52345*t56020;
  t56033 = -1.*t50788*t56031;
  t56041 = t52695*t56020;
  t56043 = t50345*t56031;
  t56060 = t56041 + t56043;
  t56064 = -3.e-6*t56060;
  t56069 = t56013 + t56021 + t56033 + t56064;
  t56093 = 0.2*t52573;
  t56114 = -1.*t51935*t56113;
  t56142 = -1.*t50788*t56141;
  t56143 = t51763*t56113;
  t56144 = t50345*t56141;
  t56145 = t56143 + t56144;
  t56146 = -3.e-6*t56145;
  t56147 = t56093 + t56114 + t56142 + t56146;
  t56845 = 0.026*t54253*t56834;
  t56886 = 0.026*t54048*t56884;
  t56918 = 0.026*t53757*t56902;
  t56926 = 0.026*t53595*t56923;
  t56951 = 0.043*t51749*t56937;
  t56995 = 0.043*t55347*t56975;
  t57033 = 0.043*t55672*t57029;
  t57048 = 0.043*t52340*t57045;
  t57113 = 0.043*t52848*t57065;
  t57128 = 0.043*t55861*t57125;
  t57131 = t56845 + t56886 + t56918 + t56926 + t56951 + t56995 + t57033 + t57048 + t57113 + t57128;
  t56318 = t56218*t56317;
  t56331 = t56226*t56330;
  t56373 = t56318 + t56331;
  t56291 = t56218*t56290;
  t56302 = t56226*t56293;
  t56309 = t56291 + t56302;
  t56418 = t56218*t56409;
  t56445 = t56226*t56441;
  t56480 = t56418 + t56445;
  t56225 = t56218*t56224;
  t56250 = t56226*t56248;
  t56270 = t56225 + t56250;
  t56542 = t56218*t56539;
  t56566 = t56226*t56554;
  t56593 = t56542 + t56566;
  t56509 = t56218*t56507;
  t56522 = t56226*t56519;
  t56524 = t56509 + t56522;
  t56704 = t56218*t56703;
  t56731 = t56226*t56728;
  t56732 = t56704 + t56731;
  t56625 = t56218*t56623;
  t56661 = t56226*t56653;
  t56682 = t56625 + t56661;
  t56768 = t56218*t56765;
  t56788 = t56226*t56777;
  t56792 = t56768 + t56788;
  t56749 = t56218*t56747;
  t56754 = t56226*t56753;
  t56755 = t56749 + t56754;
  t57185 = t56224*t57158;
  t57206 = -1.*t53566*t57150;
  t57236 = t53456 + t57193 + t57206;
  t57237 = t57138*t57236;
  t57238 = t57185 + t57237;
  t57251 = -1.*t53511*t57250;
  t57252 = t57244 + t57251;
  t57253 = t56317*t57252;
  t57260 = t56290*t57259;
  t57265 = t53081*t53227;
  t57356 = t53732*t57150;
  t57358 = t57250*t53914;
  t57359 = t57265 + t53374 + t57267 + t57356 + t57357 + t57358;
  t57361 = t57138*t57359;
  t57368 = t57253 + t57260 + t57361;
  t57383 = t56317*t57259;
  t57391 = t53081*t53208;
  t57393 = t57150*t53914;
  t57394 = t57391 + t57392 + t57393;
  t57401 = t57138*t57394;
  t57404 = t57383 + t57401;
  t57417 = t53511*t57250;
  t57418 = t57415 + t57417;
  t57419 = t56224*t57418;
  t57423 = t56409*t57158;
  t57424 = 1.000000000009*t48689*t53208;
  t57427 = 1.000000000009*t53227*t19515;
  t57431 = -1.*t53566*t57250;
  t57440 = -1.*t57150*t54243;
  t57442 = t57424 + t57427 + t57430 + t57431 + t57440 + t57441;
  t57468 = t57138*t57442;
  t57471 = t57419 + t57423 + t57468;
  t75820 = t56218*t51081*t53511;
  t75821 = t56226*t57138;
  t75822 = t75820 + t75821;
  t57480 = t53566*t57150;
  t57495 = t53374 + t57475 + t57480;
  t57502 = t56290*t57495;
  t57519 = -1.*t53732*t57150;
  t57534 = -1.*t57250*t53914;
  t57536 = t53431 + t53456 + t57503 + t57519 + t57529 + t57534;
  t57541 = t56224*t57536;
  t57546 = -1.*t57150*t53914;
  t57549 = t53330 + t57542 + t57546;
  t57550 = t56409*t57549;
  t57552 = t53566*t57250;
  t57553 = t57150*t54243;
  t57556 = t53209 + t53229 + t57551 + t57552 + t57553 + t57554;
  t57557 = t56317*t57556;
  t57582 = t57502 + t57541 + t57550 + t57557;
  t57684 = t56623*t57673;
  t57703 = -1.*t55337*t57700;
  t57705 = -1.*t51608*t57643;
  t57706 = t55715 + t55740 + t57695 + t57703 + t57704 + t57705;
  t57707 = t56703*t57706;
  t57709 = t55637*t57700;
  t57743 = t52315*t57643;
  t57744 = t55789 + t55798 + t57708 + t57709 + t57742 + t57743;
  t57746 = t56507*t57744;
  t57748 = t56539*t57678;
  t57753 = t57684 + t57707 + t57746 + t57748;
  t57785 = t56747*t57783;
  t57802 = t56507*t57799;
  t57809 = t57785 + t57802;
  t57819 = t56747*t57818;
  t57829 = t56703*t57827;
  t57830 = t57819 + t57829;
  t57674 = t56703*t57673;
  t57679 = t56507*t57678;
  t57680 = t57674 + t57679;
  t57840 = t56765*t57783;
  t57844 = t55337*t57700;
  t57913 = t51608*t57643;
  t57915 = t55423 + t55467 + t57841 + t57844 + t57910 + t57913;
  t57920 = t56747*t57915;
  t57922 = t56539*t57799;
  t57923 = -1.*t57700*t55857;
  t57927 = -1.*t57643*t52826;
  t61175 = t55515 + t55573 + t57923 + t57924 + t57926 + t57927;
  t63214 = t56507*t61175;
  t72378 = t57840 + t57920 + t57922 + t63214;
  t74038 = -1.*t55637*t57700;
  t74043 = -1.*t52315*t57643;
  t74047 = t54800 + t55044 + t74032 + t74038 + t74039 + t74043;
  t74051 = t56747*t74047;
  t74055 = t56765*t57818;
  t74056 = t56623*t57827;
  t74376 = t57700*t55857;
  t75226 = t57643*t52826;
  t75227 = t55240 + t55267 + t74376 + t74515 + t74890 + t75226;
  t75228 = t56703*t75227;
  t75233 = t74051 + t74055 + t74056 + t75228;
  t75361 = t53595*t75347;
  t75362 = -1.*t53595*t75315;
  t75363 = -1.*t56248*t75321;
  t75369 = t57193 + t75362 + t75363;
  t75375 = t51083*t53511*t75369;
  t75389 = t75361 + t75375;
  t75394 = -1.*t51083*t53511*t75393;
  t75400 = t51081*t53511*t75397;
  t75416 = t57244 + t75394 + t75400;
  t75432 = t54048*t75416;
  t75456 = t53757*t75442;
  t75529 = t53757*t75315;
  t75530 = t56293*t75321;
  t75531 = t75393*t54048;
  t75532 = t75397*t56330;
  t75562 = t57267 + t57357 + t75529 + t75530 + t75531 + t75532;
  t75564 = t51083*t53511*t75562;
  t75565 = t75432 + t75456 + t75564;
  t75567 = t54048*t75442;
  t75568 = t75315*t54048;
  t75569 = t75321*t56330;
  t75570 = t57392 + t75568 + t75569;
  t75571 = t51083*t53511*t75570;
  t75572 = t75567 + t75571;
  t75574 = t51083*t53511*t75393;
  t75575 = -1.*t51081*t53511*t75397;
  t75576 = t57415 + t75574 + t75575;
  t75577 = t53595*t75576;
  t75578 = t54253*t75347;
  t75585 = -1.*t53595*t75393;
  t75594 = -1.*t56248*t75397;
  t75628 = -1.*t75315*t54253;
  t75629 = -1.*t75321*t56441;
  t75630 = t57430 + t57441 + t75585 + t75594 + t75628 + t75629;
  t75631 = t51083*t53511*t75630;
  t75632 = t75577 + t75578 + t75631;
  t75634 = t53595*t75315;
  t75635 = t56248*t75321;
  t75636 = t57475 + t75634 + t75635;
  t75637 = t53757*t75636;
  t75638 = -1.*t53757*t75315;
  t75639 = -1.*t56293*t75321;
  t75640 = -1.*t75393*t54048;
  t75641 = -1.*t75397*t56330;
  t75642 = t57503 + t57529 + t75638 + t75639 + t75640 + t75641;
  t75643 = t53595*t75642;
  t75644 = -1.*t75315*t54048;
  t75645 = -1.*t75321*t56330;
  t75646 = t57542 + t75644 + t75645;
  t75652 = t54253*t75646;
  t75667 = t53595*t75393;
  t75668 = t56248*t75397;
  t75669 = t75315*t54253;
  t75679 = t75321*t56441;
  t75680 = t57551 + t57554 + t75667 + t75668 + t75669 + t75679;
  t75681 = t54048*t75680;
  t75694 = t75637 + t75643 + t75652 + t75681;
  t75725 = t55672*t75724;
  t75729 = t55347*t75728;
  t75730 = t75725 + t75729;
  t75732 = t52340*t75724;
  t75736 = -1.*t55347*t75735;
  t75741 = -1.*t56519*t75740;
  t75742 = -1.*t51749*t75705;
  t75743 = -1.*t56554*t75709;
  t75744 = t57695 + t57704 + t75736 + t75741 + t75742 + t75743;
  t75746 = t55672*t75744;
  t75747 = t55672*t75735;
  t75748 = t56728*t75740;
  t75749 = t52340*t75705;
  t75750 = t56653*t75709;
  t75751 = t57708 + t57742 + t75747 + t75748 + t75749 + t75750;
  t75752 = t55347*t75751;
  t75753 = t51749*t75728;
  t75754 = t75732 + t75746 + t75752 + t75753;
  t75759 = t55861*t75758;
  t75763 = t55347*t75762;
  t75764 = t75759 + t75763;
  t75769 = t55861*t75768;
  t75773 = t55672*t75772;
  t75774 = t75769 + t75773;
  t75776 = t52848*t75758;
  t75777 = t55347*t75735;
  t75778 = t56519*t75740;
  t75779 = t51749*t75705;
  t75780 = t56554*t75709;
  t75781 = t57841 + t57910 + t75777 + t75778 + t75779 + t75780;
  t75782 = t55861*t75781;
  t75783 = t51749*t75762;
  t75784 = -1.*t75735*t55861;
  t75785 = -1.*t75740*t56753;
  t75786 = -1.*t75705*t52848;
  t75787 = -1.*t75709*t56777;
  t75788 = t57924 + t57926 + t75784 + t75785 + t75786 + t75787;
  t75789 = t55347*t75788;
  t75790 = t75776 + t75782 + t75783 + t75789;
  t75792 = -1.*t55672*t75735;
  t75793 = -1.*t56728*t75740;
  t75794 = -1.*t52340*t75705;
  t75796 = -1.*t56653*t75709;
  t75797 = t74032 + t74039 + t75792 + t75793 + t75794 + t75796;
  t75798 = t55861*t75797;
  t75799 = t52848*t75768;
  t75800 = t52340*t75772;
  t75801 = t75735*t55861;
  t75802 = t75740*t56753;
  t75803 = t75705*t52848;
  t75804 = t75709*t56777;
  t75805 = t74515 + t74890 + t75801 + t75802 + t75803 + t75804;
  t75806 = t55672*t75805;
  t75807 = t75798 + t75799 + t75800 + t75806;
  t56285 = 0.026*t54253*t56270;
  t56312 = 0.026*t54048*t56309;
  t56384 = 0.026*t53757*t56373;
  t56497 = 0.026*t53595*t56480;
  t56525 = 0.043*t51749*t56524;
  t56596 = 0.043*t55347*t56593;
  t56683 = 0.043*t55672*t56682;
  t56737 = 0.043*t52340*t56732;
  t56759 = 0.043*t52848*t56755;
  t56796 = 0.043*t55861*t56792;
  t56809 = t56285 + t56312 + t56384 + t56497 + t56525 + t56596 + t56683 + t56737 + t56759 + t56796;
  t75852 = 0.026*t56884*t56373;
  t75853 = 0.026*t56309*t56902;
  t75854 = 0.026*t56834*t56480;
  t75856 = 0.026*t56270*t56923;
  t75857 = 0.043*t56937*t56593;
  t75858 = 0.043*t56524*t56975;
  t75859 = 0.043*t57029*t56732;
  t75860 = 0.043*t56682*t57045;
  t75861 = 0.043*t57065*t56792;
  t75862 = 0.043*t56755*t57125;
  t75863 = t75852 + t75853 + t75854 + t75856 + t75857 + t75858 + t75859 + t75860 + t75861 + t75862;
  t75951 = -1.*t56226*t51081*t53511;
  t75952 = t56218*t57138;
  t75953 = t75951 + t75952;
  t76070 = -3.e-6*t50546;
  t75390 = 0.026*t53757*t75389;
  t75566 = 0.026*t53595*t75565;
  t75573 = 0.026*t54253*t75572;
  t75633 = 0.026*t54048*t75632;
  t75695 = 0.026*t51083*t53511*t75694;
  t75731 = 0.043*t52848*t75730;
  t75755 = 0.043*t55861*t75754;
  t75765 = 0.043*t52340*t75764;
  t75775 = 0.043*t51749*t75774;
  t75791 = 0.043*t55672*t75790;
  t75808 = 0.043*t55347*t75807;
  t75809 = t75390 + t75566 + t75573 + t75633 + t75695 + t75731 + t75755 + t75765 + t75775 + t75791 + t75808;
  t76009 = 0.026*t56309*t75389;
  t76010 = 0.026*t56270*t75565;
  t76011 = 0.026*t56480*t75572;
  t76014 = 0.026*t56373*t75632;
  t76016 = 0.026*t75953*t75694;
  t76017 = 0.043*t56792*t75730;
  t76018 = 0.043*t56755*t75754;
  t76020 = 0.043*t56682*t75764;
  t76021 = 0.043*t56593*t75774;
  t76022 = 0.043*t56732*t75790;
  t76023 = 0.043*t56524*t75807;
  t76024 = t76009 + t76010 + t76011 + t76014 + t76016 + t76017 + t76018 + t76020 + t76021 + t76022 + t76023;
  t75930 = 0.026*t56884*t75389;
  t75931 = 0.026*t56834*t75565;
  t75932 = 0.026*t56923*t75572;
  t75933 = 0.026*t56902*t75632;
  t75934 = 0.026*t75822*t75694;
  t75935 = 0.043*t57125*t75730;
  t75936 = 0.043*t57065*t75754;
  t75937 = 0.043*t57029*t75764;
  t75938 = 0.043*t56975*t75774;
  t75939 = 0.043*t57045*t75790;
  t75940 = 0.043*t56937*t75807;
  t75941 = t75930 + t75931 + t75932 + t75933 + t75934 + t75935 + t75936 + t75937 + t75938 + t75939 + t75940;
  t76048 = t54048*t75636;
  t76051 = t53595*t75646;
  t76052 = t76048 + t76051;
  t76110 = t56317*t57495;
  t76112 = t56224*t57549;
  t76113 = t76110 + t76112;
  t76057 = -1.000000000009*t19515*t53356;
  t76058 = t53081*t53392;
  t76059 = t76057 + t76058;
  t76072 = -3.e-6*t50345;
  t76074 = t76070 + t47074 + t76072 + t50149;
  t76076 = -3.e-6*t51763;
  t76077 = t76070 + t47074 + t76076 + t47107;
  t76079 = -3.e-6*t50169;
  t76080 = -3.e-6*t47146;
  t76081 = -3.e-6*t52695;
  t76082 = -1. + t54370 + t76079 + t76080 + t76081;
  t57239 = 0.026*t53757*t57238;
  t57377 = 0.026*t53595*t57368;
  t57413 = 0.026*t54253*t57404;
  t57473 = 0.026*t54048*t57471;
  t57585 = 0.026*t51083*t53511*t57582;
  t57682 = 0.043*t52848*t57680;
  t57774 = 0.043*t55861*t57753;
  t57810 = 0.043*t52340*t57809;
  t57834 = 0.043*t51749*t57830;
  t73291 = 0.043*t55672*t72378;
  t75239 = 0.043*t55347*t75233;
  t75311 = t57239 + t57377 + t57413 + t57473 + t57585 + t57682 + t57774 + t57810 + t57834 + t73291 + t75239;
  t75985 = 0.026*t56309*t57238;
  t75986 = 0.026*t56270*t57368;
  t75987 = 0.026*t57404*t56480;
  t75988 = 0.026*t56373*t57471;
  t75989 = 0.026*t75953*t57582;
  t75990 = 0.043*t57753*t56755;
  t75991 = 0.043*t56682*t57809;
  t75999 = 0.043*t56593*t57830;
  t76000 = 0.043*t57680*t56792;
  t76001 = 0.043*t56732*t72378;
  t76002 = 0.043*t56524*t75233;
  t76005 = t75985 + t75986 + t75987 + t75988 + t75989 + t75990 + t75991 + t75999 + t76000 + t76001 + t76002;
  t75885 = 0.026*t56884*t57238;
  t75886 = 0.026*t56834*t57368;
  t75887 = 0.026*t57404*t56923;
  t75888 = 0.026*t56902*t57471;
  t75889 = 0.026*t75822*t57582;
  t75899 = 0.043*t57753*t57065;
  t75900 = 0.043*t57029*t57809;
  t75901 = 0.043*t56975*t57830;
  t75912 = 0.043*t57680*t57125;
  t75913 = 0.043*t57045*t72378;
  t75914 = 0.043*t56937*t75233;
  t75916 = t75885 + t75886 + t75887 + t75888 + t75889 + t75899 + t75900 + t75901 + t75912 + t75913 + t75914;
  t76094 = 0.000014*t56409*t53595;
  t76095 = 0.000056*t56317*t53757;
  t76096 = 0.000056*t56290*t54048;
  t76097 = 0.000014*t56224*t54253;
  t76098 = 0.000271*t56539*t55347;
  t76099 = 0.000271*t56507*t51749;
  t76100 = 2.e-6*t56703*t52340;
  t76101 = 2.e-6*t56623*t55672;
  t76102 = 0.000271*t56765*t55861;
  t76103 = 0.000271*t56747*t52848;
  t76104 = 0.026*t57471*t75389;
  t76106 = 0.026*t57404*t75565;
  t76107 = 0.026*t57582*t76052;
  t76108 = 0.026*t57368*t75572;
  t76109 = 0.026*t57238*t75632;
  t76114 = 0.026*t76113*t75694;
  t76115 = 0.043*t57753*t75730;
  t76116 = 0.043*t57680*t75754;
  t76117 = 0.043*t72378*t75764;
  t76118 = 0.043*t75233*t75774;
  t76119 = 0.043*t57809*t75790;
  t76121 = 0.043*t57830*t75807;
  t76122 = t76094 + t76095 + t76096 + t76097 + t76098 + t76099 + t76100 + t76101 + t76102 + t76103 + t76104 + t76106 + t76107 + t76108 + t76109 + t76114 + t76115 + t76116 + t76117 + t76118 + t76119 + t76121;
  t53520 = 0.026*t51083*t53479*t53511;
  t53605 = 0.026*t53081*t53541*t53595;
  t53635 = -0.026000000000234*t53625*t19515*t53595;
  t53794 = -0.026000000000234*t53680*t19515*t53757;
  t54060 = -0.026000000000234*t48689*t53680*t54048;
  t54220 = -0.026000000000234*t54171*t19515*t54048;
  t54254 = 0.026*t53081*t53625*t54253;
  t55350 = 0.043*t55296*t55347;
  t55372 = 0.043*t55369*t51749;
  t55416 = 0.043*t55414*t52340;
  t55692 = 0.043*t55618*t55672;
  t55862 = 0.043*t55851*t55861;
  t55875 = 0.043*t55868*t52848;
  t55880 = t53520 + t53605 + t53635 + t53794 + t54060 + t54220 + t54254 + t55350 + t55372 + t55416 + t55692 + t55862 + t55875;
  t75954 = 0.026*t53479*t75953;
  t75955 = 0.026*t53081*t53541*t56270;
  t75956 = -0.026000000000234*t53625*t19515*t56270;
  t75957 = -0.026000000000234*t53680*t19515*t56309;
  t75958 = -0.026000000000234*t48689*t53680*t56373;
  t75959 = -0.026000000000234*t54171*t19515*t56373;
  t75960 = 0.026*t53081*t53625*t56480;
  t75961 = 0.043*t55296*t56524;
  t75962 = 0.043*t55369*t56593;
  t75963 = 0.043*t55414*t56682;
  t75964 = 0.043*t55618*t56732;
  t75965 = 0.043*t55851*t56755;
  t75966 = 0.043*t55868*t56792;
  t75967 = t75954 + t75955 + t75956 + t75957 + t75958 + t75959 + t75960 + t75961 + t75962 + t75963 + t75964 + t75965 + t75966;
  t75823 = 0.026*t53479*t75822;
  t75824 = 0.026*t53081*t53541*t56834;
  t75826 = -0.026000000000234*t53625*t19515*t56834;
  t75827 = -0.026000000000234*t53680*t19515*t56884;
  t75831 = -0.026000000000234*t48689*t53680*t56902;
  t75832 = -0.026000000000234*t54171*t19515*t56902;
  t75833 = 0.026*t53081*t53625*t56923;
  t75834 = 0.043*t55296*t56937;
  t75835 = 0.043*t55369*t56975;
  t75836 = 0.043*t55414*t57029;
  t75837 = 0.043*t55618*t57045;
  t75838 = 0.043*t55851*t57065;
  t75840 = 0.043*t55868*t57125;
  t75841 = t75823 + t75824 + t75826 + t75827 + t75831 + t75832 + t75833 + t75834 + t75835 + t75836 + t75837 + t75838 + t75840;
  t76192 = -0.000014000000000126*t48689*t56224;
  t76194 = 0.000056*t53081*t56290;
  t76196 = -0.000056000000000504*t19515*t56317;
  t76197 = -0.000014000000000126*t19515*t56409;
  t76198 = 0.000271*t51031*t56507;
  t76200 = 0.000271*t55312*t56539;
  t76201 = 2.e-6*t55016*t56623;
  t76202 = 2.e-6*t51955*t56703;
  t76203 = 0.000271*t52748*t56747;
  t76204 = 0.000271*t54267*t56765;
  t76205 = -0.026000000000234*t48689*t53680*t57238;
  t76206 = -0.026000000000234*t54171*t19515*t57238;
  t76207 = 0.026*t53081*t53625*t57368;
  t76208 = 0.026*t53479*t76113;
  t76209 = 0.026*t53081*t53541*t57404;
  t76210 = -0.026000000000234*t53625*t19515*t57404;
  t76211 = -0.026000000000234*t53680*t19515*t57471;
  t76212 = 0.026*t76059*t57582;
  t76213 = 0.043*t55851*t57680;
  t76214 = 0.043*t55868*t57753;
  t76215 = 0.043*t55618*t57809;
  t76216 = 0.043*t55296*t57830;
  t76217 = 0.043*t55414*t72378;
  t76219 = 0.043*t55369*t75233;
  t76220 = t76192 + t76194 + t76196 + t76197 + t76198 + t76200 + t76201 + t76202 + t76203 + t76204 + t76205 + t76206 + t76207 + t76208 + t76209 + t76210 + t76211 + t76212 + t76213 + t76214 + t76215 + t76216 + t76217 + t76219;
  t76034 = -0.000014000000000126*t48689*t53595;
  t76036 = 0.000056*t53081*t53757;
  t76037 = -0.000056000000000504*t19515*t54048;
  t76038 = -0.000014000000000126*t19515*t54253;
  t76039 = 0.000271*t51031*t55347;
  t76040 = 0.000271*t55312*t51749;
  t76041 = 2.e-6*t55016*t52340;
  t76042 = 2.e-6*t51955*t55672;
  t76043 = 0.000271*t52748*t55861;
  t76044 = 0.000271*t54267*t52848;
  t76045 = -0.026000000000234*t48689*t53680*t75389;
  t76046 = -0.026000000000234*t54171*t19515*t75389;
  t76047 = 0.026*t53081*t53625*t75565;
  t76053 = 0.026*t53479*t76052;
  t76054 = 0.026*t53081*t53541*t75572;
  t76055 = -0.026000000000234*t53625*t19515*t75572;
  t76056 = -0.026000000000234*t53680*t19515*t75632;
  t76060 = 0.026*t76059*t75694;
  t76061 = 0.043*t55851*t75730;
  t76062 = 0.043*t55868*t75754;
  t76063 = 0.043*t55618*t75764;
  t76064 = 0.043*t55296*t75774;
  t76065 = 0.043*t55414*t75790;
  t76067 = 0.043*t55369*t75807;
  t76068 = t76034 + t76036 + t76037 + t76038 + t76039 + t76040 + t76041 + t76042 + t76043 + t76044 + t76045 + t76046 + t76047 + t76053 + t76054 + t76055 + t76056 + t76060 + t76061 + t76062 + t76063 + t76064 + t76065 + t76067;
  t76347 = -7.7999532001404e-9*t48689*t53680;
  t76348 = 0.0013000000000117*t53081*t53541;
  t76349 = -7.7999532001404e-9*t54171*t19515;
  t76350 = -0.0013000000000234*t53625*t19515;
  t76351 = 0.000271*t51031*t76074;
  t76352 = 2.e-6*t76077*t51955;
  t76353 = 0.000271*t76082*t52748;
  t76354 = 0.043*t55851*t56147;
  t76356 = 0.043*t55618*t56069;
  t76358 = 0.043*t55296*t56010;
  t76359 = t76347 + t76348 + t76349 + t76350 + t76351 + t76352 + t76353 + t76354 + t76356 + t76358;
  t55904 = 7.7999532000702e-9*t53757;
  t55907 = 0.0013000000000117*t54253;
  t56011 = 0.043*t56010*t51749;
  t56073 = 0.043*t56069*t52340;
  t56148 = 0.043*t56147*t52848;
  t56149 = t55904 + t55907 + t56011 + t56073 + t56148;
  t75969 = 7.7999532000702e-9*t56309;
  t75970 = 0.0013000000000117*t56480;
  t75971 = 0.043*t56010*t56593;
  t75972 = 0.043*t56069*t56682;
  t75973 = 0.043*t56147*t56792;
  t75974 = t75969 + t75970 + t75971 + t75972 + t75973;
  t75843 = 7.7999532000702e-9*t56884;
  t75845 = 0.0013000000000117*t56923;
  t75846 = 0.043*t56010*t56975;
  t75847 = 0.043*t56069*t57029;
  t75848 = 0.043*t56147*t57125;
  t75849 = t75843 + t75845 + t75846 + t75847 + t75848;
  t76222 = 0.000271*t76074*t56539;
  t76223 = 2.e-6*t76077*t56623;
  t76224 = 0.000271*t76082*t56765;
  t76225 = 0.0013000000000117*t57368;
  t76226 = 7.7999532000702e-9*t57471;
  t76229 = 0.043*t56147*t57753;
  t76230 = 0.043*t56069*t72378;
  t76231 = 0.043*t56010*t75233;
  t76232 = t76222 + t76223 + t76224 + t76225 + t76226 + t76229 + t76230 + t76231;
  t76075 = 0.000271*t76074*t51749;
  t76078 = 2.e-6*t76077*t52340;
  t76083 = 0.000271*t76082*t52848;
  t76084 = 0.0013000000000117*t75565;
  t76085 = 7.7999532000702e-9*t75632;
  t76086 = 0.043*t56147*t75754;
  t76087 = 0.043*t56069*t75790;
  t76088 = 0.043*t56010*t75807;
  t76089 = t76075 + t76078 + t76083 + t76084 + t76085 + t76086 + t76087 + t76088;
  t76260 = 0.000271000000004878*t52748;
  t76267 = 4.3e-9*t55851;
  t76269 = 0.004299987100129*t55618;
  t76275 = 1.28999742002322e-8*t55296;
  t76290 = t76260 + t76267 + t76269 + t76275;
  t51758 = 1.28999742002322e-8*t51749;
  t52343 = 0.004299987100129*t52340;
  t52980 = 4.3e-9*t52848;
  t52997 = t51758 + t52343 + t52980;
  t75945 = 1.28999742002322e-8*t56593;
  t75947 = 0.004299987100129*t56682;
  t75948 = 4.3e-9*t56792;
  t75949 = t75945 + t75947 + t75948;
  t75813 = 1.28999742002322e-8*t56975;
  t75814 = 0.004299987100129*t57029;
  t75817 = 4.3e-9*t57125;
  t75818 = t75813 + t75814 + t75817;
  t76184 = 0.000271000000004878*t56765;
  t76186 = 4.3e-9*t57753;
  t76187 = 0.004299987100129*t72378;
  t76188 = 1.28999742002322e-8*t75233;
  t76189 = t76184 + t76186 + t76187 + t76188;
  t76028 = 0.000271000000004878*t52848;
  t76029 = 4.3e-9*t75754;
  t76030 = 0.004299987100129*t75790;
  t76031 = 1.28999742002322e-8*t75807;
  t76032 = t76028 + t76029 + t76030 + t76031;
  p_output1[0]=var2[19]*(-0.5*(0.052*t53757*t54048 + 0.052*t53595*t54253 + 0.086*t51749*t55347 + 0.086*t52340*t55672 + 0.086*t52848*t55861)*var2[0] - 0.5*t57131*var2[1] - 0.5*t56809*var2[2] - 0.5*t75809*var2[3] - 0.5*t75311*var2[4] - 0.5*t55880*var2[5] - 0.5*t56149*var2[19] - 0.5*t52997*var2[21]);
  p_output1[1]=var2[19]*(-0.5*t57131*var2[0] - 0.5*(0.052*t56884*t56902 + 0.052*t56834*t56923 + 0.086*t56937*t56975 + 0.086*t57029*t57045 + 0.086*t57065*t57125)*var2[1] - 0.5*t75863*var2[2] - 0.5*t75941*var2[3] - 0.5*t75916*var2[4] - 0.5*t75841*var2[5] - 0.5*t75849*var2[19] - 0.5*t75818*var2[21]);
  p_output1[2]=var2[19]*(-0.5*t56809*var2[0] - 0.5*t75863*var2[1] - 0.5*(0.052*t56309*t56373 + 0.052*t56270*t56480 + 0.086*t56524*t56593 + 0.086*t56682*t56732 + 0.086*t56755*t56792)*var2[2] - 0.5*t76024*var2[3] - 0.5*t76005*var2[4] - 0.5*t75967*var2[5] - 0.5*t75974*var2[19] - 0.5*t75949*var2[21]);
  p_output1[3]=var2[19]*(-0.5*t75809*var2[0] - 0.5*t75941*var2[1] - 0.5*t76024*var2[2] - 0.5*(0.000112*t53757*t54048 + 0.000028*t53595*t54253 + 0.000542*t51749*t55347 + 4.e-6*t52340*t55672 + 0.000542*t52848*t55861 + 0.052*t75565*t75572 + 0.052*t75389*t75632 + 0.086*t75730*t75754 + 0.086*t75764*t75790 + 0.086*t75774*t75807 + 0.052*t75694*t76052)*var2[3] - 0.5*t76122*var2[4] - 0.5*t76068*var2[5] - 0.5*t76089*var2[19] - 0.5*t76032*var2[21]);
  p_output1[4]=var2[19]*(-0.5*t75311*var2[0] - 0.5*t75916*var2[1] - 0.5*t76005*var2[2] - 0.5*t76122*var2[3] - 0.5*(0.000112*t56290*t56317 + 0.000028*t56224*t56409 + 0.000542*t56507*t56539 + 4.e-6*t56623*t56703 + 0.000542*t56747*t56765 + 0.052*t57368*t57404 + 0.052*t57238*t57471 + 0.086*t57680*t57753 + 0.086*t57809*t72378 + 0.086*t57830*t75233 + 0.052*t57582*t76113)*var2[4] - 0.5*t76220*var2[5] - 0.5*t76232*var2[19] - 0.5*t76189*var2[21]);
  p_output1[5]=var2[19]*(-0.5*t55880*var2[0] - 0.5*t75841*var2[1] - 0.5*t75967*var2[2] - 0.5*t76068*var2[3] - 0.5*t76220*var2[4] - 0.5*(0.000028000000000504*t19515*t48689 - 0.000112000000001008*t19515*t53081 + 0.052*Power(t53081,2)*t53541*t53625 - 0.052000000000468*t19515*t53081*Power(t53625,2) + 0.052000000000936*t19515*t48689*Power(t53680,2) + 0.052000000000936*Power(t19515,2)*t53680*t54171 + 0.000542*t52748*t54267 + 4.e-6*t51955*t55016 + 0.000542*t51031*t55312 + 0.086*t55296*t55369 + 0.086*t55414*t55618 + 0.086*t55851*t55868 + 0.052*t53479*t76059)*var2[5] - 0.5*t76359*var2[19] - 0.5*t76290*var2[21]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=(-0.5*t56149*var2[0] - 0.5*t75849*var2[1] - 0.5*t75974*var2[2] - 0.5*t76089*var2[3] - 0.5*t76232*var2[4] - 0.5*t76359*var2[5])*var2[19];
  p_output1[20]=0;
  p_output1[21]=(-0.5*t52997*var2[0] - 0.5*t75818*var2[1] - 0.5*t75949*var2[2] - 0.5*t76032*var2[3] - 0.5*t76189*var2[4] - 0.5*t76290*var2[5])*var2[19];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec20_minitaur.hh"

namespace FrontStance
{

void Ce2_vec20_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
