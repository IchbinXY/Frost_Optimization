/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:08:34 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t3066;
  double t3090;
  double t4467;
  double t1705;
  double t31424;
  double t32374;
  double t31830;
  double t32873;
  double t32885;
  double t32984;
  double t33012;
  double t33014;
  double t33028;
  double t33032;
  double t33194;
  double t32987;
  double t33212;
  double t33226;
  double t33228;
  double t33202;
  double t33935;
  double t34096;
  double t34162;
  double t33585;
  double t33253;
  double t34203;
  double t34310;
  double t34371;
  double t34161;
  double t34169;
  double t34192;
  double t34204;
  double t34217;
  double t34218;
  double t33230;
  double t33625;
  double t36332;
  double t37921;
  double t38233;
  double t38241;
  double t38255;
  double t38279;
  double t33254;
  double t33313;
  double t33334;
  double t33694;
  double t33799;
  double t33806;
  double t34141;
  double t34155;
  double t38511;
  double t38526;
  double t38776;
  double t39044;
  double t39334;
  double t40227;
  double t40365;
  double t33244;
  double t34157;
  double t34453;
  double t36322;
  double t38327;
  double t38335;
  double t38509;
  double t39071;
  double t39122;
  double t39322;
  double t39327;
  double t40375;
  double t40380;
  double t33197;
  double t19503;
  double t28042;
  double t41714;
  double t41839;
  double t42549;
  double t42560;
  double t42578;
  double t42596;
  double t42646;
  double t42657;
  double t42662;
  double t42677;
  double t43911;
  double t43921;
  double t43925;
  double t43933;
  double t43962;
  double t43970;
  double t44166;
  double t44170;
  double t43873;
  double t43941;
  double t44248;
  double t44252;
  double t48581;
  double t48587;
  double t48662;
  double t48744;
  double t49218;
  double t49209;
  double t49293;
  double t49307;
  double t49213;
  double t49217;
  double t49245;
  double t49253;
  double t49257;
  double t49258;
  double t49297;
  double t49298;
  double t49318;
  double t49349;
  double t49350;
  double t49352;
  double t49639;
  double t49714;
  double t49641;
  double t49610;
  double t49626;
  double t49633;
  double t49718;
  double t49736;
  double t49752;
  double t49753;
  double t49761;
  double t49771;
  double t49775;
  double t49778;
  double t49779;
  double t49783;
  double t49640;
  double t49647;
  double t49662;
  double t49680;
  double t49686;
  double t49697;
  double t49635;
  double t49700;
  double t49755;
  double t49789;
  double t49798;
  double t49799;
  double t49807;
  double t49815;
  double t49861;
  double t49889;
  double t49895;
  double t49910;
  double t49913;
  double t49914;
  double t49917;
  double t49919;
  double t49281;
  double t49283;
  double t49415;
  double t42500;
  double t42518;
  double t42523;
  double t42526;
  double t41487;
  double t41718;
  double t42227;
  double t42440;
  double t49613;
  double t50053;
  double t50066;
  double t50070;
  double t50071;
  double t50084;
  double t50085;
  double t50090;
  double t50094;
  double t50097;
  double t50104;
  double t50105;
  double t50107;
  double t50110;
  double t50136;
  double t50144;
  double t50145;
  double t43294;
  double t43802;
  double t43804;
  double t43817;
  double t42856;
  double t42952;
  double t43188;
  double t43197;
  double t42548;
  double t42635;
  double t42681;
  double t42724;
  double t42734;
  double t42739;
  double t42740;
  double t42742;
  double t33198;
  double t38490;
  double t40384;
  double t40394;
  double t40444;
  double t41475;
  double t41480;
  double t41481;
  double t50458;
  double t50473;
  double t50484;
  double t50504;
  double t50522;
  double t50530;
  double t50535;
  double t50538;
  double t50547;
  double t50549;
  double t50558;
  double t50584;
  double t50619;
  double t50630;
  double t49000;
  double t49001;
  double t49003;
  double t49015;
  double t48795;
  double t48802;
  double t48988;
  double t48993;
  double t31658;
  double t31811;
  double t29626;
  double t31382;
  double t31417;
  double t49980;
  double t49992;
  double t49994;
  double t49998;
  double t50012;
  double t50014;
  double t50017;
  double t50171;
  double t50174;
  double t50184;
  double t50186;
  double t50202;
  double t50207;
  double t50209;
  double t50737;
  double t50744;
  double t50747;
  double t50748;
  double t50759;
  double t50760;
  double t50775;
  double t50837;
  double t50838;
  double t50851;
  double t51182;
  double t50865;
  double t50866;
  double t50869;
  double t31439;
  double t32325;
  double t32330;
  double t51276;
  double t32465;
  double t32610;
  double t32652;
  double t42484;
  double t42534;
  double t42535;
  double t43210;
  double t43831;
  double t43835;
  double t48999;
  double t49046;
  double t49060;
  double t50833;
  double t50853;
  double t50856;
  double t50863;
  double t50872;
  double t50873;
  double t50892;
  double t50894;
  double t50898;
  double t50903;
  double t50905;
  double t50907;
  double t50912;
  double t50914;
  double t50922;
  double t49465;
  double t49477;
  double t49499;
  double t49501;
  double t49430;
  double t49431;
  double t49433;
  double t49456;
  double t49275;
  double t49337;
  double t49373;
  double t49414;
  double t49461;
  double t49563;
  double t49582;
  double t49622;
  double t49864;
  double t49867;
  double t49884;
  double t49924;
  double t49926;
  double t49930;
  double t49932;
  double t49962;
  double t49968;
  double t49972;
  double t49977;
  double t51416;
  double t51419;
  double t51422;
  double t50031;
  double t50041;
  double t50098;
  double t50103;
  double t50148;
  double t50150;
  double t50154;
  double t50155;
  double t50160;
  double t50162;
  double t50163;
  double t50170;
  double t51439;
  double t51440;
  double t51444;
  double t50331;
  double t50332;
  double t50334;
  double t50340;
  double t50318;
  double t50319;
  double t50323;
  double t50324;
  double t50291;
  double t50296;
  double t50297;
  double t50314;
  double t50328;
  double t50349;
  double t50350;
  double t50421;
  double t50423;
  double t50424;
  double t50430;
  double t50395;
  double t50399;
  double t50411;
  double t50412;
  double t50363;
  double t50368;
  double t50383;
  double t50386;
  double t50420;
  double t50437;
  double t50439;
  double t50456;
  double t50457;
  double t50536;
  double t50537;
  double t50635;
  double t50636;
  double t50646;
  double t50647;
  double t50663;
  double t50682;
  double t50693;
  double t50733;
  double t51475;
  double t51476;
  double t51478;
  double t50938;
  double t50940;
  double t50941;
  double t50962;
  double t50965;
  double t50968;
  double t51002;
  double t51004;
  double t51006;
  double t51017;
  double t50991;
  double t50992;
  double t50994;
  double t50995;
  double t50977;
  double t50980;
  double t50981;
  double t50996;
  double t51018;
  double t51020;
  double t51070;
  double t51076;
  double t51077;
  double t51078;
  double t51056;
  double t51058;
  double t51065;
  double t51066;
  double t51034;
  double t51037;
  double t51043;
  double t51069;
  double t51089;
  double t51091;
  double t51135;
  double t51138;
  double t51143;
  double t51153;
  double t51111;
  double t51115;
  double t51118;
  double t51119;
  double t51096;
  double t51097;
  double t51104;
  double t51121;
  double t51157;
  double t51160;
  double t51193;
  double t51194;
  double t51196;
  double t51199;
  double t51200;
  double t51205;
  double t51209;
  double t51212;
  double t51216;
  double t51221;
  double t51222;
  double t51226;
  double t51258;
  double t51261;
  double t51268;
  double t51502;
  double t51503;
  double t51509;
  double t51513;
  double t51515;
  double t51517;
  double t51555;
  double t51558;
  double t51560;
  double t51564;
  double t51565;
  double t51568;
  double t51587;
  double t51599;
  double t51600;
  double t51611;
  double t51612;
  double t51627;
  double t51372;
  double t51375;
  double t51378;
  double t51391;
  double t51392;
  double t51393;
  double t51532;
  double t51539;
  double t51540;
  double t51547;
  double t51548;
  double t51551;
  double t51638;
  double t51639;
  double t51640;
  double t51648;
  double t51651;
  double t51652;
  double t51663;
  double t51665;
  double t51675;
  double t51677;
  double t51682;
  double t51685;
  double t51689;
  double t51690;
  double t51703;
  double t51707;
  double t51714;
  double t51719;
  double t51723;
  double t51727;
  double t51738;
  double t51745;
  double t51747;
  double t51752;
  double t51754;
  double t51755;
  double t51770;
  double t51776;
  double t51778;
  double t51781;
  double t51793;
  double t51796;
  double t52263;
  double t52235;
  double t52238;
  double t52380;
  double t52382;
  double t52383;
  double t52388;
  double t52391;
  double t52406;
  double t52339;
  double t52344;
  double t52346;
  double t52366;
  double t52424;
  double t52429;
  double t52431;
  double t52434;
  double t52435;
  double t52444;
  double t52449;
  double t52457;
  double t52376;
  double t52412;
  double t52413;
  double t50935;
  double t52537;
  double t52552;
  double t52559;
  double t52441;
  double t52471;
  double t52472;
  double t52488;
  double t52493;
  double t52505;
  double t52565;
  double t52571;
  double t52322;
  double t52325;
  double t52336;
  double t52247;
  double t52251;
  double t52601;
  double t52605;
  double t52700;
  double t52712;
  double t52716;
  double t50187;
  double t50270;
  double t50276;
  double t52970;
  double t52973;
  double t52986;
  double t52987;
  double t52995;
  double t52916;
  double t52926;
  double t52927;
  double t52937;
  double t52939;
  double t50000;
  double t50020;
  double t50022;
  double t53022;
  double t53031;
  double t53032;
  double t53010;
  double t53014;
  double t53016;
  double t53046;
  double t53048;
  double t53049;
  double t53050;
  double t53061;
  double t52962;
  double t53003;
  double t53004;
  double t53063;
  double t53073;
  double t53074;
  double t53098;
  double t53102;
  double t53107;
  double t50758;
  double t50776;
  double t50779;
  double t52266;
  double t52273;
  double t52276;
  double t52281;
  double t52293;
  double t52299;
  double t52303;
  double t52305;
  double t52311;
  double t52415;
  double t52473;
  double t52514;
  double t52516;
  double t53535;
  double t53542;
  double t53543;
  double t52641;
  double t52656;
  double t52671;
  double t52674;
  double t52680;
  double t52684;
  double t52686;
  double t52693;
  double t52880;
  double t52886;
  double t52892;
  double t52895;
  double t53171;
  double t53181;
  double t53183;
  double t53186;
  double t53672;
  double t53674;
  double t53675;
  double t53195;
  double t53198;
  double t53199;
  double t53203;
  double t53251;
  double t53252;
  double t53253;
  double t53260;
  double t53294;
  double t53295;
  double t53299;
  double t53301;
  double t53377;
  double t53387;
  double t53403;
  double t53409;
  double t53488;
  double t53489;
  double t53490;
  double t53491;
  double t49425;
  double t49592;
  double t49599;
  double t54059;
  double t50317;
  double t50351;
  double t50352;
  double t50393;
  double t50446;
  double t50451;
  double t54403;
  double t54404;
  double t54424;
  double t54425;
  double t54272;
  double t54274;
  double t54342;
  double t54356;
  double t54496;
  double t54500;
  double t54505;
  double t54523;
  double t54537;
  double t54540;
  double t54547;
  double t54363;
  double t54435;
  double t54464;
  double t54528;
  double t54549;
  double t54550;
  double t54577;
  double t54594;
  double t54638;
  double t50990;
  double t51024;
  double t51026;
  double t51052;
  double t51092;
  double t51094;
  double t51109;
  double t51161;
  double t51162;
  double t55238;
  double t55256;
  double t55260;
  double t55213;
  double t55220;
  double t55221;
  double t55286;
  double t55308;
  double t55309;
  double t55323;
  double t55328;
  double t55352;
  double t50943;
  double t50944;
  double t55236;
  double t55265;
  double t55273;
  double t55315;
  double t55356;
  double t55395;
  double t55419;
  double t55424;
  double t55441;
  double t50951;
  double t50969;
  double t50975;
  double t55612;
  double t55614;
  double t55625;
  double t55626;
  double t55631;
  double t55600;
  double t55601;
  double t55603;
  double t55605;
  double t55608;
  double t55668;
  double t55669;
  double t55682;
  double t55685;
  double t55698;
  double t55706;
  double t55707;
  double t55611;
  double t55633;
  double t55647;
  double t55687;
  double t55708;
  double t55712;
  double t55717;
  double t55729;
  double t55733;
  double t54058;
  double t54064;
  double t54073;
  double t54087;
  double t54155;
  double t54168;
  double t54189;
  double t54191;
  double t54210;
  double t56154;
  double t56160;
  double t56166;
  double t56178;
  double t56212;
  double t56214;
  double t54465;
  double t54470;
  double t54673;
  double t54676;
  double t56340;
  double t56343;
  double t56349;
  double t54791;
  double t54796;
  double t54829;
  double t54842;
  double t56375;
  double t56378;
  double t56406;
  double t56577;
  double t56580;
  double t56586;
  double t54950;
  double t54954;
  double t55024;
  double t55027;
  double t56609;
  double t56616;
  double t56621;
  double t52535;
  double t52536;
  double t52617;
  double t52623;
  double t52724;
  double t52726;
  double t52806;
  double t52818;
  double t53007;
  double t53017;
  double t53122;
  double t53125;
  double t53224;
  double t53225;
  double t53263;
  double t53269;
  double t53316;
  double t53327;
  double t53421;
  double t53424;
  double t57545;
  double t57580;
  double t55276;
  double t55479;
  double t55484;
  double t57255;
  double t57257;
  double t55524;
  double t55556;
  double t55569;
  double t55649;
  double t55656;
  double t55756;
  double t55758;
  double t55791;
  double t55792;
  double t55809;
  double t55824;
  double t55866;
  double t55879;
  double t55921;
  double t55925;
  double t58363;
  double t58366;
  double t58421;
  double t58426;
  double t58473;
  double t58475;
  double t58504;
  double t58509;
  double t58664;
  double t58667;
  double t58832;
  double t58839;
  double t58982;
  double t58984;
  double t58985;
  double t59210;
  double t59225;
  double t59249;
  double t56281;
  double t56284;
  double t56298;
  double t56301;
  double t59289;
  double t59307;
  double t59341;
  double t56428;
  double t56430;
  double t56475;
  double t56499;
  double t59408;
  double t59413;
  double t59429;
  double t59549;
  double t59552;
  double t59556;
  double t56676;
  double t56686;
  double t56780;
  double t56784;
  double t59586;
  double t59590;
  double t59592;
  t3066 = Cos(var1[10]);
  t3090 = -1.*t3066;
  t4467 = 1. + t3090;
  t1705 = Cos(var1[4]);
  t31424 = Cos(var1[5]);
  t32374 = Sin(var1[10]);
  t31830 = Sin(var1[5]);
  t32873 = Cos(var1[12]);
  t32885 = -1.*t32873;
  t32984 = 1. + t32885;
  t33012 = 3.e-6*t32984;
  t33014 = Sin(var1[12]);
  t33028 = 3.e-6*t33014;
  t33032 = t33012 + t33028;
  t33194 = 3.e-6*t33032;
  t32987 = 1.000000000009*t32984;
  t33212 = -3.e-6*t33014;
  t33226 = t33012 + t33212;
  t33228 = 3.e-6*t33226;
  t33202 = -1.8e-11*t32984;
  t33935 = -3.e-6*t32984;
  t34096 = t33935 + t33028;
  t34162 = 1. + t33202;
  t33585 = -9.e-12*t32984;
  t33253 = 3.e-13*var1[12];
  t34203 = t33935 + t33212;
  t34310 = 3.e-6*t34162;
  t34371 = t34310 + t33935 + t33212;
  t34161 = 1.e-7*var1[12];
  t34169 = 0.1*t34162;
  t34192 = 5.4e-18*t32984;
  t34204 = -3.e-12*t34203;
  t34217 = 0.100000000003*t34096;
  t34218 = t34161 + t34169 + t34192 + t34204 + t34217;
  t33230 = 1. + t33202 + t33228 + t33194;
  t33625 = -1.*t33014;
  t36332 = 0.1000000000039*t32984;
  t37921 = 3.e-7*t34203;
  t38233 = 0.1*t33032;
  t38241 = t33585 + t33014;
  t38255 = -3.e-12*t38241;
  t38279 = t33253 + t36332 + t37921 + t38233 + t38255;
  t33254 = -1. + t32987;
  t33313 = 0.2*t33254;
  t33334 = -0.2000000000048*t32984;
  t33694 = t33585 + t33625;
  t33799 = 0.100000000003*t33694;
  t33806 = 0.1*t33226;
  t34141 = 3.e-7*t34096;
  t34155 = t33253 + t33313 + t33334 + t33799 + t33806 + t34141;
  t38511 = -1.000000000009*t32984;
  t38526 = 1. + t38511;
  t38776 = 3.e-6*t38526;
  t39044 = 9.e-12*t32984;
  t39334 = t39044 + t33014;
  t40227 = 3.e-6*t39334;
  t40365 = t38776 + t33012 + t33212 + t40227;
  t33244 = -1. + t32987 + t33228;
  t34157 = -1.*t33244*t34155;
  t34453 = -1.*t34218*t34371;
  t36322 = t33585 + t33194 + t33014;
  t38327 = -1.*t36322*t38279;
  t38335 = t34157 + t34453 + t38327;
  t38509 = t34218*t33230;
  t39071 = t39044 + t33625;
  t39122 = 3.e-6*t39071;
  t39322 = t38776 + t33012 + t39122 + t33028;
  t39327 = t39322*t38279;
  t40375 = t34155*t40365;
  t40380 = t38509 + t39327 + t40375;
  t33197 = -1. + t32987 + t33194;
  t19503 = -9.e-12*t4467;
  t28042 = 1. + t19503;
  t41714 = t33585 + t33228 + t33625;
  t41839 = t34310 + t33935 + t33028;
  t42549 = t34155*t41714;
  t42560 = t34218*t41839;
  t42578 = t33197*t38279;
  t42596 = t42549 + t42560 + t42578;
  t42646 = -1.*t34218*t33230;
  t42657 = -1.*t39322*t38279;
  t42662 = -1.*t34155*t40365;
  t42677 = t42646 + t42657 + t42662;
  t43911 = -1.*t34155*t41714;
  t43921 = -1.*t34218*t41839;
  t43925 = -1.*t33197*t38279;
  t43933 = t43911 + t43921 + t43925;
  t43962 = t33244*t34155;
  t43970 = t34218*t34371;
  t44166 = t36322*t38279;
  t44170 = t43962 + t43970 + t44166;
  t43873 = 0.2*t39322;
  t43941 = -1.*t34371*t43933;
  t44248 = -1.*t41839*t44170;
  t44252 = t33244*t43933;
  t48581 = t41714*t44170;
  t48587 = t44252 + t48581;
  t48662 = -3.e-6*t48587;
  t48744 = t43873 + t43941 + t44248 + t48662;
  t49218 = 3.e-6*t32873;
  t49209 = -3.e-6*t32873;
  t49293 = 9.e-12*t33014;
  t49307 = -2.7e-17*t33014;
  t49213 = t49209 + t33028;
  t49217 = 3.e-6*t49213;
  t49245 = t49218 + t33028;
  t49253 = 3.e-6*t49245;
  t49257 = -1.8e-11*t33014;
  t49258 = t49217 + t49253 + t49257;
  t49297 = t32885 + t49293;
  t49298 = 3.e-6*t49297;
  t49318 = t49218 + t49298 + t49307;
  t49349 = t32873 + t49293;
  t49350 = 3.e-6*t49349;
  t49352 = t49209 + t49350 + t49307;
  t49639 = t49218 + t33212;
  t49714 = t49209 + t33212;
  t49641 = -9.e-12*t33014;
  t49610 = 1.000000000009*t33014;
  t49626 = -3.000000000054e-6*t33014;
  t49633 = t49209 + t49626;
  t49718 = -3.e-12*t49714;
  t49736 = 0.100000000003*t49639;
  t49752 = -1.7999946e-12*t33014;
  t49753 = 1.e-7 + t49718 + t49736 + t49752;
  t49761 = 3.e-7*t49714;
  t49771 = t32873 + t49641;
  t49775 = -3.e-12*t49771;
  t49778 = 0.1*t49245;
  t49779 = 0.1000000000039*t33014;
  t49783 = 3.e-13 + t49761 + t49775 + t49778 + t49779;
  t49640 = 3.e-7*t49639;
  t49647 = t32885 + t49641;
  t49662 = 0.100000000003*t49647;
  t49680 = 0.1*t49213;
  t49686 = -3.000000000027e-12*t33014;
  t49697 = 3.e-13 + t49640 + t49662 + t49680 + t49686;
  t49635 = -1.*t34218*t49633;
  t49700 = -1.*t33244*t49697;
  t49755 = -1.*t34371*t49753;
  t49789 = -1.*t49783*t36322;
  t49798 = t49217 + t49610;
  t49799 = -1.*t34155*t49798;
  t49807 = t32873 + t49253 + t49641;
  t49815 = -1.*t49807*t38279;
  t49861 = t49635 + t49700 + t49755 + t49789 + t49799 + t49815;
  t49889 = t34218*t49258;
  t49895 = t33230*t49753;
  t49910 = t34155*t49352;
  t49913 = t39322*t49783;
  t49914 = t49318*t38279;
  t49917 = t49697*t40365;
  t49919 = t49889 + t49895 + t49910 + t49913 + t49914 + t49917;
  t49281 = -1.000000000009*t4467;
  t49283 = 1. + t49281;
  t49415 = Sin(var1[4]);
  t42500 = -1.*t32374*t33197;
  t42518 = t3066*t41714;
  t42523 = 3.e-6*t4467*t41839;
  t42526 = t42500 + t42518 + t42523;
  t41487 = 3.e-6*t32374*t33197;
  t41718 = 3.e-6*t4467*t41714;
  t42227 = t28042*t41839;
  t42440 = t41487 + t41718 + t42227;
  t49613 = t49253 + t49610;
  t50053 = t49218 + t49626;
  t50066 = t34218*t50053;
  t50070 = t32885 + t49217 + t49641;
  t50071 = t34155*t50070;
  t50084 = t41714*t49697;
  t50085 = t49753*t41839;
  t50090 = t33197*t49783;
  t50094 = t49613*t38279;
  t50097 = t50066 + t50071 + t50084 + t50085 + t50090 + t50094;
  t50104 = -1.*t34218*t49258;
  t50105 = -1.*t33230*t49753;
  t50107 = -1.*t34155*t49352;
  t50110 = -1.*t39322*t49783;
  t50136 = -1.*t49318*t38279;
  t50144 = -1.*t49697*t40365;
  t50145 = t50104 + t50105 + t50107 + t50110 + t50136 + t50144;
  t43294 = t3066*t33244;
  t43802 = 3.e-6*t4467*t34371;
  t43804 = -1.*t32374*t36322;
  t43817 = t43294 + t43802 + t43804;
  t42856 = 3.e-6*t4467*t33244;
  t42952 = t28042*t34371;
  t43188 = 3.e-6*t32374*t36322;
  t43197 = t42856 + t42952 + t43188;
  t42548 = 0.2*t36322;
  t42635 = -1.*t33230*t42596;
  t42681 = -1.*t41839*t42677;
  t42724 = t40365*t42596;
  t42734 = t41714*t42677;
  t42739 = t42724 + t42734;
  t42740 = -3.e-6*t42739;
  t42742 = t42548 + t42635 + t42681 + t42740;
  t33198 = 0.2*t33197;
  t38490 = -1.*t33230*t38335;
  t40384 = -1.*t34371*t40380;
  t40394 = t40365*t38335;
  t40444 = t33244*t40380;
  t41475 = t40394 + t40444;
  t41480 = -3.e-6*t41475;
  t41481 = t33198 + t38490 + t40384 + t41480;
  t50458 = t34218*t49633;
  t50473 = t33244*t49697;
  t50484 = t34371*t49753;
  t50504 = t49783*t36322;
  t50522 = t34155*t49798;
  t50530 = t49807*t38279;
  t50535 = t50458 + t50473 + t50484 + t50504 + t50522 + t50530;
  t50538 = -1.*t34218*t50053;
  t50547 = -1.*t34155*t50070;
  t50549 = -1.*t41714*t49697;
  t50558 = -1.*t49753*t41839;
  t50584 = -1.*t33197*t49783;
  t50619 = -1.*t49613*t38279;
  t50630 = t50538 + t50547 + t50549 + t50558 + t50584 + t50619;
  t49000 = 3.e-6*t4467*t33230;
  t49001 = -1.*t32374*t39322;
  t49003 = t3066*t40365;
  t49015 = t49000 + t49001 + t49003;
  t48795 = t28042*t33230;
  t48802 = 3.e-6*t32374*t39322;
  t48988 = 3.e-6*t4467*t40365;
  t48993 = t48795 + t48802 + t48988;
  t31658 = 9.e-12*t4467;
  t31811 = t31658 + t3090;
  t29626 = 3.e-6*t28042;
  t31382 = -3.e-6*t4467;
  t31417 = t29626 + t31382;
  t49980 = t49283*t33197;
  t49992 = t32374*t41714;
  t49994 = -3.e-6*t32374*t41839;
  t49998 = t49980 + t49992 + t49994;
  t50012 = t31424*t42526;
  t50014 = -1.*t42440*t31830;
  t50017 = t50012 + t50014;
  t50171 = t32374*t33244;
  t50174 = -3.e-6*t32374*t34371;
  t50184 = t49283*t36322;
  t50186 = t50171 + t50174 + t50184;
  t50202 = t31424*t43817;
  t50207 = -1.*t43197*t31830;
  t50209 = t50202 + t50207;
  t50737 = -3.e-6*t32374*t33230;
  t50744 = t49283*t39322;
  t50747 = t32374*t40365;
  t50748 = t50737 + t50744 + t50747;
  t50759 = t31424*t49015;
  t50760 = -1.*t48993*t31830;
  t50775 = t50759 + t50760;
  t50837 = t31811*t31424;
  t50838 = -1.*t31417*t31830;
  t50851 = t50837 + t50838;
  t51182 = Sin(var1[3]);
  t50865 = -1.*t31424*t32374;
  t50866 = -3.e-6*t32374*t31830;
  t50869 = t50865 + t50866;
  t31439 = -1.*t31417*t31424;
  t32325 = -1.*t31811*t31830;
  t32330 = t31439 + t32325;
  t51276 = Cos(var1[3]);
  t32465 = -3.e-6*t31424*t32374;
  t32610 = t32374*t31830;
  t32652 = t32465 + t32610;
  t42484 = -1.*t31424*t42440;
  t42534 = -1.*t42526*t31830;
  t42535 = t42484 + t42534;
  t43210 = -1.*t31424*t43197;
  t43831 = -1.*t43817*t31830;
  t43835 = t43210 + t43831;
  t48999 = -1.*t31424*t48993;
  t49046 = -1.*t49015*t31830;
  t49060 = t48999 + t49046;
  t50833 = -1.000000000009*t1705*t32374;
  t50853 = -1.*t49415*t50851;
  t50856 = t50833 + t50853;
  t50863 = t49283*t1705;
  t50872 = -1.*t49415*t50869;
  t50873 = t50863 + t50872;
  t50892 = t1705*t49998;
  t50894 = -1.*t49415*t50017;
  t50898 = t50892 + t50894;
  t50903 = t1705*t50186;
  t50905 = -1.*t49415*t50209;
  t50907 = t50903 + t50905;
  t50912 = t1705*t50748;
  t50914 = -1.*t49415*t50775;
  t50922 = t50912 + t50914;
  t49465 = t28042*t49258;
  t49477 = 3.e-6*t32374*t49318;
  t49499 = 3.e-6*t4467*t49352;
  t49501 = t49465 + t49477 + t49499;
  t49430 = 3.e-6*t4467*t49258;
  t49431 = -1.*t32374*t49318;
  t49433 = t3066*t49352;
  t49456 = t49430 + t49431 + t49433;
  t49275 = -3.e-6*t32374*t49258;
  t49337 = t49283*t49318;
  t49373 = t32374*t49352;
  t49414 = t49275 + t49337 + t49373;
  t49461 = t31424*t49456;
  t49563 = -1.*t49501*t31830;
  t49582 = t49461 + t49563;
  t49622 = 0.2*t49613;
  t49864 = -1.*t33230*t49861;
  t49867 = -1.*t49258*t38335;
  t49884 = -1.*t49633*t40380;
  t49924 = -1.*t34371*t49919;
  t49926 = t40365*t49861;
  t49930 = t49352*t38335;
  t49932 = t49798*t40380;
  t49962 = t33244*t49919;
  t49968 = t49926 + t49930 + t49932 + t49962;
  t49972 = -3.e-6*t49968;
  t49977 = t49622 + t49864 + t49867 + t49884 + t49924 + t49972;
  t51416 = t31424*t42440;
  t51419 = t42526*t31830;
  t51422 = t51416 + t51419;
  t50031 = 0.2*t49807;
  t50041 = -1.*t49258*t42596;
  t50098 = -1.*t33230*t50097;
  t50103 = -1.*t50053*t42677;
  t50148 = -1.*t41839*t50145;
  t50150 = t49352*t42596;
  t50154 = t40365*t50097;
  t50155 = t50070*t42677;
  t50160 = t41714*t50145;
  t50162 = t50150 + t50154 + t50155 + t50160;
  t50163 = -3.e-6*t50162;
  t50170 = t50031 + t50041 + t50098 + t50103 + t50148 + t50163;
  t51439 = t31424*t43197;
  t51440 = t43817*t31830;
  t51444 = t51439 + t51440;
  t50331 = t28042*t49633;
  t50332 = 3.e-6*t32374*t49807;
  t50334 = 3.e-6*t4467*t49798;
  t50340 = t50331 + t50332 + t50334;
  t50318 = 3.e-6*t4467*t49633;
  t50319 = -1.*t32374*t49807;
  t50323 = t3066*t49798;
  t50324 = t50318 + t50319 + t50323;
  t50291 = -3.e-6*t32374*t49633;
  t50296 = t49283*t49807;
  t50297 = t32374*t49798;
  t50314 = t50291 + t50296 + t50297;
  t50328 = t31424*t50324;
  t50349 = -1.*t50340*t31830;
  t50350 = t50328 + t50349;
  t50421 = t28042*t50053;
  t50423 = 3.e-6*t4467*t50070;
  t50424 = 3.e-6*t32374*t49613;
  t50430 = t50421 + t50423 + t50424;
  t50395 = 3.e-6*t4467*t50053;
  t50399 = t3066*t50070;
  t50411 = -1.*t32374*t49613;
  t50412 = t50395 + t50399 + t50411;
  t50363 = -3.e-6*t32374*t50053;
  t50368 = t32374*t50070;
  t50383 = t49283*t49613;
  t50386 = t50363 + t50368 + t50383;
  t50420 = t31424*t50412;
  t50437 = -1.*t50430*t31830;
  t50439 = t50420 + t50437;
  t50456 = 0.2*t49318;
  t50457 = -1.*t49633*t43933;
  t50536 = -1.*t41839*t50535;
  t50537 = -1.*t50053*t44170;
  t50635 = -1.*t34371*t50630;
  t50636 = t49798*t43933;
  t50646 = t41714*t50535;
  t50647 = t50070*t44170;
  t50663 = t33244*t50630;
  t50682 = t50636 + t50646 + t50647 + t50663;
  t50693 = -3.e-6*t50682;
  t50733 = t50456 + t50457 + t50536 + t50537 + t50635 + t50693;
  t51475 = t31424*t48993;
  t51476 = t49015*t31830;
  t51478 = t51475 + t51476;
  t50938 = -1.*t3066*t31424;
  t50940 = -3.e-6*t3066*t31830;
  t50941 = t50938 + t50940;
  t50962 = 1.000000000009*t31424*t32374;
  t50965 = 3.000000000027e-6*t32374*t31830;
  t50968 = t50962 + t50965;
  t51002 = 3.e-6*t3066*t33197;
  t51004 = 3.e-6*t32374*t41714;
  t51006 = -9.e-12*t32374*t41839;
  t51017 = t51002 + t51004 + t51006;
  t50991 = -1.*t3066*t33197;
  t50992 = -1.*t32374*t41714;
  t50994 = 3.e-6*t32374*t41839;
  t50995 = t50991 + t50992 + t50994;
  t50977 = -1.000000000009*t32374*t33197;
  t50980 = -3.e-6*t3066*t41839;
  t50981 = t50977 + t42518 + t50980;
  t50996 = t31424*t50995;
  t51018 = -1.*t51017*t31830;
  t51020 = t50996 + t51018;
  t51070 = 3.e-6*t32374*t33244;
  t51076 = -9.e-12*t32374*t34371;
  t51077 = 3.e-6*t3066*t36322;
  t51078 = t51070 + t51076 + t51077;
  t51056 = -1.*t32374*t33244;
  t51058 = 3.e-6*t32374*t34371;
  t51065 = -1.*t3066*t36322;
  t51066 = t51056 + t51058 + t51065;
  t51034 = -3.e-6*t3066*t34371;
  t51037 = -1.000000000009*t32374*t36322;
  t51043 = t43294 + t51034 + t51037;
  t51069 = t31424*t51066;
  t51089 = -1.*t51078*t31830;
  t51091 = t51069 + t51089;
  t51135 = -9.e-12*t32374*t33230;
  t51138 = 3.e-6*t3066*t39322;
  t51143 = 3.e-6*t32374*t40365;
  t51153 = t51135 + t51138 + t51143;
  t51111 = 3.e-6*t32374*t33230;
  t51115 = -1.*t3066*t39322;
  t51118 = -1.*t32374*t40365;
  t51119 = t51111 + t51115 + t51118;
  t51096 = -3.e-6*t3066*t33230;
  t51097 = -1.000000000009*t32374*t39322;
  t51104 = t51096 + t51097 + t49003;
  t51121 = t31424*t51119;
  t51157 = -1.*t51153*t31830;
  t51160 = t51121 + t51157;
  t51193 = 1.000000000009*t32374*t49415;
  t51194 = -1.*t1705*t50851;
  t51196 = t51193 + t51194;
  t51199 = -1.*t49283*t49415;
  t51200 = -1.*t1705*t50869;
  t51205 = t51199 + t51200;
  t51209 = -1.*t49998*t49415;
  t51212 = -1.*t1705*t50017;
  t51216 = t51209 + t51212;
  t51221 = -1.*t50186*t49415;
  t51222 = -1.*t1705*t50209;
  t51226 = t51221 + t51222;
  t51258 = -1.*t50748*t49415;
  t51261 = -1.*t1705*t50775;
  t51268 = t51258 + t51261;
  t51502 = t31424*t49501;
  t51503 = t49456*t31830;
  t51509 = t51502 + t51503;
  t51513 = t1705*t49414;
  t51515 = -1.*t49415*t49582;
  t51517 = t51513 + t51515;
  t51555 = t31424*t50340;
  t51558 = t50324*t31830;
  t51560 = t51555 + t51558;
  t51564 = t1705*t50314;
  t51565 = -1.*t49415*t50350;
  t51568 = t51564 + t51565;
  t51587 = t31424*t50430;
  t51599 = t50412*t31830;
  t51600 = t51587 + t51599;
  t51611 = t1705*t50386;
  t51612 = -1.*t49415*t50439;
  t51627 = t51611 + t51612;
  t51372 = t31417*t31424;
  t51375 = t31811*t31830;
  t51378 = t51372 + t51375;
  t51391 = 3.e-6*t31424*t32374;
  t51392 = -1.*t32374*t31830;
  t51393 = t51391 + t51392;
  t51532 = t51276*t51422;
  t51539 = -1.*t51182*t50898;
  t51540 = t51532 + t51539;
  t51547 = t51276*t51444;
  t51548 = -1.*t51182*t50907;
  t51551 = t51547 + t51548;
  t51638 = t51276*t51478;
  t51639 = -1.*t51182*t50922;
  t51640 = t51638 + t51639;
  t51648 = 3.e-6*t3066*t31424;
  t51651 = -1.*t3066*t31830;
  t51652 = t51648 + t51651;
  t51663 = -1.*t49415*t50941;
  t51665 = t50833 + t51663;
  t51675 = -3.000000000027e-6*t31424*t32374;
  t51677 = 1.000000000009*t32374*t31830;
  t51682 = t51675 + t51677;
  t51685 = -1.000000000009*t3066*t1705;
  t51689 = -1.*t49415*t50968;
  t51690 = t51685 + t51689;
  t51703 = t31424*t51017;
  t51707 = t50995*t31830;
  t51714 = t51703 + t51707;
  t51719 = t1705*t50981;
  t51723 = -1.*t49415*t51020;
  t51727 = t51719 + t51723;
  t51738 = t31424*t51078;
  t51745 = t51066*t31830;
  t51747 = t51738 + t51745;
  t51752 = t1705*t51043;
  t51754 = -1.*t49415*t51091;
  t51755 = t51752 + t51754;
  t51770 = t31424*t51153;
  t51776 = t51119*t31830;
  t51778 = t51770 + t51776;
  t51781 = t1705*t51104;
  t51793 = -1.*t49415*t51160;
  t51796 = t51781 + t51793;
  t52263 = -3.e-6*t34162;
  t52235 = -3.e-6*t3066;
  t52238 = t31382 + t52235;
  t52380 = 2.999982e-7*t4467;
  t52382 = -1. + t3066;
  t52383 = 0.2*t52382;
  t52388 = -0.2*t3066;
  t52391 = -0.05*t32374;
  t52406 = t52380 + t52383 + t52388 + t52391;
  t52339 = 0.1*t28042;
  t52344 = 5.4e-18*t4467;
  t52346 = 1.5e-7*t32374;
  t52366 = t52339 + t52344 + t52346;
  t52424 = t52238*t31424;
  t52429 = t52424 + t31830;
  t52431 = 0.05*t49283;
  t52434 = -2.999982e-7*t32374;
  t52435 = t52431 + t52434;
  t52444 = t31424*t52406;
  t52449 = -1.*t52366*t31830;
  t52457 = t52444 + t52449;
  t52376 = t31424*t52366;
  t52412 = t52406*t31830;
  t52413 = t52376 + t52412;
  t50935 = -1.000000000009*t32374*t49415;
  t52537 = -1.*t31424*t52366;
  t52552 = -1.*t52406*t31830;
  t52559 = t52537 + t52552;
  t52441 = t52435*t49415;
  t52471 = t1705*t52457;
  t52472 = t52441 + t52471;
  t52488 = t1705*t52435;
  t52493 = -1.*t49415*t52457;
  t52505 = t52488 + t52493;
  t52565 = t1705*t50851;
  t52571 = t50935 + t52565;
  t52322 = -1.*t31424;
  t52325 = t52238*t31830;
  t52336 = t52322 + t52325;
  t52247 = -1.*t52238*t31830;
  t52251 = t31424 + t52247;
  t52601 = Power(t1705,2);
  t52605 = Power(t49415,2);
  t52700 = t49283*t49415;
  t52712 = t1705*t50869;
  t52716 = t52700 + t52712;
  t50187 = t50186*t49415;
  t50270 = t1705*t50209;
  t50276 = t50187 + t50270;
  t52970 = -1.8e-12*t4467;
  t52973 = t3066*t34155;
  t52986 = 3.e-6*t4467*t34218;
  t52987 = -1.*t32374*t38279;
  t52995 = t52970 + t52383 + t52973 + t52986 + t52987;
  t52916 = 6.000000000054e-7*t4467;
  t52926 = 3.e-6*t4467*t34155;
  t52927 = t28042*t34218;
  t52937 = 3.e-6*t32374*t38279;
  t52939 = t52916 + t52926 + t52927 + t52937;
  t50000 = t49998*t49415;
  t50020 = t1705*t50017;
  t50022 = t50000 + t50020;
  t53022 = -1.*t31424*t52939;
  t53031 = -1.*t52995*t31830;
  t53032 = t53022 + t53031;
  t53010 = t31424*t52995;
  t53014 = -1.*t52939*t31830;
  t53016 = t53010 + t53014;
  t53046 = 0.2000000000018*t32374;
  t53048 = t32374*t34155;
  t53049 = -3.e-6*t32374*t34218;
  t53050 = t49283*t38279;
  t53061 = t53046 + t53048 + t53049 + t53050;
  t52962 = t31424*t52939;
  t53003 = t52995*t31830;
  t53004 = t52962 + t53003;
  t53063 = t53061*t49415;
  t53073 = t1705*t53016;
  t53074 = t53063 + t53073;
  t53098 = t1705*t53061;
  t53102 = -1.*t49415*t53016;
  t53107 = t53098 + t53102;
  t50758 = t50748*t49415;
  t50776 = t1705*t50775;
  t50779 = t50758 + t50776;
  t52266 = -3.e-6*t41714;
  t52273 = t52263 + t33012 + t52266 + t33212;
  t52276 = -3.e-6*t33244;
  t52281 = t52263 + t33012 + t52276 + t33028;
  t52293 = 1.8e-11*t32984;
  t52299 = -3.e-6*t33226;
  t52303 = -3.e-6*t33032;
  t52305 = -3.e-6*t40365;
  t52311 = -1. + t52293 + t52299 + t52303 + t52305;
  t52415 = t52336*t52413;
  t52473 = t1705*t52429*t52472;
  t52514 = -1.*t49415*t52429*t52505;
  t52516 = t52415 + t52473 + t52514;
  t53535 = -1.*t52435*t49415;
  t53542 = -1.*t1705*t52457;
  t53543 = t53535 + t53542;
  t52641 = -1.*t51378*t52413;
  t52656 = -1.*t52571*t52472;
  t52671 = -1.*t50856*t52505;
  t52674 = t52641 + t52656 + t52671;
  t52680 = -1.*t52336*t52413;
  t52684 = -1.*t1705*t52429*t52472;
  t52686 = t49415*t52429*t52505;
  t52693 = t52680 + t52684 + t52686;
  t52880 = t52413*t51393;
  t52886 = t52472*t52716;
  t52892 = t52505*t50873;
  t52895 = t52880 + t52886 + t52892;
  t53171 = -1.*t51422*t53004;
  t53181 = -1.*t50022*t53074;
  t53183 = -1.*t50898*t53107;
  t53186 = t53171 + t53181 + t53183;
  t53672 = -1.*t53061*t49415;
  t53674 = -1.*t1705*t53016;
  t53675 = t53672 + t53674;
  t53195 = t51444*t53004;
  t53198 = t50276*t53074;
  t53199 = t50907*t53107;
  t53203 = t53195 + t53198 + t53199;
  t53251 = t51422*t53004;
  t53252 = t50022*t53074;
  t53253 = t50898*t53107;
  t53260 = t53251 + t53252 + t53253;
  t53294 = -1.*t53004*t51478;
  t53295 = -1.*t53074*t50779;
  t53299 = -1.*t53107*t50922;
  t53301 = t53294 + t53295 + t53299;
  t53377 = -1.*t51444*t53004;
  t53387 = -1.*t50276*t53074;
  t53403 = -1.*t50907*t53107;
  t53409 = t53377 + t53387 + t53403;
  t53488 = t53004*t51478;
  t53489 = t53074*t50779;
  t53490 = t53107*t50922;
  t53491 = t53488 + t53489 + t53490;
  t49425 = t49414*t49415;
  t49592 = t1705*t49582;
  t49599 = t49425 + t49592;
  t54059 = 3.000000000054e-6*t33014;
  t50317 = t50314*t49415;
  t50351 = t1705*t50350;
  t50352 = t50317 + t50351;
  t50393 = t50386*t49415;
  t50446 = t1705*t50439;
  t50451 = t50393 + t50446;
  t54403 = t3066*t49697;
  t54404 = 3.e-6*t4467*t49753;
  t54424 = -1.*t32374*t49783;
  t54425 = t54403 + t54404 + t54424;
  t54272 = 3.e-6*t4467*t49697;
  t54274 = t28042*t49753;
  t54342 = 3.e-6*t32374*t49783;
  t54356 = t54272 + t54274 + t54342;
  t54496 = t32374*t49697;
  t54500 = -3.e-6*t32374*t49753;
  t54505 = t49283*t49783;
  t54523 = t54496 + t54500 + t54505;
  t54537 = t31424*t54425;
  t54540 = -1.*t54356*t31830;
  t54547 = t54537 + t54540;
  t54363 = t31424*t54356;
  t54435 = t54425*t31830;
  t54464 = t54363 + t54435;
  t54528 = t54523*t49415;
  t54549 = t1705*t54547;
  t54550 = t54528 + t54549;
  t54577 = t1705*t54523;
  t54594 = -1.*t49415*t54547;
  t54638 = t54577 + t54594;
  t50990 = t50981*t49415;
  t51024 = t1705*t51020;
  t51026 = t50990 + t51024;
  t51052 = t51043*t49415;
  t51092 = t1705*t51091;
  t51094 = t51052 + t51092;
  t51109 = t51104*t49415;
  t51161 = t1705*t51160;
  t51162 = t51109 + t51161;
  t55238 = -0.05*t3066;
  t55256 = 2.999982e-7*t32374;
  t55260 = t55238 + t55256;
  t55213 = 1.5e-7*t3066;
  t55220 = -8.999946e-13*t32374;
  t55221 = t55213 + t55220;
  t55286 = -2.999982e-7*t3066;
  t55308 = -0.05000000000045*t32374;
  t55309 = t55286 + t55308;
  t55323 = t31424*t55260;
  t55328 = -1.*t55221*t31830;
  t55352 = t55323 + t55328;
  t50943 = t1705*t50941;
  t50944 = t50935 + t50943;
  t55236 = t31424*t55221;
  t55265 = t55260*t31830;
  t55273 = t55236 + t55265;
  t55315 = t55309*t49415;
  t55356 = t1705*t55352;
  t55395 = t55315 + t55356;
  t55419 = t1705*t55309;
  t55424 = -1.*t49415*t55352;
  t55441 = t55419 + t55424;
  t50951 = -1.000000000009*t3066*t49415;
  t50969 = t1705*t50968;
  t50975 = t50951 + t50969;
  t55612 = -0.2000000000018*t32374;
  t55614 = -1.*t32374*t34155;
  t55625 = 3.e-6*t32374*t34218;
  t55626 = -1.*t3066*t38279;
  t55631 = t55612 + t55614 + t55625 + t55626;
  t55600 = 6.000000000054e-7*t32374;
  t55601 = 3.e-6*t32374*t34155;
  t55603 = -9.e-12*t32374*t34218;
  t55605 = 3.e-6*t3066*t38279;
  t55608 = t55600 + t55601 + t55603 + t55605;
  t55668 = 0.2000000000018*t3066;
  t55669 = -3.e-6*t3066*t34218;
  t55682 = -1.000000000009*t32374*t38279;
  t55685 = t55668 + t52973 + t55669 + t55682;
  t55698 = t31424*t55631;
  t55706 = -1.*t55608*t31830;
  t55707 = t55698 + t55706;
  t55611 = t31424*t55608;
  t55633 = t55631*t31830;
  t55647 = t55611 + t55633;
  t55687 = t55685*t49415;
  t55708 = t1705*t55707;
  t55712 = t55687 + t55708;
  t55717 = t1705*t55685;
  t55729 = -1.*t49415*t55707;
  t55733 = t55717 + t55729;
  t54058 = -3.e-6*t50070;
  t54064 = t49209 + t54058 + t54059;
  t54073 = -3.e-6*t49798;
  t54087 = t49218 + t54059 + t54073;
  t54155 = -3.e-6*t49352;
  t54168 = -3.e-6*t49213;
  t54189 = -3.e-6*t49245;
  t54191 = 1.8e-11*t33014;
  t54210 = t54155 + t54168 + t54189 + t54191;
  t56154 = -1.*t49998*t53061;
  t56160 = -1.*t50017*t53016;
  t56166 = t56154 + t53171 + t56160;
  t56178 = t50186*t53061;
  t56212 = t50209*t53016;
  t56214 = t56178 + t53195 + t56212;
  t54465 = t54464*t51444;
  t54470 = t51560*t53004;
  t54673 = -1.*t51422*t54464;
  t54676 = -1.*t51600*t53004;
  t56340 = t49998*t53061;
  t56343 = t50017*t53016;
  t56349 = t56340 + t53251 + t56343;
  t54791 = t51422*t54464;
  t54796 = t51600*t53004;
  t54829 = -1.*t51509*t53004;
  t54842 = -1.*t54464*t51478;
  t56375 = -1.*t53061*t50748;
  t56378 = -1.*t53016*t50775;
  t56406 = t56375 + t56378 + t53294;
  t56577 = -1.*t50186*t53061;
  t56580 = -1.*t50209*t53016;
  t56586 = t56577 + t53377 + t56580;
  t54950 = -1.*t54464*t51444;
  t54954 = -1.*t51560*t53004;
  t55024 = t51509*t53004;
  t55027 = t54464*t51478;
  t56609 = t53061*t50748;
  t56616 = t53016*t50775;
  t56621 = t56609 + t56616 + t53488;
  t52535 = -1.*t50851*t52413;
  t52536 = -1.*t51378*t52457;
  t52617 = t52429*t52413;
  t52623 = t52336*t52457;
  t52724 = -1.*t52429*t52413;
  t52726 = -1.*t52336*t52457;
  t52806 = t52457*t51393;
  t52818 = t52413*t50869;
  t53007 = -1.*t50017*t53004;
  t53017 = -1.*t51422*t53016;
  t53122 = t50209*t53004;
  t53125 = t51444*t53016;
  t53224 = t50017*t53004;
  t53225 = t51422*t53016;
  t53263 = -1.*t53004*t50775;
  t53269 = -1.*t53016*t51478;
  t53316 = -1.*t50209*t53004;
  t53327 = -1.*t51444*t53016;
  t53421 = t53004*t50775;
  t53424 = t53016*t51478;
  t57545 = -1.*t52429*t52457;
  t57580 = t52680 + t57545;
  t55276 = -1.*t52336*t55273;
  t55479 = t51652*t52413;
  t55484 = t55273*t51393;
  t57255 = t52429*t52457;
  t57257 = t52415 + t57255;
  t55524 = t52336*t55273;
  t55556 = -1.*t51378*t55273;
  t55569 = -1.*t52413*t51682;
  t55649 = -1.*t51422*t55647;
  t55656 = -1.*t51714*t53004;
  t55756 = t51444*t55647;
  t55758 = t51747*t53004;
  t55791 = t51422*t55647;
  t55792 = t51714*t53004;
  t55809 = -1.*t55647*t51478;
  t55824 = -1.*t53004*t51778;
  t55866 = -1.*t51444*t55647;
  t55879 = -1.*t51747*t53004;
  t55921 = t55647*t51478;
  t55925 = t53004*t51778;
  t58363 = -1.*t50981*t53061;
  t58366 = -1.*t49998*t55685;
  t58421 = t51043*t53061;
  t58426 = t50186*t55685;
  t58473 = t50981*t53061;
  t58475 = t49998*t55685;
  t58504 = -1.*t53061*t51104;
  t58509 = -1.*t55685*t50748;
  t58664 = -1.*t51043*t53061;
  t58667 = -1.*t50186*t55685;
  t58832 = t53061*t51104;
  t58839 = t55685*t50748;
  t58982 = -1.*t42526*t52995;
  t58984 = -1.*t42440*t52939;
  t58985 = t56154 + t58982 + t58984;
  t59210 = t43817*t52995;
  t59225 = t43197*t52939;
  t59249 = t56178 + t59210 + t59225;
  t56281 = t54523*t50186;
  t56284 = t50314*t53061;
  t56298 = -1.*t49998*t54523;
  t56301 = -1.*t50386*t53061;
  t59289 = t42526*t52995;
  t59307 = t42440*t52939;
  t59341 = t56340 + t59289 + t59307;
  t56428 = t49998*t54523;
  t56430 = t50386*t53061;
  t56475 = -1.*t49414*t53061;
  t56499 = -1.*t54523*t50748;
  t59408 = -1.*t52939*t48993;
  t59413 = -1.*t52995*t49015;
  t59429 = t59408 + t59413 + t56375;
  t59549 = -1.*t43817*t52995;
  t59552 = -1.*t43197*t52939;
  t59556 = t56577 + t59549 + t59552;
  t56676 = -1.*t54523*t50186;
  t56686 = -1.*t50314*t53061;
  t56780 = t49414*t53061;
  t56784 = t54523*t50748;
  t59586 = t52939*t48993;
  t59590 = t52995*t49015;
  t59592 = t59586 + t59590 + t56609;
  p_output1[0]=var2[10]*(-0.5*(0.0013000000000117*t50856 - 7.8000468000702e-9*t50873 + 0.05186*t41481*t50898 + 0.05186*t42742*t50907 + 0.05186*t48744*t50922)*var2[4] - 0.5*(0.0013000000000117*t1705*t32330 - 7.8000468000702e-9*t1705*t32652 + 0.05186*t1705*t41481*t42535 + 0.05186*t1705*t42742*t43835 + 0.05186*t1705*t48744*t49060)*var2[5] - 0.5*(-7.8000468000702e-9*t50944 + 0.0013000000000117*t50975 + 0.05186*t41481*t51026 + 0.05186*t42742*t51094 + 0.05186*t48744*t51162)*var2[10] - 0.5*(0.05186*t48744*t49599 + 0.05186*t49977*t50022 + 0.05186*t50170*t50276 + 0.05186*t42742*t50352 + 0.05186*t41481*t50451 + 0.05186*t50733*t50779)*var2[12]);
  p_output1[1]=var2[10]*(-0.5*(0.0013000000000117*(-1.*t50856*t51276 - 1.*t51182*t51378) - 7.8000468000702e-9*(-1.*t50873*t51276 - 1.*t51182*t51393) + 0.05186*t41481*(-1.*t50898*t51276 - 1.*t51182*t51422) + 0.05186*t42742*(-1.*t50907*t51276 - 1.*t51182*t51444) + 0.05186*t48744*(-1.*t50922*t51276 - 1.*t51182*t51478))*var2[3] - 0.5*(-0.0013000000000117*t51182*t51196 + 7.8000468000702e-9*t51182*t51205 - 0.05186*t41481*t51182*t51216 - 0.05186*t42742*t51182*t51226 - 0.05186*t48744*t51182*t51268)*var2[4] - 0.5*(0.05186*t41481*(t42535*t49415*t51182 + t50017*t51276) + 0.05186*t42742*(t43835*t49415*t51182 + t50209*t51276) + 0.05186*t48744*(t49060*t49415*t51182 + t50775*t51276) + 0.0013000000000117*(t32330*t49415*t51182 + t50851*t51276) - 7.8000468000702e-9*(t32652*t49415*t51182 + t50869*t51276))*var2[5] - 0.5*(-7.8000468000702e-9*(t51276*t51652 - 1.*t51182*t51665) + 0.0013000000000117*(t51276*t51682 - 1.*t51182*t51690) + 0.05186*t41481*(t51276*t51714 - 1.*t51182*t51727) + 0.05186*t42742*(t51276*t51747 - 1.*t51182*t51755) + 0.05186*t48744*(t51276*t51778 - 1.*t51182*t51796))*var2[10] - 0.5*(0.05186*t48744*(t51276*t51509 - 1.*t51182*t51517) + 0.05186*t49977*t51540 + 0.05186*t50170*t51551 + 0.05186*t42742*(t51276*t51560 - 1.*t51182*t51568) + 0.05186*t41481*(t51276*t51600 - 1.*t51182*t51627) + 0.05186*t50733*t51640)*var2[12]);
  p_output1[2]=var2[10]*(-0.5*(0.0013000000000117*(-1.*t50856*t51182 + t51276*t51378) - 7.8000468000702e-9*(-1.*t50873*t51182 + t51276*t51393) + 0.05186*t41481*t51540 + 0.05186*t42742*t51551 + 0.05186*t48744*t51640)*var2[3] - 0.5*(0.0013000000000117*t51196*t51276 - 7.8000468000702e-9*t51205*t51276 + 0.05186*t41481*t51216*t51276 + 0.05186*t42742*t51226*t51276 + 0.05186*t48744*t51268*t51276)*var2[4] - 0.5*(0.0013000000000117*(t50851*t51182 - 1.*t32330*t49415*t51276) - 7.8000468000702e-9*(t50869*t51182 - 1.*t32652*t49415*t51276) + 0.05186*t41481*(t50017*t51182 - 1.*t42535*t49415*t51276) + 0.05186*t42742*(t50209*t51182 - 1.*t43835*t49415*t51276) + 0.05186*t48744*(t50775*t51182 - 1.*t49060*t49415*t51276))*var2[5] - 0.5*(-7.8000468000702e-9*(t51182*t51652 + t51276*t51665) + 0.0013000000000117*(t51182*t51682 + t51276*t51690) + 0.05186*t41481*(t51182*t51714 + t51276*t51727) + 0.05186*t42742*(t51182*t51747 + t51276*t51755) + 0.05186*t48744*(t51182*t51778 + t51276*t51796))*var2[10] - 0.5*(0.05186*t49977*(t50898*t51276 + t51182*t51422) + 0.05186*t50170*(t50907*t51276 + t51182*t51444) + 0.05186*t50733*(t50922*t51276 + t51182*t51478) + 0.05186*t48744*(t51182*t51509 + t51276*t51517) + 0.05186*t42742*(t51182*t51560 + t51276*t51568) + 0.05186*t41481*(t51182*t51600 + t51276*t51627))*var2[12]);
  p_output1[3]=var2[10]*(-0.5*(0.000245*t50898*t52273 + 2.e-6*t50907*t52281 + 0.000245*t50922*t52311 - 0.000046000000000414*t49415*t52429 - 7.8000468000702e-9*(t50856*t52516 - 1.*t49415*t52429*t52674 + t1705*t52429*(-1.*t50856*t52472 - 1.*t51196*t52505 - 1.*t52505*t52571 - 1.*t50856*t53543) + t52571*(-1.*t49415*t52429*t52472 - 1.*t49415*t52429*t53543)) + 0.0013000000000117*(t50873*t52693 - 1.*t49415*t52429*t52895 + t1705*t52429*(t50873*t52472 + t51205*t52505 + t52505*t52716 + t50873*t53543) + t52716*(t49415*t52429*t52472 + t49415*t52429*t53543)) + 0.05186*t48744*(t50907*t53186 + t50898*t53203 + t50276*(-1.*t50898*t53074 - 1.*t50022*t53107 - 1.*t51216*t53107 - 1.*t50898*t53675) + t50022*(t50907*t53074 + t50276*t53107 + t51226*t53107 + t50907*t53675)) + 0.05186*t42742*(t50922*t53260 + t50898*t53301 + t50779*(t50898*t53074 + t50022*t53107 + t51216*t53107 + t50898*t53675) + t50022*(-1.*t50922*t53074 - 1.*t50779*t53107 - 1.*t51268*t53107 - 1.*t50922*t53675)) + 0.05186*t41481*(t50922*t53409 + t50907*t53491 + t50779*(-1.*t50907*t53074 - 1.*t50276*t53107 - 1.*t51226*t53107 - 1.*t50907*t53675) + t50276*(t50922*t53074 + t50779*t53107 + t51268*t53107 + t50922*t53675)))*var2[4] - 0.5*(0.000046000000000414*t1705*t52251 + 0.000245*t1705*t42535*t52273 + 2.e-6*t1705*t43835*t52281 + 0.000245*t1705*t49060*t52311 - 7.8000468000702e-9*(t1705*t32330*t52516 + t1705*t52429*(-1.*t1705*t32330*t52472 + t32330*t49415*t52505 + t52535 + t52536 + t49415*t50856*t52559 - 1.*t1705*t52559*t52571) + t52571*(t1705*t52251*t52472 - 1.*t49415*t52251*t52505 + t52429*t52559*t52601 + t52429*t52559*t52605 + t52617 + t52623) + t1705*t52251*t52674) + 0.0013000000000117*(t1705*t32652*t52693 + t52716*(-1.*t1705*t52251*t52472 + t49415*t52251*t52505 - 1.*t52429*t52559*t52601 - 1.*t52429*t52559*t52605 + t52724 + t52726) + t1705*t52429*(t1705*t32652*t52472 - 1.*t32652*t49415*t52505 - 1.*t49415*t50873*t52559 + t1705*t52559*t52716 + t52806 + t52818) + t1705*t52251*t52895) + 0.05186*t48744*(t50276*(t53007 + t53017 - 1.*t1705*t50022*t53032 + t49415*t50898*t53032 - 1.*t1705*t42535*t53074 + t42535*t49415*t53107) + t50022*(t1705*t50276*t53032 - 1.*t49415*t50907*t53032 + t1705*t43835*t53074 - 1.*t43835*t49415*t53107 + t53122 + t53125) + t1705*t43835*t53186 + t1705*t42535*t53203) + 0.05186*t42742*(t50779*(t1705*t50022*t53032 - 1.*t49415*t50898*t53032 + t1705*t42535*t53074 - 1.*t42535*t49415*t53107 + t53224 + t53225) + t1705*t49060*t53260 + t50022*(-1.*t1705*t50779*t53032 + t49415*t50922*t53032 - 1.*t1705*t49060*t53074 + t49060*t49415*t53107 + t53263 + t53269) + t1705*t42535*t53301) + 0.05186*t41481*(t50779*(-1.*t1705*t50276*t53032 + t49415*t50907*t53032 - 1.*t1705*t43835*t53074 + t43835*t49415*t53107 + t53316 + t53327) + t1705*t49060*t53409 + t50276*(t1705*t50779*t53032 - 1.*t49415*t50922*t53032 + t1705*t49060*t53074 - 1.*t49060*t49415*t53107 + t53421 + t53424) + t1705*t43835*t53491))*var2[5] - 0.5*(0.000245*t51026*t52273 + 2.e-6*t51094*t52281 + 0.000245*t51162*t52311 + 0.0013000000000117*(t50944*t52693 + t52716*(t55276 - 1.*t1705*t52429*t55395 + t49415*t52429*t55441) + t1705*t52429*(t50944*t52472 + t51665*t52505 + t52716*t55395 + t50873*t55441 + t55479 + t55484)) - 7.8000468000702e-9*(t50975*t52516 + t52571*(t1705*t52429*t55395 - 1.*t49415*t52429*t55441 + t55524) + t1705*t52429*(-1.*t50975*t52472 - 1.*t51690*t52505 - 1.*t52571*t55395 - 1.*t50856*t55441 + t55556 + t55569)) + 0.05186*t48744*(t51094*t53186 + t51026*t53203 + t50276*(-1.*t51026*t53074 - 1.*t51727*t53107 + t55649 + t55656 - 1.*t50022*t55712 - 1.*t50898*t55733) + t50022*(t51094*t53074 + t51755*t53107 + t50276*t55712 + t50907*t55733 + t55756 + t55758)) + 0.05186*t42742*(t51162*t53260 + t51026*t53301 + t50779*(t51026*t53074 + t51727*t53107 + t50022*t55712 + t50898*t55733 + t55791 + t55792) + t50022*(-1.*t51162*t53074 - 1.*t51796*t53107 - 1.*t50779*t55712 - 1.*t50922*t55733 + t55809 + t55824)) + 0.05186*t41481*(t51162*t53409 + t51094*t53491 + t50779*(-1.*t51094*t53074 - 1.*t51755*t53107 - 1.*t50276*t55712 - 1.*t50907*t55733 + t55866 + t55879) + t50276*(t51162*t53074 + t51796*t53107 + t50779*t55712 + t50922*t55733 + t55921 + t55925)))*var2[10] - 0.5*(0.000245*t50451*t52273 + 2.e-6*t50352*t52281 + 0.000245*t49599*t52311 + 0.05186*t50733*(t50276*t53186 + t50022*t53203) + 0.05186*t50170*(t50779*t53260 + t50022*t53301) + 0.05186*t49977*(t50779*t53409 + t50276*t53491) + 0.000245*t50022*t54064 + 2.e-6*t50276*t54087 + 0.000245*t50779*t54210 + 0.05186*t48744*(t50352*t53186 + t50451*t53203 + t50022*(t50352*t53074 + t51568*t53107 + t54465 + t54470 + t50276*t54550 + t50907*t54638) + t50276*(-1.*t50451*t53074 - 1.*t51627*t53107 - 1.*t50022*t54550 - 1.*t50898*t54638 + t54673 + t54676)) + 0.05186*t42742*(t49599*t53260 + t50451*t53301 + t50779*(t50451*t53074 + t51627*t53107 + t50022*t54550 + t50898*t54638 + t54791 + t54796) + t50022*(-1.*t49599*t53074 - 1.*t51517*t53107 - 1.*t50779*t54550 - 1.*t50922*t54638 + t54829 + t54842)) + 0.05186*t41481*(t49599*t53409 + t50352*t53491 + t50779*(-1.*t50352*t53074 - 1.*t51568*t53107 - 1.*t50276*t54550 - 1.*t50907*t54638 + t54950 + t54954) + t50276*(t49599*t53074 + t51517*t53107 + t50779*t54550 + t50922*t54638 + t55024 + t55027)))*var2[12]);
  p_output1[4]=var2[10]*(-0.5*(0.000245*t50017*t52273 + 2.e-6*t50209*t52281 + 0.000245*t50775*t52311 + 0.000046000000000414*t52429 + 0.05186*t48744*(t51444*(t53007 - 1.*t42535*t53016 + t53017 - 1.*t50017*t53032) + t51422*(t43835*t53016 + t50209*t53032 + t53122 + t53125) + t50209*t56166 + t50017*t56214) + 0.05186*t42742*(t51478*(t42535*t53016 + t50017*t53032 + t53224 + t53225) + t51422*(-1.*t49060*t53016 - 1.*t50775*t53032 + t53263 + t53269) + t50775*t56349 + t50017*t56406) + 0.05186*t41481*(t51478*(-1.*t43835*t53016 - 1.*t50209*t53032 + t53316 + t53327) + t51444*(t49060*t53016 + t50775*t53032 + t53421 + t53424) + t50775*t56586 + t50209*t56621) - 7.8000468000702e-9*(t52336*(-1.*t32330*t52457 + t52535 + t52536 - 1.*t50851*t52559) + t51378*(t52251*t52457 + t52429*t52559 + t52617 + t52623) + t52429*(1.000000000009*t32374*t52435 - 1.*t50851*t52457 + t52641) + t50851*t57257) + 0.0013000000000117*(t51393*(-1.*t52251*t52457 - 1.*t52429*t52559 + t52724 + t52726) + t52336*(t32652*t52457 + t50869*t52559 + t52806 + t52818) + t52429*(t49283*t52435 + t50869*t52457 + t52880) + t50869*t57580))*var2[5] - 0.5*(0.000245*t51714*t52273 + 2.e-6*t51747*t52281 + 0.000245*t51778*t52311 - 7.8000468000702e-9*(t51378*(t52429*t55352 + t55524) + t52336*(1.000000000009*t3066*t52435 - 1.*t50968*t52457 + 1.000000000009*t32374*t55309 - 1.*t50851*t55352 + t55556 + t55569) + t51682*t57257) + 0.0013000000000117*(t51393*(t55276 - 1.*t52429*t55352) + t52336*(-1.000000000009*t32374*t52435 + t50941*t52457 + t49283*t55309 + t50869*t55352 + t55479 + t55484) + t51652*t57580) + 0.05186*t48744*(t51747*t56166 + t51714*t56214 + t51444*(-1.*t51020*t53016 + t55649 + t55656 - 1.*t50017*t55707 + t58363 + t58366) + t51422*(t51091*t53016 + t50209*t55707 + t55756 + t55758 + t58421 + t58426)) + 0.05186*t42742*(t51778*t56349 + t51714*t56406 + t51478*(t51020*t53016 + t50017*t55707 + t55791 + t55792 + t58473 + t58475) + t51422*(-1.*t51160*t53016 - 1.*t50775*t55707 + t55809 + t55824 + t58504 + t58509)) + 0.05186*t41481*(t51778*t56586 + t51747*t56621 + t51478*(-1.*t51091*t53016 - 1.*t50209*t55707 + t55866 + t55879 + t58664 + t58667) + t51444*(t51160*t53016 + t50775*t55707 + t55921 + t55925 + t58832 + t58839)))*var2[10] - 0.5*(0.000245*t51600*t52273 + 2.e-6*t51560*t52281 + 0.000245*t51509*t52311 + 0.000245*t51422*t54064 + 2.e-6*t51444*t54087 + 0.000245*t51478*t54210 + 0.05186*t50733*(t51444*t56166 + t51422*t56214) + 0.05186*t48744*(t51560*t56166 + t51600*t56214 + t51422*(t50350*t53016 + t54465 + t54470 + t50209*t54547 + t56281 + t56284) + t51444*(-1.*t50439*t53016 - 1.*t50017*t54547 + t54673 + t54676 + t56298 + t56301)) + 0.05186*t50170*(t51478*t56349 + t51422*t56406) + 0.05186*t42742*(t51509*t56349 + t51600*t56406 + t51478*(t50439*t53016 + t50017*t54547 + t54791 + t54796 + t56428 + t56430) + t51422*(-1.*t49582*t53016 - 1.*t50775*t54547 + t54829 + t54842 + t56475 + t56499)) + 0.05186*t49977*(t51478*t56586 + t51444*t56621) + 0.05186*t41481*(t51509*t56586 + t51560*t56621 + t51478*(-1.*t50350*t53016 - 1.*t50209*t54547 + t54950 + t54954 + t56676 + t56686) + t51444*(t49582*t53016 + t50775*t54547 + t55024 + t55027 + t56780 + t56784)))*var2[12]);
  p_output1[5]=var2[10]*(-0.5*(0.000245*t50981*t52273 + 2.e-6*t51043*t52281 + 0.000245*t51104*t52311 - 0.0013000000000234*t32374*(t52339 + t52344 + t52346 - 1.*t52238*t52406) + 7.8000468001404e-9*t3066*(0.1*(-1. + t31658) - 1.5e-7*t32374 - 5.4e-18*t4467 + t52238*t52406) + 0.0013000000000117*t49283*(t55213 + t55220 - 1.*t52238*t55260) + 7.8000468001404e-9*t32374*(-1.5e-7*t3066 + 8.999946e-13*t32374 + t52238*t55260) + 0.05186*t48744*(t50186*(-1.*t51017*t52939 - 1.*t50995*t52995 - 1.*t42440*t55608 - 1.*t42526*t55631 + t58363 + t58366) + t49998*(t51078*t52939 + t51066*t52995 + t43197*t55608 + t43817*t55631 + t58421 + t58426) + t51043*t58985 + t50981*t59249) + 0.05186*t42742*(t50748*(t51017*t52939 + t50995*t52995 + t42440*t55608 + t42526*t55631 + t58473 + t58475) + t49998*(-1.*t51153*t52939 - 1.*t51119*t52995 - 1.*t48993*t55608 - 1.*t49015*t55631 + t58504 + t58509) + t51104*t59341 + t50981*t59429) + 0.05186*t41481*(t50748*(-1.*t51078*t52939 - 1.*t51066*t52995 - 1.*t43197*t55608 - 1.*t43817*t55631 + t58664 + t58667) + t50186*(t51153*t52939 + t51119*t52995 + t48993*t55608 + t49015*t55631 + t58832 + t58839) + t51104*t59556 + t51043*t59592))*var2[10] - 0.5*(0.000245*t50386*t52273 + 2.e-6*t50314*t52281 + 0.000245*t49414*t52311 + 0.000245*t49998*t54064 + 2.e-6*t50186*t54087 + 0.000245*t50748*t54210 + 0.05186*t50733*(t50186*t58985 + t49998*t59249) + 0.05186*t48744*(t49998*(t50340*t52939 + t50324*t52995 + t43197*t54356 + t43817*t54425 + t56281 + t56284) + t50186*(-1.*t50430*t52939 - 1.*t50412*t52995 - 1.*t42440*t54356 - 1.*t42526*t54425 + t56298 + t56301) + t50314*t58985 + t50386*t59249) + 0.05186*t50170*(t50748*t59341 + t49998*t59429) + 0.05186*t42742*(t50748*(t50430*t52939 + t50412*t52995 + t42440*t54356 + t42526*t54425 + t56428 + t56430) + t49998*(-1.*t49501*t52939 - 1.*t49456*t52995 - 1.*t48993*t54356 - 1.*t49015*t54425 + t56475 + t56499) + t49414*t59341 + t50386*t59429) + 0.05186*t49977*(t50748*t59556 + t50186*t59592) + 0.05186*t41481*(t50748*(-1.*t50340*t52939 - 1.*t50324*t52995 - 1.*t43197*t54356 - 1.*t43817*t54425 + t56676 + t56686) + t50186*(t49501*t52939 + t49456*t52995 + t48993*t54356 + t49015*t54425 + t56780 + t56784) + t49414*t59556 + t50314*t59592))*var2[12]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=-0.5*(0.10372*t41481*t49977 + 0.10372*t42742*t50170 + 0.10372*t48744*t50733 + 0.00049*t52273*t54064 + 4.e-6*t52281*t54087 + 0.00049*t52311*t54210)*var2[10]*var2[12];
  p_output1[11]=0;
  p_output1[12]=-0.5*(-1.555803111628e-8*t49977 + 0.00518601555815558*t50170 + 5.186e-9*t50733 + 0.00024500000000441*t54210)*var2[10]*var2[12];
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec11_minitaur.hh"

namespace FrontStance
{

void Ce1_vec11_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
