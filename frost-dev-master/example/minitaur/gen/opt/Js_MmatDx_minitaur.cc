/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:15:09 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1)
{
  double _NotUsed;
  NULL;
  p_output1[0]=1;
  p_output1[1]=1;
  p_output1[2]=1;
  p_output1[3]=1;
  p_output1[4]=1;
  p_output1[5]=1;
  p_output1[6]=1;
  p_output1[7]=1;
  p_output1[8]=1;
  p_output1[9]=1;
  p_output1[10]=1;
  p_output1[11]=1;
  p_output1[12]=1;
  p_output1[13]=1;
  p_output1[14]=1;
  p_output1[15]=1;
  p_output1[16]=1;
  p_output1[17]=1;
  p_output1[18]=1;
  p_output1[19]=1;
  p_output1[20]=1;
  p_output1[21]=1;
  p_output1[22]=1;
  p_output1[23]=1;
  p_output1[24]=1;
  p_output1[25]=1;
  p_output1[26]=1;
  p_output1[27]=1;
  p_output1[28]=1;
  p_output1[29]=1;
  p_output1[30]=1;
  p_output1[31]=1;
  p_output1[32]=1;
  p_output1[33]=1;
  p_output1[34]=1;
  p_output1[35]=1;
  p_output1[36]=1;
  p_output1[37]=1;
  p_output1[38]=1;
  p_output1[39]=1;
  p_output1[40]=1;
  p_output1[41]=2;
  p_output1[42]=2;
  p_output1[43]=2;
  p_output1[44]=2;
  p_output1[45]=2;
  p_output1[46]=2;
  p_output1[47]=2;
  p_output1[48]=2;
  p_output1[49]=2;
  p_output1[50]=2;
  p_output1[51]=2;
  p_output1[52]=2;
  p_output1[53]=2;
  p_output1[54]=2;
  p_output1[55]=2;
  p_output1[56]=2;
  p_output1[57]=2;
  p_output1[58]=2;
  p_output1[59]=2;
  p_output1[60]=2;
  p_output1[61]=2;
  p_output1[62]=2;
  p_output1[63]=2;
  p_output1[64]=2;
  p_output1[65]=2;
  p_output1[66]=2;
  p_output1[67]=2;
  p_output1[68]=2;
  p_output1[69]=2;
  p_output1[70]=2;
  p_output1[71]=2;
  p_output1[72]=2;
  p_output1[73]=2;
  p_output1[74]=2;
  p_output1[75]=2;
  p_output1[76]=2;
  p_output1[77]=2;
  p_output1[78]=2;
  p_output1[79]=2;
  p_output1[80]=2;
  p_output1[81]=2;
  p_output1[82]=3;
  p_output1[83]=3;
  p_output1[84]=3;
  p_output1[85]=3;
  p_output1[86]=3;
  p_output1[87]=3;
  p_output1[88]=3;
  p_output1[89]=3;
  p_output1[90]=3;
  p_output1[91]=3;
  p_output1[92]=3;
  p_output1[93]=3;
  p_output1[94]=3;
  p_output1[95]=3;
  p_output1[96]=3;
  p_output1[97]=3;
  p_output1[98]=3;
  p_output1[99]=3;
  p_output1[100]=3;
  p_output1[101]=3;
  p_output1[102]=3;
  p_output1[103]=3;
  p_output1[104]=3;
  p_output1[105]=3;
  p_output1[106]=3;
  p_output1[107]=3;
  p_output1[108]=3;
  p_output1[109]=3;
  p_output1[110]=3;
  p_output1[111]=3;
  p_output1[112]=3;
  p_output1[113]=3;
  p_output1[114]=3;
  p_output1[115]=3;
  p_output1[116]=3;
  p_output1[117]=3;
  p_output1[118]=3;
  p_output1[119]=3;
  p_output1[120]=3;
  p_output1[121]=3;
  p_output1[122]=3;
  p_output1[123]=4;
  p_output1[124]=4;
  p_output1[125]=4;
  p_output1[126]=4;
  p_output1[127]=4;
  p_output1[128]=4;
  p_output1[129]=4;
  p_output1[130]=4;
  p_output1[131]=4;
  p_output1[132]=4;
  p_output1[133]=4;
  p_output1[134]=4;
  p_output1[135]=4;
  p_output1[136]=4;
  p_output1[137]=4;
  p_output1[138]=4;
  p_output1[139]=4;
  p_output1[140]=4;
  p_output1[141]=4;
  p_output1[142]=4;
  p_output1[143]=4;
  p_output1[144]=4;
  p_output1[145]=4;
  p_output1[146]=4;
  p_output1[147]=4;
  p_output1[148]=4;
  p_output1[149]=4;
  p_output1[150]=4;
  p_output1[151]=4;
  p_output1[152]=4;
  p_output1[153]=4;
  p_output1[154]=4;
  p_output1[155]=4;
  p_output1[156]=4;
  p_output1[157]=4;
  p_output1[158]=4;
  p_output1[159]=4;
  p_output1[160]=4;
  p_output1[161]=4;
  p_output1[162]=4;
  p_output1[163]=4;
  p_output1[164]=5;
  p_output1[165]=5;
  p_output1[166]=5;
  p_output1[167]=5;
  p_output1[168]=5;
  p_output1[169]=5;
  p_output1[170]=5;
  p_output1[171]=5;
  p_output1[172]=5;
  p_output1[173]=5;
  p_output1[174]=5;
  p_output1[175]=5;
  p_output1[176]=5;
  p_output1[177]=5;
  p_output1[178]=5;
  p_output1[179]=5;
  p_output1[180]=5;
  p_output1[181]=5;
  p_output1[182]=5;
  p_output1[183]=5;
  p_output1[184]=5;
  p_output1[185]=5;
  p_output1[186]=5;
  p_output1[187]=5;
  p_output1[188]=5;
  p_output1[189]=5;
  p_output1[190]=5;
  p_output1[191]=5;
  p_output1[192]=5;
  p_output1[193]=5;
  p_output1[194]=5;
  p_output1[195]=5;
  p_output1[196]=5;
  p_output1[197]=5;
  p_output1[198]=5;
  p_output1[199]=5;
  p_output1[200]=5;
  p_output1[201]=5;
  p_output1[202]=5;
  p_output1[203]=5;
  p_output1[204]=5;
  p_output1[205]=6;
  p_output1[206]=6;
  p_output1[207]=6;
  p_output1[208]=6;
  p_output1[209]=6;
  p_output1[210]=6;
  p_output1[211]=6;
  p_output1[212]=6;
  p_output1[213]=6;
  p_output1[214]=6;
  p_output1[215]=6;
  p_output1[216]=6;
  p_output1[217]=6;
  p_output1[218]=6;
  p_output1[219]=6;
  p_output1[220]=6;
  p_output1[221]=6;
  p_output1[222]=6;
  p_output1[223]=6;
  p_output1[224]=6;
  p_output1[225]=6;
  p_output1[226]=6;
  p_output1[227]=6;
  p_output1[228]=6;
  p_output1[229]=6;
  p_output1[230]=6;
  p_output1[231]=6;
  p_output1[232]=6;
  p_output1[233]=6;
  p_output1[234]=6;
  p_output1[235]=6;
  p_output1[236]=6;
  p_output1[237]=6;
  p_output1[238]=6;
  p_output1[239]=6;
  p_output1[240]=6;
  p_output1[241]=6;
  p_output1[242]=6;
  p_output1[243]=6;
  p_output1[244]=6;
  p_output1[245]=6;
  p_output1[246]=7;
  p_output1[247]=7;
  p_output1[248]=7;
  p_output1[249]=7;
  p_output1[250]=7;
  p_output1[251]=7;
  p_output1[252]=7;
  p_output1[253]=7;
  p_output1[254]=7;
  p_output1[255]=7;
  p_output1[256]=7;
  p_output1[257]=7;
  p_output1[258]=7;
  p_output1[259]=8;
  p_output1[260]=8;
  p_output1[261]=8;
  p_output1[262]=8;
  p_output1[263]=8;
  p_output1[264]=8;
  p_output1[265]=8;
  p_output1[266]=8;
  p_output1[267]=8;
  p_output1[268]=8;
  p_output1[269]=8;
  p_output1[270]=8;
  p_output1[271]=8;
  p_output1[272]=9;
  p_output1[273]=9;
  p_output1[274]=9;
  p_output1[275]=9;
  p_output1[276]=9;
  p_output1[277]=9;
  p_output1[278]=9;
  p_output1[279]=9;
  p_output1[280]=9;
  p_output1[281]=9;
  p_output1[282]=9;
  p_output1[283]=9;
  p_output1[284]=9;
  p_output1[285]=10;
  p_output1[286]=10;
  p_output1[287]=10;
  p_output1[288]=10;
  p_output1[289]=10;
  p_output1[290]=10;
  p_output1[291]=10;
  p_output1[292]=10;
  p_output1[293]=10;
  p_output1[294]=10;
  p_output1[295]=10;
  p_output1[296]=10;
  p_output1[297]=10;
  p_output1[298]=11;
  p_output1[299]=11;
  p_output1[300]=11;
  p_output1[301]=11;
  p_output1[302]=11;
  p_output1[303]=11;
  p_output1[304]=11;
  p_output1[305]=11;
  p_output1[306]=11;
  p_output1[307]=11;
  p_output1[308]=11;
  p_output1[309]=11;
  p_output1[310]=11;
  p_output1[311]=12;
  p_output1[312]=12;
  p_output1[313]=12;
  p_output1[314]=12;
  p_output1[315]=12;
  p_output1[316]=12;
  p_output1[317]=12;
  p_output1[318]=12;
  p_output1[319]=12;
  p_output1[320]=12;
  p_output1[321]=12;
  p_output1[322]=12;
  p_output1[323]=12;
  p_output1[324]=13;
  p_output1[325]=13;
  p_output1[326]=13;
  p_output1[327]=13;
  p_output1[328]=13;
  p_output1[329]=13;
  p_output1[330]=13;
  p_output1[331]=13;
  p_output1[332]=13;
  p_output1[333]=13;
  p_output1[334]=13;
  p_output1[335]=13;
  p_output1[336]=13;
  p_output1[337]=14;
  p_output1[338]=14;
  p_output1[339]=14;
  p_output1[340]=14;
  p_output1[341]=14;
  p_output1[342]=14;
  p_output1[343]=14;
  p_output1[344]=14;
  p_output1[345]=14;
  p_output1[346]=14;
  p_output1[347]=14;
  p_output1[348]=14;
  p_output1[349]=14;
  p_output1[350]=15;
  p_output1[351]=15;
  p_output1[352]=15;
  p_output1[353]=15;
  p_output1[354]=15;
  p_output1[355]=15;
  p_output1[356]=15;
  p_output1[357]=15;
  p_output1[358]=15;
  p_output1[359]=15;
  p_output1[360]=15;
  p_output1[361]=15;
  p_output1[362]=15;
  p_output1[363]=16;
  p_output1[364]=16;
  p_output1[365]=16;
  p_output1[366]=16;
  p_output1[367]=16;
  p_output1[368]=16;
  p_output1[369]=16;
  p_output1[370]=16;
  p_output1[371]=16;
  p_output1[372]=16;
  p_output1[373]=16;
  p_output1[374]=16;
  p_output1[375]=16;
  p_output1[376]=17;
  p_output1[377]=17;
  p_output1[378]=17;
  p_output1[379]=17;
  p_output1[380]=17;
  p_output1[381]=17;
  p_output1[382]=17;
  p_output1[383]=17;
  p_output1[384]=17;
  p_output1[385]=17;
  p_output1[386]=17;
  p_output1[387]=17;
  p_output1[388]=17;
  p_output1[389]=18;
  p_output1[390]=18;
  p_output1[391]=18;
  p_output1[392]=18;
  p_output1[393]=18;
  p_output1[394]=18;
  p_output1[395]=18;
  p_output1[396]=18;
  p_output1[397]=18;
  p_output1[398]=18;
  p_output1[399]=18;
  p_output1[400]=18;
  p_output1[401]=18;
  p_output1[402]=19;
  p_output1[403]=19;
  p_output1[404]=19;
  p_output1[405]=19;
  p_output1[406]=19;
  p_output1[407]=19;
  p_output1[408]=19;
  p_output1[409]=19;
  p_output1[410]=19;
  p_output1[411]=19;
  p_output1[412]=19;
  p_output1[413]=19;
  p_output1[414]=19;
  p_output1[415]=20;
  p_output1[416]=20;
  p_output1[417]=20;
  p_output1[418]=20;
  p_output1[419]=20;
  p_output1[420]=20;
  p_output1[421]=20;
  p_output1[422]=20;
  p_output1[423]=20;
  p_output1[424]=20;
  p_output1[425]=20;
  p_output1[426]=20;
  p_output1[427]=20;
  p_output1[428]=21;
  p_output1[429]=21;
  p_output1[430]=21;
  p_output1[431]=21;
  p_output1[432]=21;
  p_output1[433]=21;
  p_output1[434]=21;
  p_output1[435]=21;
  p_output1[436]=21;
  p_output1[437]=21;
  p_output1[438]=21;
  p_output1[439]=21;
  p_output1[440]=21;
  p_output1[441]=22;
  p_output1[442]=22;
  p_output1[443]=22;
  p_output1[444]=22;
  p_output1[445]=22;
  p_output1[446]=22;
  p_output1[447]=22;
  p_output1[448]=22;
  p_output1[449]=22;
  p_output1[450]=22;
  p_output1[451]=22;
  p_output1[452]=22;
  p_output1[453]=22;
  p_output1[454]=4;
  p_output1[455]=5;
  p_output1[456]=6;
  p_output1[457]=7;
  p_output1[458]=8;
  p_output1[459]=9;
  p_output1[460]=10;
  p_output1[461]=11;
  p_output1[462]=12;
  p_output1[463]=13;
  p_output1[464]=14;
  p_output1[465]=15;
  p_output1[466]=16;
  p_output1[467]=17;
  p_output1[468]=18;
  p_output1[469]=19;
  p_output1[470]=20;
  p_output1[471]=21;
  p_output1[472]=22;
  p_output1[473]=23;
  p_output1[474]=24;
  p_output1[475]=25;
  p_output1[476]=26;
  p_output1[477]=27;
  p_output1[478]=28;
  p_output1[479]=29;
  p_output1[480]=30;
  p_output1[481]=31;
  p_output1[482]=32;
  p_output1[483]=33;
  p_output1[484]=34;
  p_output1[485]=35;
  p_output1[486]=36;
  p_output1[487]=37;
  p_output1[488]=38;
  p_output1[489]=39;
  p_output1[490]=40;
  p_output1[491]=41;
  p_output1[492]=42;
  p_output1[493]=43;
  p_output1[494]=44;
  p_output1[495]=4;
  p_output1[496]=5;
  p_output1[497]=6;
  p_output1[498]=7;
  p_output1[499]=8;
  p_output1[500]=9;
  p_output1[501]=10;
  p_output1[502]=11;
  p_output1[503]=12;
  p_output1[504]=13;
  p_output1[505]=14;
  p_output1[506]=15;
  p_output1[507]=16;
  p_output1[508]=17;
  p_output1[509]=18;
  p_output1[510]=19;
  p_output1[511]=20;
  p_output1[512]=21;
  p_output1[513]=22;
  p_output1[514]=23;
  p_output1[515]=24;
  p_output1[516]=25;
  p_output1[517]=26;
  p_output1[518]=27;
  p_output1[519]=28;
  p_output1[520]=29;
  p_output1[521]=30;
  p_output1[522]=31;
  p_output1[523]=32;
  p_output1[524]=33;
  p_output1[525]=34;
  p_output1[526]=35;
  p_output1[527]=36;
  p_output1[528]=37;
  p_output1[529]=38;
  p_output1[530]=39;
  p_output1[531]=40;
  p_output1[532]=41;
  p_output1[533]=42;
  p_output1[534]=43;
  p_output1[535]=44;
  p_output1[536]=4;
  p_output1[537]=5;
  p_output1[538]=6;
  p_output1[539]=7;
  p_output1[540]=8;
  p_output1[541]=9;
  p_output1[542]=10;
  p_output1[543]=11;
  p_output1[544]=12;
  p_output1[545]=13;
  p_output1[546]=14;
  p_output1[547]=15;
  p_output1[548]=16;
  p_output1[549]=17;
  p_output1[550]=18;
  p_output1[551]=19;
  p_output1[552]=20;
  p_output1[553]=21;
  p_output1[554]=22;
  p_output1[555]=23;
  p_output1[556]=24;
  p_output1[557]=25;
  p_output1[558]=26;
  p_output1[559]=27;
  p_output1[560]=28;
  p_output1[561]=29;
  p_output1[562]=30;
  p_output1[563]=31;
  p_output1[564]=32;
  p_output1[565]=33;
  p_output1[566]=34;
  p_output1[567]=35;
  p_output1[568]=36;
  p_output1[569]=37;
  p_output1[570]=38;
  p_output1[571]=39;
  p_output1[572]=40;
  p_output1[573]=41;
  p_output1[574]=42;
  p_output1[575]=43;
  p_output1[576]=44;
  p_output1[577]=4;
  p_output1[578]=5;
  p_output1[579]=6;
  p_output1[580]=7;
  p_output1[581]=8;
  p_output1[582]=9;
  p_output1[583]=10;
  p_output1[584]=11;
  p_output1[585]=12;
  p_output1[586]=13;
  p_output1[587]=14;
  p_output1[588]=15;
  p_output1[589]=16;
  p_output1[590]=17;
  p_output1[591]=18;
  p_output1[592]=19;
  p_output1[593]=20;
  p_output1[594]=21;
  p_output1[595]=22;
  p_output1[596]=23;
  p_output1[597]=24;
  p_output1[598]=25;
  p_output1[599]=26;
  p_output1[600]=27;
  p_output1[601]=28;
  p_output1[602]=29;
  p_output1[603]=30;
  p_output1[604]=31;
  p_output1[605]=32;
  p_output1[606]=33;
  p_output1[607]=34;
  p_output1[608]=35;
  p_output1[609]=36;
  p_output1[610]=37;
  p_output1[611]=38;
  p_output1[612]=39;
  p_output1[613]=40;
  p_output1[614]=41;
  p_output1[615]=42;
  p_output1[616]=43;
  p_output1[617]=44;
  p_output1[618]=4;
  p_output1[619]=5;
  p_output1[620]=6;
  p_output1[621]=7;
  p_output1[622]=8;
  p_output1[623]=9;
  p_output1[624]=10;
  p_output1[625]=11;
  p_output1[626]=12;
  p_output1[627]=13;
  p_output1[628]=14;
  p_output1[629]=15;
  p_output1[630]=16;
  p_output1[631]=17;
  p_output1[632]=18;
  p_output1[633]=19;
  p_output1[634]=20;
  p_output1[635]=21;
  p_output1[636]=22;
  p_output1[637]=23;
  p_output1[638]=24;
  p_output1[639]=25;
  p_output1[640]=26;
  p_output1[641]=27;
  p_output1[642]=28;
  p_output1[643]=29;
  p_output1[644]=30;
  p_output1[645]=31;
  p_output1[646]=32;
  p_output1[647]=33;
  p_output1[648]=34;
  p_output1[649]=35;
  p_output1[650]=36;
  p_output1[651]=37;
  p_output1[652]=38;
  p_output1[653]=39;
  p_output1[654]=40;
  p_output1[655]=41;
  p_output1[656]=42;
  p_output1[657]=43;
  p_output1[658]=44;
  p_output1[659]=4;
  p_output1[660]=5;
  p_output1[661]=6;
  p_output1[662]=7;
  p_output1[663]=8;
  p_output1[664]=9;
  p_output1[665]=10;
  p_output1[666]=11;
  p_output1[667]=12;
  p_output1[668]=13;
  p_output1[669]=14;
  p_output1[670]=15;
  p_output1[671]=16;
  p_output1[672]=17;
  p_output1[673]=18;
  p_output1[674]=19;
  p_output1[675]=20;
  p_output1[676]=21;
  p_output1[677]=22;
  p_output1[678]=23;
  p_output1[679]=24;
  p_output1[680]=25;
  p_output1[681]=26;
  p_output1[682]=27;
  p_output1[683]=28;
  p_output1[684]=29;
  p_output1[685]=30;
  p_output1[686]=31;
  p_output1[687]=32;
  p_output1[688]=33;
  p_output1[689]=34;
  p_output1[690]=35;
  p_output1[691]=36;
  p_output1[692]=37;
  p_output1[693]=38;
  p_output1[694]=39;
  p_output1[695]=40;
  p_output1[696]=41;
  p_output1[697]=42;
  p_output1[698]=43;
  p_output1[699]=44;
  p_output1[700]=4;
  p_output1[701]=5;
  p_output1[702]=6;
  p_output1[703]=7;
  p_output1[704]=9;
  p_output1[705]=23;
  p_output1[706]=24;
  p_output1[707]=25;
  p_output1[708]=26;
  p_output1[709]=27;
  p_output1[710]=28;
  p_output1[711]=29;
  p_output1[712]=31;
  p_output1[713]=4;
  p_output1[714]=5;
  p_output1[715]=6;
  p_output1[716]=8;
  p_output1[717]=10;
  p_output1[718]=23;
  p_output1[719]=24;
  p_output1[720]=25;
  p_output1[721]=26;
  p_output1[722]=27;
  p_output1[723]=28;
  p_output1[724]=30;
  p_output1[725]=32;
  p_output1[726]=4;
  p_output1[727]=5;
  p_output1[728]=6;
  p_output1[729]=7;
  p_output1[730]=9;
  p_output1[731]=23;
  p_output1[732]=24;
  p_output1[733]=25;
  p_output1[734]=26;
  p_output1[735]=27;
  p_output1[736]=28;
  p_output1[737]=29;
  p_output1[738]=31;
  p_output1[739]=4;
  p_output1[740]=5;
  p_output1[741]=6;
  p_output1[742]=8;
  p_output1[743]=10;
  p_output1[744]=23;
  p_output1[745]=24;
  p_output1[746]=25;
  p_output1[747]=26;
  p_output1[748]=27;
  p_output1[749]=28;
  p_output1[750]=30;
  p_output1[751]=32;
  p_output1[752]=4;
  p_output1[753]=5;
  p_output1[754]=6;
  p_output1[755]=11;
  p_output1[756]=13;
  p_output1[757]=23;
  p_output1[758]=24;
  p_output1[759]=25;
  p_output1[760]=26;
  p_output1[761]=27;
  p_output1[762]=28;
  p_output1[763]=33;
  p_output1[764]=35;
  p_output1[765]=4;
  p_output1[766]=5;
  p_output1[767]=6;
  p_output1[768]=12;
  p_output1[769]=14;
  p_output1[770]=23;
  p_output1[771]=24;
  p_output1[772]=25;
  p_output1[773]=26;
  p_output1[774]=27;
  p_output1[775]=28;
  p_output1[776]=34;
  p_output1[777]=36;
  p_output1[778]=4;
  p_output1[779]=5;
  p_output1[780]=6;
  p_output1[781]=11;
  p_output1[782]=13;
  p_output1[783]=23;
  p_output1[784]=24;
  p_output1[785]=25;
  p_output1[786]=26;
  p_output1[787]=27;
  p_output1[788]=28;
  p_output1[789]=33;
  p_output1[790]=35;
  p_output1[791]=4;
  p_output1[792]=5;
  p_output1[793]=6;
  p_output1[794]=12;
  p_output1[795]=14;
  p_output1[796]=23;
  p_output1[797]=24;
  p_output1[798]=25;
  p_output1[799]=26;
  p_output1[800]=27;
  p_output1[801]=28;
  p_output1[802]=34;
  p_output1[803]=36;
  p_output1[804]=4;
  p_output1[805]=5;
  p_output1[806]=6;
  p_output1[807]=15;
  p_output1[808]=17;
  p_output1[809]=23;
  p_output1[810]=24;
  p_output1[811]=25;
  p_output1[812]=26;
  p_output1[813]=27;
  p_output1[814]=28;
  p_output1[815]=37;
  p_output1[816]=39;
  p_output1[817]=4;
  p_output1[818]=5;
  p_output1[819]=6;
  p_output1[820]=16;
  p_output1[821]=18;
  p_output1[822]=23;
  p_output1[823]=24;
  p_output1[824]=25;
  p_output1[825]=26;
  p_output1[826]=27;
  p_output1[827]=28;
  p_output1[828]=38;
  p_output1[829]=40;
  p_output1[830]=4;
  p_output1[831]=5;
  p_output1[832]=6;
  p_output1[833]=15;
  p_output1[834]=17;
  p_output1[835]=23;
  p_output1[836]=24;
  p_output1[837]=25;
  p_output1[838]=26;
  p_output1[839]=27;
  p_output1[840]=28;
  p_output1[841]=37;
  p_output1[842]=39;
  p_output1[843]=4;
  p_output1[844]=5;
  p_output1[845]=6;
  p_output1[846]=16;
  p_output1[847]=18;
  p_output1[848]=23;
  p_output1[849]=24;
  p_output1[850]=25;
  p_output1[851]=26;
  p_output1[852]=27;
  p_output1[853]=28;
  p_output1[854]=38;
  p_output1[855]=40;
  p_output1[856]=4;
  p_output1[857]=5;
  p_output1[858]=6;
  p_output1[859]=19;
  p_output1[860]=21;
  p_output1[861]=23;
  p_output1[862]=24;
  p_output1[863]=25;
  p_output1[864]=26;
  p_output1[865]=27;
  p_output1[866]=28;
  p_output1[867]=41;
  p_output1[868]=43;
  p_output1[869]=4;
  p_output1[870]=5;
  p_output1[871]=6;
  p_output1[872]=20;
  p_output1[873]=22;
  p_output1[874]=23;
  p_output1[875]=24;
  p_output1[876]=25;
  p_output1[877]=26;
  p_output1[878]=27;
  p_output1[879]=28;
  p_output1[880]=42;
  p_output1[881]=44;
  p_output1[882]=4;
  p_output1[883]=5;
  p_output1[884]=6;
  p_output1[885]=19;
  p_output1[886]=21;
  p_output1[887]=23;
  p_output1[888]=24;
  p_output1[889]=25;
  p_output1[890]=26;
  p_output1[891]=27;
  p_output1[892]=28;
  p_output1[893]=41;
  p_output1[894]=43;
  p_output1[895]=4;
  p_output1[896]=5;
  p_output1[897]=6;
  p_output1[898]=20;
  p_output1[899]=22;
  p_output1[900]=23;
  p_output1[901]=24;
  p_output1[902]=25;
  p_output1[903]=26;
  p_output1[904]=27;
  p_output1[905]=28;
  p_output1[906]=42;
  p_output1[907]=44;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "One input(s) required (var1).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 1 && ncols == 1) && 
      !(mrows == 1 && ncols == 1))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 454, (mwSize) 2, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1);


}

#else // MATLAB_MEX_FILE

#include "Js_MmatDx_minitaur.hh"

namespace FrontStance
{

void Js_MmatDx_minitaur_raw(double *p_output1, const double *var1)
{
  // Call Subroutines
  output1(p_output1, var1);

}

}

#endif // MATLAB_MEX_FILE
