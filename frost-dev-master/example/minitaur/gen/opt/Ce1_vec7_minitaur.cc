/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:08:14 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t223;
  double t259;
  double t287;
  double t163;
  double t203;
  double t332;
  double t345;
  double t288;
  double t301;
  double t632;
  double t694;
  double t738;
  double t832;
  double t908;
  double t2290;
  double t2356;
  double t2357;
  double t2358;
  double t916;
  double t2366;
  double t793;
  double t1584;
  double t1616;
  double t2293;
  double t2319;
  double t2333;
  double t2374;
  double t2398;
  double t2400;
  double t2455;
  double t2669;
  double t2758;
  double t2814;
  double t3016;
  double t3444;
  double t3120;
  double t3468;
  double t3129;
  double t3367;
  double t3644;
  double t3677;
  double t3700;
  double t3395;
  double t3425;
  double t3452;
  double t3459;
  double t3463;
  double t3518;
  double t3548;
  double t3612;
  double t3626;
  double t3631;
  double t3651;
  double t3653;
  double t3659;
  double t3676;
  double t3238;
  double t3710;
  double t3712;
  double t3723;
  double t3725;
  double t3727;
  double t3729;
  double t3762;
  double t3885;
  double t3549;
  double t3561;
  double t3692;
  double t3707;
  double t3780;
  double t3811;
  double t3894;
  double t3899;
  double t3906;
  double t3916;
  double t3925;
  double t4328;
  double t4331;
  double t4333;
  double t4342;
  double t4346;
  double t4347;
  double t4348;
  double t4353;
  double t4310;
  double t4415;
  double t4426;
  double t4427;
  double t4428;
  double t4432;
  double t4434;
  double t4435;
  double t4436;
  double t4612;
  double t3007;
  double t3045;
  double t3067;
  double t3088;
  double t3850;
  double t3936;
  double t3962;
  double t4043;
  double t4044;
  double t4053;
  double t4085;
  double t2978;
  double t4089;
  double t4323;
  double t4324;
  double t4345;
  double t4356;
  double t4358;
  double t4366;
  double t4376;
  double t4378;
  double t4379;
  double t4398;
  double t4410;
  double t4411;
  double t4431;
  double t4440;
  double t4466;
  double t4468;
  double t4474;
  double t4479;
  double t4485;
  double t317;
  double t331;
  double t302;
  double t304;
  double t309;
  double t5139;
  double t5142;
  double t2340;
  double t2628;
  double t2815;
  double t2902;
  double t2964;
  double t2965;
  double t2979;
  double t4092;
  double t4096;
  double t4100;
  double t4190;
  double t4191;
  double t4208;
  double t4214;
  double t4387;
  double t4388;
  double t4391;
  double t4393;
  double t4395;
  double t4399;
  double t4400;
  double t5452;
  double t5396;
  double t5671;
  double t6157;
  double t5426;
  double t5447;
  double t5454;
  double t5455;
  double t5468;
  double t5528;
  double t5941;
  double t5944;
  double t6158;
  double t6164;
  double t6184;
  double t6185;
  double t6388;
  double t6393;
  double t6431;
  double t6655;
  double t6446;
  double t6439;
  double t6463;
  double t6465;
  double t6468;
  double t6475;
  double t6814;
  double t6659;
  double t6660;
  double t6662;
  double t6664;
  double t6668;
  double t6674;
  double t6676;
  double t6680;
  double t6682;
  double t6696;
  double t6698;
  double t6713;
  double t6722;
  double t6724;
  double t6482;
  double t6517;
  double t6669;
  double t6720;
  double t6727;
  double t6739;
  double t6754;
  double t6763;
  double t6970;
  double t6885;
  double t6935;
  double t6971;
  double t6975;
  double t6976;
  double t6990;
  double t7079;
  double t7081;
  double t5185;
  double t5186;
  double t5188;
  double t5189;
  double t5211;
  double t5218;
  double t5220;
  double t5242;
  double t5255;
  double t5257;
  double t5261;
  double t5272;
  double t5275;
  double t5283;
  double t8398;
  double t8399;
  double t8401;
  double t8403;
  double t8409;
  double t8626;
  double t8741;
  double t8931;
  double t9062;
  double t9558;
  double t9559;
  double t9587;
  double t9627;
  double t9629;
  double t5292;
  double t5294;
  double t5297;
  double t5306;
  double t5307;
  double t5309;
  double t5311;
  double t8371;
  double t12116;
  double t12126;
  double t12136;
  double t12141;
  double t12142;
  double t12145;
  double t12159;
  double t12173;
  double t12176;
  double t12177;
  double t12180;
  double t12189;
  double t12194;
  double t12195;
  double t5111;
  double t5115;
  double t5117;
  double t315;
  double t340;
  double t342;
  double t12230;
  double t5153;
  double t5161;
  double t5167;
  double t12232;
  double t354;
  double t379;
  double t416;
  double t2961;
  double t2988;
  double t3003;
  double t4118;
  double t4261;
  double t4271;
  double t4394;
  double t4402;
  double t4408;
  double t5118;
  double t5132;
  double t5134;
  double t5145;
  double t5169;
  double t5172;
  double t5301;
  double t5329;
  double t5332;
  double t5265;
  double t5284;
  double t5287;
  double t5201;
  double t5228;
  double t5230;
  double t5611;
  double t6159;
  double t6199;
  double t6207;
  double t6210;
  double t6274;
  double t6330;
  double t6334;
  double t6209;
  double t6337;
  double t6348;
  double t6352;
  double t6354;
  double t6355;
  double t6365;
  double t12452;
  double t12454;
  double t12479;
  double t11993;
  double t12053;
  double t12098;
  double t12160;
  double t12161;
  double t12167;
  double t12198;
  double t12201;
  double t12203;
  double t12204;
  double t12205;
  double t12216;
  double t12222;
  double t12224;
  double t8375;
  double t8376;
  double t8388;
  double t8853;
  double t8893;
  double t10697;
  double t11018;
  double t11039;
  double t11040;
  double t11043;
  double t11049;
  double t11051;
  double t11055;
  double t12488;
  double t12490;
  double t12491;
  double t7219;
  double t7222;
  double t7223;
  double t7226;
  double t7232;
  double t7241;
  double t7277;
  double t7292;
  double t7180;
  double t7186;
  double t7208;
  double t7215;
  double t7230;
  double t7293;
  double t7294;
  double t7499;
  double t7503;
  double t7510;
  double t7701;
  double t7719;
  double t7829;
  double t7878;
  double t7888;
  double t7319;
  double t7328;
  double t7335;
  double t7393;
  double t7712;
  double t7911;
  double t7913;
  double t6379;
  double t6381;
  double t6384;
  double t6387;
  double t6402;
  double t6769;
  double t6856;
  double t7083;
  double t7086;
  double t7093;
  double t7094;
  double t7096;
  double t7100;
  double t7101;
  double t7104;
  double t12508;
  double t12511;
  double t12516;
  double t4592;
  double t4593;
  double t4602;
  double t4686;
  double t4688;
  double t4699;
  double t4913;
  double t4915;
  double t4918;
  double t4921;
  double t4922;
  double t4924;
  double t4925;
  double t4927;
  double t4928;
  double t4932;
  double t4935;
  double t4946;
  double t4948;
  double t4974;
  double t4874;
  double t4875;
  double t4889;
  double t4894;
  double t4897;
  double t4899;
  double t4900;
  double t4903;
  double t4864;
  double t4865;
  double t4868;
  double t4896;
  double t4905;
  double t4907;
  double t4731;
  double t4736;
  double t4737;
  double t4738;
  double t4755;
  double t4764;
  double t4765;
  double t4770;
  double t4718;
  double t4720;
  double t4722;
  double t4741;
  double t4776;
  double t4778;
  double t12301;
  double t12303;
  double t12304;
  double t12308;
  double t12310;
  double t12316;
  double t12328;
  double t12332;
  double t12334;
  double t12337;
  double t12339;
  double t12340;
  double t12347;
  double t12348;
  double t12353;
  double t12563;
  double t12564;
  double t12567;
  double t12570;
  double t12572;
  double t12579;
  double t12605;
  double t12606;
  double t12608;
  double t12612;
  double t12613;
  double t12614;
  double t12651;
  double t12654;
  double t12655;
  double t12659;
  double t12661;
  double t12663;
  double t12371;
  double t12373;
  double t12374;
  double t12420;
  double t12426;
  double t12432;
  double t12590;
  double t12591;
  double t12592;
  double t12599;
  double t12602;
  double t12603;
  double t12670;
  double t12671;
  double t12672;
  double t12690;
  double t12772;
  double t12779;
  double t12781;
  double t12783;
  double t12787;
  double t12789;
  double t12790;
  double t12795;
  double t12796;
  double t12798;
  double t12802;
  double t12803;
  double t12805;
  double t12808;
  double t12809;
  double t12810;
  double t12821;
  double t12822;
  double t12823;
  double t12827;
  double t12833;
  double t12837;
  double t12841;
  double t12847;
  double t12848;
  double t12853;
  double t12854;
  double t12855;
  double t13200;
  double t13202;
  double t13908;
  double t13927;
  double t13937;
  double t13938;
  double t13948;
  double t13955;
  double t13959;
  double t13963;
  double t14000;
  double t14016;
  double t14017;
  double t14018;
  double t14019;
  double t14030;
  double t14040;
  double t14057;
  double t13205;
  double t13207;
  double t14025;
  double t14117;
  double t14128;
  double t14159;
  double t14178;
  double t14180;
  double t14221;
  double t14223;
  double t14228;
  double t14203;
  double t14207;
  double t14210;
  double t14192;
  double t14198;
  double t14199;
  double t4634;
  double t14337;
  double t14342;
  double t14219;
  double t14234;
  double t14538;
  double t14539;
  double t14540;
  double t14609;
  double t8293;
  double t8312;
  double t8342;
  double t11128;
  double t11130;
  double t11161;
  double t14690;
  double t14693;
  double t14697;
  double t14717;
  double t14720;
  double t14733;
  double t14752;
  double t14839;
  double t14840;
  double t14861;
  double t14876;
  double t14882;
  double t14909;
  double t15066;
  double t15067;
  double t15068;
  double t15105;
  double t15116;
  double t15117;
  double t15190;
  double t15192;
  double t14954;
  double t15028;
  double t15049;
  double t15205;
  double t15214;
  double t15230;
  double t15304;
  double t15342;
  double t15408;
  double t7108;
  double t7109;
  double t7162;
  double t14150;
  double t14186;
  double t14212;
  double t14215;
  double t14347;
  double t14357;
  double t14358;
  double t14368;
  double t18624;
  double t18628;
  double t18629;
  double t14504;
  double t14506;
  double t14507;
  double t14508;
  double t14545;
  double t14548;
  double t14549;
  double t14551;
  double t14618;
  double t14622;
  double t14625;
  double t14626;
  double t14631;
  double t14633;
  double t14642;
  double t14648;
  double t15621;
  double t15664;
  double t15696;
  double t15714;
  double t19159;
  double t19161;
  double t19164;
  double t16541;
  double t17026;
  double t17079;
  double t17084;
  double t17697;
  double t17715;
  double t17811;
  double t17928;
  double t18105;
  double t18123;
  double t18138;
  double t18144;
  double t18225;
  double t18228;
  double t18231;
  double t18234;
  double t18528;
  double t18532;
  double t18534;
  double t18537;
  double t6350;
  double t6372;
  double t6377;
  double t19604;
  double t7216;
  double t7298;
  double t7299;
  double t7464;
  double t8207;
  double t8270;
  double t19850;
  double t19866;
  double t19886;
  double t19898;
  double t19901;
  double t19905;
  double t19906;
  double t19909;
  double t19920;
  double t19962;
  double t19966;
  double t19973;
  double t19977;
  double t19978;
  double t19980;
  double t19990;
  double t19991;
  double t20015;
  double t19971;
  double t19982;
  double t19984;
  double t19900;
  double t19910;
  double t19915;
  double t4607;
  double t4674;
  double t21952;
  double t21997;
  double t22002;
  double t22006;
  double t22008;
  double t22021;
  double t22030;
  double t22032;
  double t22035;
  double t22061;
  double t22079;
  double t22080;
  double t22300;
  double t22403;
  double t22410;
  double t22123;
  double t22159;
  double t22172;
  double t22057;
  double t22082;
  double t22090;
  double t4684;
  double t4703;
  double t4709;
  double t4936;
  double t5005;
  double t5079;
  double t4871;
  double t4908;
  double t4909;
  double t4730;
  double t4824;
  double t4860;
  double t22948;
  double t22955;
  double t22956;
  double t22957;
  double t22958;
  double t22966;
  double t23020;
  double t23023;
  double t23072;
  double t23138;
  double t23232;
  double t23235;
  double t23239;
  double t23297;
  double t23340;
  double t23372;
  double t23419;
  double t22964;
  double t23142;
  double t23179;
  double t23330;
  double t23460;
  double t23464;
  double t23471;
  double t23472;
  double t23474;
  double t19573;
  double t19633;
  double t19729;
  double t19730;
  double t19779;
  double t19782;
  double t19783;
  double t19785;
  double t26199;
  double t26213;
  double t26240;
  double t26564;
  double t26621;
  double t26671;
  double t19917;
  double t19919;
  double t20062;
  double t20068;
  double t29371;
  double t29384;
  double t29431;
  double t20292;
  double t20456;
  double t20717;
  double t20770;
  double t29450;
  double t29451;
  double t29471;
  double t30365;
  double t30382;
  double t30391;
  double t21195;
  double t21217;
  double t21418;
  double t21442;
  double t30434;
  double t30435;
  double t30444;
  double t14415;
  double t14437;
  double t14284;
  double t14289;
  double t14534;
  double t14536;
  double t14565;
  double t14566;
  double t15052;
  double t15098;
  double t15786;
  double t16090;
  double t17362;
  double t17432;
  double t17938;
  double t17939;
  double t18170;
  double t18173;
  double t18236;
  double t18347;
  double t31749;
  double t31766;
  double t22428;
  double t22497;
  double t22511;
  double t22631;
  double t31428;
  double t31430;
  double t22693;
  double t22742;
  double t23190;
  double t23220;
  double t23525;
  double t23559;
  double t23644;
  double t23646;
  double t24258;
  double t24259;
  double t24552;
  double t24555;
  double t24768;
  double t24797;
  double t32730;
  double t32752;
  double t32790;
  double t32802;
  double t32891;
  double t32904;
  double t32938;
  double t32940;
  double t32990;
  double t33011;
  double t33056;
  double t33057;
  double t33379;
  double t33389;
  double t33415;
  double t33649;
  double t33657;
  double t33678;
  double t27639;
  double t27656;
  double t28046;
  double t28179;
  double t33712;
  double t33778;
  double t33782;
  double t29796;
  double t29804;
  double t29897;
  double t29915;
  double t34144;
  double t34145;
  double t34152;
  double t34358;
  double t34360;
  double t34368;
  double t30466;
  double t30467;
  double t30802;
  double t31308;
  double t34380;
  double t34423;
  double t34436;
  t223 = Cos(var1[6]);
  t259 = -1.*t223;
  t287 = 1. + t259;
  t163 = Cos(var1[4]);
  t203 = Cos(var1[5]);
  t332 = Sin(var1[5]);
  t345 = Sin(var1[6]);
  t288 = -9.e-12*t287;
  t301 = 1. + t288;
  t632 = Cos(var1[8]);
  t694 = -1.*t632;
  t738 = 1. + t694;
  t832 = 3.e-6*t738;
  t908 = Sin(var1[8]);
  t2290 = 3.e-6*t908;
  t2356 = -1.000000000009*t738;
  t2357 = 1. + t2356;
  t2358 = 3.e-6*t2357;
  t916 = -3.e-6*t908;
  t2366 = 9.e-12*t738;
  t793 = -1.8e-11*t738;
  t1584 = t832 + t916;
  t1616 = 3.e-6*t1584;
  t2293 = t832 + t2290;
  t2319 = 3.e-6*t2293;
  t2333 = 1. + t793 + t1616 + t2319;
  t2374 = -1.*t908;
  t2398 = t2366 + t2374;
  t2400 = 3.e-6*t2398;
  t2455 = t2358 + t832 + t2400 + t2290;
  t2669 = t2366 + t908;
  t2758 = 3.e-6*t2669;
  t2814 = t2358 + t832 + t916 + t2758;
  t3016 = -3.e-6*t738;
  t3444 = -9.e-12*t738;
  t3120 = 1. + t793;
  t3468 = t3016 + t2290;
  t3129 = 3.e-6*t3120;
  t3367 = 9.e-13*var1[8];
  t3644 = t3016 + t916;
  t3677 = t3129 + t3016 + t2290;
  t3700 = 1.000000000009*t738;
  t3395 = 0.2*t2357;
  t3425 = 0.2000000000018*t738;
  t3452 = t3444 + t2374;
  t3459 = 0.1*t3452;
  t3463 = 0.1*t1584;
  t3518 = -9.e-7*t3468;
  t3548 = t3367 + t3395 + t3425 + t3459 + t3463 + t3518;
  t3612 = 3.e-7*var1[8];
  t3626 = 0.1*t3120;
  t3631 = -1.62e-17*t738;
  t3651 = 0.2*t3644;
  t3653 = 0.1*t3468;
  t3659 = 0.2*t2293;
  t3676 = t3612 + t3626 + t3631 + t3651 + t3653 + t3659;
  t3238 = t3129 + t3016 + t916;
  t3710 = 0.1000000000009*t738;
  t3712 = 0.2*t2398;
  t3723 = -9.e-7*t3644;
  t3725 = 0.1*t2293;
  t3727 = t3444 + t908;
  t3729 = 0.2*t3727;
  t3762 = t3367 + t3710 + t3712 + t3723 + t3725 + t3729;
  t3885 = -1. + t3700 + t1616;
  t3549 = t3444 + t1616 + t2374;
  t3561 = -1.*t3548*t3549;
  t3692 = -1.*t3676*t3677;
  t3707 = -1. + t3700 + t2319;
  t3780 = -1.*t3707*t3762;
  t3811 = t3561 + t3692 + t3780;
  t3894 = t3885*t3548;
  t3899 = t3676*t3238;
  t3906 = t3444 + t2319 + t908;
  t3916 = t3906*t3762;
  t3925 = t3894 + t3899 + t3916;
  t4328 = t3548*t3549;
  t4331 = t3676*t3677;
  t4333 = t3707*t3762;
  t4342 = t4328 + t4331 + t4333;
  t4346 = -1.*t2333*t3676;
  t4347 = -1.*t2455*t3762;
  t4348 = -1.*t3548*t2814;
  t4353 = t4346 + t4347 + t4348;
  t4310 = -3.e-6*t2293;
  t4415 = -1.*t3885*t3548;
  t4426 = -1.*t3676*t3238;
  t4427 = -1.*t3906*t3762;
  t4428 = t4415 + t4426 + t4427;
  t4432 = t2333*t3676;
  t4434 = t2455*t3762;
  t4435 = t3548*t2814;
  t4436 = t4432 + t4434 + t4435;
  t4612 = Sin(var1[4]);
  t3007 = -3.e-6*t2357;
  t3045 = -3.e-6*t2398;
  t3067 = t3007 + t3016 + t3045 + t916;
  t3088 = 0.2*t3067;
  t3850 = -1.*t3238*t3811;
  t3936 = -1.*t3677*t3925;
  t3962 = t3885*t3811;
  t4043 = t3549*t3925;
  t4044 = t3962 + t4043;
  t4053 = -3.e-6*t4044;
  t4085 = t3088 + t3850 + t3936 + t4053;
  t2978 = t223*t2814;
  t4089 = t223*t3885;
  t4323 = t2366 + t4310 + t2374;
  t4324 = 0.2*t4323;
  t4345 = -1.*t2333*t4342;
  t4356 = -1.*t3677*t4353;
  t4358 = t2814*t4342;
  t4366 = t3549*t4353;
  t4376 = t4358 + t4366;
  t4378 = -3.e-6*t4376;
  t4379 = t4324 + t4345 + t4356 + t4378;
  t4398 = t223*t3549;
  t4410 = 1. + t2356 + t4310;
  t4411 = 0.2*t4410;
  t4431 = -1.*t2333*t4428;
  t4440 = -1.*t3238*t4436;
  t4466 = t2814*t4428;
  t4468 = t3885*t4436;
  t4474 = t4466 + t4468;
  t4479 = -3.e-6*t4474;
  t4485 = t4411 + t4431 + t4440 + t4479;
  t317 = 9.e-12*t287;
  t331 = t317 + t259;
  t302 = 3.e-6*t301;
  t304 = -3.e-6*t287;
  t309 = t302 + t304;
  t5139 = -1.000000000009*t287;
  t5142 = 1. + t5139;
  t2340 = t301*t2333;
  t2628 = 3.e-6*t345*t2455;
  t2815 = 3.e-6*t287*t2814;
  t2902 = t2340 + t2628 + t2815;
  t2964 = 3.e-6*t287*t2333;
  t2965 = -1.*t345*t2455;
  t2979 = t2964 + t2965 + t2978;
  t4092 = 3.e-6*t287*t3238;
  t4096 = -1.*t345*t3906;
  t4100 = t4089 + t4092 + t4096;
  t4190 = 3.e-6*t287*t3885;
  t4191 = t301*t3238;
  t4208 = 3.e-6*t345*t3906;
  t4214 = t4190 + t4191 + t4208;
  t4387 = 3.e-6*t345*t3707;
  t4388 = 3.e-6*t287*t3549;
  t4391 = t301*t3677;
  t4393 = t4387 + t4388 + t4391;
  t4395 = -1.*t345*t3707;
  t4399 = 3.e-6*t287*t3677;
  t4400 = t4395 + t4398 + t4399;
  t5452 = 3.e-6*t632;
  t5396 = -3.e-6*t632;
  t5671 = 9.e-12*t908;
  t6157 = -2.7e-17*t908;
  t5426 = t5396 + t2290;
  t5447 = 3.e-6*t5426;
  t5454 = t5452 + t2290;
  t5455 = 3.e-6*t5454;
  t5468 = -1.8e-11*t908;
  t5528 = t5447 + t5455 + t5468;
  t5941 = t694 + t5671;
  t5944 = 3.e-6*t5941;
  t6158 = t5452 + t5944 + t6157;
  t6164 = t632 + t5671;
  t6184 = 3.e-6*t6164;
  t6185 = t5396 + t6184 + t6157;
  t6388 = -3.000000000054e-6*t908;
  t6393 = t5396 + t6388;
  t6431 = t5452 + t916;
  t6655 = t5396 + t916;
  t6446 = -9.e-12*t908;
  t6439 = -9.e-7*t6431;
  t6463 = t694 + t6446;
  t6465 = 0.1*t6463;
  t6468 = 0.1*t5426;
  t6475 = 9.e-13 + t6439 + t6465 + t6468;
  t6814 = t5452 + t6388;
  t6659 = 0.2*t6655;
  t6660 = 0.1*t6431;
  t6662 = 0.2*t5454;
  t6664 = -1.8000162e-12*t908;
  t6668 = 3.e-7 + t6659 + t6660 + t6662 + t6664;
  t6674 = -9.e-7*t6655;
  t6676 = t632 + t6446;
  t6680 = 0.2*t6676;
  t6682 = 0.2*t5941;
  t6696 = 0.1*t5454;
  t6698 = 0.1000000000009*t908;
  t6713 = 9.e-13 + t6674 + t6680 + t6682 + t6696 + t6698;
  t6722 = 1.000000000009*t908;
  t6724 = t5447 + t6722;
  t6482 = t3885*t6475;
  t6517 = t3676*t6393;
  t6669 = t3238*t6668;
  t6720 = t6713*t3906;
  t6727 = t3548*t6724;
  t6739 = t632 + t5455 + t6446;
  t6754 = t6739*t3762;
  t6763 = t6482 + t6517 + t6669 + t6720 + t6727 + t6754;
  t6970 = t694 + t5447 + t6446;
  t6885 = -1.*t6475*t3549;
  t6935 = -1.*t3676*t6814;
  t6971 = -1.*t3548*t6970;
  t6975 = -1.*t6668*t3677;
  t6976 = -1.*t3707*t6713;
  t6990 = t5455 + t6722;
  t7079 = -1.*t6990*t3762;
  t7081 = t6885 + t6935 + t6971 + t6975 + t6976 + t7079;
  t5185 = -3.e-6*t345*t2333;
  t5186 = t5142*t2455;
  t5188 = t345*t2814;
  t5189 = t5185 + t5186 + t5188;
  t5211 = -1.*t332*t2902;
  t5218 = t203*t2979;
  t5220 = t5211 + t5218;
  t5242 = t345*t3885;
  t5255 = -3.e-6*t345*t3238;
  t5257 = t5142*t3906;
  t5261 = t5242 + t5255 + t5257;
  t5272 = t203*t4100;
  t5275 = -1.*t332*t4214;
  t5283 = t5272 + t5275;
  t8398 = t6475*t3549;
  t8399 = t3676*t6814;
  t8401 = t3548*t6970;
  t8403 = t6668*t3677;
  t8409 = t3707*t6713;
  t8626 = t6990*t3762;
  t8741 = t8398 + t8399 + t8401 + t8403 + t8409 + t8626;
  t8931 = -1.*t3676*t5528;
  t9062 = -1.*t2333*t6668;
  t9558 = -1.*t3548*t6185;
  t9559 = -1.*t2455*t6713;
  t9587 = -1.*t6158*t3762;
  t9627 = -1.*t6475*t2814;
  t9629 = t8931 + t9062 + t9558 + t9559 + t9587 + t9627;
  t5292 = -1.*t332*t4393;
  t5294 = t203*t4400;
  t5297 = t5292 + t5294;
  t5306 = t5142*t3707;
  t5307 = t345*t3549;
  t5309 = -3.e-6*t345*t3677;
  t5311 = t5306 + t5307 + t5309;
  t8371 = -3.e-6*t5454;
  t12116 = -1.*t3885*t6475;
  t12126 = -1.*t3676*t6393;
  t12136 = -1.*t3238*t6668;
  t12141 = -1.*t6713*t3906;
  t12142 = -1.*t3548*t6724;
  t12145 = -1.*t6739*t3762;
  t12159 = t12116 + t12126 + t12136 + t12141 + t12142 + t12145;
  t12173 = t3676*t5528;
  t12176 = t2333*t6668;
  t12177 = t3548*t6185;
  t12180 = t2455*t6713;
  t12189 = t6158*t3762;
  t12194 = t6475*t2814;
  t12195 = t12173 + t12176 + t12177 + t12180 + t12189 + t12194;
  t5111 = t203*t331;
  t5115 = -1.*t309*t332;
  t5117 = t5111 + t5115;
  t315 = -1.*t203*t309;
  t340 = -1.*t331*t332;
  t342 = t315 + t340;
  t12230 = Cos(var1[3]);
  t5153 = -1.*t203*t345;
  t5161 = -3.e-6*t332*t345;
  t5167 = t5153 + t5161;
  t12232 = Sin(var1[3]);
  t354 = -3.e-6*t203*t345;
  t379 = t332*t345;
  t416 = t354 + t379;
  t2961 = -1.*t203*t2902;
  t2988 = -1.*t332*t2979;
  t3003 = t2961 + t2988;
  t4118 = -1.*t332*t4100;
  t4261 = -1.*t203*t4214;
  t4271 = t4118 + t4261;
  t4394 = -1.*t203*t4393;
  t4402 = -1.*t332*t4400;
  t4408 = t4394 + t4402;
  t5118 = -1.*t4612*t5117;
  t5132 = -1.000000000009*t163*t345;
  t5134 = t5118 + t5132;
  t5145 = t163*t5142;
  t5169 = -1.*t4612*t5167;
  t5172 = t5145 + t5169;
  t5301 = -1.*t4612*t5297;
  t5329 = t163*t5311;
  t5332 = t5301 + t5329;
  t5265 = t163*t5261;
  t5284 = -1.*t4612*t5283;
  t5287 = t5265 + t5284;
  t5201 = t163*t5189;
  t5228 = -1.*t4612*t5220;
  t5230 = t5201 + t5228;
  t5611 = t301*t5528;
  t6159 = 3.e-6*t345*t6158;
  t6199 = 3.e-6*t287*t6185;
  t6207 = t5611 + t6159 + t6199;
  t6210 = 3.e-6*t287*t5528;
  t6274 = -1.*t345*t6158;
  t6330 = t223*t6185;
  t6334 = t6210 + t6274 + t6330;
  t6209 = -1.*t332*t6207;
  t6337 = t203*t6334;
  t6348 = t6209 + t6337;
  t6352 = -3.e-6*t345*t5528;
  t6354 = t5142*t6158;
  t6355 = t345*t6185;
  t6365 = t6352 + t6354 + t6355;
  t12452 = t203*t4393;
  t12454 = t332*t4400;
  t12479 = t12452 + t12454;
  t11993 = -1.000000000009*t908;
  t12053 = t8371 + t11993;
  t12098 = 0.2*t12053;
  t12160 = -1.*t2333*t12159;
  t12161 = -1.*t5528*t4428;
  t12167 = -1.*t6393*t4436;
  t12198 = -1.*t3238*t12195;
  t12201 = t2814*t12159;
  t12203 = t6185*t4428;
  t12204 = t6724*t4436;
  t12205 = t3885*t12195;
  t12216 = t12201 + t12203 + t12204 + t12205;
  t12222 = -3.e-6*t12216;
  t12224 = t12098 + t12160 + t12161 + t12167 + t12198 + t12222;
  t8375 = t694 + t8371 + t5671;
  t8376 = 0.2*t8375;
  t8388 = -1.*t5528*t4342;
  t8853 = -1.*t2333*t8741;
  t8893 = -1.*t6814*t4353;
  t10697 = -1.*t3677*t9629;
  t11018 = t6185*t4342;
  t11039 = t2814*t8741;
  t11040 = t6970*t4353;
  t11043 = t3549*t9629;
  t11049 = t11018 + t11039 + t11040 + t11043;
  t11051 = -3.e-6*t11049;
  t11055 = t8376 + t8388 + t8853 + t8893 + t10697 + t11051;
  t12488 = t332*t4100;
  t12490 = t203*t4214;
  t12491 = t12488 + t12490;
  t7219 = t301*t6393;
  t7222 = 3.e-6*t345*t6739;
  t7223 = 3.e-6*t287*t6724;
  t7226 = t7219 + t7222 + t7223;
  t7232 = 3.e-6*t287*t6393;
  t7241 = -1.*t345*t6739;
  t7277 = t223*t6724;
  t7292 = t7232 + t7241 + t7277;
  t7180 = -3.e-6*t345*t6393;
  t7186 = t5142*t6739;
  t7208 = t345*t6724;
  t7215 = t7180 + t7186 + t7208;
  t7230 = -1.*t332*t7226;
  t7293 = t203*t7292;
  t7294 = t7230 + t7293;
  t7499 = 3.e-6*t287*t6814;
  t7503 = t223*t6970;
  t7510 = -1.*t345*t6990;
  t7701 = t7499 + t7503 + t7510;
  t7719 = t301*t6814;
  t7829 = 3.e-6*t287*t6970;
  t7878 = 3.e-6*t345*t6990;
  t7888 = t7719 + t7829 + t7878;
  t7319 = -3.e-6*t345*t6814;
  t7328 = t345*t6970;
  t7335 = t5142*t6990;
  t7393 = t7319 + t7328 + t7335;
  t7712 = t203*t7701;
  t7911 = -1.*t332*t7888;
  t7913 = t7712 + t7911;
  t6379 = -3.e-6*t5941;
  t6381 = 2.7e-17*t908;
  t6384 = t5396 + t6379 + t6381;
  t6387 = 0.2*t6384;
  t6402 = -1.*t6393*t3811;
  t6769 = -1.*t3677*t6763;
  t6856 = -1.*t6814*t3925;
  t7083 = -1.*t3238*t7081;
  t7086 = t6724*t3811;
  t7093 = t3549*t6763;
  t7094 = t6970*t3925;
  t7096 = t3885*t7081;
  t7100 = t7086 + t7093 + t7094 + t7096;
  t7101 = -3.e-6*t7100;
  t7104 = t6387 + t6402 + t6769 + t6856 + t7083 + t7101;
  t12508 = t203*t2902;
  t12511 = t332*t2979;
  t12516 = t12508 + t12511;
  t4592 = -1.*t203*t223;
  t4593 = -3.e-6*t223*t332;
  t4602 = t4592 + t4593;
  t4686 = 1.000000000009*t203*t345;
  t4688 = 3.000000000027e-6*t332*t345;
  t4699 = t4686 + t4688;
  t4913 = 3.e-6*t223*t3707;
  t4915 = 3.e-6*t345*t3549;
  t4918 = -9.e-12*t345*t3677;
  t4921 = t4913 + t4915 + t4918;
  t4922 = -1.*t332*t4921;
  t4924 = -1.*t223*t3707;
  t4925 = -1.*t345*t3549;
  t4927 = 3.e-6*t345*t3677;
  t4928 = t4924 + t4925 + t4927;
  t4932 = t203*t4928;
  t4935 = t4922 + t4932;
  t4946 = -1.000000000009*t345*t3707;
  t4948 = -3.e-6*t223*t3677;
  t4974 = t4946 + t4398 + t4948;
  t4874 = -1.*t345*t3885;
  t4875 = 3.e-6*t345*t3238;
  t4889 = -1.*t223*t3906;
  t4894 = t4874 + t4875 + t4889;
  t4897 = 3.e-6*t345*t3885;
  t4899 = -9.e-12*t345*t3238;
  t4900 = 3.e-6*t223*t3906;
  t4903 = t4897 + t4899 + t4900;
  t4864 = -3.e-6*t223*t3238;
  t4865 = -1.000000000009*t345*t3906;
  t4868 = t4089 + t4864 + t4865;
  t4896 = t203*t4894;
  t4905 = -1.*t332*t4903;
  t4907 = t4896 + t4905;
  t4731 = 3.e-6*t345*t2333;
  t4736 = -1.*t223*t2455;
  t4737 = -1.*t345*t2814;
  t4738 = t4731 + t4736 + t4737;
  t4755 = -9.e-12*t345*t2333;
  t4764 = 3.e-6*t223*t2455;
  t4765 = 3.e-6*t345*t2814;
  t4770 = t4755 + t4764 + t4765;
  t4718 = -3.e-6*t223*t2333;
  t4720 = -1.000000000009*t345*t2455;
  t4722 = t4718 + t4720 + t2978;
  t4741 = t203*t4738;
  t4776 = -1.*t332*t4770;
  t4778 = t4741 + t4776;
  t12301 = -1.*t163*t5117;
  t12303 = 1.000000000009*t4612*t345;
  t12304 = t12301 + t12303;
  t12308 = -1.*t5142*t4612;
  t12310 = -1.*t163*t5167;
  t12316 = t12308 + t12310;
  t12328 = -1.*t4612*t5189;
  t12332 = -1.*t163*t5220;
  t12334 = t12328 + t12332;
  t12337 = -1.*t4612*t5261;
  t12339 = -1.*t163*t5283;
  t12340 = t12337 + t12339;
  t12347 = -1.*t163*t5297;
  t12348 = -1.*t4612*t5311;
  t12353 = t12347 + t12348;
  t12563 = t203*t6207;
  t12564 = t332*t6334;
  t12567 = t12563 + t12564;
  t12570 = -1.*t4612*t6348;
  t12572 = t163*t6365;
  t12579 = t12570 + t12572;
  t12605 = t203*t7226;
  t12606 = t332*t7292;
  t12608 = t12605 + t12606;
  t12612 = t163*t7215;
  t12613 = -1.*t4612*t7294;
  t12614 = t12612 + t12613;
  t12651 = t332*t7701;
  t12654 = t203*t7888;
  t12655 = t12651 + t12654;
  t12659 = t163*t7393;
  t12661 = -1.*t4612*t7913;
  t12663 = t12659 + t12661;
  t12371 = t203*t309;
  t12373 = t331*t332;
  t12374 = t12371 + t12373;
  t12420 = 3.e-6*t203*t345;
  t12426 = -1.*t332*t345;
  t12432 = t12420 + t12426;
  t12590 = t12230*t12479;
  t12591 = -1.*t12232*t5332;
  t12592 = t12590 + t12591;
  t12599 = t12230*t12491;
  t12602 = -1.*t12232*t5287;
  t12603 = t12599 + t12602;
  t12670 = t12230*t12516;
  t12671 = -1.*t12232*t5230;
  t12672 = t12670 + t12671;
  t12690 = 3.e-6*t203*t223;
  t12772 = -1.*t223*t332;
  t12779 = t12690 + t12772;
  t12781 = -1.*t4612*t4602;
  t12783 = t12781 + t5132;
  t12787 = -3.000000000027e-6*t203*t345;
  t12789 = 1.000000000009*t332*t345;
  t12790 = t12787 + t12789;
  t12795 = -1.000000000009*t163*t223;
  t12796 = -1.*t4612*t4699;
  t12798 = t12795 + t12796;
  t12802 = -1.*t4612*t4935;
  t12803 = t163*t4974;
  t12805 = t12802 + t12803;
  t12808 = t203*t4921;
  t12809 = t332*t4928;
  t12810 = t12808 + t12809;
  t12821 = t332*t4894;
  t12822 = t203*t4903;
  t12823 = t12821 + t12822;
  t12827 = t163*t4868;
  t12833 = -1.*t4612*t4907;
  t12837 = t12827 + t12833;
  t12841 = t332*t4738;
  t12847 = t203*t4770;
  t12848 = t12841 + t12847;
  t12853 = t163*t4722;
  t12854 = -1.*t4612*t4778;
  t12855 = t12853 + t12854;
  t13200 = -3.e-6*t223;
  t13202 = t304 + t13200;
  t13908 = t203*t13202;
  t13927 = t13908 + t332;
  t13937 = 0.2000003000018*t287;
  t13938 = 0.2*t223;
  t13948 = -0.05*t345;
  t13955 = t13937 + t13938 + t13948;
  t13959 = t203*t13955;
  t13963 = 0.1*t301;
  t14000 = -5.4e-18*t287;
  t14016 = 1.5e-7*t345;
  t14017 = t13963 + t14000 + t14016;
  t14018 = -1.*t332*t14017;
  t14019 = t13959 + t14018;
  t14030 = 0.05*t5142;
  t14040 = -3.000018e-7*t345;
  t14057 = t14030 + t14040;
  t13205 = -1.*t13202*t332;
  t13207 = t203 + t13205;
  t14025 = -1.*t4612*t14019;
  t14117 = t163*t14057;
  t14128 = t14025 + t14117;
  t14159 = t163*t14019;
  t14178 = t4612*t14057;
  t14180 = t14159 + t14178;
  t14221 = -1.*t332*t13955;
  t14223 = -1.*t203*t14017;
  t14228 = t14221 + t14223;
  t14203 = t332*t13955;
  t14207 = t203*t14017;
  t14210 = t14203 + t14207;
  t14192 = -1.*t203;
  t14198 = t13202*t332;
  t14199 = t14192 + t14198;
  t4634 = -1.000000000009*t4612*t345;
  t14337 = t163*t5117;
  t14342 = t14337 + t4634;
  t14219 = Power(t163,2);
  t14234 = Power(t4612,2);
  t14538 = t5142*t4612;
  t14539 = t163*t5167;
  t14540 = t14538 + t14539;
  t14609 = -3.e-6*t3120;
  t8293 = t4612*t5261;
  t8312 = t163*t5283;
  t8342 = t8293 + t8312;
  t11128 = t163*t5297;
  t11130 = t4612*t5311;
  t11161 = t11128 + t11130;
  t14690 = 0.2000000000018*t287;
  t14693 = t223*t3548;
  t14697 = 3.e-6*t287*t3676;
  t14717 = -1.*t345*t3762;
  t14720 = t14690 + t14693 + t14697 + t14717;
  t14733 = -1.*t332*t14720;
  t14752 = -6.000000000054e-7*t287;
  t14839 = 3.e-6*t287*t3548;
  t14840 = t301*t3676;
  t14861 = 3.e-6*t345*t3762;
  t14876 = t14752 + t14839 + t14840 + t14861;
  t14882 = -1.*t203*t14876;
  t14909 = t14733 + t14882;
  t15066 = t203*t14720;
  t15067 = -1.*t332*t14876;
  t15068 = t15066 + t15067;
  t15105 = -0.2000000000018*t345;
  t15116 = t345*t3548;
  t15117 = -3.e-6*t345*t3676;
  t15190 = t5142*t3762;
  t15192 = t15105 + t15116 + t15117 + t15190;
  t14954 = t332*t14720;
  t15028 = t203*t14876;
  t15049 = t14954 + t15028;
  t15205 = t4612*t15192;
  t15214 = t163*t15068;
  t15230 = t15205 + t15214;
  t15304 = t163*t15192;
  t15342 = -1.*t4612*t15068;
  t15408 = t15304 + t15342;
  t7108 = t4612*t5189;
  t7109 = t163*t5220;
  t7162 = t7108 + t7109;
  t14150 = -1.*t4612*t13927*t14128;
  t14186 = t163*t13927*t14180;
  t14212 = t14199*t14210;
  t14215 = t14150 + t14186 + t14212;
  t14347 = -1.*t12374*t14210;
  t14357 = -1.*t14128*t5134;
  t14358 = -1.*t14180*t14342;
  t14368 = t14347 + t14357 + t14358;
  t18624 = -1.*t163*t14019;
  t18628 = -1.*t4612*t14057;
  t18629 = t18624 + t18628;
  t14504 = t4612*t13927*t14128;
  t14506 = -1.*t163*t13927*t14180;
  t14507 = -1.*t14199*t14210;
  t14508 = t14504 + t14506 + t14507;
  t14545 = t14210*t12432;
  t14548 = t14180*t14540;
  t14549 = t14128*t5172;
  t14551 = t14545 + t14548 + t14549;
  t14618 = -3.e-6*t3549;
  t14622 = t14609 + t832 + t14618 + t916;
  t14625 = -3.e-6*t3885;
  t14626 = t14609 + t832 + t14625 + t2290;
  t14631 = 1.8e-11*t738;
  t14633 = -3.e-6*t1584;
  t14642 = -3.e-6*t2814;
  t14648 = -1. + t14631 + t14633 + t4310 + t14642;
  t15621 = -1.*t12479*t15049;
  t15664 = -1.*t11161*t15230;
  t15696 = -1.*t5332*t15408;
  t15714 = t15621 + t15664 + t15696;
  t19159 = -1.*t4612*t15192;
  t19161 = -1.*t163*t15068;
  t19164 = t19159 + t19161;
  t16541 = t12491*t15049;
  t17026 = t8342*t15230;
  t17079 = t5287*t15408;
  t17084 = t16541 + t17026 + t17079;
  t17697 = t12479*t15049;
  t17715 = t11161*t15230;
  t17811 = t5332*t15408;
  t17928 = t17697 + t17715 + t17811;
  t18105 = -1.*t15049*t12516;
  t18123 = -1.*t15230*t7162;
  t18138 = -1.*t15408*t5230;
  t18144 = t18105 + t18123 + t18138;
  t18225 = -1.*t12491*t15049;
  t18228 = -1.*t8342*t15230;
  t18231 = -1.*t5287*t15408;
  t18234 = t18225 + t18228 + t18231;
  t18528 = t15049*t12516;
  t18532 = t15230*t7162;
  t18534 = t15408*t5230;
  t18537 = t18528 + t18532 + t18534;
  t6350 = t163*t6348;
  t6372 = t4612*t6365;
  t6377 = t6350 + t6372;
  t19604 = 3.000000000054e-6*t908;
  t7216 = t4612*t7215;
  t7298 = t163*t7294;
  t7299 = t7216 + t7298;
  t7464 = t4612*t7393;
  t8207 = t163*t7913;
  t8270 = t7464 + t8207;
  t19850 = t223*t6475;
  t19866 = 3.e-6*t287*t6668;
  t19886 = -1.*t345*t6713;
  t19898 = t19850 + t19866 + t19886;
  t19901 = 3.e-6*t287*t6475;
  t19905 = t301*t6668;
  t19906 = 3.e-6*t345*t6713;
  t19909 = t19901 + t19905 + t19906;
  t19920 = t203*t19898;
  t19962 = -1.*t332*t19909;
  t19966 = t19920 + t19962;
  t19973 = t345*t6475;
  t19977 = -3.e-6*t345*t6668;
  t19978 = t5142*t6713;
  t19980 = t19973 + t19977 + t19978;
  t19990 = -1.*t4612*t19966;
  t19991 = t163*t19980;
  t20015 = t19990 + t19991;
  t19971 = t163*t19966;
  t19982 = t4612*t19980;
  t19984 = t19971 + t19982;
  t19900 = t332*t19898;
  t19910 = t203*t19909;
  t19915 = t19900 + t19910;
  t4607 = t163*t4602;
  t4674 = t4607 + t4634;
  t21952 = 1.5e-7*t223;
  t21997 = -9.000054e-13*t345;
  t22002 = t21952 + t21997;
  t22006 = -1.*t332*t22002;
  t22008 = -0.05*t223;
  t22021 = 3.000018e-7*t345;
  t22030 = t22008 + t22021;
  t22032 = t203*t22030;
  t22035 = t22006 + t22032;
  t22061 = -3.000018e-7*t223;
  t22079 = -0.05000000000045*t345;
  t22080 = t22061 + t22079;
  t22300 = t203*t22002;
  t22403 = t332*t22030;
  t22410 = t22300 + t22403;
  t22123 = t163*t22035;
  t22159 = t4612*t22080;
  t22172 = t22123 + t22159;
  t22057 = -1.*t4612*t22035;
  t22082 = t163*t22080;
  t22090 = t22057 + t22082;
  t4684 = -1.000000000009*t223*t4612;
  t4703 = t163*t4699;
  t4709 = t4684 + t4703;
  t4936 = t163*t4935;
  t5005 = t4612*t4974;
  t5079 = t4936 + t5005;
  t4871 = t4612*t4868;
  t4908 = t163*t4907;
  t4909 = t4871 + t4908;
  t4730 = t4612*t4722;
  t4824 = t163*t4778;
  t4860 = t4730 + t4824;
  t22948 = 0.2000000000018*t345;
  t22955 = -1.*t345*t3548;
  t22956 = 3.e-6*t345*t3676;
  t22957 = -1.*t223*t3762;
  t22958 = t22948 + t22955 + t22956 + t22957;
  t22966 = -6.000000000054e-7*t345;
  t23020 = 3.e-6*t345*t3548;
  t23023 = -9.e-12*t345*t3676;
  t23072 = 3.e-6*t223*t3762;
  t23138 = t22966 + t23020 + t23023 + t23072;
  t23232 = -0.2000000000018*t223;
  t23235 = -3.e-6*t223*t3676;
  t23239 = -1.000000000009*t345*t3762;
  t23297 = t23232 + t14693 + t23235 + t23239;
  t23340 = t203*t22958;
  t23372 = -1.*t332*t23138;
  t23419 = t23340 + t23372;
  t22964 = t332*t22958;
  t23142 = t203*t23138;
  t23179 = t22964 + t23142;
  t23330 = t4612*t23297;
  t23460 = t163*t23419;
  t23464 = t23330 + t23460;
  t23471 = t163*t23297;
  t23472 = -1.*t4612*t23419;
  t23474 = t23471 + t23472;
  t19573 = -3.e-6*t6970;
  t19633 = t5396 + t19573 + t19604;
  t19729 = -3.e-6*t6724;
  t19730 = t5452 + t19604 + t19729;
  t19779 = -3.e-6*t6185;
  t19782 = -3.e-6*t5426;
  t19783 = 1.8e-11*t908;
  t19785 = t19779 + t19782 + t8371 + t19783;
  t26199 = -1.*t5311*t15192;
  t26213 = -1.*t5297*t15068;
  t26240 = t26199 + t15621 + t26213;
  t26564 = t5261*t15192;
  t26621 = t5283*t15068;
  t26671 = t26564 + t16541 + t26621;
  t19917 = t19915*t12491;
  t19919 = t12608*t15049;
  t20062 = -1.*t12479*t19915;
  t20068 = -1.*t12655*t15049;
  t29371 = t5311*t15192;
  t29384 = t5297*t15068;
  t29431 = t29371 + t17697 + t29384;
  t20292 = t12479*t19915;
  t20456 = t12655*t15049;
  t20717 = -1.*t12567*t15049;
  t20770 = -1.*t19915*t12516;
  t29450 = -1.*t15192*t5189;
  t29451 = -1.*t15068*t5220;
  t29471 = t29450 + t29451 + t18105;
  t30365 = -1.*t5261*t15192;
  t30382 = -1.*t5283*t15068;
  t30391 = t30365 + t18225 + t30382;
  t21195 = -1.*t19915*t12491;
  t21217 = -1.*t12608*t15049;
  t21418 = t12567*t15049;
  t21442 = t19915*t12516;
  t30434 = t15192*t5189;
  t30435 = t15068*t5220;
  t30444 = t30434 + t30435 + t18528;
  t14415 = -1.*t5117*t14210;
  t14437 = -1.*t12374*t14019;
  t14284 = t13927*t14210;
  t14289 = t14199*t14019;
  t14534 = -1.*t13927*t14210;
  t14536 = -1.*t14199*t14019;
  t14565 = t14019*t12432;
  t14566 = t14210*t5167;
  t15052 = -1.*t5297*t15049;
  t15098 = -1.*t12479*t15068;
  t15786 = t5283*t15049;
  t16090 = t12491*t15068;
  t17362 = t5297*t15049;
  t17432 = t12479*t15068;
  t17938 = -1.*t15049*t5220;
  t17939 = -1.*t15068*t12516;
  t18170 = -1.*t5283*t15049;
  t18173 = -1.*t12491*t15068;
  t18236 = t15049*t5220;
  t18347 = t15068*t12516;
  t31749 = -1.*t13927*t14019;
  t31766 = t14507 + t31749;
  t22428 = -1.*t14199*t22410;
  t22497 = t12779*t14210;
  t22511 = t22410*t12432;
  t22631 = t14199*t22410;
  t31428 = t13927*t14019;
  t31430 = t14212 + t31428;
  t22693 = -1.*t12374*t22410;
  t22742 = -1.*t14210*t12790;
  t23190 = -1.*t12479*t23179;
  t23220 = -1.*t12810*t15049;
  t23525 = t12491*t23179;
  t23559 = t12823*t15049;
  t23644 = t12479*t23179;
  t23646 = t12810*t15049;
  t24258 = -1.*t23179*t12516;
  t24259 = -1.*t15049*t12848;
  t24552 = -1.*t12491*t23179;
  t24555 = -1.*t12823*t15049;
  t24768 = t23179*t12516;
  t24797 = t15049*t12848;
  t32730 = -1.*t4974*t15192;
  t32752 = -1.*t5311*t23297;
  t32790 = t4868*t15192;
  t32802 = t5261*t23297;
  t32891 = t4974*t15192;
  t32904 = t5311*t23297;
  t32938 = -1.*t15192*t4722;
  t32940 = -1.*t23297*t5189;
  t32990 = -1.*t4868*t15192;
  t33011 = -1.*t5261*t23297;
  t33056 = t15192*t4722;
  t33057 = t23297*t5189;
  t33379 = -1.*t4400*t14720;
  t33389 = -1.*t4393*t14876;
  t33415 = t26199 + t33379 + t33389;
  t33649 = t4100*t14720;
  t33657 = t4214*t14876;
  t33678 = t26564 + t33649 + t33657;
  t27639 = t19980*t5261;
  t27656 = t7215*t15192;
  t28046 = -1.*t5311*t19980;
  t28179 = -1.*t7393*t15192;
  t33712 = t4400*t14720;
  t33778 = t4393*t14876;
  t33782 = t29371 + t33712 + t33778;
  t29796 = t5311*t19980;
  t29804 = t7393*t15192;
  t29897 = -1.*t6365*t15192;
  t29915 = -1.*t19980*t5189;
  t34144 = -1.*t14876*t2902;
  t34145 = -1.*t14720*t2979;
  t34152 = t34144 + t34145 + t29450;
  t34358 = -1.*t4100*t14720;
  t34360 = -1.*t4214*t14876;
  t34368 = t30365 + t34358 + t34360;
  t30466 = -1.*t19980*t5261;
  t30467 = -1.*t7215*t15192;
  t30802 = t6365*t15192;
  t31308 = t19980*t5189;
  t34380 = t14876*t2902;
  t34423 = t14720*t2979;
  t34436 = t34380 + t34423 + t30434;
  p_output1[0]=var2[6]*(-0.5*(0.0013000000000117*t5134 - 7.7999532000702e-9*t5172 + 0.05186*t4085*t5230 + 0.05186*t4379*t5287 + 0.05186*t4485*t5332)*var2[4] - 0.5*(0.0013000000000117*t163*t342 + 0.05186*t163*t3003*t4085 - 7.7999532000702e-9*t163*t416 + 0.05186*t163*t4271*t4379 + 0.05186*t163*t4408*t4485)*var2[5] - 0.5*(-7.7999532000702e-9*t4674 + 0.0013000000000117*t4709 + 0.05186*t4085*t4860 + 0.05186*t4379*t4909 + 0.05186*t4485*t5079)*var2[6] - 0.5*(0.05186*t11161*t12224 + 0.05186*t4085*t6377 + 0.05186*t7104*t7162 + 0.05186*t4379*t7299 + 0.05186*t4485*t8270 + 0.05186*t11055*t8342)*var2[8]);
  p_output1[1]=var2[6]*(-0.5*(0.0013000000000117*(-1.*t12232*t12374 - 1.*t12230*t5134) - 7.7999532000702e-9*(-1.*t12232*t12432 - 1.*t12230*t5172) + 0.05186*t4085*(-1.*t12232*t12516 - 1.*t12230*t5230) + 0.05186*t4379*(-1.*t12232*t12491 - 1.*t12230*t5287) + 0.05186*t4485*(-1.*t12232*t12479 - 1.*t12230*t5332))*var2[3] - 0.5*(-0.0013000000000117*t12232*t12304 + 7.7999532000702e-9*t12232*t12316 - 0.05186*t12232*t12334*t4085 - 0.05186*t12232*t12340*t4379 - 0.05186*t12232*t12353*t4485)*var2[4] - 0.5*(0.0013000000000117*(t12232*t342*t4612 + t12230*t5117) - 7.7999532000702e-9*(t12232*t416*t4612 + t12230*t5167) + 0.05186*t4085*(t12232*t3003*t4612 + t12230*t5220) + 0.05186*t4379*(t12232*t4271*t4612 + t12230*t5283) + 0.05186*t4485*(t12232*t4408*t4612 + t12230*t5297))*var2[5] - 0.5*(-7.7999532000702e-9*(t12230*t12779 - 1.*t12232*t12783) + 0.0013000000000117*(t12230*t12790 - 1.*t12232*t12798) + 0.05186*(t12230*t12848 - 1.*t12232*t12855)*t4085 + 0.05186*(t12230*t12823 - 1.*t12232*t12837)*t4379 + 0.05186*(-1.*t12232*t12805 + t12230*t12810)*t4485)*var2[6] - 0.5*(0.05186*t12224*t12592 + 0.05186*t11055*t12603 + 0.05186*(t12230*t12567 - 1.*t12232*t12579)*t4085 + 0.05186*(t12230*t12608 - 1.*t12232*t12614)*t4379 + 0.05186*(t12230*t12655 - 1.*t12232*t12663)*t4485 + 0.05186*t12672*t7104)*var2[8]);
  p_output1[2]=var2[6]*(-0.5*(0.05186*t12672*t4085 + 0.05186*t12603*t4379 + 0.05186*t12592*t4485 + 0.0013000000000117*(t12230*t12374 - 1.*t12232*t5134) - 7.7999532000702e-9*(t12230*t12432 - 1.*t12232*t5172))*var2[3] - 0.5*(0.0013000000000117*t12230*t12304 - 7.7999532000702e-9*t12230*t12316 + 0.05186*t12230*t12334*t4085 + 0.05186*t12230*t12340*t4379 + 0.05186*t12230*t12353*t4485)*var2[4] - 0.5*(0.0013000000000117*(-1.*t12230*t342*t4612 + t12232*t5117) - 7.7999532000702e-9*(-1.*t12230*t416*t4612 + t12232*t5167) + 0.05186*t4085*(-1.*t12230*t3003*t4612 + t12232*t5220) + 0.05186*t4379*(-1.*t12230*t4271*t4612 + t12232*t5283) + 0.05186*t4485*(-1.*t12230*t4408*t4612 + t12232*t5297))*var2[5] - 0.5*(-7.7999532000702e-9*(t12232*t12779 + t12230*t12783) + 0.0013000000000117*(t12232*t12790 + t12230*t12798) + 0.05186*(t12232*t12848 + t12230*t12855)*t4085 + 0.05186*(t12232*t12823 + t12230*t12837)*t4379 + 0.05186*(t12230*t12805 + t12232*t12810)*t4485)*var2[6] - 0.5*(0.05186*(t12232*t12567 + t12230*t12579)*t4085 + 0.05186*(t12232*t12608 + t12230*t12614)*t4379 + 0.05186*(t12232*t12655 + t12230*t12663)*t4485 + 0.05186*t11055*(t12232*t12491 + t12230*t5287) + 0.05186*t12224*(t12232*t12479 + t12230*t5332) + 0.05186*(t12232*t12516 + t12230*t5230)*t7104)*var2[8]);
  p_output1[3]=var2[6]*(-0.5*(-0.000046000000000414*t13927*t4612 - 7.7999532000702e-9*(-1.*t13927*t14368*t4612 + t14342*(-1.*t13927*t14180*t4612 - 1.*t13927*t18629*t4612) + t14215*t5134 + t13927*t163*(-1.*t12304*t14128 - 1.*t14128*t14342 - 1.*t14180*t5134 - 1.*t18629*t5134)) + 0.0013000000000117*(-1.*t13927*t14551*t4612 + t14540*(t13927*t14180*t4612 + t13927*t18629*t4612) + t14508*t5172 + t13927*t163*(t12316*t14128 + t14128*t14540 + t14180*t5172 + t18629*t5172)) + 0.000245*t14648*t5230 + 2.e-6*t14626*t5287 + 0.000245*t14622*t5332 + 0.05186*t4379*(t17928*t5230 + t18144*t5332 + (t11161*t15408 + t12353*t15408 + t15230*t5332 + t19164*t5332)*t7162 + t11161*(-1.*t12334*t15408 - 1.*t15230*t5230 - 1.*t19164*t5230 - 1.*t15408*t7162)) + 0.05186*t4485*(t18234*t5230 + t18537*t5287 + (t12334*t15408 + t15230*t5230 + t19164*t5230 + t15408*t7162)*t8342 + t7162*(-1.*t12340*t15408 - 1.*t15230*t5287 - 1.*t19164*t5287 - 1.*t15408*t8342)) + 0.05186*t4085*(t15714*t5287 + t17084*t5332 + (-1.*t11161*t15408 - 1.*t12353*t15408 - 1.*t15230*t5332 - 1.*t19164*t5332)*t8342 + t11161*(t12340*t15408 + t15230*t5287 + t19164*t5287 + t15408*t8342)))*var2[4] - 0.5*(0.000046000000000414*t13207*t163 + 0.000245*t14648*t163*t3003 + 2.e-6*t14626*t163*t4271 + 0.000245*t14622*t163*t4408 - 7.7999532000702e-9*(t13207*t14368*t163 + t14215*t163*t342 + t14342*(t13927*t14219*t14228 + t13927*t14228*t14234 + t14284 + t14289 + t13207*t14180*t163 - 1.*t13207*t14128*t4612) + t13927*t163*(t14415 + t14437 - 1.*t14228*t14342*t163 - 1.*t14180*t163*t342 + t14128*t342*t4612 + t14228*t4612*t5134)) + 0.0013000000000117*(t13207*t14551*t163 + t14508*t163*t416 + t14540*(-1.*t13927*t14219*t14228 - 1.*t13927*t14228*t14234 + t14534 + t14536 - 1.*t13207*t14180*t163 + t13207*t14128*t4612) + t13927*t163*(t14565 + t14566 + t14228*t14540*t163 + t14180*t163*t416 - 1.*t14128*t416*t4612 - 1.*t14228*t4612*t5172)) + 0.05186*t4379*(t163*t17928*t3003 + t163*t18144*t4408 + (t11161*t14909*t163 + t17362 + t17432 + t15230*t163*t4408 - 1.*t15408*t4408*t4612 - 1.*t14909*t4612*t5332)*t7162 + t11161*(t17938 + t17939 - 1.*t15230*t163*t3003 + t15408*t3003*t4612 + t14909*t4612*t5230 - 1.*t14909*t163*t7162)) + 0.05186*t4485*(t163*t18234*t3003 + t163*t18537*t4271 + (t18236 + t18347 + t15230*t163*t3003 - 1.*t15408*t3003*t4612 - 1.*t14909*t4612*t5230 + t14909*t163*t7162)*t8342 + t7162*(t18170 + t18173 - 1.*t15230*t163*t4271 + t15408*t4271*t4612 + t14909*t4612*t5287 - 1.*t14909*t163*t8342)) + 0.05186*t4085*(t15714*t163*t4271 + t163*t17084*t4408 + (t15052 + t15098 - 1.*t11161*t14909*t163 - 1.*t15230*t163*t4408 + t15408*t4408*t4612 + t14909*t4612*t5332)*t8342 + t11161*(t15786 + t16090 + t15230*t163*t4271 - 1.*t15408*t4271*t4612 - 1.*t14909*t4612*t5287 + t14909*t163*t8342)))*var2[5] - 0.5*(0.000245*t14648*t4860 + 2.e-6*t14626*t4909 + 0.000245*t14622*t5079 - 7.7999532000702e-9*(t14342*(t13927*t163*t22172 + t22631 - 1.*t13927*t22090*t4612) + t14215*t4709 + t13927*t163*(-1.*t12798*t14128 - 1.*t14342*t22172 + t22693 + t22742 - 1.*t14180*t4709 - 1.*t22090*t5134)) + 0.0013000000000117*(t14540*(-1.*t13927*t163*t22172 + t22428 + t13927*t22090*t4612) + t14508*t4674 + t13927*t163*(t12783*t14128 + t14540*t22172 + t22497 + t22511 + t14180*t4674 + t22090*t5172)) + 0.05186*t4379*(t17928*t4860 + t18144*t5079 + (t12805*t15408 + t11161*t23464 + t23644 + t23646 + t15230*t5079 + t23474*t5332)*t7162 + t11161*(-1.*t12855*t15408 + t24258 + t24259 - 1.*t15230*t4860 - 1.*t23474*t5230 - 1.*t23464*t7162)) + 0.05186*t4485*(t18234*t4860 + t18537*t4909 + (t12855*t15408 + t24768 + t24797 + t15230*t4860 + t23474*t5230 + t23464*t7162)*t8342 + t7162*(-1.*t12837*t15408 + t24552 + t24555 - 1.*t15230*t4909 - 1.*t23474*t5287 - 1.*t23464*t8342)) + 0.05186*t4085*(t15714*t4909 + t17084*t5079 + (-1.*t12805*t15408 + t23190 + t23220 - 1.*t11161*t23464 - 1.*t15230*t5079 - 1.*t23474*t5332)*t8342 + t11161*(t12837*t15408 + t23525 + t23559 + t15230*t4909 + t23474*t5287 + t23464*t8342)))*var2[6] - 0.5*(0.000245*t11161*t19633 + 0.000245*t14648*t6377 + 0.000245*t19785*t7162 + 0.05186*t11055*(t11161*t18144 + t17928*t7162) + 2.e-6*t14626*t7299 + 0.000245*t14622*t8270 + 0.05186*t4379*(t17928*t6377 + t11161*(-1.*t12579*t15408 + t20717 + t20770 - 1.*t20015*t5230 - 1.*t15230*t6377 - 1.*t19984*t7162) + t18144*t8270 + t7162*(t12663*t15408 + t11161*t19984 + t20292 + t20456 + t20015*t5332 + t15230*t8270)) + 2.e-6*t19730*t8342 + 0.05186*t7104*(t11161*t17084 + t15714*t8342) + 0.05186*t12224*(t18234*t7162 + t18537*t8342) + 0.05186*t4485*(t18234*t6377 + t18537*t7299 + (t12579*t15408 + t21418 + t21442 + t20015*t5230 + t15230*t6377 + t19984*t7162)*t8342 + t7162*(-1.*t12614*t15408 + t21195 + t21217 - 1.*t20015*t5287 - 1.*t15230*t7299 - 1.*t19984*t8342)) + 0.05186*t4085*(t15714*t7299 + t17084*t8270 + (-1.*t12663*t15408 - 1.*t11161*t19984 + t20062 + t20068 - 1.*t20015*t5332 - 1.*t15230*t8270)*t8342 + t11161*(t12614*t15408 + t19917 + t19919 + t20015*t5287 + t15230*t7299 + t19984*t8342)))*var2[8]);
  p_output1[4]=var2[6]*(-0.5*(0.000046000000000414*t13927 - 7.7999532000702e-9*(t12374*(t13207*t14019 + t13927*t14228 + t14284 + t14289) + t31430*t5117 + t13927*(t14347 + 1.000000000009*t14057*t345 - 1.*t14019*t5117) + t14199*(t14415 + t14437 - 1.*t14019*t342 - 1.*t14228*t5117)) + 0.0013000000000117*(t12432*(-1.*t13207*t14019 - 1.*t13927*t14228 + t14534 + t14536) + t31766*t5167 + t13927*(t14545 + t14057*t5142 + t14019*t5167) + t14199*(t14565 + t14566 + t14019*t416 + t14228*t5167)) + 0.000245*t14648*t5220 + 2.e-6*t14626*t5283 + 0.05186*t4485*(t30391*t5220 + t12491*(t18236 + t18347 + t15068*t3003 + t14909*t5220) + t30444*t5283 + t12516*(t18170 + t18173 - 1.*t15068*t4271 - 1.*t14909*t5283)) + 0.000245*t14622*t5297 + 0.05186*t4085*(t26240*t5283 + t12479*(t15786 + t16090 + t15068*t4271 + t14909*t5283) + t26671*t5297 + t12491*(t15052 + t15098 - 1.*t15068*t4408 - 1.*t14909*t5297)) + 0.05186*t4379*(t29431*t5220 + t12479*(t17938 + t17939 - 1.*t15068*t3003 - 1.*t14909*t5220) + t29471*t5297 + t12516*(t17362 + t17432 + t15068*t4408 + t14909*t5297)))*var2[5] - 0.5*(0.000245*t12810*t14622 + 2.e-6*t12823*t14626 + 0.000245*t12848*t14648 - 7.7999532000702e-9*(t12374*(t13927*t22035 + t22631) + t12790*t31430 + t14199*(1.000000000009*t14057*t223 + t22693 + t22742 + 1.000000000009*t22080*t345 - 1.*t14019*t4699 - 1.*t22035*t5117)) + 0.0013000000000117*(t12432*(-1.*t13927*t22035 + t22428) + t12779*t31766 + t14199*(t22497 + t22511 - 1.000000000009*t14057*t345 + t14019*t4602 + t22080*t5142 + t22035*t5167)) + 0.05186*t4485*(t12848*t30391 + t12823*t30444 + t12491*(t24768 + t24797 + t33056 + t33057 + t15068*t4778 + t23419*t5220) + t12516*(t24552 + t24555 + t32990 + t33011 - 1.*t15068*t4907 - 1.*t23419*t5283)) + 0.05186*t4085*(t12823*t26240 + t12810*t26671 + t12479*(t23525 + t23559 + t32790 + t32802 + t15068*t4907 + t23419*t5283) + t12491*(t23190 + t23220 + t32730 + t32752 - 1.*t15068*t4935 - 1.*t23419*t5297)) + 0.05186*t4379*(t12848*t29431 + t12810*t29471 + t12479*(t24258 + t24259 + t32938 + t32940 - 1.*t15068*t4778 - 1.*t23419*t5220) + t12516*(t23644 + t23646 + t32891 + t32904 + t15068*t4935 + t23419*t5297)))*var2[6] - 0.5*(0.000245*t12655*t14622 + 2.e-6*t12608*t14626 + 0.000245*t12567*t14648 + 0.000245*t12479*t19633 + 2.e-6*t12491*t19730 + 0.000245*t12516*t19785 + 0.05186*t11055*(t12516*t29431 + t12479*t29471) + 0.05186*t12224*(t12516*t30391 + t12491*t30444) + 0.05186*(t12491*t26240 + t12479*t26671)*t7104 + 0.05186*t4485*(t12567*t30391 + t12608*t30444 + t12491*(t21418 + t21442 + t30802 + t31308 + t19966*t5220 + t15068*t6348) + t12516*(t21195 + t21217 + t30466 + t30467 - 1.*t19966*t5283 - 1.*t15068*t7294)) + 0.05186*t4085*(t12608*t26240 + t12655*t26671 + t12479*(t19917 + t19919 + t27639 + t27656 + t19966*t5283 + t15068*t7294) + t12491*(t20062 + t20068 + t28046 + t28179 - 1.*t19966*t5297 - 1.*t15068*t7913)) + 0.05186*t4379*(t12567*t29431 + t12655*t29471 + t12479*(t20717 + t20770 + t29897 + t29915 - 1.*t19966*t5220 - 1.*t15068*t6348) + t12516*(t20292 + t20456 + t29796 + t29804 + t19966*t5297 + t15068*t7913)))*var2[8]);
  p_output1[5]=var2[6]*(-0.5*(7.7999532001404e-9*t223*(t13202*t13955 + 5.4e-18*t287 + 0.1*(-1. + t317) - 1.5e-7*t345) - 0.0013000000000234*(-1.*t13202*t13955 + t13963 + t14000 + t14016)*t345 + 7.7999532001404e-9*(t13202*t22030 - 1.5e-7*t223 + 9.000054e-13*t345)*t345 + 0.000245*t14648*t4722 + 2.e-6*t14626*t4868 + 0.000245*t14622*t4974 + 0.0013000000000117*(t21952 + t21997 - 1.*t13202*t22030)*t5142 + 0.05186*t4485*(t34368*t4722 + t34436*t4868 + (t32990 + t33011 - 1.*t22958*t4100 - 1.*t23138*t4214 - 1.*t14720*t4894 - 1.*t14876*t4903)*t5189 + (t23138*t2902 + t22958*t2979 + t33056 + t33057 + t14720*t4738 + t14876*t4770)*t5261) + 0.05186*t4379*(t33782*t4722 + t34152*t4974 + (t32891 + t32904 + t23138*t4393 + t22958*t4400 + t14876*t4921 + t14720*t4928)*t5189 + (-1.*t23138*t2902 - 1.*t22958*t2979 + t32938 + t32940 - 1.*t14720*t4738 - 1.*t14876*t4770)*t5311) + 0.05186*t4085*(t33415*t4868 + t33678*t4974 + (t32730 + t32752 - 1.*t23138*t4393 - 1.*t22958*t4400 - 1.*t14876*t4921 - 1.*t14720*t4928)*t5261 + (t32790 + t32802 + t22958*t4100 + t23138*t4214 + t14720*t4894 + t14876*t4903)*t5311))*var2[6] - 0.5*(0.000245*t19785*t5189 + 2.e-6*t19730*t5261 + 0.05186*t12224*(t34368*t5189 + t34436*t5261) + 0.000245*t19633*t5311 + 0.05186*t11055*(t33782*t5189 + t34152*t5311) + 0.000245*t14648*t6365 + 0.05186*(t33415*t5261 + t33678*t5311)*t7104 + 2.e-6*t14626*t7215 + 0.05186*t4485*(t5261*(t19909*t2902 + t19898*t2979 + t30802 + t31308 + t14876*t6207 + t14720*t6334) + t34368*t6365 + t34436*t7215 + t5189*(t30466 + t30467 - 1.*t19898*t4100 - 1.*t19909*t4214 - 1.*t14876*t7226 - 1.*t14720*t7292)) + 0.000245*t14622*t7393 + 0.05186*t4085*(t33415*t7215 + t5311*(t27639 + t27656 + t19898*t4100 + t19909*t4214 + t14876*t7226 + t14720*t7292) + t33678*t7393 + t5261*(t28046 + t28179 - 1.*t19909*t4393 - 1.*t19898*t4400 - 1.*t14720*t7701 - 1.*t14876*t7888)) + 0.05186*t4379*(t5311*(-1.*t19909*t2902 - 1.*t19898*t2979 + t29897 + t29915 - 1.*t14876*t6207 - 1.*t14720*t6334) + t33782*t6365 + t34152*t7393 + t5189*(t29796 + t29804 + t19909*t4393 + t19898*t4400 + t14720*t7701 + t14876*t7888)))*var2[8]);
  p_output1[6]=-0.5*(0.00049*t14622*t19633 + 4.e-6*t14626*t19730 + 0.00049*t14648*t19785 + 0.10372*t11055*t4379 + 0.10372*t12224*t4485 + 0.10372*t4085*t7104)*var2[6]*var2[8];
  p_output1[7]=0;
  p_output1[8]=-0.5*(0.005186015558*t11055 - 1.555781330428e-8*t12224 + 0.00024500000000441*t19785 + 1.5558e-8*t7104)*var2[6]*var2[8];
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec7_minitaur.hh"

namespace FrontStance
{

void Ce1_vec7_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
