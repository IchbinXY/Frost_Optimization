/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:08:25 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t12268;
  double t12414;
  double t12540;
  double t12543;
  double t12557;
  double t12799;
  double t12819;
  double t12859;
  double t12581;
  double t4616;
  double t12542;
  double t12626;
  double t12685;
  double t12780;
  double t12895;
  double t12896;
  double t12897;
  double t12958;
  double t12977;
  double t12995;
  double t13095;
  double t13097;
  double t13098;
  double t13102;
  double t13103;
  double t2289;
  double t13169;
  double t4490;
  double t14346;
  double t13069;
  double t13074;
  double t14393;
  double t14483;
  double t14662;
  double t14804;
  double t14925;
  double t14952;
  double t14629;
  double t15043;
  double t15088;
  double t15267;
  double t15454;
  double t15460;
  double t15483;
  double t18042;
  double t17541;
  double t18187;
  double t18196;
  double t17606;
  double t17607;
  double t18088;
  double t18099;
  double t18100;
  double t18165;
  double t18188;
  double t18193;
  double t18224;
  double t18524;
  double t18544;
  double t18545;
  double t18847;
  double t18942;
  double t18944;
  double t18992;
  double t18993;
  double t18996;
  double t19085;
  double t19093;
  double t19122;
  double t19311;
  double t19318;
  double t19323;
  double t12784;
  double t13026;
  double t13111;
  double t13161;
  double t13170;
  double t13277;
  double t13952;
  double t14023;
  double t14369;
  double t14441;
  double t14491;
  double t14498;
  double t14529;
  double t14546;
  double t14550;
  double t14570;
  double t14630;
  double t15341;
  double t15550;
  double t15778;
  double t16347;
  double t16363;
  double t16399;
  double t16463;
  double t19504;
  double t19505;
  double t19508;
  double t19511;
  double t19518;
  double t19521;
  double t19537;
  double t28625;
  double t19554;
  double t19558;
  double t19561;
  double t19635;
  double t19732;
  double t19768;
  double t19778;
  double t20229;
  double t20243;
  double t20253;
  double t20641;
  double t20838;
  double t20843;
  double t20874;
  double t13162;
  double t14216;
  double t14217;
  double t14500;
  double t14606;
  double t14608;
  double t30461;
  double t16117;
  double t16518;
  double t17085;
  double t18169;
  double t18421;
  double t18546;
  double t18623;
  double t18702;
  double t18703;
  double t18704;
  double t18711;
  double t18667;
  double t18715;
  double t18721;
  double t18848;
  double t18957;
  double t18958;
  double t18983;
  double t19165;
  double t19166;
  double t19167;
  double t19174;
  double t19187;
  double t19188;
  double t19191;
  double t19194;
  double t18995;
  double t19086;
  double t19153;
  double t19154;
  double t19180;
  double t19199;
  double t19200;
  double t19420;
  double t19448;
  double t19451;
  double t19452;
  double t19456;
  double t19459;
  double t19460;
  double t19461;
  double t19316;
  double t19322;
  double t19324;
  double t19343;
  double t19455;
  double t19466;
  double t19494;
  double t19509;
  double t19546;
  double t19547;
  double t19711;
  double t19786;
  double t20187;
  double t20825;
  double t21320;
  double t21329;
  double t21507;
  double t21543;
  double t21565;
  double t21606;
  double t21644;
  double t22044;
  double t22452;
  double t22502;
  double t22646;
  double t22753;
  double t22760;
  double t22922;
  double t22945;
  double t22947;
  double t23624;
  double t23632;
  double t23697;
  double t23757;
  double t24193;
  double t24261;
  double t24276;
  double t24278;
  double t23502;
  double t23604;
  double t23605;
  double t23910;
  double t24306;
  double t24350;
  double t24944;
  double t25004;
  double t25029;
  double t25032;
  double t26054;
  double t26158;
  double t26162;
  double t26176;
  double t24746;
  double t24754;
  double t24909;
  double t25491;
  double t26386;
  double t26738;
  double t29432;
  double t29609;
  double t29791;
  double t29917;
  double t29919;
  double t29920;
  double t30312;
  double t30349;
  double t30414;
  double t31685;
  double t31691;
  double t31696;
  double t31747;
  double t31753;
  double t31769;
  double t31831;
  double t31832;
  double t31838;
  double t31994;
  double t32048;
  double t32089;
  double t32289;
  double t32291;
  double t32296;
  double t32302;
  double t32308;
  double t32321;
  double t32351;
  double t32362;
  double t32366;
  double t32390;
  double t32404;
  double t32422;
  double t32443;
  double t32446;
  double t32462;
  double t32566;
  double t32568;
  double t32581;
  double t32643;
  double t32647;
  double t32648;
  double t32680;
  double t32683;
  double t32693;
  double t32700;
  double t32701;
  double t32709;
  double t32727;
  double t32757;
  double t32758;
  double t32783;
  double t32806;
  double t32835;
  double t34636;
  double t34560;
  double t35860;
  double t34567;
  double t34579;
  double t34580;
  double t34588;
  double t34595;
  double t34648;
  double t34674;
  double t35472;
  double t35661;
  double t35856;
  double t35862;
  double t35889;
  double t35900;
  double t36090;
  double t36109;
  double t36124;
  double t36143;
  double t36166;
  double t36168;
  double t36176;
  double t36185;
  double t34556;
  double t34728;
  double t36103;
  double t36195;
  double t36199;
  double t36200;
  double t36242;
  double t36267;
  double t36271;
  double t36272;
  double t36308;
  double t36319;
  double t36320;
  double t36367;
  double t36395;
  double t36417;
  double t36430;
  double t36452;
  double t36454;
  double t36464;
  double t36469;
  double t36336;
  double t36349;
  double t36357;
  double t36326;
  double t36329;
  double t36330;
  double t36551;
  double t36616;
  double t36630;
  double t36962;
  double t37446;
  double t37513;
  double t34454;
  double t34457;
  double t34460;
  double t38499;
  double t38501;
  double t38502;
  double t38168;
  double t38173;
  double t38195;
  double t38213;
  double t41948;
  double t42126;
  double t42215;
  double t38280;
  double t38284;
  double t38285;
  double t38287;
  double t38529;
  double t38537;
  double t38541;
  double t38544;
  double t39079;
  double t39080;
  double t39085;
  double t39091;
  double t39577;
  double t39583;
  double t39593;
  double t40226;
  double t40486;
  double t40510;
  double t41444;
  double t41451;
  double t18846;
  double t18988;
  double t18990;
  double t19158;
  double t19223;
  double t19224;
  double t19361;
  double t19499;
  double t19500;
  double t44312;
  double t44938;
  double t44379;
  double t44683;
  double t44912;
  double t44914;
  double t44915;
  double t44966;
  double t44967;
  double t44968;
  double t44995;
  double t44996;
  double t45022;
  double t45053;
  double t45072;
  double t45093;
  double t45094;
  double t45110;
  double t45121;
  double t44929;
  double t45004;
  double t45138;
  double t45139;
  double t45215;
  double t45216;
  double t45218;
  double t45219;
  double t45225;
  double t45228;
  double t45229;
  double t45231;
  double t45234;
  double t45235;
  double t45243;
  double t45319;
  double t45321;
  double t45329;
  double t45230;
  double t45274;
  double t45316;
  double t45142;
  double t45220;
  double t45221;
  double t24926;
  double t27658;
  double t27806;
  double t48814;
  double t48819;
  double t48823;
  double t48831;
  double t48832;
  double t48839;
  double t48842;
  double t48849;
  double t48851;
  double t48855;
  double t48949;
  double t48950;
  double t48951;
  double t48955;
  double t48963;
  double t48964;
  double t48965;
  double t22763;
  double t22961;
  double t23397;
  double t23611;
  double t24539;
  double t24557;
  double t48834;
  double t48917;
  double t48918;
  double t48959;
  double t48967;
  double t48968;
  double t48976;
  double t48977;
  double t48979;
  double t45223;
  double t45224;
  double t45618;
  double t45620;
  double t47852;
  double t47856;
  double t48516;
  double t48518;
  double t48589;
  double t48591;
  double t48643;
  double t48651;
  double t49310;
  double t49314;
  double t49317;
  double t36366;
  double t36429;
  double t38239;
  double t38240;
  double t49321;
  double t49327;
  double t49333;
  double t49392;
  double t49402;
  double t49404;
  double t38512;
  double t38514;
  double t49451;
  double t49452;
  double t49455;
  double t38688;
  double t38736;
  double t39123;
  double t39124;
  double t49466;
  double t49471;
  double t49474;
  double t49533;
  double t49538;
  double t49541;
  double t40331;
  double t40364;
  double t48934;
  double t48943;
  double t49004;
  double t49005;
  double t49038;
  double t49040;
  double t49172;
  double t49198;
  double t49229;
  double t49233;
  double t49265;
  double t49266;
  double t49342;
  double t49346;
  double t49359;
  double t49360;
  double t49418;
  double t49419;
  double t49437;
  double t49441;
  double t49479;
  double t49481;
  double t49510;
  double t49511;
  double t50032;
  double t50035;
  double t50039;
  double t49790;
  double t49796;
  double t49825;
  double t49843;
  double t50043;
  double t50048;
  double t50050;
  double t50112;
  double t50122;
  double t50130;
  double t49906;
  double t49909;
  double t50178;
  double t50180;
  double t50182;
  double t49920;
  double t49921;
  double t49944;
  double t49952;
  double t50188;
  double t50195;
  double t50196;
  double t50232;
  double t50233;
  double t50234;
  double t49981;
  double t49987;
  double t50460;
  double t50467;
  double t50469;
  double t50471;
  double t50474;
  double t50476;
  double t50477;
  double t50479;
  double t50480;
  double t50481;
  double t50483;
  double t50489;
  double t50490;
  double t50491;
  double t50495;
  double t50509;
  double t50511;
  double t50513;
  double t50514;
  double t50515;
  double t50519;
  double t50520;
  double t50438;
  double t50550;
  double t50553;
  double t50554;
  double t50555;
  double t50563;
  double t50566;
  double t50567;
  double t50570;
  double t50571;
  double t50573;
  double t50582;
  double t50587;
  double t50591;
  double t50595;
  double t50598;
  double t50600;
  double t50605;
  double t50608;
  double t50610;
  double t50612;
  double t50614;
  double t50615;
  double t50648;
  double t50650;
  double t50651;
  double t50652;
  double t50653;
  double t50654;
  double t50660;
  double t50669;
  double t50671;
  double t50675;
  double t50677;
  double t50684;
  double t50686;
  double t50687;
  double t50689;
  double t50700;
  double t50702;
  double t50704;
  double t50706;
  double t50713;
  double t50715;
  double t50719;
  t12268 = Cos(var1[8]);
  t12414 = -1.*t12268;
  t12540 = 1. + t12414;
  t12543 = 3.e-6*t12540;
  t12557 = Sin(var1[8]);
  t12799 = Cos(var1[6]);
  t12819 = -1.*t12799;
  t12859 = 1. + t12819;
  t12581 = 3.e-6*t12557;
  t4616 = Sin(var1[6]);
  t12542 = 1.000000000009*t12540;
  t12626 = t12543 + t12581;
  t12685 = 3.e-6*t12626;
  t12780 = -1. + t12542 + t12685;
  t12895 = -9.e-12*t12540;
  t12896 = -3.e-6*t12557;
  t12897 = t12543 + t12896;
  t12958 = 3.e-6*t12897;
  t12977 = -1.*t12557;
  t12995 = t12895 + t12958 + t12977;
  t13095 = -1.8e-11*t12540;
  t13097 = 1. + t13095;
  t13098 = 3.e-6*t13097;
  t13102 = -3.e-6*t12540;
  t13103 = t13098 + t13102 + t12581;
  t2289 = Cos(var1[4]);
  t13169 = Sin(var1[5]);
  t4490 = Cos(var1[5]);
  t14346 = -1. + t12542 + t12958;
  t13069 = -9.e-12*t12859;
  t13074 = 1. + t13069;
  t14393 = t13098 + t13102 + t12896;
  t14483 = t12895 + t12685 + t12557;
  t14662 = -1.000000000009*t12540;
  t14804 = 1. + t14662;
  t14925 = 3.e-6*t14804;
  t14952 = 9.e-12*t12540;
  t14629 = 1. + t13095 + t12958 + t12685;
  t15043 = t14952 + t12977;
  t15088 = 3.e-6*t15043;
  t15267 = t14925 + t12543 + t15088 + t12581;
  t15454 = t14952 + t12557;
  t15460 = 3.e-6*t15454;
  t15483 = t14925 + t12543 + t12896 + t15460;
  t18042 = 3.e-6*t12268;
  t17541 = -3.e-6*t12268;
  t18187 = 9.e-12*t12557;
  t18196 = -2.7e-17*t12557;
  t17606 = t17541 + t12581;
  t17607 = 3.e-6*t17606;
  t18088 = t18042 + t12581;
  t18099 = 3.e-6*t18088;
  t18100 = -1.8e-11*t12557;
  t18165 = t17607 + t18099 + t18100;
  t18188 = t12414 + t18187;
  t18193 = 3.e-6*t18188;
  t18224 = t18042 + t18193 + t18196;
  t18524 = t12268 + t18187;
  t18544 = 3.e-6*t18524;
  t18545 = t17541 + t18544 + t18196;
  t18847 = Sin(var1[4]);
  t18942 = -1.000000000009*t12859;
  t18944 = 1. + t18942;
  t18992 = -3.000000000054e-6*t12557;
  t18993 = t17541 + t18992;
  t18996 = -9.e-12*t12557;
  t19085 = t12268 + t18099 + t18996;
  t19093 = 1.000000000009*t12557;
  t19122 = t17607 + t19093;
  t19311 = t18042 + t18992;
  t19318 = t12414 + t17607 + t18996;
  t19323 = t18099 + t19093;
  t12784 = 3.e-6*t4616*t12780;
  t13026 = 3.e-6*t12859*t12995;
  t13111 = t13074*t13103;
  t13161 = t12784 + t13026 + t13111;
  t13170 = -1.*t4616*t12780;
  t13277 = t12799*t12995;
  t13952 = 3.e-6*t12859*t13103;
  t14023 = t13170 + t13277 + t13952;
  t14369 = t12799*t14346;
  t14441 = 3.e-6*t12859*t14393;
  t14491 = -1.*t4616*t14483;
  t14498 = t14369 + t14441 + t14491;
  t14529 = 3.e-6*t12859*t14346;
  t14546 = t13074*t14393;
  t14550 = 3.e-6*t4616*t14483;
  t14570 = t14529 + t14546 + t14550;
  t14630 = t13074*t14629;
  t15341 = 3.e-6*t4616*t15267;
  t15550 = 3.e-6*t12859*t15483;
  t15778 = t14630 + t15341 + t15550;
  t16347 = 3.e-6*t12859*t14629;
  t16363 = -1.*t4616*t15267;
  t16399 = t12799*t15483;
  t16463 = t16347 + t16363 + t16399;
  t19504 = -1.*t13169*t13161;
  t19505 = t4490*t14023;
  t19508 = t19504 + t19505;
  t19511 = t18944*t12780;
  t19518 = t4616*t12995;
  t19521 = -3.e-6*t4616*t13103;
  t19537 = t19511 + t19518 + t19521;
  t28625 = Sin(var1[3]);
  t19554 = t4616*t14346;
  t19558 = -3.e-6*t4616*t14393;
  t19561 = t18944*t14483;
  t19635 = t19554 + t19558 + t19561;
  t19732 = t4490*t14498;
  t19768 = -1.*t13169*t14570;
  t19778 = t19732 + t19768;
  t20229 = -3.e-6*t4616*t14629;
  t20243 = t18944*t15267;
  t20253 = t4616*t15483;
  t20641 = t20229 + t20243 + t20253;
  t20838 = -1.*t13169*t15778;
  t20843 = t4490*t16463;
  t20874 = t20838 + t20843;
  t13162 = -1.*t4490*t13161;
  t14216 = -1.*t13169*t14023;
  t14217 = t13162 + t14216;
  t14500 = -1.*t13169*t14498;
  t14606 = -1.*t4490*t14570;
  t14608 = t14500 + t14606;
  t30461 = Cos(var1[3]);
  t16117 = -1.*t4490*t15778;
  t16518 = -1.*t13169*t16463;
  t17085 = t16117 + t16518;
  t18169 = t13074*t18165;
  t18421 = 3.e-6*t4616*t18224;
  t18546 = 3.e-6*t12859*t18545;
  t18623 = t18169 + t18421 + t18546;
  t18702 = 3.e-6*t12859*t18165;
  t18703 = -1.*t4616*t18224;
  t18704 = t12799*t18545;
  t18711 = t18702 + t18703 + t18704;
  t18667 = -1.*t13169*t18623;
  t18715 = t4490*t18711;
  t18721 = t18667 + t18715;
  t18848 = -3.e-6*t4616*t18165;
  t18957 = t18944*t18224;
  t18958 = t4616*t18545;
  t18983 = t18848 + t18957 + t18958;
  t19165 = t13074*t18993;
  t19166 = 3.e-6*t4616*t19085;
  t19167 = 3.e-6*t12859*t19122;
  t19174 = t19165 + t19166 + t19167;
  t19187 = 3.e-6*t12859*t18993;
  t19188 = -1.*t4616*t19085;
  t19191 = t12799*t19122;
  t19194 = t19187 + t19188 + t19191;
  t18995 = -3.e-6*t4616*t18993;
  t19086 = t18944*t19085;
  t19153 = t4616*t19122;
  t19154 = t18995 + t19086 + t19153;
  t19180 = -1.*t13169*t19174;
  t19199 = t4490*t19194;
  t19200 = t19180 + t19199;
  t19420 = 3.e-6*t12859*t19311;
  t19448 = t12799*t19318;
  t19451 = -1.*t4616*t19323;
  t19452 = t19420 + t19448 + t19451;
  t19456 = t13074*t19311;
  t19459 = 3.e-6*t12859*t19318;
  t19460 = 3.e-6*t4616*t19323;
  t19461 = t19456 + t19459 + t19460;
  t19316 = -3.e-6*t4616*t19311;
  t19322 = t4616*t19318;
  t19324 = t18944*t19323;
  t19343 = t19316 + t19322 + t19324;
  t19455 = t4490*t19452;
  t19466 = -1.*t13169*t19461;
  t19494 = t19455 + t19466;
  t19509 = -1.*t18847*t19508;
  t19546 = t2289*t19537;
  t19547 = t19509 + t19546;
  t19711 = t2289*t19635;
  t19786 = -1.*t18847*t19778;
  t20187 = t19711 + t19786;
  t20825 = t2289*t20641;
  t21320 = -1.*t18847*t20874;
  t21329 = t20825 + t21320;
  t21507 = 3.e-6*t12799*t12780;
  t21543 = 3.e-6*t4616*t12995;
  t21565 = -9.e-12*t4616*t13103;
  t21606 = t21507 + t21543 + t21565;
  t21644 = -1.*t13169*t21606;
  t22044 = -1.*t12799*t12780;
  t22452 = -1.*t4616*t12995;
  t22502 = 3.e-6*t4616*t13103;
  t22646 = t22044 + t22452 + t22502;
  t22753 = t4490*t22646;
  t22760 = t21644 + t22753;
  t22922 = -1.000000000009*t4616*t12780;
  t22945 = -3.e-6*t12799*t13103;
  t22947 = t22922 + t13277 + t22945;
  t23624 = -1.*t4616*t14346;
  t23632 = 3.e-6*t4616*t14393;
  t23697 = -1.*t12799*t14483;
  t23757 = t23624 + t23632 + t23697;
  t24193 = 3.e-6*t4616*t14346;
  t24261 = -9.e-12*t4616*t14393;
  t24276 = 3.e-6*t12799*t14483;
  t24278 = t24193 + t24261 + t24276;
  t23502 = -3.e-6*t12799*t14393;
  t23604 = -1.000000000009*t4616*t14483;
  t23605 = t14369 + t23502 + t23604;
  t23910 = t4490*t23757;
  t24306 = -1.*t13169*t24278;
  t24350 = t23910 + t24306;
  t24944 = 3.e-6*t4616*t14629;
  t25004 = -1.*t12799*t15267;
  t25029 = -1.*t4616*t15483;
  t25032 = t24944 + t25004 + t25029;
  t26054 = -9.e-12*t4616*t14629;
  t26158 = 3.e-6*t12799*t15267;
  t26162 = 3.e-6*t4616*t15483;
  t26176 = t26054 + t26158 + t26162;
  t24746 = -3.e-6*t12799*t14629;
  t24754 = -1.000000000009*t4616*t15267;
  t24909 = t24746 + t24754 + t16399;
  t25491 = t4490*t25032;
  t26386 = -1.*t13169*t26176;
  t26738 = t25491 + t26386;
  t29432 = -1.*t2289*t19508;
  t29609 = -1.*t18847*t19537;
  t29791 = t29432 + t29609;
  t29917 = -1.*t18847*t19635;
  t29919 = -1.*t2289*t19778;
  t29920 = t29917 + t29919;
  t30312 = -1.*t18847*t20641;
  t30349 = -1.*t2289*t20874;
  t30414 = t30312 + t30349;
  t31685 = t4490*t18623;
  t31691 = t13169*t18711;
  t31696 = t31685 + t31691;
  t31747 = -1.*t18847*t18721;
  t31753 = t2289*t18983;
  t31769 = t31747 + t31753;
  t31831 = t4490*t19174;
  t31832 = t13169*t19194;
  t31838 = t31831 + t31832;
  t31994 = t2289*t19154;
  t32048 = -1.*t18847*t19200;
  t32089 = t31994 + t32048;
  t32289 = t13169*t19452;
  t32291 = t4490*t19461;
  t32296 = t32289 + t32291;
  t32302 = t2289*t19343;
  t32308 = -1.*t18847*t19494;
  t32321 = t32302 + t32308;
  t32351 = t4490*t13161;
  t32362 = t13169*t14023;
  t32366 = t32351 + t32362;
  t32390 = t13169*t14498;
  t32404 = t4490*t14570;
  t32422 = t32390 + t32404;
  t32443 = t4490*t15778;
  t32446 = t13169*t16463;
  t32462 = t32443 + t32446;
  t32566 = -1.*t18847*t22760;
  t32568 = t2289*t22947;
  t32581 = t32566 + t32568;
  t32643 = t4490*t21606;
  t32647 = t13169*t22646;
  t32648 = t32643 + t32647;
  t32680 = t13169*t23757;
  t32683 = t4490*t24278;
  t32693 = t32680 + t32683;
  t32700 = t2289*t23605;
  t32701 = -1.*t18847*t24350;
  t32709 = t32700 + t32701;
  t32727 = t13169*t25032;
  t32757 = t4490*t26176;
  t32758 = t32727 + t32757;
  t32783 = t2289*t24909;
  t32806 = -1.*t18847*t26738;
  t32835 = t32783 + t32806;
  t34636 = t13102 + t12581;
  t34560 = 9.e-13*var1[8];
  t35860 = t13102 + t12896;
  t34567 = 0.2*t14804;
  t34579 = 0.2000000000018*t12540;
  t34580 = t12895 + t12977;
  t34588 = 0.1*t34580;
  t34595 = 0.1*t12897;
  t34648 = -9.e-7*t34636;
  t34674 = t34560 + t34567 + t34579 + t34588 + t34595 + t34648;
  t35472 = 3.e-7*var1[8];
  t35661 = 0.1*t13097;
  t35856 = -1.62e-17*t12540;
  t35862 = 0.2*t35860;
  t35889 = 0.1*t34636;
  t35900 = 0.2*t12626;
  t36090 = t35472 + t35661 + t35856 + t35862 + t35889 + t35900;
  t36109 = 0.1000000000009*t12540;
  t36124 = 0.2*t15043;
  t36143 = -9.e-7*t35860;
  t36166 = 0.1*t12626;
  t36168 = t12895 + t12557;
  t36176 = 0.2*t36168;
  t36185 = t34560 + t36109 + t36124 + t36143 + t36166 + t36176;
  t34556 = 0.2000000000018*t12859;
  t34728 = t12799*t34674;
  t36103 = 3.e-6*t12859*t36090;
  t36195 = -1.*t4616*t36185;
  t36199 = t34556 + t34728 + t36103 + t36195;
  t36200 = -1.*t13169*t36199;
  t36242 = -6.000000000054e-7*t12859;
  t36267 = 3.e-6*t12859*t34674;
  t36271 = t13074*t36090;
  t36272 = 3.e-6*t4616*t36185;
  t36308 = t36242 + t36267 + t36271 + t36272;
  t36319 = -1.*t4490*t36308;
  t36320 = t36200 + t36319;
  t36367 = t4490*t36199;
  t36395 = -1.*t13169*t36308;
  t36417 = t36367 + t36395;
  t36430 = -0.2000000000018*t4616;
  t36452 = t4616*t34674;
  t36454 = -3.e-6*t4616*t36090;
  t36464 = t18944*t36185;
  t36469 = t36430 + t36452 + t36454 + t36464;
  t36336 = t13169*t36199;
  t36349 = t4490*t36308;
  t36357 = t36336 + t36349;
  t36326 = t2289*t19508;
  t36329 = t18847*t19537;
  t36330 = t36326 + t36329;
  t36551 = t18847*t36469;
  t36616 = t2289*t36417;
  t36630 = t36551 + t36616;
  t36962 = t2289*t36469;
  t37446 = -1.*t18847*t36417;
  t37513 = t36962 + t37446;
  t34454 = t18847*t19635;
  t34457 = t2289*t19778;
  t34460 = t34454 + t34457;
  t38499 = t18847*t20641;
  t38501 = t2289*t20874;
  t38502 = t38499 + t38501;
  t38168 = -1.*t32366*t36357;
  t38173 = -1.*t36330*t36630;
  t38195 = -1.*t19547*t37513;
  t38213 = t38168 + t38173 + t38195;
  t41948 = -1.*t18847*t36469;
  t42126 = -1.*t2289*t36417;
  t42215 = t41948 + t42126;
  t38280 = t32422*t36357;
  t38284 = t34460*t36630;
  t38285 = t20187*t37513;
  t38287 = t38280 + t38284 + t38285;
  t38529 = t32366*t36357;
  t38537 = t36330*t36630;
  t38541 = t19547*t37513;
  t38544 = t38529 + t38537 + t38541;
  t39079 = -1.*t36357*t32462;
  t39080 = -1.*t36630*t38502;
  t39085 = -1.*t37513*t21329;
  t39091 = t39079 + t39080 + t39085;
  t39577 = -1.*t32422*t36357;
  t39583 = -1.*t34460*t36630;
  t39593 = -1.*t20187*t37513;
  t40226 = t39577 + t39583 + t39593;
  t40486 = t36357*t32462;
  t40510 = t36630*t38502;
  t41444 = t37513*t21329;
  t41451 = t40486 + t40510 + t41444;
  t18846 = t2289*t18721;
  t18988 = t18847*t18983;
  t18990 = t18846 + t18988;
  t19158 = t18847*t19154;
  t19223 = t2289*t19200;
  t19224 = t19158 + t19223;
  t19361 = t18847*t19343;
  t19499 = t2289*t19494;
  t19500 = t19361 + t19499;
  t44312 = t18042 + t12896;
  t44938 = t17541 + t12896;
  t44379 = -9.e-7*t44312;
  t44683 = t12414 + t18996;
  t44912 = 0.1*t44683;
  t44914 = 0.1*t17606;
  t44915 = 9.e-13 + t44379 + t44912 + t44914;
  t44966 = 0.2*t44938;
  t44967 = 0.1*t44312;
  t44968 = 0.2*t18088;
  t44995 = -1.8000162e-12*t12557;
  t44996 = 3.e-7 + t44966 + t44967 + t44968 + t44995;
  t45022 = -9.e-7*t44938;
  t45053 = t12268 + t18996;
  t45072 = 0.2*t45053;
  t45093 = 0.2*t18188;
  t45094 = 0.1*t18088;
  t45110 = 0.1000000000009*t12557;
  t45121 = 9.e-13 + t45022 + t45072 + t45093 + t45094 + t45110;
  t44929 = t12799*t44915;
  t45004 = 3.e-6*t12859*t44996;
  t45138 = -1.*t4616*t45121;
  t45139 = t44929 + t45004 + t45138;
  t45215 = 3.e-6*t12859*t44915;
  t45216 = t13074*t44996;
  t45218 = 3.e-6*t4616*t45121;
  t45219 = t45215 + t45216 + t45218;
  t45225 = t4490*t45139;
  t45228 = -1.*t13169*t45219;
  t45229 = t45225 + t45228;
  t45231 = t4616*t44915;
  t45234 = -3.e-6*t4616*t44996;
  t45235 = t18944*t45121;
  t45243 = t45231 + t45234 + t45235;
  t45319 = -1.*t18847*t45229;
  t45321 = t2289*t45243;
  t45329 = t45319 + t45321;
  t45230 = t2289*t45229;
  t45274 = t18847*t45243;
  t45316 = t45230 + t45274;
  t45142 = t13169*t45139;
  t45220 = t4490*t45219;
  t45221 = t45142 + t45220;
  t24926 = t18847*t24909;
  t27658 = t2289*t26738;
  t27806 = t24926 + t27658;
  t48814 = 0.2000000000018*t4616;
  t48819 = -1.*t4616*t34674;
  t48823 = 3.e-6*t4616*t36090;
  t48831 = -1.*t12799*t36185;
  t48832 = t48814 + t48819 + t48823 + t48831;
  t48839 = -6.000000000054e-7*t4616;
  t48842 = 3.e-6*t4616*t34674;
  t48849 = -9.e-12*t4616*t36090;
  t48851 = 3.e-6*t12799*t36185;
  t48855 = t48839 + t48842 + t48849 + t48851;
  t48949 = -0.2000000000018*t12799;
  t48950 = -3.e-6*t12799*t36090;
  t48951 = -1.000000000009*t4616*t36185;
  t48955 = t48949 + t34728 + t48950 + t48951;
  t48963 = t4490*t48832;
  t48964 = -1.*t13169*t48855;
  t48965 = t48963 + t48964;
  t22763 = t2289*t22760;
  t22961 = t18847*t22947;
  t23397 = t22763 + t22961;
  t23611 = t18847*t23605;
  t24539 = t2289*t24350;
  t24557 = t23611 + t24539;
  t48834 = t13169*t48832;
  t48917 = t4490*t48855;
  t48918 = t48834 + t48917;
  t48959 = t18847*t48955;
  t48967 = t2289*t48965;
  t48968 = t48959 + t48967;
  t48976 = t2289*t48955;
  t48977 = -1.*t18847*t48965;
  t48979 = t48976 + t48977;
  t45223 = t45221*t32422;
  t45224 = t31838*t36357;
  t45618 = -1.*t32366*t45221;
  t45620 = -1.*t32296*t36357;
  t47852 = t32366*t45221;
  t47856 = t32296*t36357;
  t48516 = -1.*t31696*t36357;
  t48518 = -1.*t45221*t32462;
  t48589 = -1.*t45221*t32422;
  t48591 = -1.*t31838*t36357;
  t48643 = t31696*t36357;
  t48651 = t45221*t32462;
  t49310 = -1.*t19537*t36469;
  t49314 = -1.*t19508*t36417;
  t49317 = t49310 + t38168 + t49314;
  t36366 = -1.*t19508*t36357;
  t36429 = -1.*t32366*t36417;
  t38239 = t19778*t36357;
  t38240 = t32422*t36417;
  t49321 = t19635*t36469;
  t49327 = t19778*t36417;
  t49333 = t49321 + t38280 + t49327;
  t49392 = t19537*t36469;
  t49402 = t19508*t36417;
  t49404 = t49392 + t38529 + t49402;
  t38512 = t19508*t36357;
  t38514 = t32366*t36417;
  t49451 = -1.*t36469*t20641;
  t49452 = -1.*t36417*t20874;
  t49455 = t49451 + t49452 + t39079;
  t38688 = -1.*t36357*t20874;
  t38736 = -1.*t36417*t32462;
  t39123 = -1.*t19778*t36357;
  t39124 = -1.*t32422*t36417;
  t49466 = -1.*t19635*t36469;
  t49471 = -1.*t19778*t36417;
  t49474 = t49466 + t39577 + t49471;
  t49533 = t36469*t20641;
  t49538 = t36417*t20874;
  t49541 = t49533 + t49538 + t40486;
  t40331 = t36357*t20874;
  t40364 = t36417*t32462;
  t48934 = -1.*t32366*t48918;
  t48943 = -1.*t32648*t36357;
  t49004 = t32422*t48918;
  t49005 = t32693*t36357;
  t49038 = t32366*t48918;
  t49040 = t32648*t36357;
  t49172 = -1.*t48918*t32462;
  t49198 = -1.*t36357*t32758;
  t49229 = -1.*t32422*t48918;
  t49233 = -1.*t32693*t36357;
  t49265 = t48918*t32462;
  t49266 = t36357*t32758;
  t49342 = t45243*t19635;
  t49346 = t19154*t36469;
  t49359 = -1.*t19537*t45243;
  t49360 = -1.*t19343*t36469;
  t49418 = t19537*t45243;
  t49419 = t19343*t36469;
  t49437 = -1.*t18983*t36469;
  t49441 = -1.*t45243*t20641;
  t49479 = -1.*t45243*t19635;
  t49481 = -1.*t19154*t36469;
  t49510 = t18983*t36469;
  t49511 = t45243*t20641;
  t50032 = -1.*t14023*t36199;
  t50035 = -1.*t13161*t36308;
  t50039 = t49310 + t50032 + t50035;
  t49790 = -1.*t22947*t36469;
  t49796 = -1.*t19537*t48955;
  t49825 = t23605*t36469;
  t49843 = t19635*t48955;
  t50043 = t14498*t36199;
  t50048 = t14570*t36308;
  t50050 = t49321 + t50043 + t50048;
  t50112 = t14023*t36199;
  t50122 = t13161*t36308;
  t50130 = t49392 + t50112 + t50122;
  t49906 = t22947*t36469;
  t49909 = t19537*t48955;
  t50178 = -1.*t36308*t15778;
  t50180 = -1.*t36199*t16463;
  t50182 = t50178 + t50180 + t49451;
  t49920 = -1.*t36469*t24909;
  t49921 = -1.*t48955*t20641;
  t49944 = -1.*t23605*t36469;
  t49952 = -1.*t19635*t48955;
  t50188 = -1.*t14498*t36199;
  t50195 = -1.*t14570*t36308;
  t50196 = t49466 + t50188 + t50195;
  t50232 = t36308*t15778;
  t50233 = t36199*t16463;
  t50234 = t50232 + t50233 + t49533;
  t49981 = t36469*t24909;
  t49987 = t48955*t20641;
  t50460 = -1.*t34674*t12995;
  t50467 = -1.*t36090*t13103;
  t50469 = -1.*t12780*t36185;
  t50471 = t50460 + t50467 + t50469;
  t50474 = t14346*t44915;
  t50476 = t36090*t18993;
  t50477 = t14393*t44996;
  t50479 = t45121*t14483;
  t50480 = t34674*t19122;
  t50481 = t19085*t36185;
  t50483 = t50474 + t50476 + t50477 + t50479 + t50480 + t50481;
  t50489 = t14346*t34674;
  t50490 = t36090*t14393;
  t50491 = t14483*t36185;
  t50495 = t50489 + t50490 + t50491;
  t50509 = -1.*t44915*t12995;
  t50511 = -1.*t36090*t19311;
  t50513 = -1.*t34674*t19318;
  t50514 = -1.*t44996*t13103;
  t50515 = -1.*t12780*t45121;
  t50519 = -1.*t19323*t36185;
  t50520 = t50509 + t50511 + t50513 + t50514 + t50515 + t50519;
  t50438 = -3.e-6*t18088;
  t50550 = t34674*t12995;
  t50553 = t36090*t13103;
  t50554 = t12780*t36185;
  t50555 = t50550 + t50553 + t50554;
  t50563 = t44915*t12995;
  t50566 = t36090*t19311;
  t50567 = t34674*t19318;
  t50570 = t44996*t13103;
  t50571 = t12780*t45121;
  t50573 = t19323*t36185;
  t50582 = t50563 + t50566 + t50567 + t50570 + t50571 + t50573;
  t50587 = -1.*t14629*t36090;
  t50591 = -1.*t15267*t36185;
  t50595 = -1.*t34674*t15483;
  t50598 = t50587 + t50591 + t50595;
  t50600 = -1.*t36090*t18165;
  t50605 = -1.*t14629*t44996;
  t50608 = -1.*t34674*t18545;
  t50610 = -1.*t15267*t45121;
  t50612 = -1.*t18224*t36185;
  t50614 = -1.*t44915*t15483;
  t50615 = t50600 + t50605 + t50608 + t50610 + t50612 + t50614;
  t50648 = -1.*t14346*t44915;
  t50650 = -1.*t36090*t18993;
  t50651 = -1.*t14393*t44996;
  t50652 = -1.*t45121*t14483;
  t50653 = -1.*t34674*t19122;
  t50654 = -1.*t19085*t36185;
  t50660 = t50648 + t50650 + t50651 + t50652 + t50653 + t50654;
  t50669 = -1.*t14346*t34674;
  t50671 = -1.*t36090*t14393;
  t50675 = -1.*t14483*t36185;
  t50677 = t50669 + t50671 + t50675;
  t50684 = t14629*t36090;
  t50686 = t15267*t36185;
  t50687 = t34674*t15483;
  t50689 = t50684 + t50686 + t50687;
  t50700 = t36090*t18165;
  t50702 = t14629*t44996;
  t50704 = t34674*t18545;
  t50706 = t15267*t45121;
  t50713 = t18224*t36185;
  t50715 = t44915*t15483;
  t50719 = t50700 + t50702 + t50704 + t50706 + t50713 + t50715;
  p_output1[0]=var2[8]*(-0.5*(-1.555781330428e-8*t19547 + 0.005186015558*t20187 + 1.5558e-8*t21329)*var2[4] - 0.5*(-1.555781330428e-8*t14217*t2289 + 0.005186015558*t14608*t2289 + 1.5558e-8*t17085*t2289)*var2[5] - 0.5*(-1.555781330428e-8*t23397 + 0.005186015558*t24557 + 1.5558e-8*t27806)*var2[6] - 0.5*(1.5558e-8*t18990 + 0.005186015558*t19224 - 1.555781330428e-8*t19500)*var2[8]);
  p_output1[1]=var2[8]*(-0.5*(-1.555781330428e-8*(-1.*t19547*t30461 - 1.*t28625*t32366) + 0.005186015558*(-1.*t20187*t30461 - 1.*t28625*t32422) + 1.5558e-8*(-1.*t21329*t30461 - 1.*t28625*t32462))*var2[3] - 0.5*(1.555781330428e-8*t28625*t29791 - 0.005186015558*t28625*t29920 - 1.5558e-8*t28625*t30414)*var2[4] - 0.5*(-1.555781330428e-8*(t14217*t18847*t28625 + t19508*t30461) + 0.005186015558*(t14608*t18847*t28625 + t19778*t30461) + 1.5558e-8*(t17085*t18847*t28625 + t20874*t30461))*var2[5] - 0.5*(-1.555781330428e-8*(-1.*t28625*t32581 + t30461*t32648) + 0.005186015558*(t30461*t32693 - 1.*t28625*t32709) + 1.5558e-8*(t30461*t32758 - 1.*t28625*t32835))*var2[6] - 0.5*(1.5558e-8*(t30461*t31696 - 1.*t28625*t31769) + 0.005186015558*(t30461*t31838 - 1.*t28625*t32089) - 1.555781330428e-8*(t30461*t32296 - 1.*t28625*t32321))*var2[8]);
  p_output1[2]=var2[8]*(-0.5*(-1.555781330428e-8*(-1.*t19547*t28625 + t30461*t32366) + 0.005186015558*(-1.*t20187*t28625 + t30461*t32422) + 1.5558e-8*(-1.*t21329*t28625 + t30461*t32462))*var2[3] - 0.5*(-1.555781330428e-8*t29791*t30461 + 0.005186015558*t29920*t30461 + 1.5558e-8*t30414*t30461)*var2[4] - 0.5*(-1.555781330428e-8*(t19508*t28625 - 1.*t14217*t18847*t30461) + 0.005186015558*(t19778*t28625 - 1.*t14608*t18847*t30461) + 1.5558e-8*(t20874*t28625 - 1.*t17085*t18847*t30461))*var2[5] - 0.5*(-1.555781330428e-8*(t30461*t32581 + t28625*t32648) + 0.005186015558*(t28625*t32693 + t30461*t32709) + 1.5558e-8*(t28625*t32758 + t30461*t32835))*var2[6] - 0.5*(1.5558e-8*(t28625*t31696 + t30461*t31769) + 0.005186015558*(t28625*t31838 + t30461*t32089) - 1.555781330428e-8*(t28625*t32296 + t30461*t32321))*var2[8]);
  p_output1[3]=var2[8]*(-0.5*(0.00024500000000441*t21329 + 1.5558e-8*(t20187*t38213 + t19547*t38287 + t34460*(-1.*t19547*t36630 - 1.*t29791*t37513 - 1.*t36330*t37513 - 1.*t19547*t42215) + t36330*(t20187*t36630 + t29920*t37513 + t34460*t37513 + t20187*t42215)) + 0.005186015558*(t21329*t38544 + t19547*t39091 + t38502*(t19547*t36630 + t29791*t37513 + t36330*t37513 + t19547*t42215) + t36330*(-1.*t21329*t36630 - 1.*t30414*t37513 - 1.*t37513*t38502 - 1.*t21329*t42215)) - 1.555781330428e-8*(t21329*t40226 + t20187*t41451 + t38502*(-1.*t20187*t36630 - 1.*t29920*t37513 - 1.*t34460*t37513 - 1.*t20187*t42215) + t34460*(t21329*t36630 + t30414*t37513 + t37513*t38502 + t21329*t42215)))*var2[4] - 0.5*(0.00024500000000441*t17085*t2289 + 1.5558e-8*(t34460*(t18847*t19547*t36320 - 1.*t2289*t36320*t36330 + t36366 + t36429 - 1.*t14217*t2289*t36630 + t14217*t18847*t37513) + t14608*t2289*t38213 + t36330*(-1.*t18847*t20187*t36320 + t2289*t34460*t36320 + t14608*t2289*t36630 - 1.*t14608*t18847*t37513 + t38239 + t38240) + t14217*t2289*t38287) + 0.005186015558*(t38502*(-1.*t18847*t19547*t36320 + t2289*t36320*t36330 + t14217*t2289*t36630 - 1.*t14217*t18847*t37513 + t38512 + t38514) + t17085*t2289*t38544 + t36330*(t18847*t21329*t36320 - 1.*t17085*t2289*t36630 + t17085*t18847*t37513 - 1.*t2289*t36320*t38502 + t38688 + t38736) + t14217*t2289*t39091) - 1.555781330428e-8*(t38502*(t18847*t20187*t36320 - 1.*t2289*t34460*t36320 - 1.*t14608*t2289*t36630 + t14608*t18847*t37513 + t39123 + t39124) + t17085*t2289*t40226 + t34460*(-1.*t18847*t21329*t36320 + t17085*t2289*t36630 - 1.*t17085*t18847*t37513 + t2289*t36320*t38502 + t40331 + t40364) + t14608*t2289*t41451))*var2[5] - 0.5*(0.00024500000000441*t27806 + 1.5558e-8*(t24557*t38213 + t23397*t38287 + t34460*(-1.*t23397*t36630 - 1.*t32581*t37513 + t48934 + t48943 - 1.*t36330*t48968 - 1.*t19547*t48979) + t36330*(t24557*t36630 + t32709*t37513 + t34460*t48968 + t20187*t48979 + t49004 + t49005)) + 0.005186015558*(t27806*t38544 + t23397*t39091 + t38502*(t23397*t36630 + t32581*t37513 + t36330*t48968 + t19547*t48979 + t49038 + t49040) + t36330*(-1.*t27806*t36630 - 1.*t32835*t37513 - 1.*t38502*t48968 - 1.*t21329*t48979 + t49172 + t49198)) - 1.555781330428e-8*(t27806*t40226 + t24557*t41451 + t38502*(-1.*t24557*t36630 - 1.*t32709*t37513 - 1.*t34460*t48968 - 1.*t20187*t48979 + t49229 + t49233) + t34460*(t27806*t36630 + t32835*t37513 + t38502*t48968 + t21329*t48979 + t49265 + t49266)))*var2[6] - 0.5*(0.00024500000000441*t18990 + 1.5558e-8*(t19224*t38213 + t19500*t38287 + t36330*(t19224*t36630 + t32089*t37513 + t45223 + t45224 + t34460*t45316 + t20187*t45329) + t34460*(-1.*t19500*t36630 - 1.*t32321*t37513 - 1.*t36330*t45316 - 1.*t19547*t45329 + t45618 + t45620)) + 0.005186015558*(t18990*t38544 + t19500*t39091 + t38502*(t19500*t36630 + t32321*t37513 + t36330*t45316 + t19547*t45329 + t47852 + t47856) + t36330*(-1.*t18990*t36630 - 1.*t31769*t37513 - 1.*t38502*t45316 - 1.*t21329*t45329 + t48516 + t48518)) - 1.555781330428e-8*(t18990*t40226 + t19224*t41451 + t38502*(-1.*t19224*t36630 - 1.*t32089*t37513 - 1.*t34460*t45316 - 1.*t20187*t45329 + t48589 + t48591) + t34460*(t18990*t36630 + t31769*t37513 + t38502*t45316 + t21329*t45329 + t48643 + t48651)))*var2[8]);
  p_output1[4]=var2[8]*(-0.5*(0.00024500000000441*t20874 + 1.5558e-8*(t32422*(-1.*t19508*t36320 + t36366 - 1.*t14217*t36417 + t36429) + t32366*(t19778*t36320 + t14608*t36417 + t38239 + t38240) + t19778*t49317 + t19508*t49333) + 0.005186015558*(t32462*(t19508*t36320 + t14217*t36417 + t38512 + t38514) + t32366*(-1.*t20874*t36320 - 1.*t17085*t36417 + t38688 + t38736) + t20874*t49404 + t19508*t49455) - 1.555781330428e-8*(t32462*(-1.*t19778*t36320 - 1.*t14608*t36417 + t39123 + t39124) + t32422*(t20874*t36320 + t17085*t36417 + t40331 + t40364) + t20874*t49474 + t19778*t49541))*var2[5] - 0.5*(0.00024500000000441*t32758 + 1.5558e-8*(t32693*t49317 + t32648*t49333 + t32422*(-1.*t22760*t36417 + t48934 + t48943 - 1.*t19508*t48965 + t49790 + t49796) + t32366*(t24350*t36417 + t19778*t48965 + t49004 + t49005 + t49825 + t49843)) + 0.005186015558*(t32758*t49404 + t32648*t49455 + t32462*(t22760*t36417 + t19508*t48965 + t49038 + t49040 + t49906 + t49909) + t32366*(-1.*t26738*t36417 - 1.*t20874*t48965 + t49172 + t49198 + t49920 + t49921)) - 1.555781330428e-8*(t32758*t49474 + t32693*t49541 + t32462*(-1.*t24350*t36417 - 1.*t19778*t48965 + t49229 + t49233 + t49944 + t49952) + t32422*(t26738*t36417 + t20874*t48965 + t49265 + t49266 + t49981 + t49987)))*var2[6] - 0.5*(0.00024500000000441*t31696 + 1.5558e-8*(t31838*t49317 + t32296*t49333 + t32366*(t19200*t36417 + t45223 + t45224 + t19778*t45229 + t49342 + t49346) + t32422*(-1.*t19494*t36417 - 1.*t19508*t45229 + t45618 + t45620 + t49359 + t49360)) + 0.005186015558*(t31696*t49404 + t32462*(t19494*t36417 + t19508*t45229 + t47852 + t47856 + t49418 + t49419) + t32366*(-1.*t18721*t36417 - 1.*t20874*t45229 + t48516 + t48518 + t49437 + t49441) + t32296*t49455) - 1.555781330428e-8*(t31696*t49474 + t32462*(-1.*t19200*t36417 - 1.*t19778*t45229 + t48589 + t48591 + t49479 + t49481) + t32422*(t18721*t36417 + t20874*t45229 + t48643 + t48651 + t49510 + t49511) + t31838*t49541))*var2[8]);
  p_output1[5]=var2[8]*(-0.5*(0.00024500000000441*t24909 + 1.5558e-8*(t19635*(-1.*t22646*t36199 - 1.*t21606*t36308 - 1.*t14023*t48832 - 1.*t13161*t48855 + t49790 + t49796) + t19537*(t23757*t36199 + t24278*t36308 + t14498*t48832 + t14570*t48855 + t49825 + t49843) + t23605*t50039 + t22947*t50050) + 0.005186015558*(t20641*(t22646*t36199 + t21606*t36308 + t14023*t48832 + t13161*t48855 + t49906 + t49909) + t19537*(-1.*t25032*t36199 - 1.*t26176*t36308 - 1.*t16463*t48832 - 1.*t15778*t48855 + t49920 + t49921) + t24909*t50130 + t22947*t50182) - 1.555781330428e-8*(t20641*(-1.*t23757*t36199 - 1.*t24278*t36308 - 1.*t14498*t48832 - 1.*t14570*t48855 + t49944 + t49952) + t19635*(t25032*t36199 + t26176*t36308 + t16463*t48832 + t15778*t48855 + t49981 + t49987) + t24909*t50196 + t23605*t50234))*var2[6] - 0.5*(0.00024500000000441*t18983 + 1.5558e-8*(t19537*(t19194*t36199 + t19174*t36308 + t14498*t45139 + t14570*t45219 + t49342 + t49346) + t19635*(-1.*t19452*t36199 - 1.*t19461*t36308 - 1.*t14023*t45139 - 1.*t13161*t45219 + t49359 + t49360) + t19154*t50039 + t19343*t50050) + 0.005186015558*(t20641*(t19452*t36199 + t19461*t36308 + t14023*t45139 + t13161*t45219 + t49418 + t49419) + t19537*(-1.*t18711*t36199 - 1.*t18623*t36308 - 1.*t16463*t45139 - 1.*t15778*t45219 + t49437 + t49441) + t18983*t50130 + t19343*t50182) - 1.555781330428e-8*(t20641*(-1.*t19194*t36199 - 1.*t19174*t36308 - 1.*t14498*t45139 - 1.*t14570*t45219 + t49479 + t49481) + t19635*(t18711*t36199 + t18623*t36308 + t16463*t45139 + t15778*t45219 + t49510 + t49511) + t18983*t50196 + t19154*t50234))*var2[8]);
  p_output1[6]=-0.5*(0.00024500000000441*(1.8e-11*t12557 - 3.e-6*t17606 - 3.e-6*t18545 + t50438) + 1.5558e-8*(0.2*(2.7e-17*t12557 + t17541 - 3.e-6*t18188) - 1.*t18993*t50471 - 1.*t13103*t50483 - 1.*t19311*t50495 - 1.*t14393*t50520 - 3.e-6*(t19122*t50471 + t12995*t50483 + t19318*t50495 + t14346*t50520)) + 0.005186015558*(0.2*(t12414 + t18187 + t50438) - 1.*t18165*t50555 - 1.*t14629*t50582 - 1.*t19311*t50598 - 1.*t13103*t50615 - 3.e-6*(t18545*t50555 + t15483*t50582 + t19318*t50598 + t12995*t50615)) - 1.555781330428e-8*(0.2*(-1.000000000009*t12557 + t50438) - 1.*t14629*t50660 - 1.*t18165*t50677 - 1.*t18993*t50689 - 1.*t14393*t50719 - 3.e-6*(t15483*t50660 + t18545*t50677 + t19122*t50689 + t14346*t50719)))*Power(var2[8],2);
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce1_vec9_minitaur.hh"

namespace FrontStance
{

void Ce1_vec9_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
