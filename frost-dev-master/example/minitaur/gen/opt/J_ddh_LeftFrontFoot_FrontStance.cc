/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 23:45:51 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t663;
  double t1453;
  double t1823;
  double t1853;
  double t545;
  double t2405;
  double t3051;
  double t3272;
  double t3877;
  double t3957;
  double t4020;
  double t4228;
  double t16351;
  double t16360;
  double t17696;
  double t3538;
  double t3543;
  double t3545;
  double t3682;
  double t12146;
  double t19567;
  double t19575;
  double t19630;
  double t19650;
  double t19664;
  double t19769;
  double t31135;
  double t19812;
  double t25363;
  double t25470;
  double t27003;
  double t29000;
  double t29449;
  double t30092;
  double t31136;
  double t3694;
  double t20400;
  double t4220;
  double t24370;
  double t24492;
  double t31475;
  double t30476;
  double t39802;
  double t39825;
  double t40120;
  double t40123;
  double t41444;
  double t49059;
  double t49746;
  double t48982;
  double t39890;
  double t40255;
  double t40276;
  double t40914;
  double t40919;
  double t41442;
  double t42774;
  double t42819;
  double t44112;
  double t44589;
  double t45462;
  double t45544;
  double t47221;
  double t47329;
  double t48284;
  double t48451;
  double t48882;
  double t49058;
  double t49246;
  double t49272;
  double t49601;
  double t49745;
  double t49749;
  double t49795;
  double t49896;
  double t49898;
  double t49952;
  double t49957;
  double t49958;
  double t49965;
  double t49971;
  double t49976;
  double t49981;
  double t50007;
  double t52890;
  double t4021;
  double t12221;
  double t15614;
  double t19508;
  double t19527;
  double t19788;
  double t19789;
  double t23145;
  double t23513;
  double t23519;
  double t54611;
  double t54618;
  double t54621;
  double t30596;
  double t54648;
  double t55806;
  double t31384;
  double t31451;
  double t55860;
  double t56065;
  double t56333;
  double t38356;
  double t39575;
  double t39621;
  double t39622;
  double t39663;
  double t39679;
  double t54441;
  double t54442;
  double t54635;
  double t55853;
  double t55858;
  double t56378;
  double t56400;
  double t56431;
  double t56446;
  double t56449;
  double t56512;
  double t56517;
  double t56518;
  double t56523;
  double t56527;
  double t56533;
  double t56541;
  double t56571;
  double t57439;
  double t57443;
  double t57444;
  double t58159;
  double t58179;
  double t58197;
  double t58203;
  double t58225;
  double t58258;
  double t58271;
  double t58272;
  double t58304;
  double t58308;
  double t58312;
  double t58322;
  double t58133;
  double t58137;
  double t58148;
  double t58212;
  double t58295;
  double t58302;
  double t58323;
  double t58324;
  double t58325;
  double t58331;
  double t58332;
  double t58333;
  double t58372;
  double t58378;
  double t58381;
  double t58414;
  double t58463;
  double t58472;
  double t58503;
  double t58505;
  double t58523;
  double t58594;
  double t59504;
  double t59582;
  double t59592;
  double t59596;
  double t59444;
  double t59461;
  double t59647;
  double t60248;
  double t60786;
  double t61100;
  double t58935;
  double t58941;
  double t59434;
  double t59501;
  double t59605;
  double t59643;
  double t59644;
  double t61255;
  double t61495;
  double t61686;
  double t61912;
  double t62066;
  double t62068;
  double t62074;
  double t62103;
  double t62131;
  double t62132;
  double t62166;
  double t62169;
  double t62187;
  double t62211;
  double t62221;
  double t62924;
  double t62927;
  double t62962;
  double t62970;
  double t62971;
  double t62974;
  double t62975;
  double t62976;
  double t63447;
  double t63450;
  double t63457;
  double t63465;
  double t63467;
  double t63480;
  double t63491;
  double t63494;
  double t63496;
  double t63619;
  double t63790;
  double t63792;
  double t63804;
  double t63806;
  double t63781;
  double t63785;
  double t63832;
  double t63834;
  double t63838;
  double t63841;
  double t63445;
  double t64021;
  double t64082;
  double t64084;
  double t64172;
  double t64178;
  double t64261;
  double t63760;
  double t63773;
  double t63778;
  double t63789;
  double t63814;
  double t63816;
  double t63817;
  double t63844;
  double t63847;
  double t63849;
  double t63854;
  double t63856;
  double t63863;
  double t63866;
  double t63867;
  double t63870;
  double t63871;
  double t63872;
  double t63874;
  double t63886;
  double t63889;
  double t63897;
  double t64777;
  double t64805;
  double t64817;
  double t64818;
  double t64966;
  double t62904;
  double t62908;
  double t62963;
  double t62972;
  double t62973;
  double t62978;
  double t62980;
  double t62981;
  double t62982;
  double t63312;
  double t63316;
  double t63317;
  double t63397;
  double t63400;
  double t63401;
  double t63405;
  double t63409;
  double t63410;
  double t63417;
  double t63420;
  double t63423;
  double t63434;
  double t63437;
  double t65458;
  double t65460;
  double t65467;
  double t64692;
  double t64735;
  double t64753;
  double t64806;
  double t64811;
  double t64816;
  double t64967;
  double t64969;
  double t65026;
  double t65027;
  double t65036;
  double t65041;
  double t65051;
  double t65058;
  double t65108;
  double t65131;
  double t65132;
  double t65141;
  double t65146;
  double t65149;
  double t62230;
  double t62234;
  double t62238;
  double t62243;
  double t62252;
  double t62255;
  double t62264;
  double t62268;
  double t62269;
  double t62270;
  double t62449;
  double t62567;
  double t62576;
  double t62580;
  double t62698;
  double t62800;
  double t62859;
  double t62867;
  double t62872;
  double t65165;
  double t65170;
  double t65171;
  double t65179;
  double t65195;
  double t65198;
  double t65201;
  double t65202;
  double t65344;
  double t65349;
  double t65351;
  double t65426;
  double t65430;
  double t65431;
  double t65433;
  double t65444;
  double t65447;
  double t65454;
  double t65455;
  double t63905;
  double t63907;
  double t63908;
  double t63912;
  double t63921;
  double t63923;
  double t63933;
  double t63950;
  double t63952;
  double t63972;
  double t63974;
  double t63983;
  double t63989;
  double t63992;
  double t63995;
  double t64000;
  double t64003;
  double t64006;
  double t64008;
  double t65596;
  double t65679;
  double t65789;
  double t65791;
  double t65794;
  double t65795;
  double t65796;
  double t65800;
  double t65801;
  double t65837;
  double t65838;
  double t65840;
  double t65843;
  double t65844;
  double t65845;
  double t65846;
  double t65848;
  double t65850;
  double t65851;
  double t65852;
  double t65853;
  double t65854;
  double t65857;
  double t65858;
  double t65861;
  double t65862;
  double t65866;
  double t65868;
  double t65874;
  double t65881;
  double t65886;
  double t65877;
  double t65883;
  double t65884;
  double t65887;
  double t65891;
  double t65892;
  double t65894;
  double t65895;
  double t65897;
  double t65899;
  double t65900;
  double t65901;
  double t65903;
  double t65904;
  double t65906;
  double t65907;
  double t65909;
  double t65911;
  double t65912;
  double t65923;
  double t65926;
  double t65928;
  double t65825;
  double t65933;
  double t65935;
  double t65919;
  double t65921;
  double t65922;
  double t65930;
  double t65931;
  double t65932;
  double t65937;
  double t65938;
  double t65939;
  double t65943;
  double t65944;
  double t65945;
  double t65947;
  double t65949;
  double t65951;
  double t65952;
  double t65955;
  double t65956;
  double t65957;
  double t65958;
  double t63430;
  double t65459;
  double t65461;
  double t65462;
  double t65469;
  double t65470;
  double t65477;
  double t65480;
  double t65481;
  double t65484;
  double t65486;
  double t65490;
  double t65497;
  double t65539;
  double t65549;
  double t65553;
  double t65555;
  double t65556;
  double t65558;
  double t65565;
  double t66002;
  double t66008;
  double t66135;
  double t66136;
  double t66137;
  double t65997;
  double t66003;
  double t66005;
  double t66006;
  double t66012;
  double t66013;
  double t66014;
  double t66015;
  double t66017;
  double t66018;
  double t66020;
  double t66023;
  double t66024;
  double t66031;
  double t66033;
  double t66043;
  double t66048;
  double t66049;
  double t65456;
  double t65457;
  double t65573;
  double t65579;
  double t65582;
  double t65961;
  double t65962;
  double t65964;
  double t65966;
  double t65968;
  double t65969;
  double t65971;
  double t65972;
  double t65973;
  double t65974;
  double t65979;
  double t65981;
  double t65982;
  double t65986;
  double t65987;
  double t65989;
  double t65990;
  double t65991;
  double t65992;
  double t66068;
  double t66069;
  double t66077;
  double t66078;
  double t66079;
  double t66080;
  double t66083;
  double t66084;
  double t66086;
  double t66087;
  double t66090;
  double t66097;
  double t66098;
  double t66105;
  double t66111;
  double t66113;
  double t66119;
  double t66120;
  double t65595;
  double t65598;
  double t65602;
  double t65604;
  double t65607;
  double t65621;
  double t65630;
  double t65642;
  double t65665;
  double t65686;
  double t65758;
  double t65762;
  double t65763;
  double t65764;
  double t65775;
  double t66277;
  double t66278;
  double t66282;
  double t66272;
  double t66274;
  double t66275;
  double t66286;
  double t66287;
  double t66307;
  double t66308;
  double t66309;
  double t66310;
  double t66312;
  double t66313;
  double t66318;
  double t66320;
  double t66321;
  double t66322;
  double t66323;
  double t66327;
  double t66329;
  double t66330;
  double t66331;
  double t66342;
  double t66344;
  double t66351;
  double t66352;
  double t66368;
  double t66370;
  double t66371;
  double t66375;
  double t66386;
  double t66387;
  double t66362;
  double t66364;
  double t66369;
  double t66378;
  double t66385;
  double t66388;
  double t66391;
  double t66392;
  double t66393;
  double t66394;
  double t66395;
  double t66396;
  double t66404;
  double t66412;
  double t66413;
  double t66415;
  double t66423;
  double t66430;
  double t66432;
  double t66433;
  double t66435;
  double t66125;
  double t66133;
  double t66134;
  double t66138;
  double t66140;
  double t66145;
  double t66146;
  double t66147;
  double t66148;
  double t66150;
  double t66151;
  double t66152;
  double t66153;
  double t66154;
  double t66155;
  double t66157;
  double t64014;
  double t64016;
  double t64023;
  double t64173;
  double t64176;
  double t64265;
  double t64388;
  double t64389;
  double t64439;
  double t64654;
  double t64655;
  double t64656;
  double t64660;
  double t64669;
  double t64670;
  double t64674;
  double t64676;
  double t64678;
  double t64679;
  double t64680;
  double t64681;
  double t63900;
  double t66121;
  double t66159;
  double t66160;
  double t66162;
  double t66165;
  double t64009;
  double t64683;
  double t64687;
  double t65155;
  double t65160;
  double t66452;
  double t66457;
  double t66458;
  double t66461;
  double t66462;
  double t66464;
  double t66476;
  double t66477;
  double t66478;
  double t66479;
  double t66483;
  double t66484;
  double t66485;
  double t66491;
  double t66492;
  double t66493;
  double t66494;
  double t66496;
  double t66497;
  double t66652;
  double t66653;
  double t66628;
  double t66633;
  double t66556;
  double t66614;
  double t66616;
  double t66674;
  double t66710;
  double t66711;
  double t66723;
  double t66724;
  double t66725;
  double t66726;
  double t66727;
  double t66728;
  double t66752;
  double t66758;
  double t66776;
  double t66778;
  double t66779;
  double t66780;
  double t66781;
  double t66783;
  double t66785;
  double t66786;
  double t66506;
  double t66508;
  double t66509;
  double t66510;
  double t66511;
  double t66514;
  double t66515;
  double t66516;
  double t66517;
  double t66518;
  double t66519;
  double t66520;
  double t66521;
  double t66522;
  double t66523;
  double t66524;
  double t66525;
  double t66526;
  double t66528;
  double t66544;
  double t66548;
  double t66549;
  double t66550;
  double t66170;
  double t66172;
  double t66173;
  double t66177;
  double t66178;
  double t66179;
  double t66182;
  double t66186;
  double t66190;
  double t66191;
  double t66192;
  double t66195;
  double t66200;
  double t66207;
  double t66210;
  double t66212;
  double t66213;
  double t66214;
  double t66221;
  double t66227;
  double t66231;
  double t66234;
  double t66239;
  double t65620;
  double t65667;
  double t65669;
  double t65687;
  double t65688;
  double t65689;
  double t65690;
  double t65691;
  double t65692;
  double t65732;
  double t65756;
  double t65765;
  double t65768;
  double t65769;
  double t65776;
  double t65777;
  double t65779;
  double t65780;
  double t65584;
  double t65589;
  double t65590;
  double t65781;
  double t65784;
  double t2062;
  double t2449;
  double t3533;
  double t19546;
  double t23686;
  double t24921;
  double t31006;
  double t31173;
  double t31252;
  double t31359;
  double t31458;
  double t31659;
  double t32403;
  double t36494;
  double t38209;
  double t39676;
  double t39677;
  double t39678;
  double t39685;
  double t39689;
  double t39690;
  double t65787;
  double t65788;
  double t65792;
  double t65797;
  double t65799;
  double t65802;
  double t65808;
  double t65809;
  double t65810;
  double t65812;
  double t65813;
  double t65816;
  double t65817;
  double t65823;
  double t65824;
  double t65826;
  double t65827;
  double t65832;
  double t65834;
  double t66264;
  double t66265;
  double t66270;
  double t66276;
  double t66283;
  double t66284;
  double t66285;
  double t66288;
  double t66289;
  double t66292;
  double t66294;
  double t66295;
  double t66296;
  double t66297;
  double t66298;
  double t66299;
  double t66302;
  double t66303;
  double t66304;
  double t66305;
  double t66306;
  double t66624;
  double t66638;
  double t66654;
  double t66656;
  double t66657;
  double t66659;
  double t66670;
  double t66671;
  double t66673;
  double t66678;
  double t66679;
  double t66680;
  double t66681;
  double t66685;
  double t66686;
  double t66691;
  double t66692;
  double t66927;
  double t66922;
  double t66923;
  double t66928;
  double t66929;
  double t66937;
  double t66945;
  double t66946;
  double t66949;
  double t66951;
  double t66952;
  double t66953;
  double t66958;
  double t66960;
  double t66961;
  double t66962;
  double t66966;
  double t66970;
  double t66973;
  double t66974;
  double t67004;
  double t67008;
  double t67009;
  double t67011;
  double t67016;
  double t67018;
  double t67019;
  double t67022;
  double t67023;
  double t67024;
  double t67025;
  double t67026;
  double t67029;
  double t67030;
  double t67031;
  double t67032;
  double t67033;
  double t67036;
  double t67043;
  double t67048;
  double t67051;
  double t67071;
  double t67076;
  double t67078;
  double t67080;
  double t67082;
  double t67083;
  double t67086;
  double t67087;
  double t67088;
  double t67073;
  double t67075;
  double t67081;
  double t67084;
  double t67085;
  double t67090;
  double t67091;
  double t67092;
  double t67093;
  double t67094;
  double t67095;
  double t67096;
  double t67097;
  double t67098;
  double t67099;
  double t67100;
  double t67102;
  double t67103;
  double t67104;
  double t67105;
  double t67106;
  double t67111;
  double t67112;
  double t67113;
  double t67116;
  double t67117;
  double t67119;
  double t67123;
  double t67124;
  double t67126;
  double t67129;
  double t67131;
  double t67133;
  double t67134;
  double t67135;
  double t67142;
  double t67152;
  double t67167;
  double t67170;
  double t67115;
  double t67120;
  double t67121;
  double t67130;
  double t67138;
  double t67139;
  double t67171;
  double t67172;
  double t67173;
  double t67175;
  double t67178;
  double t67179;
  double t67180;
  double t67182;
  double t67183;
  double t67187;
  double t67196;
  double t67197;
  double t67205;
  double t67206;
  double t67207;
  double t67221;
  double t67236;
  double t67240;
  double t67247;
  double t67254;
  double t67257;
  double t67259;
  double t67262;
  double t67268;
  double t67280;
  double t67282;
  double t67283;
  double t67285;
  double t67233;
  double t67234;
  double t67235;
  double t67256;
  double t67270;
  double t67277;
  double t67291;
  double t67293;
  double t67294;
  double t67295;
  double t67296;
  double t67297;
  double t67298;
  double t67301;
  double t67302;
  double t67303;
  double t67304;
  double t67305;
  double t67306;
  double t67307;
  double t67308;
  double t67309;
  double t67327;
  double t67330;
  double t67331;
  double t67332;
  double t67315;
  double t67317;
  double t67343;
  double t67344;
  double t67347;
  double t67351;
  double t67312;
  double t67313;
  double t67314;
  double t67325;
  double t67334;
  double t67335;
  double t67338;
  double t67354;
  double t67357;
  double t67376;
  double t67379;
  double t67382;
  double t67394;
  double t67397;
  double t67407;
  double t67409;
  double t67410;
  double t67417;
  double t67418;
  double t67419;
  double t67420;
  double t67422;
  double t67491;
  double t67495;
  double t67497;
  double t67503;
  double t67505;
  double t67511;
  double t67512;
  double t67521;
  double t67566;
  double t67567;
  double t67569;
  double t67570;
  double t67572;
  double t67573;
  double t67574;
  double t67576;
  double t67579;
  double t67580;
  double t67581;
  double t67582;
  double t67610;
  double t67612;
  double t67614;
  double t67615;
  double t67617;
  double t67621;
  double t67622;
  double t67623;
  double t67628;
  double t67629;
  double t67632;
  double t67633;
  double t67709;
  double t67710;
  double t67711;
  double t67712;
  double t67706;
  double t67707;
  double t67717;
  double t67718;
  double t67719;
  double t67721;
  double t67468;
  double t67474;
  double t67499;
  double t67509;
  double t67510;
  double t67522;
  double t67523;
  double t67524;
  double t67525;
  double t67526;
  double t67528;
  double t67529;
  double t67531;
  double t67533;
  double t67534;
  double t67535;
  double t67536;
  double t67538;
  double t67539;
  double t67542;
  double t67552;
  double t67789;
  double t67790;
  double t67792;
  double t67794;
  double t67796;
  double t67797;
  double t67804;
  double t67805;
  double t67810;
  double t67811;
  double t67814;
  double t67846;
  double t67847;
  double t67848;
  double t67853;
  double t67854;
  double t67857;
  double t67859;
  double t67861;
  double t67864;
  double t67865;
  double t67866;
  double t67891;
  double t67892;
  double t67896;
  double t67898;
  double t67899;
  double t67564;
  double t67962;
  double t67969;
  double t67970;
  double t67971;
  double t67977;
  double t67978;
  double t67982;
  double t67983;
  double t67701;
  double t67702;
  double t67705;
  double t67708;
  double t67713;
  double t67715;
  double t67716;
  double t67722;
  double t67723;
  double t67724;
  double t67725;
  double t67726;
  double t67727;
  double t67729;
  double t67730;
  double t67731;
  double t67732;
  double t67733;
  double t67734;
  double t67735;
  double t67736;
  double t67737;
  double t67888;
  double t67889;
  double t67890;
  double t67893;
  double t67894;
  double t67895;
  double t67901;
  double t67905;
  double t67906;
  double t67907;
  double t67908;
  double t67909;
  double t67910;
  double t67911;
  double t67912;
  double t67914;
  double t67915;
  double t67916;
  double t67917;
  double t67920;
  double t68014;
  double t68015;
  double t68017;
  double t68018;
  double t68009;
  double t68012;
  double t68025;
  double t68026;
  double t68027;
  double t68028;
  double t67850;
  double t67851;
  double t67858;
  double t67862;
  double t67863;
  double t67867;
  double t67868;
  double t67869;
  double t67870;
  double t67874;
  double t67875;
  double t67876;
  double t67877;
  double t67878;
  double t67879;
  double t67880;
  double t67881;
  double t67882;
  double t67883;
  double t67884;
  double t67885;
  double t67788;
  double t67793;
  double t68087;
  double t68091;
  double t68098;
  double t67605;
  double t67607;
  double t67609;
  double t67616;
  double t67624;
  double t67625;
  double t67636;
  double t67639;
  double t67642;
  double t67644;
  double t67649;
  double t67650;
  double t67654;
  double t67655;
  double t67656;
  double t67665;
  double t67666;
  double t67667;
  double t67690;
  double t67691;
  double t67693;
  double t67694;
  double t68005;
  double t68006;
  double t68008;
  double t68013;
  double t68020;
  double t68022;
  double t68024;
  double t68029;
  double t68030;
  double t68032;
  double t68033;
  double t68034;
  double t68035;
  double t68036;
  double t68037;
  double t68038;
  double t68039;
  double t68041;
  double t68042;
  double t68043;
  double t68045;
  double t68046;
  double t67440;
  double t67441;
  double t67442;
  double t67443;
  double t67445;
  double t67446;
  double t67447;
  double t67448;
  double t67453;
  double t67454;
  double t67455;
  double t67456;
  double t67457;
  double t67461;
  double t67462;
  double t67463;
  double t67464;
  double t67465;
  double t67466;
  double t67741;
  double t67742;
  double t67744;
  double t67745;
  double t67748;
  double t67749;
  double t67750;
  double t67763;
  double t67767;
  double t67768;
  double t67769;
  double t67770;
  double t67771;
  double t67772;
  double t67773;
  double t67775;
  double t67776;
  double t67777;
  double t67779;
  double t67927;
  double t67928;
  double t67930;
  double t67931;
  double t67932;
  double t67933;
  double t67935;
  double t67937;
  double t67938;
  double t67939;
  double t67942;
  double t67943;
  double t67945;
  double t67946;
  double t67949;
  double t67951;
  double t67954;
  double t67955;
  double t67956;
  double t68051;
  double t68052;
  double t68053;
  double t68054;
  double t68056;
  double t68060;
  double t68061;
  double t68063;
  double t68064;
  double t68065;
  double t68067;
  double t68070;
  double t68072;
  double t68073;
  double t68074;
  double t68075;
  double t68076;
  double t68077;
  double t68082;
  double t68173;
  double t68174;
  double t68175;
  double t68176;
  double t68183;
  double t68184;
  double t68186;
  double t68187;
  double t68190;
  double t68192;
  double t68194;
  double t68195;
  double t68215;
  double t68216;
  double t68217;
  double t68220;
  double t68223;
  double t68224;
  double t68226;
  double t68227;
  double t68228;
  double t68229;
  double t68230;
  double t68231;
  double t68233;
  double t68235;
  double t68240;
  double t68241;
  double t68242;
  double t68244;
  double t68246;
  double t68252;
  double t68253;
  double t68256;
  double t68257;
  double t68260;
  double t68261;
  double t68262;
  double t68249;
  double t68250;
  double t68254;
  double t68258;
  double t68259;
  double t68263;
  double t68264;
  double t68265;
  double t68266;
  double t68267;
  double t68268;
  double t68269;
  double t68270;
  double t68271;
  double t68272;
  double t68275;
  double t68278;
  double t68280;
  double t68283;
  double t68285;
  double t68289;
  double t68297;
  double t68298;
  double t68300;
  double t68302;
  double t68304;
  double t68305;
  double t68309;
  double t68310;
  double t68311;
  double t68294;
  double t68295;
  double t68301;
  double t68307;
  double t68308;
  double t68312;
  double t68313;
  double t68315;
  double t68316;
  double t68317;
  double t68318;
  double t68319;
  double t68320;
  double t68321;
  double t68322;
  double t68323;
  double t68324;
  double t68325;
  double t68326;
  double t68327;
  double t68328;
  double t68343;
  double t68344;
  double t68345;
  double t68346;
  double t68339;
  double t68340;
  double t68350;
  double t68351;
  double t68352;
  double t68334;
  double t68335;
  double t68336;
  double t68341;
  double t68347;
  double t68348;
  double t68349;
  double t68353;
  double t68354;
  double t68355;
  double t68356;
  double t68357;
  double t68358;
  double t68359;
  double t68360;
  double t68361;
  double t68362;
  double t68363;
  double t68364;
  double t68365;
  double t68367;
  double t68368;
  double t67467;
  double t67553;
  double t67562;
  double t67563;
  double t67571;
  double t67577;
  double t67578;
  double t67583;
  double t67584;
  double t67585;
  double t67586;
  double t67587;
  double t67589;
  double t67590;
  double t67591;
  double t67592;
  double t67593;
  double t67594;
  double t67595;
  double t67596;
  double t67597;
  double t67599;
  double t67600;
  double t67604;
  double t67696;
  double t67738;
  double t67739;
  double t68395;
  double t68397;
  double t68400;
  double t68427;
  double t68428;
  double t68431;
  double t68433;
  double t68434;
  double t68437;
  double t68439;
  double t68440;
  double t68464;
  double t68465;
  double t68469;
  double t68470;
  double t68471;
  double t68516;
  double t68518;
  double t68519;
  double t68520;
  double t68523;
  double t68524;
  double t68460;
  double t68462;
  double t68463;
  double t68466;
  double t68467;
  double t68468;
  double t68472;
  double t68473;
  double t68474;
  double t68475;
  double t68476;
  double t68478;
  double t68479;
  double t68481;
  double t68482;
  double t68483;
  double t68484;
  double t68485;
  double t68486;
  double t68487;
  double t68552;
  double t68553;
  double t68554;
  double t68550;
  double t68559;
  double t68560;
  double t68561;
  double t68424;
  double t68425;
  double t68432;
  double t68435;
  double t68436;
  double t68441;
  double t68442;
  double t68443;
  double t68444;
  double t68445;
  double t68446;
  double t68448;
  double t68449;
  double t68451;
  double t68452;
  double t68453;
  double t68454;
  double t68455;
  double t68456;
  double t68457;
  double t68458;
  double t68126;
  double t68548;
  double t68549;
  double t68551;
  double t68555;
  double t68556;
  double t68558;
  double t68562;
  double t68563;
  double t68564;
  double t68565;
  double t68566;
  double t68567;
  double t68569;
  double t68570;
  double t68571;
  double t68572;
  double t68573;
  double t68574;
  double t68575;
  double t68576;
  double t68581;
  double t68493;
  double t68494;
  double t68495;
  double t68496;
  double t68497;
  double t68498;
  double t68500;
  double t68501;
  double t68502;
  double t68503;
  double t68504;
  double t68505;
  double t68506;
  double t68507;
  double t68508;
  double t68509;
  double t68510;
  double t68511;
  double t68512;
  double t68372;
  double t68373;
  double t68374;
  double t68375;
  double t68376;
  double t68377;
  double t68378;
  double t68379;
  double t68380;
  double t68382;
  double t68383;
  double t68384;
  double t68385;
  double t68386;
  double t68387;
  double t68388;
  double t68389;
  double t68390;
  double t68391;
  double t68585;
  double t68586;
  double t68587;
  double t68588;
  double t68589;
  double t68590;
  double t68591;
  double t68592;
  double t68593;
  double t68594;
  double t68595;
  double t68596;
  double t68597;
  double t68598;
  double t68600;
  double t68601;
  double t68602;
  double t68604;
  double t68605;
  double t68649;
  double t68650;
  double t68651;
  double t68653;
  double t68654;
  double t68656;
  double t68657;
  double t68658;
  double t68664;
  double t68666;
  double t68695;
  double t68697;
  double t68698;
  double t68699;
  double t68704;
  double t68706;
  double t68708;
  double t68713;
  double t68722;
  double t68724;
  double t68727;
  double t68729;
  double t68730;
  double t68731;
  double t68735;
  double t68737;
  double t68738;
  double t68741;
  double t68742;
  double t68754;
  double t68757;
  double t68765;
  double t68756;
  double t68759;
  double t68763;
  double t68766;
  double t68767;
  double t68768;
  double t68769;
  double t68770;
  double t68776;
  double t68778;
  double t68784;
  double t68794;
  double t68800;
  double t68802;
  double t68804;
  double t68813;
  double t68814;
  double t68815;
  double t68816;
  double t68825;
  double t68828;
  double t68829;
  double t68686;
  double t68837;
  double t68838;
  double t68840;
  double t68820;
  double t68821;
  double t68822;
  double t68831;
  double t68833;
  double t68834;
  double t68841;
  double t68842;
  double t68845;
  double t68846;
  double t68847;
  double t68848;
  double t68850;
  double t68851;
  double t68852;
  double t68853;
  double t68854;
  double t68855;
  double t68856;
  double t68858;
  double t68392;
  double t68393;
  double t68396;
  double t68398;
  double t68399;
  double t68402;
  double t68404;
  double t68405;
  double t68406;
  double t68409;
  double t68410;
  double t68412;
  double t68413;
  double t68414;
  double t68415;
  double t68416;
  double t68417;
  double t68418;
  double t68419;
  double t68420;
  double t68421;
  double t68422;
  double t68459;
  double t68488;
  double t68490;
  double t67780;
  double t67786;
  double t67802;
  double t67808;
  double t67809;
  double t67815;
  double t67816;
  double t67818;
  double t67820;
  double t67821;
  double t67823;
  double t67824;
  double t67833;
  double t67834;
  double t67836;
  double t67837;
  double t67838;
  double t67839;
  double t67840;
  double t67843;
  double t67844;
  double t67845;
  double t67886;
  double t67921;
  double t67922;
  double t68889;
  double t68890;
  double t68891;
  double t68893;
  double t68894;
  double t68895;
  double t68919;
  double t68923;
  double t68084;
  double t68918;
  double t68920;
  double t68921;
  double t68922;
  double t68925;
  double t68926;
  double t68927;
  double t68928;
  double t68929;
  double t68930;
  double t68932;
  double t68933;
  double t68935;
  double t68936;
  double t68937;
  double t68938;
  double t68939;
  double t68940;
  double t68864;
  double t68866;
  double t68867;
  double t68869;
  double t68870;
  double t68871;
  double t68872;
  double t68873;
  double t68874;
  double t68875;
  double t68876;
  double t68877;
  double t68878;
  double t68879;
  double t68880;
  double t68881;
  double t68882;
  double t68883;
  double t68945;
  double t68946;
  double t68947;
  double t68948;
  double t68949;
  double t68950;
  double t68951;
  double t68952;
  double t68953;
  double t68954;
  double t68955;
  double t68956;
  double t68957;
  double t68959;
  double t68960;
  double t68961;
  double t68962;
  double t68963;
  double t68964;
  double t69038;
  double t69041;
  double t69042;
  double t69023;
  double t69024;
  double t69026;
  double t69052;
  double t69053;
  double t69054;
  double t69082;
  double t69083;
  double t69088;
  double t69096;
  double t69097;
  double t69098;
  double t69099;
  double t69100;
  double t69102;
  double t69103;
  double t69104;
  double t69105;
  double t69106;
  double t69107;
  double t69109;
  double t69111;
  double t69113;
  double t69114;
  double t69121;
  double t69128;
  double t69131;
  double t69133;
  double t69134;
  double t69137;
  double t69138;
  double t69139;
  double t69140;
  double t69126;
  double t69127;
  double t69129;
  double t69135;
  double t69136;
  double t69141;
  double t69147;
  double t69149;
  double t69152;
  double t69153;
  double t69154;
  double t69155;
  double t69156;
  double t69159;
  double t69162;
  double t69166;
  double t69167;
  double t69168;
  double t69169;
  double t69178;
  double t69180;
  double t68513;
  double t68514;
  double t68515;
  double t68517;
  double t68521;
  double t68522;
  double t68525;
  double t68527;
  double t68528;
  double t68529;
  double t68531;
  double t68532;
  double t68533;
  double t68534;
  double t68535;
  double t68536;
  double t68538;
  double t68539;
  double t68540;
  double t68541;
  double t68542;
  double t68544;
  double t68545;
  double t68546;
  double t68547;
  double t68582;
  double t68583;
  double t68886;
  double t68887;
  double t68888;
  double t68892;
  double t68896;
  double t68897;
  double t68898;
  double t68899;
  double t68901;
  double t68903;
  double t68904;
  double t68905;
  double t68906;
  double t68907;
  double t68908;
  double t68909;
  double t68910;
  double t68911;
  double t68912;
  double t68913;
  double t67958;
  double t67959;
  double t67966;
  double t67972;
  double t67974;
  double t67984;
  double t67985;
  double t67986;
  double t67988;
  double t67990;
  double t67991;
  double t67992;
  double t67993;
  double t67994;
  double t67995;
  double t67996;
  double t67997;
  double t67998;
  double t67999;
  double t68000;
  double t68001;
  double t69252;
  double t69253;
  double t69254;
  double t69248;
  double t69264;
  double t69266;
  double t69267;
  double t68884;
  double t68914;
  double t68916;
  double t68917;
  double t68941;
  double t68943;
  double t67957;
  double t68002;
  double t68003;
  double t68004;
  double t68048;
  double t68049;
  double t69200;
  double t69201;
  double t69202;
  double t69204;
  double t69207;
  double t69208;
  double t69211;
  double t69214;
  double t69215;
  double t69217;
  double t69219;
  double t69222;
  double t69223;
  double t69224;
  double t69228;
  double t69235;
  double t69236;
  double t69238;
  double t69241;
  double t69353;
  double t69354;
  double t69348;
  double t69350;
  double t69351;
  double t69356;
  double t69357;
  double t69360;
  double t69382;
  double t69383;
  double t69384;
  double t69385;
  double t69386;
  double t69387;
  double t69388;
  double t69389;
  double t69390;
  double t69391;
  double t69392;
  double t69394;
  double t69395;
  double t69396;
  double t69397;
  double t69398;
  double t69399;
  double t69400;
  double t69297;
  double t69298;
  double t69299;
  double t69302;
  double t69304;
  double t69305;
  double t69306;
  double t69307;
  double t69308;
  double t69311;
  double t69314;
  double t69317;
  double t69321;
  double t69322;
  double t69330;
  double t69331;
  double t69337;
  double t69339;
  double t69340;
  double t69341;
  double t69342;
  double t69343;
  double t69344;
  double t69345;
  double t68615;
  double t68617;
  double t68618;
  double t68619;
  double t68620;
  double t68621;
  double t68622;
  double t68623;
  double t68624;
  double t68625;
  double t68626;
  double t68627;
  double t68628;
  double t68629;
  double t68630;
  double t68631;
  double t68632;
  double t68634;
  double t68635;
  double t68636;
  double t68638;
  double t68641;
  double t68642;
  double t68644;
  double t68130;
  double t68131;
  double t68132;
  double t68133;
  double t68134;
  double t68135;
  double t68136;
  double t68137;
  double t68138;
  double t68139;
  double t68140;
  double t68146;
  double t68149;
  double t68153;
  double t68154;
  double t68155;
  double t68157;
  double t68158;
  double t68159;
  double t68160;
  double t68161;
  double t68162;
  double t68163;
  double t68164;
  double t66792;
  double t66793;
  double t66795;
  double t66799;
  double t66800;
  double t66805;
  double t66812;
  double t66815;
  double t66816;
  double t66817;
  double t66818;
  double t68977;
  double t68978;
  double t68981;
  double t68982;
  double t68983;
  double t68984;
  double t68985;
  double t68986;
  double t68987;
  double t68988;
  double t68989;
  double t68990;
  double t68991;
  double t69004;
  double t69006;
  double t69008;
  double t69009;
  double t69010;
  double t68971;
  double t68972;
  double t68974;
  double t68975;
  double t69011;
  double t69012;
  double t66934;
  double t66947;
  double t66948;
  double t66956;
  double t66963;
  double t66965;
  double t66975;
  double t66976;
  double t66978;
  double t66981;
  double t66982;
  double t66984;
  double t66988;
  double t66989;
  double t66990;
  double t66991;
  double t66993;
  double t66998;
  double t67001;
  double t67002;
  double t67003;
  double t68169;
  double t68170;
  double t68172;
  double t68182;
  double t68188;
  double t68189;
  double t68196;
  double t68197;
  double t68198;
  double t68199;
  double t68201;
  double t68202;
  double t68204;
  double t68205;
  double t68206;
  double t68208;
  double t68209;
  double t68211;
  double t68212;
  double t68213;
  double t68214;
  double t68648;
  double t68652;
  double t68655;
  double t68661;
  double t68662;
  double t68673;
  double t68674;
  double t68675;
  double t68677;
  double t68678;
  double t68681;
  double t68682;
  double t68683;
  double t68684;
  double t68685;
  double t68687;
  double t68688;
  double t68690;
  double t68693;
  double t69015;
  double t69021;
  double t69022;
  double t69037;
  double t69043;
  double t69046;
  double t69047;
  double t69055;
  double t69056;
  double t69057;
  double t69059;
  double t69061;
  double t69064;
  double t69065;
  double t69066;
  double t69067;
  double t69070;
  double t69072;
  double t69073;
  double t69074;
  double t69075;
  double t69352;
  double t69355;
  double t69358;
  double t69359;
  double t69361;
  double t69362;
  double t69363;
  double t69364;
  double t69365;
  double t69366;
  double t69367;
  double t69368;
  double t69369;
  double t69370;
  double t69371;
  double t69372;
  double t69373;
  double t69480;
  double t69478;
  double t69474;
  double t69476;
  double t69479;
  double t68248;
  double t68293;
  double t68330;
  double t68332;
  double t68370;
  double t67046;
  double t67109;
  double t67226;
  double t67311;
  double t67424;
  double t69124;
  double t69187;
  double t69190;
  double t69195;
  double t69198;
  double t68744;
  double t68747;
  double t68751;
  double t68818;
  double t68860;
  double t69375;
  double t69377;
  double t69379;
  double t69381;
  double t69402;
  double t69564;
  double t69567;
  double t69568;
  double t69575;
  double t69588;
  double t69589;
  double t69622;
  double t69623;
  double t69624;
  double t69625;
  double t69663;
  double t69668;
  double t69671;
  double t69672;
  double t69673;
  double t69674;
  double t69676;
  double t69677;
  double t69680;
  double t69681;
  double t69682;
  double t69683;
  double t69684;
  double t69685;
  double t69686;
  double t69689;
  double t69690;
  double t69691;
  double t69695;
  double t69704;
  double t69710;
  double t69717;
  double t69718;
  double t69721;
  double t69722;
  double t69702;
  double t69703;
  double t69715;
  double t69719;
  double t69720;
  double t69723;
  double t69725;
  double t69727;
  double t69733;
  double t69734;
  double t69736;
  double t69737;
  double t69739;
  double t69740;
  double t69741;
  double t69742;
  double t69743;
  double t69746;
  double t69749;
  double t69751;
  double t69754;
  double t69761;
  double t69762;
  double t69763;
  double t69775;
  double t69776;
  double t69778;
  double t69781;
  double t69782;
  double t69783;
  double t69759;
  double t69760;
  double t69770;
  double t69779;
  double t69780;
  double t69784;
  double t69785;
  double t69787;
  double t69788;
  double t69789;
  double t69791;
  double t69792;
  double t69793;
  double t69794;
  double t69795;
  double t69796;
  double t69797;
  double t69798;
  double t69799;
  double t69800;
  double t69801;
  double t69814;
  double t69815;
  double t69816;
  double t69810;
  double t69812;
  double t69820;
  double t69821;
  double t69822;
  double t69806;
  double t69807;
  double t69809;
  double t69813;
  double t69817;
  double t69818;
  double t69819;
  double t69823;
  double t69824;
  double t69825;
  double t69827;
  double t69828;
  double t69829;
  double t69832;
  double t69833;
  double t69834;
  double t69836;
  double t69837;
  double t69838;
  double t69839;
  double t69840;
  double t69841;
  double t69866;
  double t69869;
  double t69873;
  double t69900;
  double t69901;
  double t69903;
  double t69904;
  double t69907;
  double t69909;
  double t69910;
  double t69933;
  double t69934;
  double t69946;
  double t69947;
  double t69544;
  double t70000;
  double t70004;
  double t70005;
  double t70006;
  double t70010;
  double t70011;
  double t69929;
  double t69931;
  double t69932;
  double t69936;
  double t69938;
  double t69945;
  double t69948;
  double t69949;
  double t69950;
  double t69951;
  double t69952;
  double t69953;
  double t69954;
  double t69955;
  double t69956;
  double t69957;
  double t69958;
  double t69959;
  double t69960;
  double t69961;
  double t70060;
  double t70061;
  double t70062;
  double t70058;
  double t70067;
  double t70068;
  double t69896;
  double t69898;
  double t69902;
  double t69905;
  double t69906;
  double t69911;
  double t69912;
  double t69913;
  double t69914;
  double t69915;
  double t69916;
  double t69917;
  double t69918;
  double t69919;
  double t69921;
  double t69922;
  double t69923;
  double t69924;
  double t69925;
  double t69926;
  double t69927;
  double t70055;
  double t70056;
  double t70059;
  double t70063;
  double t70064;
  double t70066;
  double t70069;
  double t70070;
  double t70071;
  double t70072;
  double t70074;
  double t70076;
  double t70078;
  double t70079;
  double t70081;
  double t70082;
  double t70083;
  double t70086;
  double t70087;
  double t70088;
  double t70089;
  double t69844;
  double t69845;
  double t69846;
  double t69847;
  double t69848;
  double t69849;
  double t69850;
  double t69851;
  double t69852;
  double t69853;
  double t69854;
  double t69855;
  double t69856;
  double t69857;
  double t69858;
  double t69859;
  double t69860;
  double t69862;
  double t69864;
  double t69966;
  double t69968;
  double t69969;
  double t69970;
  double t69971;
  double t69972;
  double t69973;
  double t69974;
  double t69976;
  double t69980;
  double t69981;
  double t69985;
  double t69986;
  double t69987;
  double t69989;
  double t69990;
  double t69991;
  double t69992;
  double t69993;
  double t70094;
  double t70095;
  double t70096;
  double t70097;
  double t70099;
  double t70100;
  double t70103;
  double t70105;
  double t70106;
  double t70107;
  double t70108;
  double t70109;
  double t70110;
  double t70112;
  double t70115;
  double t70116;
  double t70117;
  double t70118;
  double t70121;
  double t70171;
  double t70174;
  double t70180;
  double t70181;
  double t70185;
  double t70186;
  double t70217;
  double t70218;
  double t70221;
  double t70222;
  double t70223;
  double t70224;
  double t70225;
  double t70226;
  double t70227;
  double t70228;
  double t70230;
  double t70232;
  double t70233;
  double t70235;
  double t70238;
  double t70239;
  double t70240;
  double t70242;
  double t70243;
  double t70251;
  double t70256;
  double t70259;
  double t70252;
  double t70257;
  double t70258;
  double t70260;
  double t70261;
  double t70262;
  double t70263;
  double t70264;
  double t70265;
  double t70266;
  double t70267;
  double t70268;
  double t70270;
  double t70273;
  double t70278;
  double t70279;
  double t70281;
  double t70286;
  double t70287;
  double t70297;
  double t70299;
  double t70211;
  double t70303;
  double t70304;
  double t70293;
  double t70295;
  double t70296;
  double t70300;
  double t70301;
  double t70302;
  double t70305;
  double t70306;
  double t70308;
  double t70309;
  double t70311;
  double t70312;
  double t70313;
  double t70317;
  double t70319;
  double t70321;
  double t70323;
  double t70325;
  double t70327;
  double t70328;
  double t69865;
  double t69867;
  double t69871;
  double t69872;
  double t69874;
  double t69875;
  double t69876;
  double t69878;
  double t69879;
  double t69880;
  double t69881;
  double t69883;
  double t69884;
  double t69885;
  double t69886;
  double t69887;
  double t69888;
  double t69889;
  double t69890;
  double t69893;
  double t69894;
  double t69895;
  double t69928;
  double t69962;
  double t69963;
  double t70373;
  double t70377;
  double t70423;
  double t70424;
  double t70425;
  double t70427;
  double t70428;
  double t70429;
  double t70372;
  double t70374;
  double t70375;
  double t70376;
  double t70378;
  double t70379;
  double t70381;
  double t70382;
  double t70383;
  double t70384;
  double t70385;
  double t70386;
  double t70387;
  double t70388;
  double t70390;
  double t70391;
  double t70392;
  double t70393;
  double t69550;
  double t70332;
  double t70333;
  double t70337;
  double t70338;
  double t70339;
  double t70340;
  double t70341;
  double t70342;
  double t70343;
  double t70346;
  double t70347;
  double t70348;
  double t70349;
  double t70350;
  double t70359;
  double t70362;
  double t70364;
  double t70365;
  double t70366;
  double t70397;
  double t70398;
  double t70399;
  double t70401;
  double t70402;
  double t70403;
  double t70404;
  double t70405;
  double t70406;
  double t70407;
  double t70408;
  double t70409;
  double t70410;
  double t70411;
  double t70412;
  double t70413;
  double t70415;
  double t70416;
  double t70490;
  double t70491;
  double t70492;
  double t70487;
  double t70488;
  double t70496;
  double t70497;
  double t70498;
  double t70513;
  double t70514;
  double t70515;
  double t70517;
  double t70518;
  double t70519;
  double t70520;
  double t70521;
  double t70522;
  double t70523;
  double t70524;
  double t70525;
  double t70526;
  double t70527;
  double t70528;
  double t70529;
  double t70530;
  double t70531;
  double t70532;
  double t70538;
  double t70540;
  double t70542;
  double t70546;
  double t70547;
  double t70548;
  double t70549;
  double t70536;
  double t70537;
  double t70539;
  double t70543;
  double t70545;
  double t70552;
  double t70554;
  double t70557;
  double t70558;
  double t70560;
  double t70561;
  double t70562;
  double t70563;
  double t70566;
  double t70567;
  double t70568;
  double t70569;
  double t70570;
  double t70571;
  double t70573;
  double t70575;
  double t69995;
  double t69998;
  double t69999;
  double t70002;
  double t70007;
  double t70008;
  double t70012;
  double t70013;
  double t70015;
  double t70016;
  double t70017;
  double t70018;
  double t70019;
  double t70022;
  double t70023;
  double t70025;
  double t70028;
  double t70032;
  double t70033;
  double t70034;
  double t70037;
  double t70042;
  double t70043;
  double t70052;
  double t70054;
  double t70090;
  double t70091;
  double t70418;
  double t70420;
  double t70421;
  double t70426;
  double t70430;
  double t70431;
  double t70432;
  double t70433;
  double t70434;
  double t70435;
  double t70437;
  double t70438;
  double t70440;
  double t70441;
  double t70442;
  double t70443;
  double t70445;
  double t70446;
  double t70447;
  double t70449;
  double t70625;
  double t70626;
  double t70627;
  double t70623;
  double t70631;
  double t70633;
  double t70417;
  double t70450;
  double t70451;
  double t70452;
  double t70453;
  double t70454;
  double t69548;
  double t70587;
  double t70588;
  double t70590;
  double t70591;
  double t70592;
  double t70595;
  double t70596;
  double t70597;
  double t70598;
  double t70599;
  double t70602;
  double t70603;
  double t70604;
  double t70607;
  double t70608;
  double t70609;
  double t70610;
  double t70611;
  double t70612;
  double t70744;
  double t70772;
  double t70773;
  double t70778;
  double t70779;
  double t70780;
  double t70781;
  double t70782;
  double t70783;
  double t70784;
  double t70787;
  double t70788;
  double t70789;
  double t70790;
  double t70791;
  double t70795;
  double t70798;
  double t70802;
  double t70804;
  double t70662;
  double t70664;
  double t70666;
  double t70667;
  double t70668;
  double t70669;
  double t70670;
  double t70671;
  double t70673;
  double t70676;
  double t70678;
  double t70679;
  double t70683;
  double t70684;
  double t70686;
  double t70687;
  double t70688;
  double t70690;
  double t70692;
  double t70697;
  double t70701;
  double t70707;
  double t70708;
  double t70718;
  double t70128;
  double t70129;
  double t70131;
  double t70134;
  double t70135;
  double t70136;
  double t70137;
  double t70138;
  double t70139;
  double t70140;
  double t70141;
  double t70142;
  double t70143;
  double t70144;
  double t70145;
  double t70146;
  double t70150;
  double t70151;
  double t70152;
  double t70153;
  double t70158;
  double t70159;
  double t70160;
  double t70161;
  double t70457;
  double t70458;
  double t70459;
  double t70460;
  double t70461;
  double t70462;
  double t70463;
  double t70464;
  double t70465;
  double t70466;
  double t70467;
  double t70468;
  double t70469;
  double t70470;
  double t70471;
  double t70472;
  double t70473;
  double t70474;
  double t70475;
  double t70476;
  double t70477;
  double t70478;
  double t70479;
  double t70480;
  double t69552;
  double t69481;
  double t69482;
  double t69484;
  double t69486;
  double t69487;
  double t69492;
  double t69493;
  double t69495;
  double t69498;
  double t69500;
  double t69501;
  double t69503;
  double t69508;
  double t69509;
  double t69510;
  double t69511;
  double t69512;
  double t69516;
  double t69518;
  double t69519;
  double t69520;
  double t69561;
  double t69562;
  double t69563;
  double t69569;
  double t69590;
  double t69621;
  double t69631;
  double t69632;
  double t69636;
  double t69637;
  double t69638;
  double t69639;
  double t69640;
  double t69645;
  double t69651;
  double t69652;
  double t69653;
  double t69654;
  double t69660;
  double t69661;
  double t69662;
  double t70169;
  double t70170;
  double t70175;
  double t70182;
  double t70183;
  double t70187;
  double t70188;
  double t70189;
  double t70190;
  double t70202;
  double t70204;
  double t70206;
  double t70207;
  double t70208;
  double t70209;
  double t70212;
  double t70213;
  double t70215;
  double t70216;
  double t70484;
  double t70485;
  double t70486;
  double t70489;
  double t70493;
  double t70494;
  double t70495;
  double t70499;
  double t70500;
  double t70501;
  double t70502;
  double t70503;
  double t70504;
  double t70505;
  double t70506;
  double t70507;
  double t70508;
  double t70509;
  double t70510;
  double t70511;
  double t70512;
  double t70729;
  double t70730;
  double t70732;
  double t70733;
  double t70734;
  double t70737;
  double t70738;
  double t70741;
  double t70743;
  double t70745;
  double t70746;
  double t70748;
  double t70749;
  double t70750;
  double t70751;
  double t70752;
  double t70753;
  t663 = Cos(var1[6]);
  t1453 = -1.*t663;
  t1823 = 1. + t1453;
  t1853 = Sin(var1[4]);
  t545 = Cos(var1[5]);
  t2405 = Sin(var1[5]);
  t3051 = Cos(var1[4]);
  t3272 = Sin(var1[6]);
  t3877 = Cos(var1[8]);
  t3957 = -1.*t3877;
  t4020 = 1. + t3957;
  t4228 = Sin(var1[8]);
  t16351 = -3.e-6*t4020;
  t16360 = 3.e-6*t4228;
  t17696 = t16351 + t16360;
  t3538 = -1.*t545*t663*t1853;
  t3543 = 3.e-6*t1823*t1853*t2405;
  t3545 = t3051*t3272;
  t3682 = t3538 + t3543 + t3545;
  t12146 = -1.*t4228;
  t19567 = -3.e-6*t545*t1823*t1853;
  t19575 = -9.e-12*t1823;
  t19630 = 1. + t19575;
  t19650 = t19630*t1853*t2405;
  t19664 = -3.e-6*t3051*t3272;
  t19769 = t19567 + t19650 + t19664;
  t31135 = 3.e-6*t4020;
  t19812 = -3.e-6*t4228;
  t25363 = -1.000000000009*t1823;
  t25470 = 1. + t25363;
  t27003 = t3051*t25470;
  t29000 = t545*t1853*t3272;
  t29449 = 3.e-6*t1853*t2405*t3272;
  t30092 = t27003 + t29000 + t29449;
  t31136 = t31135 + t16360;
  t3694 = 9.e-13*var1[8];
  t20400 = t16351 + t19812;
  t4220 = -9.e-12*t4020;
  t24370 = -1.000000000009*t4020;
  t24492 = 1. + t24370;
  t31475 = t31135 + t19812;
  t30476 = 9.e-12*t4020;
  t39802 = -3.e-6*t3877;
  t39825 = t39802 + t19812;
  t40120 = 3.e-6*t3877;
  t40123 = t40120 + t19812;
  t41444 = -9.e-12*t4228;
  t49059 = t40120 + t16360;
  t49746 = 9.e-12*t4228;
  t48982 = t39802 + t16360;
  t39890 = 0.2*t39825;
  t40255 = 0.1*t40123;
  t40276 = -1.62e-17*t4228;
  t40914 = 3.e-7 + t39890 + t40255 + t40276;
  t40919 = t19769*t40914;
  t41442 = -9.e-7*t39825;
  t42774 = t3877 + t41444;
  t42819 = 0.2*t42774;
  t44112 = 0.1000000000009*t4228;
  t44589 = 9.e-13 + t41442 + t42819 + t44112;
  t45462 = t30092*t44589;
  t45544 = -9.e-7*t40123;
  t47221 = t3957 + t41444;
  t47329 = 0.1*t47221;
  t48284 = 0.2000000000018*t4228;
  t48451 = 9.e-13 + t45544 + t47329 + t48284;
  t48882 = t3682*t48451;
  t49058 = t3682*t48982;
  t49246 = t30092*t49059;
  t49272 = -1.8e-11*t19769*t4228;
  t49601 = t49058 + t49246 + t49272;
  t49745 = 0.100001*t49601;
  t49749 = t3957 + t49746;
  t49795 = t30092*t49749;
  t49896 = t19769*t49059;
  t49898 = -1.000000000009*t3682*t4228;
  t49952 = t49795 + t49896 + t49898;
  t49957 = 0.2*t49952;
  t49958 = t3877 + t49746;
  t49965 = t3682*t49958;
  t49971 = t19769*t48982;
  t49976 = -1.000000000009*t30092*t4228;
  t49981 = t49965 + t49971 + t49976;
  t50007 = -0.3*t49981;
  t52890 = t40919 + t45462 + t48882 + t49745 + t49957 + t50007;
  t4021 = 0.2000000000018*t4020;
  t12221 = t4220 + t12146;
  t15614 = 0.1*t12221;
  t19508 = -9.e-7*t17696;
  t19527 = t3694 + t4021 + t15614 + t19508;
  t19788 = 3.e-7*var1[8];
  t19789 = -1.62e-17*t4020;
  t23145 = 0.2*t20400;
  t23513 = 0.1*t17696;
  t23519 = t19788 + t19789 + t23145 + t23513;
  t54611 = 3.e-6*t545*t1823*t1853;
  t54618 = t663*t1853*t2405;
  t54621 = t54611 + t54618;
  t30596 = t30476 + t12146;
  t54648 = t545*t19630*t1853;
  t55806 = t54648 + t3543;
  t31384 = -1.8e-11*t4020;
  t31451 = 1. + t31384;
  t55860 = 3.e-6*t545*t1853*t3272;
  t56065 = -1.*t1853*t2405*t3272;
  t56333 = t55860 + t56065;
  t38356 = 0.1000000000009*t4020;
  t39575 = -9.e-7*t20400;
  t39621 = t4220 + t4228;
  t39622 = 0.2*t39621;
  t39663 = t3694 + t38356 + t39575 + t39622;
  t39679 = t30476 + t4228;
  t54441 = -6.000000000054e-7*t545*t1823*t1853;
  t54442 = 0.2000000000018*t1823*t1853*t2405;
  t54635 = t54621*t19527;
  t55853 = t55806*t23519;
  t55858 = t24492*t54621;
  t56378 = t56333*t30596;
  t56400 = t55806*t31136;
  t56431 = t55858 + t56378 + t56400;
  t56446 = 0.2*t56431;
  t56449 = t31451*t55806;
  t56512 = t54621*t31475;
  t56517 = t56333*t31136;
  t56518 = t56449 + t56512 + t56517;
  t56523 = 0.100001*t56518;
  t56527 = t56333*t39663;
  t56533 = t24492*t56333;
  t56541 = t55806*t31475;
  t56571 = t54621*t39679;
  t57439 = t56533 + t56541 + t56571;
  t57443 = -0.3*t57439;
  t57444 = t54441 + t54442 + t54635 + t55853 + t56446 + t56523 + t56527 + t57443;
  t58159 = -1.*t3051*t545*t663;
  t58179 = 3.e-6*t3051*t1823*t2405;
  t58197 = -1.*t1853*t3272;
  t58203 = t58159 + t58179 + t58197;
  t58225 = -3.e-6*t3051*t545*t1823;
  t58258 = t3051*t19630*t2405;
  t58271 = 3.e-6*t1853*t3272;
  t58272 = t58225 + t58258 + t58271;
  t58304 = -1.*t25470*t1853;
  t58308 = t3051*t545*t3272;
  t58312 = 3.e-6*t3051*t2405*t3272;
  t58322 = t58304 + t58308 + t58312;
  t58133 = -0.2000000000018*t3051*t545*t1823;
  t58137 = -6.000000000054e-7*t3051*t1823*t2405;
  t58148 = 0.2000000000018*t1853*t3272;
  t58212 = t58203*t19527;
  t58295 = t58272*t23519;
  t58302 = t24492*t58203;
  t58323 = t58322*t30596;
  t58324 = t58272*t31136;
  t58325 = t58302 + t58323 + t58324;
  t58331 = 0.2*t58325;
  t58332 = t31451*t58272;
  t58333 = t58203*t31475;
  t58372 = t58322*t31136;
  t58378 = t58332 + t58333 + t58372;
  t58381 = 0.100001*t58378;
  t58414 = t58322*t39663;
  t58463 = t24492*t58322;
  t58472 = t58272*t31475;
  t58503 = t58203*t39679;
  t58505 = t58463 + t58472 + t58503;
  t58523 = -0.3*t58505;
  t58594 = t58133 + t58137 + t58148 + t58212 + t58295 + t58331 + t58381 + t58414 + t58523;
  t59504 = -3.e-6*t3051*t663;
  t59582 = -3.e-6*t545*t1853*t3272;
  t59592 = -9.e-12*t1853*t2405*t3272;
  t59596 = t59504 + t59582 + t59592;
  t59444 = t3051*t663;
  t59461 = t59444 + t29000 + t29449;
  t59647 = t545*t663*t1853;
  t60248 = 3.e-6*t663*t1853*t2405;
  t60786 = -1.000000000009*t3051*t3272;
  t61100 = t59647 + t60248 + t60786;
  t58935 = -0.2000000000018*t3051*t663;
  t58941 = -0.2000000000018*t545*t1853*t3272;
  t59434 = -6.000000000054e-7*t1853*t2405*t3272;
  t59501 = t59461*t19527;
  t59605 = t59596*t23519;
  t59643 = t31451*t59596;
  t59644 = t59461*t31475;
  t61255 = t61100*t31136;
  t61495 = t59643 + t59644 + t61255;
  t61686 = 0.100001*t61495;
  t61912 = t24492*t59461;
  t62066 = t61100*t30596;
  t62068 = t59596*t31136;
  t62074 = t61912 + t62066 + t62068;
  t62103 = 0.2*t62074;
  t62131 = t61100*t39663;
  t62132 = t24492*t61100;
  t62166 = t59596*t31475;
  t62169 = t59461*t39679;
  t62187 = t62132 + t62166 + t62169;
  t62211 = -0.3*t62187;
  t62221 = t58935 + t58941 + t59434 + t59501 + t59605 + t61686 + t62103 + t62131 + t62211;
  t62924 = 3.e-6*t3051*t545*t1823;
  t62927 = t3051*t663*t2405;
  t62962 = t62924 + t62927;
  t62970 = t3051*t545*t19630;
  t62971 = t62970 + t58179;
  t62974 = 3.e-6*t3051*t545*t3272;
  t62975 = -1.*t3051*t2405*t3272;
  t62976 = t62974 + t62975;
  t63447 = -3.e-6*t1823*t1853*t2405;
  t63450 = -1.*t3051*t3272;
  t63457 = t59647 + t63447 + t63450;
  t63465 = -1.*t19630*t1853*t2405;
  t63467 = 3.e-6*t3051*t3272;
  t63480 = t54611 + t63465 + t63467;
  t63491 = -1.*t3051*t25470;
  t63494 = -1.*t545*t1853*t3272;
  t63496 = -3.e-6*t1853*t2405*t3272;
  t63619 = t63491 + t63494 + t63496;
  t63790 = 3.e-6*t663*t1853;
  t63792 = -3.e-6*t3051*t545*t3272;
  t63804 = -9.e-12*t3051*t2405*t3272;
  t63806 = t63790 + t63792 + t63804;
  t63781 = -1.*t663*t1853;
  t63785 = t63781 + t58308 + t58312;
  t63832 = t3051*t545*t663;
  t63834 = 3.e-6*t3051*t663*t2405;
  t63838 = 1.000000000009*t1853*t3272;
  t63841 = t63832 + t63834 + t63838;
  t63445 = 0.2000000000018*t3051*t3272;
  t64021 = t59647 + t60248 + t63450;
  t64082 = -3.e-6*t545*t663*t1853;
  t64084 = -9.e-12*t663*t1853*t2405;
  t64172 = t64082 + t64084 + t63467;
  t64178 = -1.000000000009*t3051*t663;
  t64261 = t64178 + t63494 + t63496;
  t63760 = 0.2000000000018*t663*t1853;
  t63773 = -0.2000000000018*t3051*t545*t3272;
  t63778 = -6.000000000054e-7*t3051*t2405*t3272;
  t63789 = t63785*t19527;
  t63814 = t63806*t23519;
  t63816 = t31451*t63806;
  t63817 = t63785*t31475;
  t63844 = t63841*t31136;
  t63847 = t63816 + t63817 + t63844;
  t63849 = 0.100001*t63847;
  t63854 = t24492*t63785;
  t63856 = t63841*t30596;
  t63863 = t63806*t31136;
  t63866 = t63854 + t63856 + t63863;
  t63867 = 0.2*t63866;
  t63870 = t63841*t39663;
  t63871 = t24492*t63841;
  t63872 = t63806*t31475;
  t63874 = t63785*t39679;
  t63886 = t63871 + t63872 + t63874;
  t63889 = -0.3*t63886;
  t63897 = t63760 + t63773 + t63778 + t63789 + t63814 + t63849 + t63867 + t63870 + t63889;
  t64777 = -9.e-12*t545*t1853*t3272;
  t64805 = t64777 + t29449;
  t64817 = 3.e-6*t545*t663*t1853;
  t64818 = -1.*t663*t1853*t2405;
  t64966 = t64817 + t64818;
  t62904 = -6.000000000054e-7*t3051*t545*t1823;
  t62908 = 0.2000000000018*t3051*t1823*t2405;
  t62963 = t62962*t19527;
  t62972 = t62971*t23519;
  t62973 = t24492*t62962;
  t62978 = t62976*t30596;
  t62980 = t62971*t31136;
  t62981 = t62973 + t62978 + t62980;
  t62982 = 0.2*t62981;
  t63312 = t31451*t62971;
  t63316 = t62962*t31475;
  t63317 = t62976*t31136;
  t63397 = t63312 + t63316 + t63317;
  t63400 = 0.100001*t63397;
  t63401 = t62976*t39663;
  t63405 = t24492*t62976;
  t63409 = t62971*t31475;
  t63410 = t62962*t39679;
  t63417 = t63405 + t63409 + t63410;
  t63420 = -0.3*t63417;
  t63423 = t62904 + t62908 + t62963 + t62972 + t62982 + t63400 + t63401 + t63420;
  t63434 = 0.2000000000018*t545*t1823*t1853;
  t63437 = 6.000000000054e-7*t1823*t1853*t2405;
  t65458 = t59647 + t63447;
  t65460 = t54611 + t63465;
  t65467 = t63494 + t63496;
  t64692 = -6.000000000054e-7*t545*t1853*t3272;
  t64735 = 0.2000000000018*t1853*t2405*t3272;
  t64753 = t56333*t19527;
  t64806 = t64805*t23519;
  t64811 = t31451*t64805;
  t64816 = t56333*t31475;
  t64967 = t64966*t31136;
  t64969 = t64811 + t64816 + t64967;
  t65026 = 0.100001*t64969;
  t65027 = t64966*t30596;
  t65036 = t64805*t31136;
  t65041 = t56533 + t65027 + t65036;
  t65051 = 0.2*t65041;
  t65058 = t64966*t39663;
  t65108 = t24492*t64966;
  t65131 = t64805*t31475;
  t65132 = t56333*t39679;
  t65141 = t65108 + t65131 + t65132;
  t65146 = -0.3*t65141;
  t65149 = t64692 + t64735 + t64753 + t64806 + t65026 + t65051 + t65058 + t65146;
  t62230 = t58272*t40914;
  t62234 = t58322*t44589;
  t62238 = t58203*t48451;
  t62243 = t58322*t49749;
  t62252 = t58272*t49059;
  t62255 = -1.000000000009*t58203*t4228;
  t62264 = t62243 + t62252 + t62255;
  t62268 = 0.2*t62264;
  t62269 = t58203*t48982;
  t62270 = t58322*t49059;
  t62449 = -1.8e-11*t58272*t4228;
  t62567 = t62269 + t62270 + t62449;
  t62576 = 0.100001*t62567;
  t62580 = t58203*t49958;
  t62698 = t58272*t48982;
  t62800 = -1.000000000009*t58322*t4228;
  t62859 = t62580 + t62698 + t62800;
  t62867 = -0.3*t62859;
  t62872 = t62230 + t62234 + t62238 + t62268 + t62576 + t62867;
  t65165 = t55806*t40914;
  t65170 = t56333*t44589;
  t65171 = t54621*t48451;
  t65179 = t54621*t48982;
  t65195 = t56333*t49059;
  t65198 = -1.8e-11*t55806*t4228;
  t65201 = t65179 + t65195 + t65198;
  t65202 = 0.100001*t65201;
  t65344 = t56333*t49749;
  t65349 = t55806*t49059;
  t65351 = -1.000000000009*t54621*t4228;
  t65426 = t65344 + t65349 + t65351;
  t65430 = 0.2*t65426;
  t65431 = t54621*t49958;
  t65433 = t55806*t48982;
  t65444 = -1.000000000009*t56333*t4228;
  t65447 = t65431 + t65433 + t65444;
  t65454 = -0.3*t65447;
  t65455 = t65165 + t65170 + t65171 + t65202 + t65430 + t65454;
  t63905 = t59596*t40914;
  t63907 = t61100*t44589;
  t63908 = t59461*t48451;
  t63912 = t59461*t49958;
  t63921 = t59596*t48982;
  t63923 = -1.000000000009*t61100*t4228;
  t63933 = t63912 + t63921 + t63923;
  t63950 = -0.3*t63933;
  t63952 = t59461*t48982;
  t63972 = t61100*t49059;
  t63974 = -1.8e-11*t59596*t4228;
  t63983 = t63952 + t63972 + t63974;
  t63989 = 0.100001*t63983;
  t63992 = t61100*t49749;
  t63995 = t59596*t49059;
  t64000 = -1.000000000009*t59461*t4228;
  t64003 = t63992 + t63995 + t64000;
  t64006 = 0.2*t64003;
  t64008 = t63905 + t63907 + t63908 + t63950 + t63989 + t64006;
  t65596 = -9.e-12*t3877;
  t65679 = 9.e-12*t3877;
  t65789 = -1.*t3051*t663*t2405;
  t65791 = t58225 + t65789;
  t65794 = -1.*t3051*t545*t19630;
  t65795 = -3.e-6*t3051*t1823*t2405;
  t65796 = t65794 + t65795;
  t65800 = t3051*t2405*t3272;
  t65801 = t63792 + t65800;
  t65837 = t65796*t40914;
  t65838 = t65801*t44589;
  t65840 = t65791*t48451;
  t65843 = t65791*t48982;
  t65844 = t65801*t49059;
  t65845 = -1.8e-11*t65796*t4228;
  t65846 = t65843 + t65844 + t65845;
  t65848 = 0.100001*t65846;
  t65850 = t65801*t49749;
  t65851 = t65796*t49059;
  t65852 = -1.000000000009*t65791*t4228;
  t65853 = t65850 + t65851 + t65852;
  t65854 = 0.2*t65853;
  t65857 = t65791*t49958;
  t65858 = t65796*t48982;
  t65861 = -1.000000000009*t65801*t4228;
  t65862 = t65857 + t65858 + t65861;
  t65866 = -0.3*t65862;
  t65868 = t65837 + t65838 + t65840 + t65848 + t65854 + t65866;
  t65874 = t58159 + t58179;
  t65881 = t58225 + t58258;
  t65886 = t58308 + t58312;
  t65877 = t65874*t19527;
  t65883 = t65881*t23519;
  t65884 = t24492*t65874;
  t65887 = t65886*t30596;
  t65891 = t65881*t31136;
  t65892 = t65884 + t65887 + t65891;
  t65894 = 0.2*t65892;
  t65895 = t31451*t65881;
  t65897 = t65874*t31475;
  t65899 = t65886*t31136;
  t65900 = t65895 + t65897 + t65899;
  t65901 = 0.100001*t65900;
  t65903 = t65886*t39663;
  t65904 = t24492*t65886;
  t65906 = t65881*t31475;
  t65907 = t65874*t39679;
  t65909 = t65904 + t65906 + t65907;
  t65911 = -0.3*t65909;
  t65912 = t58133 + t58137 + t65877 + t65883 + t65894 + t65901 + t65903 + t65911;
  t65923 = 9.e-12*t3051*t545*t3272;
  t65926 = -3.e-6*t3051*t2405*t3272;
  t65928 = t65923 + t65926;
  t65825 = t24492*t65801;
  t65933 = -3.e-6*t3051*t545*t663;
  t65935 = t65933 + t62927;
  t65919 = 6.000000000054e-7*t3051*t545*t3272;
  t65921 = -0.2000000000018*t3051*t2405*t3272;
  t65922 = t65801*t19527;
  t65930 = t65928*t23519;
  t65931 = t31451*t65928;
  t65932 = t65801*t31475;
  t65937 = t65935*t31136;
  t65938 = t65931 + t65932 + t65937;
  t65939 = 0.100001*t65938;
  t65943 = t65935*t30596;
  t65944 = t65928*t31136;
  t65945 = t65825 + t65943 + t65944;
  t65947 = 0.2*t65945;
  t65949 = t65935*t39663;
  t65951 = t24492*t65935;
  t65952 = t65928*t31475;
  t65955 = t65801*t39679;
  t65956 = t65951 + t65952 + t65955;
  t65957 = -0.3*t65956;
  t65958 = t65919 + t65921 + t65922 + t65930 + t65939 + t65947 + t65949 + t65957;
  t63430 = var2[5]*t63423;
  t65459 = t65458*t19527;
  t65461 = t65460*t23519;
  t65462 = t24492*t65458;
  t65469 = t65467*t30596;
  t65470 = t65460*t31136;
  t65477 = t65462 + t65469 + t65470;
  t65480 = 0.2*t65477;
  t65481 = t31451*t65460;
  t65484 = t65458*t31475;
  t65486 = t65467*t31136;
  t65490 = t65481 + t65484 + t65486;
  t65497 = 0.100001*t65490;
  t65539 = t65467*t39663;
  t65549 = t24492*t65467;
  t65553 = t65460*t31475;
  t65555 = t65458*t39679;
  t65556 = t65549 + t65553 + t65555;
  t65558 = -0.3*t65556;
  t65565 = t63434 + t63437 + t65459 + t65461 + t65480 + t65497 + t65539 + t65558;
  t66002 = t63792 + t63804;
  t66008 = t63832 + t63834;
  t66135 = 9.e-12*t3051*t545*t663;
  t66136 = -3.e-6*t3051*t663*t2405;
  t66137 = t66135 + t66136;
  t65997 = t65886*t19527;
  t66003 = t66002*t23519;
  t66005 = t31451*t66002;
  t66006 = t65886*t31475;
  t66012 = t66008*t31136;
  t66013 = t66005 + t66006 + t66012;
  t66014 = 0.100001*t66013;
  t66015 = t66008*t30596;
  t66017 = t66002*t31136;
  t66018 = t65904 + t66015 + t66017;
  t66020 = 0.2*t66018;
  t66023 = t66008*t39663;
  t66024 = t24492*t66008;
  t66031 = t66002*t31475;
  t66033 = t65886*t39679;
  t66043 = t66024 + t66031 + t66033;
  t66048 = -0.3*t66043;
  t66049 = t63773 + t63778 + t65997 + t66003 + t66014 + t66020 + t66023 + t66048;
  t65456 = var2[8]*t65455;
  t65457 = var2[4]*t63423;
  t65573 = var2[5]*t65565;
  t65579 = var2[6]*t65149;
  t65582 = t65456 + t65457 + t65573 + t65579;
  t65961 = t65881*t40914;
  t65962 = t65886*t44589;
  t65964 = t65874*t48451;
  t65966 = t65874*t48982;
  t65968 = t65886*t49059;
  t65969 = -1.8e-11*t65881*t4228;
  t65971 = t65966 + t65968 + t65969;
  t65972 = 0.100001*t65971;
  t65973 = t65886*t49749;
  t65974 = t65881*t49059;
  t65979 = -1.000000000009*t65874*t4228;
  t65981 = t65973 + t65974 + t65979;
  t65982 = 0.2*t65981;
  t65986 = t65874*t49958;
  t65987 = t65881*t48982;
  t65989 = -1.000000000009*t65886*t4228;
  t65990 = t65986 + t65987 + t65989;
  t65991 = -0.3*t65990;
  t65992 = t65961 + t65962 + t65964 + t65972 + t65982 + t65991;
  t66068 = t65928*t40914;
  t66069 = t65935*t44589;
  t66077 = t65801*t48451;
  t66078 = t65801*t49958;
  t66079 = t65928*t48982;
  t66080 = -1.000000000009*t65935*t4228;
  t66083 = t66078 + t66079 + t66080;
  t66084 = -0.3*t66083;
  t66086 = t65801*t48982;
  t66087 = t65935*t49059;
  t66090 = -1.8e-11*t65928*t4228;
  t66097 = t66086 + t66087 + t66090;
  t66098 = 0.100001*t66097;
  t66105 = t65935*t49749;
  t66111 = t65928*t49059;
  t66113 = t66105 + t66111 + t65861;
  t66119 = 0.2*t66113;
  t66120 = t66068 + t66069 + t66077 + t66084 + t66098 + t66119;
  t65595 = 0.1000000000009*t3877;
  t65598 = t65596 + t12146;
  t65602 = 0.2*t65598;
  t65604 = -9.e-7*t48982;
  t65607 = t65595 + t65602 + t65604;
  t65621 = -1.62e-17*t3877;
  t65630 = 0.1*t39825;
  t65642 = 0.2*t48982;
  t65665 = t65621 + t65630 + t65642;
  t65686 = t65679 + t12146;
  t65758 = 0.2000000000018*t3877;
  t65762 = t65596 + t4228;
  t65763 = 0.1*t65762;
  t65764 = t65758 + t41442 + t65763;
  t65775 = t65679 + t4228;
  t66277 = -3.e-6*t663*t1853;
  t66278 = 9.e-12*t3051*t2405*t3272;
  t66282 = t66277 + t62974 + t66278;
  t66272 = t663*t1853;
  t66274 = -1.*t3051*t545*t3272;
  t66275 = t66272 + t66274 + t65926;
  t66286 = -1.000000000009*t1853*t3272;
  t66287 = t58159 + t66136 + t66286;
  t66307 = t66282*t40914;
  t66308 = t66287*t44589;
  t66309 = t66275*t48451;
  t66310 = t66275*t49958;
  t66312 = t66282*t48982;
  t66313 = -1.000000000009*t66287*t4228;
  t66318 = t66310 + t66312 + t66313;
  t66320 = -0.3*t66318;
  t66321 = t66287*t49749;
  t66322 = t66282*t49059;
  t66323 = -1.000000000009*t66275*t4228;
  t66327 = t66321 + t66322 + t66323;
  t66329 = 0.2*t66327;
  t66330 = t66275*t48982;
  t66331 = t66287*t49059;
  t66342 = -1.8e-11*t66282*t4228;
  t66344 = t66330 + t66331 + t66342;
  t66351 = 0.100001*t66344;
  t66352 = t66307 + t66308 + t66309 + t66320 + t66329 + t66351;
  t66368 = t58159 + t66136 + t58197;
  t66370 = 3.e-6*t3051*t545*t663;
  t66371 = 9.e-12*t3051*t663*t2405;
  t66375 = t66370 + t66371 + t58271;
  t66386 = -1.000000000009*t663*t1853;
  t66387 = t66386 + t58308 + t58312;
  t66362 = 0.2000000000018*t3051*t545*t663;
  t66364 = 6.000000000054e-7*t3051*t663*t2405;
  t66369 = t66368*t19527;
  t66378 = t66375*t23519;
  t66385 = t24492*t66368;
  t66388 = t66387*t30596;
  t66391 = t66375*t31136;
  t66392 = t66385 + t66388 + t66391;
  t66393 = 0.2*t66392;
  t66394 = t31451*t66375;
  t66395 = t66368*t31475;
  t66396 = t66387*t31136;
  t66404 = t66394 + t66395 + t66396;
  t66412 = 0.100001*t66404;
  t66413 = t66387*t39663;
  t66415 = t24492*t66387;
  t66423 = t66375*t31475;
  t66430 = t66368*t39679;
  t66432 = t66415 + t66423 + t66430;
  t66433 = -0.3*t66432;
  t66435 = t66362 + t66364 + t58148 + t66369 + t66378 + t66393 + t66412 + t66413 + t66433;
  t66125 = 6.000000000054e-7*t3051*t545*t663;
  t66133 = -0.2000000000018*t3051*t663*t2405;
  t66134 = t65935*t19527;
  t66138 = t66137*t23519;
  t66140 = t66137*t31136;
  t66145 = t65951 + t62978 + t66140;
  t66146 = 0.2*t66145;
  t66147 = t31451*t66137;
  t66148 = t65935*t31475;
  t66150 = t66147 + t66148 + t63317;
  t66151 = 0.100001*t66150;
  t66152 = t66137*t31475;
  t66153 = t65935*t39679;
  t66154 = t63405 + t66152 + t66153;
  t66155 = -0.3*t66154;
  t66157 = t66125 + t66133 + t66134 + t66138 + t66146 + t66151 + t63401 + t66155;
  t64014 = -0.2000000000018*t545*t663*t1853;
  t64016 = -6.000000000054e-7*t663*t1853*t2405;
  t64023 = t64021*t19527;
  t64173 = t64172*t23519;
  t64176 = t24492*t64021;
  t64265 = t64261*t30596;
  t64388 = t64172*t31136;
  t64389 = t64176 + t64265 + t64388;
  t64439 = 0.2*t64389;
  t64654 = t31451*t64172;
  t64655 = t64021*t31475;
  t64656 = t64261*t31136;
  t64660 = t64654 + t64655 + t64656;
  t64669 = 0.100001*t64660;
  t64670 = t64261*t39663;
  t64674 = t24492*t64261;
  t64676 = t64172*t31475;
  t64678 = t64021*t39679;
  t64679 = t64674 + t64676 + t64678;
  t64680 = -0.3*t64679;
  t64681 = t64014 + t64016 + t63445 + t64023 + t64173 + t64439 + t64669 + t64670 + t64680;
  t63900 = var2[6]*t63897;
  t66121 = var2[8]*t66120;
  t66159 = var2[6]*t66157;
  t66160 = var2[5]*t66049;
  t66162 = var2[4]*t65149;
  t66165 = t66121 + t66159 + t66160 + t66162;
  t64009 = var2[8]*t64008;
  t64683 = var2[6]*t64681;
  t64687 = var2[4]*t63897;
  t65155 = var2[5]*t65149;
  t65160 = t64009 + t64683 + t64687 + t65155;
  t66452 = t66375*t40914;
  t66457 = t66387*t44589;
  t66458 = t66368*t48451;
  t66461 = t66387*t49749;
  t66462 = t66375*t49059;
  t66464 = -1.000000000009*t66368*t4228;
  t66476 = t66461 + t66462 + t66464;
  t66477 = 0.2*t66476;
  t66478 = t66368*t48982;
  t66479 = t66387*t49059;
  t66483 = -1.8e-11*t66375*t4228;
  t66484 = t66478 + t66479 + t66483;
  t66485 = 0.100001*t66484;
  t66491 = t66368*t49958;
  t66492 = t66375*t48982;
  t66493 = -1.000000000009*t66387*t4228;
  t66494 = t66491 + t66492 + t66493;
  t66496 = -0.3*t66494;
  t66497 = t66452 + t66457 + t66458 + t66477 + t66485 + t66496;
  t66652 = t1853*t3272;
  t66653 = t63832 + t65795 + t66652;
  t66628 = t25470*t1853;
  t66633 = t66628 + t66274 + t65926;
  t66556 = -1.*t3051*t19630*t2405;
  t66614 = -3.e-6*t1853*t3272;
  t66616 = t62924 + t66556 + t66614;
  t66674 = t66616*t49059;
  t66710 = t66633*t65607;
  t66711 = t66616*t65665;
  t66723 = -1.000000000009*t3877*t66633;
  t66724 = t66653*t65686;
  t66725 = t66723 + t66724 + t66674;
  t66726 = -0.3*t66725;
  t66727 = -1.8e-11*t3877*t66616;
  t66728 = t66633*t40123;
  t66752 = t66653*t49059;
  t66758 = t66727 + t66728 + t66752;
  t66776 = 0.100001*t66758;
  t66778 = t66653*t65764;
  t66779 = -1.000000000009*t3877*t66653;
  t66780 = t66616*t40123;
  t66781 = t66633*t65775;
  t66783 = t66779 + t66780 + t66781;
  t66785 = 0.2*t66783;
  t66786 = t66710 + t66711 + t66726 + t66776 + t66778 + t66785;
  t66506 = var2[6]*t66497;
  t66508 = var2[5]*t66120;
  t66509 = var2[4]*t64008;
  t66510 = t66287*t65607;
  t66511 = t66282*t65665;
  t66514 = -1.8e-11*t3877*t66282;
  t66515 = t66287*t40123;
  t66516 = t66275*t49059;
  t66517 = t66514 + t66515 + t66516;
  t66518 = 0.100001*t66517;
  t66519 = -1.000000000009*t3877*t66287;
  t66520 = t66275*t65686;
  t66521 = t66519 + t66520 + t66322;
  t66522 = -0.3*t66521;
  t66523 = t66275*t65764;
  t66524 = -1.000000000009*t3877*t66275;
  t66525 = t66282*t40123;
  t66526 = t66287*t65775;
  t66528 = t66524 + t66525 + t66526;
  t66544 = 0.2*t66528;
  t66548 = t66510 + t66511 + t66518 + t66522 + t66523 + t66544;
  t66549 = var2[8]*t66548;
  t66550 = t66506 + t66508 + t66509 + t66549;
  t66170 = var2[5]*t65992;
  t66172 = var2[6]*t66120;
  t66173 = var2[4]*t65455;
  t66177 = t65801*t65607;
  t66178 = t65796*t65665;
  t66179 = -1.000000000009*t3877*t65801;
  t66182 = t65791*t65686;
  t66186 = t66179 + t66182 + t65851;
  t66190 = -0.3*t66186;
  t66191 = -1.8e-11*t3877*t65796;
  t66192 = t65801*t40123;
  t66195 = t65791*t49059;
  t66200 = t66191 + t66192 + t66195;
  t66207 = 0.100001*t66200;
  t66210 = t65791*t65764;
  t66212 = -1.000000000009*t3877*t65791;
  t66213 = t65796*t40123;
  t66214 = t65801*t65775;
  t66221 = t66212 + t66213 + t66214;
  t66227 = 0.2*t66221;
  t66231 = t66177 + t66178 + t66190 + t66207 + t66210 + t66227;
  t66234 = var2[8]*t66231;
  t66239 = t66170 + t66172 + t66173 + t66234;
  t65620 = t30092*t65607;
  t65667 = t19769*t65665;
  t65669 = -1.000000000009*t3877*t30092;
  t65687 = t3682*t65686;
  t65688 = t65669 + t65687 + t49896;
  t65689 = -0.3*t65688;
  t65690 = -1.8e-11*t3877*t19769;
  t65691 = t30092*t40123;
  t65692 = t3682*t49059;
  t65732 = t65690 + t65691 + t65692;
  t65756 = 0.100001*t65732;
  t65765 = t3682*t65764;
  t65768 = -1.000000000009*t3877*t3682;
  t65769 = t19769*t40123;
  t65776 = t30092*t65775;
  t65777 = t65768 + t65769 + t65776;
  t65779 = 0.2*t65777;
  t65780 = t65620 + t65667 + t65689 + t65756 + t65765 + t65779;
  t65584 = var2[4]*t62872;
  t65589 = var2[5]*t65455;
  t65590 = var2[6]*t64008;
  t65781 = var2[8]*t65780;
  t65784 = t65584 + t65589 + t65590 + t65781;
  t2062 = -0.2000000000018*t545*t1823*t1853;
  t2449 = -6.000000000054e-7*t1823*t1853*t2405;
  t3533 = -0.2000000000018*t3051*t3272;
  t19546 = t3682*t19527;
  t23686 = t19769*t23519;
  t24921 = t24492*t3682;
  t31006 = t30092*t30596;
  t31173 = t19769*t31136;
  t31252 = t24921 + t31006 + t31173;
  t31359 = 0.2*t31252;
  t31458 = t31451*t19769;
  t31659 = t3682*t31475;
  t32403 = t30092*t31136;
  t36494 = t31458 + t31659 + t32403;
  t38209 = 0.100001*t36494;
  t39676 = t30092*t39663;
  t39677 = t24492*t30092;
  t39678 = t19769*t31475;
  t39685 = t3682*t39679;
  t39689 = t39677 + t39678 + t39685;
  t39690 = -0.3*t39689;
  t65787 = 6.000000000054e-7*t3051*t545*t1823;
  t65788 = -0.2000000000018*t3051*t1823*t2405;
  t65792 = t65791*t19527;
  t65797 = t65796*t23519;
  t65799 = t24492*t65791;
  t65802 = t65801*t30596;
  t65808 = t65796*t31136;
  t65809 = t65799 + t65802 + t65808;
  t65810 = 0.2*t65809;
  t65812 = t31451*t65796;
  t65813 = t65791*t31475;
  t65816 = t65801*t31136;
  t65817 = t65812 + t65813 + t65816;
  t65823 = 0.100001*t65817;
  t65824 = t65801*t39663;
  t65826 = t65796*t31475;
  t65827 = t65791*t39679;
  t65832 = t65825 + t65826 + t65827;
  t65834 = -0.3*t65832;
  t66264 = -0.2000000000018*t663*t1853;
  t66265 = 0.2000000000018*t3051*t545*t3272;
  t66270 = 6.000000000054e-7*t3051*t2405*t3272;
  t66276 = t66275*t19527;
  t66283 = t66282*t23519;
  t66284 = t31451*t66282;
  t66285 = t66275*t31475;
  t66288 = t66287*t31136;
  t66289 = t66284 + t66285 + t66288;
  t66292 = 0.100001*t66289;
  t66294 = t24492*t66275;
  t66295 = t66287*t30596;
  t66296 = t66282*t31136;
  t66297 = t66294 + t66295 + t66296;
  t66298 = 0.2*t66297;
  t66299 = t66287*t39663;
  t66302 = t24492*t66287;
  t66303 = t66282*t31475;
  t66304 = t66275*t39679;
  t66305 = t66302 + t66303 + t66304;
  t66306 = -0.3*t66305;
  t66624 = t66616*t40914;
  t66638 = t66633*t44589;
  t66654 = t66653*t48451;
  t66656 = t66653*t48982;
  t66657 = t66633*t49059;
  t66659 = -1.8e-11*t66616*t4228;
  t66670 = t66656 + t66657 + t66659;
  t66671 = 0.100001*t66670;
  t66673 = t66633*t49749;
  t66678 = -1.000000000009*t66653*t4228;
  t66679 = t66673 + t66674 + t66678;
  t66680 = 0.2*t66679;
  t66681 = t66653*t49958;
  t66685 = t66616*t48982;
  t66686 = -1.000000000009*t66633*t4228;
  t66691 = t66681 + t66685 + t66686;
  t66692 = -0.3*t66691;
  t66927 = Sin(var1[3]);
  t66922 = Cos(var1[3]);
  t66923 = t66922*t545*t1853;
  t66928 = -1.*t66927*t2405;
  t66929 = t66923 + t66928;
  t66937 = -1.*t545*t66927;
  t66945 = -1.*t66922*t1853*t2405;
  t66946 = t66937 + t66945;
  t66949 = t663*t66929;
  t66951 = 3.e-6*t1823*t66946;
  t66952 = -1.*t66922*t3051*t3272;
  t66953 = t66949 + t66951 + t66952;
  t66958 = 3.e-6*t1823*t66929;
  t66960 = t19630*t66946;
  t66961 = 3.e-6*t66922*t3051*t3272;
  t66962 = t66958 + t66960 + t66961;
  t66966 = -1.*t66922*t3051*t25470;
  t66970 = -1.*t66929*t3272;
  t66973 = 3.e-6*t66946*t3272;
  t66974 = t66966 + t66970 + t66973;
  t67004 = t66962*t40914;
  t67008 = t66974*t44589;
  t67009 = t66953*t48451;
  t67011 = t66974*t49749;
  t67016 = t66962*t49059;
  t67018 = -1.000000000009*t66953*t4228;
  t67019 = t67011 + t67016 + t67018;
  t67022 = 0.2*t67019;
  t67023 = t66953*t48982;
  t67024 = t66974*t49059;
  t67025 = -1.8e-11*t66962*t4228;
  t67026 = t67023 + t67024 + t67025;
  t67029 = 0.100001*t67026;
  t67030 = t66953*t49958;
  t67031 = t66962*t48982;
  t67032 = -1.000000000009*t66974*t4228;
  t67033 = t67030 + t67031 + t67032;
  t67036 = -0.3*t67033;
  t67043 = t67004 + t67008 + t67009 + t67022 + t67029 + t67036;
  t67048 = -1.*t66922*t545*t1853;
  t67051 = t66927*t2405;
  t67071 = t67048 + t67051;
  t67076 = 3.e-6*t1823*t67071;
  t67078 = t663*t66946;
  t67080 = t67076 + t67078;
  t67082 = t19630*t67071;
  t67083 = t67082 + t66951;
  t67086 = 3.e-6*t67071*t3272;
  t67087 = -1.*t66946*t3272;
  t67088 = t67086 + t67087;
  t67073 = -6.000000000054e-7*t1823*t67071;
  t67075 = 0.2000000000018*t1823*t66946;
  t67081 = t67080*t19527;
  t67084 = t67083*t23519;
  t67085 = t24492*t67080;
  t67090 = t67088*t30596;
  t67091 = t67083*t31136;
  t67092 = t67085 + t67090 + t67091;
  t67093 = 0.2*t67092;
  t67094 = t31451*t67083;
  t67095 = t67080*t31475;
  t67096 = t67088*t31136;
  t67097 = t67094 + t67095 + t67096;
  t67098 = 0.100001*t67097;
  t67099 = t67088*t39663;
  t67100 = t24492*t67088;
  t67102 = t67083*t31475;
  t67103 = t67080*t39679;
  t67104 = t67100 + t67102 + t67103;
  t67105 = -0.3*t67104;
  t67106 = t67073 + t67075 + t67081 + t67084 + t67093 + t67098 + t67099 + t67105;
  t67111 = -1.*t545*t66927*t1853;
  t67112 = -1.*t66922*t2405;
  t67113 = t67111 + t67112;
  t67116 = -1.*t66922*t545;
  t67117 = t66927*t1853*t2405;
  t67119 = t67116 + t67117;
  t67123 = t663*t67113;
  t67124 = 3.e-6*t1823*t67119;
  t67126 = t3051*t66927*t3272;
  t67129 = t67123 + t67124 + t67126;
  t67131 = 3.e-6*t1823*t67113;
  t67133 = t19630*t67119;
  t67134 = -3.e-6*t3051*t66927*t3272;
  t67135 = t67131 + t67133 + t67134;
  t67142 = t3051*t25470*t66927;
  t67152 = -1.*t67113*t3272;
  t67167 = 3.e-6*t67119*t3272;
  t67170 = t67142 + t67152 + t67167;
  t67115 = 0.2000000000018*t1823*t67113;
  t67120 = -6.000000000054e-7*t1823*t67119;
  t67121 = -0.2000000000018*t3051*t66927*t3272;
  t67130 = t67129*t19527;
  t67138 = t67135*t23519;
  t67139 = t24492*t67129;
  t67171 = t67170*t30596;
  t67172 = t67135*t31136;
  t67173 = t67139 + t67171 + t67172;
  t67175 = 0.2*t67173;
  t67178 = t31451*t67135;
  t67179 = t67129*t31475;
  t67180 = t67170*t31136;
  t67182 = t67178 + t67179 + t67180;
  t67183 = 0.100001*t67182;
  t67187 = t67170*t39663;
  t67196 = t24492*t67170;
  t67197 = t67135*t31475;
  t67205 = t67129*t39679;
  t67206 = t67196 + t67197 + t67205;
  t67207 = -0.3*t67206;
  t67221 = t67115 + t67120 + t67121 + t67130 + t67138 + t67175 + t67183 + t67187 + t67207;
  t67236 = t66922*t3051*t545*t663;
  t67240 = -3.e-6*t66922*t3051*t1823*t2405;
  t67247 = t66922*t1853*t3272;
  t67254 = t67236 + t67240 + t67247;
  t67257 = 3.e-6*t66922*t3051*t545*t1823;
  t67259 = -1.*t66922*t3051*t19630*t2405;
  t67262 = -3.e-6*t66922*t1853*t3272;
  t67268 = t67257 + t67259 + t67262;
  t67280 = t66922*t25470*t1853;
  t67282 = -1.*t66922*t3051*t545*t3272;
  t67283 = -3.e-6*t66922*t3051*t2405*t3272;
  t67285 = t67280 + t67282 + t67283;
  t67233 = 0.2000000000018*t66922*t3051*t545*t1823;
  t67234 = 6.000000000054e-7*t66922*t3051*t1823*t2405;
  t67235 = -0.2000000000018*t66922*t1853*t3272;
  t67256 = t67254*t19527;
  t67270 = t67268*t23519;
  t67277 = t24492*t67254;
  t67291 = t67285*t30596;
  t67293 = t67268*t31136;
  t67294 = t67277 + t67291 + t67293;
  t67295 = 0.2*t67294;
  t67296 = t31451*t67268;
  t67297 = t67254*t31475;
  t67298 = t67285*t31136;
  t67301 = t67296 + t67297 + t67298;
  t67302 = 0.100001*t67301;
  t67303 = t67285*t39663;
  t67304 = t24492*t67285;
  t67305 = t67268*t31475;
  t67306 = t67254*t39679;
  t67307 = t67304 + t67305 + t67306;
  t67308 = -0.3*t67307;
  t67309 = t67233 + t67234 + t67235 + t67256 + t67270 + t67295 + t67302 + t67303 + t67308;
  t67327 = 3.e-6*t66922*t3051*t663;
  t67330 = 3.e-6*t66929*t3272;
  t67331 = -9.e-12*t66946*t3272;
  t67332 = t67327 + t67330 + t67331;
  t67315 = -1.*t66922*t3051*t663;
  t67317 = t67315 + t66970 + t66973;
  t67343 = -1.*t663*t66929;
  t67344 = 3.e-6*t663*t66946;
  t67347 = 1.000000000009*t66922*t3051*t3272;
  t67351 = t67343 + t67344 + t67347;
  t67312 = 0.2000000000018*t66922*t3051*t663;
  t67313 = 0.2000000000018*t66929*t3272;
  t67314 = -6.000000000054e-7*t66946*t3272;
  t67325 = t67317*t19527;
  t67334 = t67332*t23519;
  t67335 = t31451*t67332;
  t67338 = t67317*t31475;
  t67354 = t67351*t31136;
  t67357 = t67335 + t67338 + t67354;
  t67376 = 0.100001*t67357;
  t67379 = t24492*t67317;
  t67382 = t67351*t30596;
  t67394 = t67332*t31136;
  t67397 = t67379 + t67382 + t67394;
  t67407 = 0.2*t67397;
  t67409 = t67351*t39663;
  t67410 = t24492*t67351;
  t67417 = t67332*t31475;
  t67418 = t67317*t39679;
  t67419 = t67410 + t67417 + t67418;
  t67420 = -0.3*t67419;
  t67422 = t67312 + t67313 + t67314 + t67325 + t67334 + t67376 + t67407 + t67409 + t67420;
  t67491 = -3.e-6*t66922*t3051*t545*t1823;
  t67495 = -1.*t66922*t3051*t663*t2405;
  t67497 = t67491 + t67495;
  t67503 = -1.*t66922*t3051*t545*t19630;
  t67505 = t67503 + t67240;
  t67511 = -3.e-6*t66922*t3051*t545*t3272;
  t67512 = t66922*t3051*t2405*t3272;
  t67521 = t67511 + t67512;
  t67566 = -1.*t66922*t545*t663*t1853;
  t67567 = 3.e-6*t66922*t1823*t1853*t2405;
  t67569 = t66922*t3051*t3272;
  t67570 = t67566 + t67567 + t67569;
  t67572 = -3.e-6*t66922*t545*t1823*t1853;
  t67573 = t66922*t19630*t1853*t2405;
  t67574 = -3.e-6*t66922*t3051*t3272;
  t67576 = t67572 + t67573 + t67574;
  t67579 = t66922*t3051*t25470;
  t67580 = t66922*t545*t1853*t3272;
  t67581 = 3.e-6*t66922*t1853*t2405*t3272;
  t67582 = t67579 + t67580 + t67581;
  t67610 = -1.*t3051*t545*t663*t66927;
  t67612 = 3.e-6*t3051*t1823*t66927*t2405;
  t67614 = -1.*t66927*t1853*t3272;
  t67615 = t67610 + t67612 + t67614;
  t67617 = -3.e-6*t3051*t545*t1823*t66927;
  t67621 = t3051*t19630*t66927*t2405;
  t67622 = 3.e-6*t66927*t1853*t3272;
  t67623 = t67617 + t67621 + t67622;
  t67628 = -1.*t25470*t66927*t1853;
  t67629 = t3051*t545*t66927*t3272;
  t67632 = 3.e-6*t3051*t66927*t2405*t3272;
  t67633 = t67628 + t67629 + t67632;
  t67709 = -3.e-6*t66922*t663*t1853;
  t67710 = 3.e-6*t66922*t3051*t545*t3272;
  t67711 = 9.e-12*t66922*t3051*t2405*t3272;
  t67712 = t67709 + t67710 + t67711;
  t67706 = t66922*t663*t1853;
  t67707 = t67706 + t67282 + t67283;
  t67717 = -1.*t66922*t3051*t545*t663;
  t67718 = -3.e-6*t66922*t3051*t663*t2405;
  t67719 = -1.000000000009*t66922*t1853*t3272;
  t67721 = t67717 + t67718 + t67719;
  t67468 = 6.000000000054e-7*t66922*t3051*t545*t1823;
  t67474 = -0.2000000000018*t66922*t3051*t1823*t2405;
  t67499 = t67497*t19527;
  t67509 = t67505*t23519;
  t67510 = t24492*t67497;
  t67522 = t67521*t30596;
  t67523 = t67505*t31136;
  t67524 = t67510 + t67522 + t67523;
  t67525 = 0.2*t67524;
  t67526 = t31451*t67505;
  t67528 = t67497*t31475;
  t67529 = t67521*t31136;
  t67531 = t67526 + t67528 + t67529;
  t67533 = 0.100001*t67531;
  t67534 = t67521*t39663;
  t67535 = t24492*t67521;
  t67536 = t67505*t31475;
  t67538 = t67497*t39679;
  t67539 = t67535 + t67536 + t67538;
  t67542 = -0.3*t67539;
  t67552 = t67468 + t67474 + t67499 + t67509 + t67525 + t67533 + t67534 + t67542;
  t67789 = t545*t66927;
  t67790 = t66922*t1853*t2405;
  t67792 = t67789 + t67790;
  t67794 = t663*t67071;
  t67796 = 3.e-6*t1823*t67792;
  t67797 = t67794 + t67796;
  t67804 = t19630*t67792;
  t67805 = t67076 + t67804;
  t67810 = -1.*t67071*t3272;
  t67811 = 3.e-6*t67792*t3272;
  t67814 = t67810 + t67811;
  t67846 = t545*t66927*t1853;
  t67847 = t66922*t2405;
  t67848 = t67846 + t67847;
  t67853 = 3.e-6*t1823*t67848;
  t67854 = t663*t67119;
  t67857 = t67853 + t67854;
  t67859 = t19630*t67848;
  t67861 = t67859 + t67124;
  t67864 = 3.e-6*t67848*t3272;
  t67865 = -1.*t67119*t3272;
  t67866 = t67864 + t67865;
  t67891 = -9.e-12*t67071*t3272;
  t67892 = t67891 + t66973;
  t67896 = 3.e-6*t663*t67071;
  t67898 = -1.*t663*t66946;
  t67899 = t67896 + t67898;
  t67564 = -0.2000000000018*t66922*t3051*t3272;
  t67962 = t67343 + t67344 + t67569;
  t67969 = 3.e-6*t663*t66929;
  t67970 = -9.e-12*t663*t66946;
  t67971 = t67969 + t67970 + t67574;
  t67977 = 1.000000000009*t66922*t3051*t663;
  t67978 = t66929*t3272;
  t67982 = -3.e-6*t66946*t3272;
  t67983 = t67977 + t67978 + t67982;
  t67701 = -0.2000000000018*t66922*t663*t1853;
  t67702 = 0.2000000000018*t66922*t3051*t545*t3272;
  t67705 = 6.000000000054e-7*t66922*t3051*t2405*t3272;
  t67708 = t67707*t19527;
  t67713 = t67712*t23519;
  t67715 = t31451*t67712;
  t67716 = t67707*t31475;
  t67722 = t67721*t31136;
  t67723 = t67715 + t67716 + t67722;
  t67724 = 0.100001*t67723;
  t67725 = t24492*t67707;
  t67726 = t67721*t30596;
  t67727 = t67712*t31136;
  t67729 = t67725 + t67726 + t67727;
  t67730 = 0.2*t67729;
  t67731 = t67721*t39663;
  t67732 = t24492*t67721;
  t67733 = t67712*t31475;
  t67734 = t67707*t39679;
  t67735 = t67732 + t67733 + t67734;
  t67736 = -0.3*t67735;
  t67737 = t67701 + t67702 + t67705 + t67708 + t67713 + t67724 + t67730 + t67731 + t67736;
  t67888 = -6.000000000054e-7*t67071*t3272;
  t67889 = 0.2000000000018*t66946*t3272;
  t67890 = t67088*t19527;
  t67893 = t67892*t23519;
  t67894 = t31451*t67892;
  t67895 = t67088*t31475;
  t67901 = t67899*t31136;
  t67905 = t67894 + t67895 + t67901;
  t67906 = 0.100001*t67905;
  t67907 = t67899*t30596;
  t67908 = t67892*t31136;
  t67909 = t67100 + t67907 + t67908;
  t67910 = 0.2*t67909;
  t67911 = t67899*t39663;
  t67912 = t24492*t67899;
  t67914 = t67892*t31475;
  t67915 = t67088*t39679;
  t67916 = t67912 + t67914 + t67915;
  t67917 = -0.3*t67916;
  t67920 = t67888 + t67889 + t67890 + t67893 + t67906 + t67910 + t67911 + t67917;
  t68014 = -3.e-6*t3051*t663*t66927;
  t68015 = 3.e-6*t67113*t3272;
  t68017 = -9.e-12*t67119*t3272;
  t68018 = t68014 + t68015 + t68017;
  t68009 = t3051*t663*t66927;
  t68012 = t68009 + t67152 + t67167;
  t68025 = -1.*t663*t67113;
  t68026 = 3.e-6*t663*t67119;
  t68027 = -1.000000000009*t3051*t66927*t3272;
  t68028 = t68025 + t68026 + t68027;
  t67850 = -6.000000000054e-7*t1823*t67848;
  t67851 = 0.2000000000018*t1823*t67119;
  t67858 = t67857*t19527;
  t67862 = t67861*t23519;
  t67863 = t24492*t67857;
  t67867 = t67866*t30596;
  t67868 = t67861*t31136;
  t67869 = t67863 + t67867 + t67868;
  t67870 = 0.2*t67869;
  t67874 = t31451*t67861;
  t67875 = t67857*t31475;
  t67876 = t67866*t31136;
  t67877 = t67874 + t67875 + t67876;
  t67878 = 0.100001*t67877;
  t67879 = t67866*t39663;
  t67880 = t24492*t67866;
  t67881 = t67861*t31475;
  t67882 = t67857*t39679;
  t67883 = t67880 + t67881 + t67882;
  t67884 = -0.3*t67883;
  t67885 = t67850 + t67851 + t67858 + t67862 + t67870 + t67878 + t67879 + t67884;
  t67788 = 0.2000000000018*t1823*t67071;
  t67793 = -6.000000000054e-7*t1823*t67792;
  t68087 = t67794 + t67796 + t67569;
  t68091 = t67076 + t67804 + t67574;
  t68098 = t67579 + t67810 + t67811;
  t67605 = -0.2000000000018*t3051*t545*t1823*t66927;
  t67607 = -6.000000000054e-7*t3051*t1823*t66927*t2405;
  t67609 = 0.2000000000018*t66927*t1853*t3272;
  t67616 = t67615*t19527;
  t67624 = t67623*t23519;
  t67625 = t24492*t67615;
  t67636 = t67633*t30596;
  t67639 = t67623*t31136;
  t67642 = t67625 + t67636 + t67639;
  t67644 = 0.2*t67642;
  t67649 = t31451*t67623;
  t67650 = t67615*t31475;
  t67654 = t67633*t31136;
  t67655 = t67649 + t67650 + t67654;
  t67656 = 0.100001*t67655;
  t67665 = t67633*t39663;
  t67666 = t24492*t67633;
  t67667 = t67623*t31475;
  t67690 = t67615*t39679;
  t67691 = t67666 + t67667 + t67690;
  t67693 = -0.3*t67691;
  t67694 = t67605 + t67607 + t67609 + t67616 + t67624 + t67644 + t67656 + t67665 + t67693;
  t68005 = -0.2000000000018*t3051*t663*t66927;
  t68006 = 0.2000000000018*t67113*t3272;
  t68008 = -6.000000000054e-7*t67119*t3272;
  t68013 = t68012*t19527;
  t68020 = t68018*t23519;
  t68022 = t31451*t68018;
  t68024 = t68012*t31475;
  t68029 = t68028*t31136;
  t68030 = t68022 + t68024 + t68029;
  t68032 = 0.100001*t68030;
  t68033 = t24492*t68012;
  t68034 = t68028*t30596;
  t68035 = t68018*t31136;
  t68036 = t68033 + t68034 + t68035;
  t68037 = 0.2*t68036;
  t68038 = t68028*t39663;
  t68039 = t24492*t68028;
  t68041 = t68018*t31475;
  t68042 = t68012*t39679;
  t68043 = t68039 + t68041 + t68042;
  t68045 = -0.3*t68043;
  t68046 = t68005 + t68006 + t68008 + t68013 + t68020 + t68032 + t68037 + t68038 + t68045;
  t67440 = t67268*t40914;
  t67441 = t67285*t44589;
  t67442 = t67254*t48451;
  t67443 = t67254*t48982;
  t67445 = t67285*t49059;
  t67446 = -1.8e-11*t67268*t4228;
  t67447 = t67443 + t67445 + t67446;
  t67448 = 0.100001*t67447;
  t67453 = t67285*t49749;
  t67454 = t67268*t49059;
  t67455 = -1.000000000009*t67254*t4228;
  t67456 = t67453 + t67454 + t67455;
  t67457 = 0.2*t67456;
  t67461 = t67254*t49958;
  t67462 = t67268*t48982;
  t67463 = -1.000000000009*t67285*t4228;
  t67464 = t67461 + t67462 + t67463;
  t67465 = -0.3*t67464;
  t67466 = t67440 + t67441 + t67442 + t67448 + t67457 + t67465;
  t67741 = t67083*t40914;
  t67742 = t67088*t44589;
  t67744 = t67080*t48451;
  t67745 = t67080*t48982;
  t67748 = t67088*t49059;
  t67749 = -1.8e-11*t67083*t4228;
  t67750 = t67745 + t67748 + t67749;
  t67763 = 0.100001*t67750;
  t67767 = t67088*t49749;
  t67768 = t67083*t49059;
  t67769 = -1.000000000009*t67080*t4228;
  t67770 = t67767 + t67768 + t67769;
  t67771 = 0.2*t67770;
  t67772 = t67080*t49958;
  t67773 = t67083*t48982;
  t67775 = -1.000000000009*t67088*t4228;
  t67776 = t67772 + t67773 + t67775;
  t67777 = -0.3*t67776;
  t67779 = t67741 + t67742 + t67744 + t67763 + t67771 + t67777;
  t67927 = t67332*t40914;
  t67928 = t67351*t44589;
  t67930 = t67317*t48451;
  t67931 = t67317*t49958;
  t67932 = t67332*t48982;
  t67933 = -1.000000000009*t67351*t4228;
  t67935 = t67931 + t67932 + t67933;
  t67937 = -0.3*t67935;
  t67938 = t67317*t48982;
  t67939 = t67351*t49059;
  t67942 = -1.8e-11*t67332*t4228;
  t67943 = t67938 + t67939 + t67942;
  t67945 = 0.100001*t67943;
  t67946 = t67351*t49749;
  t67949 = t67332*t49059;
  t67951 = -1.000000000009*t67317*t4228;
  t67954 = t67946 + t67949 + t67951;
  t67955 = 0.2*t67954;
  t67956 = t67927 + t67928 + t67930 + t67937 + t67945 + t67955;
  t68051 = t67135*t40914;
  t68052 = t67170*t44589;
  t68053 = t67129*t48451;
  t68054 = t67129*t48982;
  t68056 = t67170*t49059;
  t68060 = -1.8e-11*t67135*t4228;
  t68061 = t68054 + t68056 + t68060;
  t68063 = 0.100001*t68061;
  t68064 = t67170*t49749;
  t68065 = t67135*t49059;
  t68067 = -1.000000000009*t67129*t4228;
  t68070 = t68064 + t68065 + t68067;
  t68072 = 0.2*t68070;
  t68073 = t67129*t49958;
  t68074 = t67135*t48982;
  t68075 = -1.000000000009*t67170*t4228;
  t68076 = t68073 + t68074 + t68075;
  t68077 = -0.3*t68076;
  t68082 = t68051 + t68052 + t68053 + t68063 + t68072 + t68077;
  t68173 = t3051*t545*t663*t66927;
  t68174 = -3.e-6*t3051*t1823*t66927*t2405;
  t68175 = t66927*t1853*t3272;
  t68176 = t68173 + t68174 + t68175;
  t68183 = 3.e-6*t3051*t545*t1823*t66927;
  t68184 = -1.*t3051*t19630*t66927*t2405;
  t68186 = -3.e-6*t66927*t1853*t3272;
  t68187 = t68183 + t68184 + t68186;
  t68190 = t25470*t66927*t1853;
  t68192 = -1.*t3051*t545*t66927*t3272;
  t68194 = -3.e-6*t3051*t66927*t2405*t3272;
  t68195 = t68190 + t68192 + t68194;
  t68215 = t68187*t40914;
  t68216 = t68195*t44589;
  t68217 = t68176*t48451;
  t68220 = t68176*t48982;
  t68223 = t68195*t49059;
  t68224 = -1.8e-11*t68187*t4228;
  t68226 = t68220 + t68223 + t68224;
  t68227 = 0.100001*t68226;
  t68228 = t68195*t49749;
  t68229 = t68187*t49059;
  t68230 = -1.000000000009*t68176*t4228;
  t68231 = t68228 + t68229 + t68230;
  t68233 = 0.2*t68231;
  t68235 = t68176*t49958;
  t68240 = t68187*t48982;
  t68241 = -1.000000000009*t68195*t4228;
  t68242 = t68235 + t68240 + t68241;
  t68244 = -0.3*t68242;
  t68246 = t68215 + t68216 + t68217 + t68227 + t68233 + t68244;
  t68252 = -1.*t3051*t663*t66927*t2405;
  t68253 = t67617 + t68252;
  t68256 = -1.*t3051*t545*t19630*t66927;
  t68257 = t68256 + t68174;
  t68260 = -3.e-6*t3051*t545*t66927*t3272;
  t68261 = t3051*t66927*t2405*t3272;
  t68262 = t68260 + t68261;
  t68249 = 6.000000000054e-7*t3051*t545*t1823*t66927;
  t68250 = -0.2000000000018*t3051*t1823*t66927*t2405;
  t68254 = t68253*t19527;
  t68258 = t68257*t23519;
  t68259 = t24492*t68253;
  t68263 = t68262*t30596;
  t68264 = t68257*t31136;
  t68265 = t68259 + t68263 + t68264;
  t68266 = 0.2*t68265;
  t68267 = t31451*t68257;
  t68268 = t68253*t31475;
  t68269 = t68262*t31136;
  t68270 = t68267 + t68268 + t68269;
  t68271 = 0.100001*t68270;
  t68272 = t68262*t39663;
  t68275 = t24492*t68262;
  t68278 = t68257*t31475;
  t68280 = t68253*t39679;
  t68283 = t68275 + t68278 + t68280;
  t68285 = -0.3*t68283;
  t68289 = t68249 + t68250 + t68254 + t68258 + t68266 + t68271 + t68272 + t68285;
  t68297 = -1.*t545*t663*t66927*t1853;
  t68298 = 3.e-6*t1823*t66927*t1853*t2405;
  t68300 = t68297 + t68298 + t67126;
  t68302 = -3.e-6*t545*t1823*t66927*t1853;
  t68304 = t19630*t66927*t1853*t2405;
  t68305 = t68302 + t68304 + t67134;
  t68309 = t545*t66927*t1853*t3272;
  t68310 = 3.e-6*t66927*t1853*t2405*t3272;
  t68311 = t67142 + t68309 + t68310;
  t68294 = -0.2000000000018*t545*t1823*t66927*t1853;
  t68295 = -6.000000000054e-7*t1823*t66927*t1853*t2405;
  t68301 = t68300*t19527;
  t68307 = t68305*t23519;
  t68308 = t24492*t68300;
  t68312 = t68311*t30596;
  t68313 = t68305*t31136;
  t68315 = t68308 + t68312 + t68313;
  t68316 = 0.2*t68315;
  t68317 = t31451*t68305;
  t68318 = t68300*t31475;
  t68319 = t68311*t31136;
  t68320 = t68317 + t68318 + t68319;
  t68321 = 0.100001*t68320;
  t68322 = t68311*t39663;
  t68323 = t24492*t68311;
  t68324 = t68305*t31475;
  t68325 = t68300*t39679;
  t68326 = t68323 + t68324 + t68325;
  t68327 = -0.3*t68326;
  t68328 = t68294 + t68295 + t67121 + t68301 + t68307 + t68316 + t68321 + t68322 + t68327;
  t68343 = -3.e-6*t663*t66927*t1853;
  t68344 = 3.e-6*t3051*t545*t66927*t3272;
  t68345 = 9.e-12*t3051*t66927*t2405*t3272;
  t68346 = t68343 + t68344 + t68345;
  t68339 = t663*t66927*t1853;
  t68340 = t68339 + t68192 + t68194;
  t68350 = -3.e-6*t3051*t663*t66927*t2405;
  t68351 = -1.000000000009*t66927*t1853*t3272;
  t68352 = t67610 + t68350 + t68351;
  t68334 = -0.2000000000018*t663*t66927*t1853;
  t68335 = 0.2000000000018*t3051*t545*t66927*t3272;
  t68336 = 6.000000000054e-7*t3051*t66927*t2405*t3272;
  t68341 = t68340*t19527;
  t68347 = t68346*t23519;
  t68348 = t31451*t68346;
  t68349 = t68340*t31475;
  t68353 = t68352*t31136;
  t68354 = t68348 + t68349 + t68353;
  t68355 = 0.100001*t68354;
  t68356 = t24492*t68340;
  t68357 = t68352*t30596;
  t68358 = t68346*t31136;
  t68359 = t68356 + t68357 + t68358;
  t68360 = 0.2*t68359;
  t68361 = t68352*t39663;
  t68362 = t24492*t68352;
  t68363 = t68346*t31475;
  t68364 = t68340*t39679;
  t68365 = t68362 + t68363 + t68364;
  t68367 = -0.3*t68365;
  t68368 = t68334 + t68335 + t68336 + t68341 + t68347 + t68355 + t68360 + t68361 + t68367;
  t67467 = var2[8]*t67466;
  t67553 = var2[5]*t67552;
  t67562 = -0.2000000000018*t66922*t545*t1823*t1853;
  t67563 = -6.000000000054e-7*t66922*t1823*t1853*t2405;
  t67571 = t67570*t19527;
  t67577 = t67576*t23519;
  t67578 = t24492*t67570;
  t67583 = t67582*t30596;
  t67584 = t67576*t31136;
  t67585 = t67578 + t67583 + t67584;
  t67586 = 0.2*t67585;
  t67587 = t31451*t67576;
  t67589 = t67570*t31475;
  t67590 = t67582*t31136;
  t67591 = t67587 + t67589 + t67590;
  t67592 = 0.100001*t67591;
  t67593 = t67582*t39663;
  t67594 = t24492*t67582;
  t67595 = t67576*t31475;
  t67596 = t67570*t39679;
  t67597 = t67594 + t67595 + t67596;
  t67599 = -0.3*t67597;
  t67600 = t67562 + t67563 + t67564 + t67571 + t67577 + t67586 + t67592 + t67593 + t67599;
  t67604 = var2[4]*t67600;
  t67696 = var2[3]*t67694;
  t67738 = var2[6]*t67737;
  t67739 = t67467 + t67553 + t67604 + t67696 + t67738;
  t68395 = t67610 + t67612;
  t68397 = t67617 + t67621;
  t68400 = t67629 + t67632;
  t68427 = 3.e-6*t545*t1823*t66927*t1853;
  t68428 = t663*t66927*t1853*t2405;
  t68431 = t68427 + t68428;
  t68433 = t545*t19630*t66927*t1853;
  t68434 = t68433 + t68298;
  t68437 = 3.e-6*t545*t66927*t1853*t3272;
  t68439 = -1.*t66927*t1853*t2405*t3272;
  t68440 = t68437 + t68439;
  t68464 = 9.e-12*t3051*t545*t66927*t3272;
  t68465 = t68464 + t68194;
  t68469 = -3.e-6*t3051*t545*t663*t66927;
  t68470 = t3051*t663*t66927*t2405;
  t68471 = t68469 + t68470;
  t68516 = t67610 + t68350 + t67614;
  t68518 = 3.e-6*t3051*t545*t663*t66927;
  t68519 = 9.e-12*t3051*t663*t66927*t2405;
  t68520 = t68518 + t68519 + t67622;
  t68523 = -1.000000000009*t663*t66927*t1853;
  t68524 = t68523 + t67629 + t67632;
  t68460 = 6.000000000054e-7*t3051*t545*t66927*t3272;
  t68462 = -0.2000000000018*t3051*t66927*t2405*t3272;
  t68463 = t68262*t19527;
  t68466 = t68465*t23519;
  t68467 = t31451*t68465;
  t68468 = t68262*t31475;
  t68472 = t68471*t31136;
  t68473 = t68467 + t68468 + t68472;
  t68474 = 0.100001*t68473;
  t68475 = t68471*t30596;
  t68476 = t68465*t31136;
  t68478 = t68275 + t68475 + t68476;
  t68479 = 0.2*t68478;
  t68481 = t68471*t39663;
  t68482 = t24492*t68471;
  t68483 = t68465*t31475;
  t68484 = t68262*t39679;
  t68485 = t68482 + t68483 + t68484;
  t68486 = -0.3*t68485;
  t68487 = t68460 + t68462 + t68463 + t68466 + t68474 + t68479 + t68481 + t68486;
  t68552 = -3.e-6*t545*t66927*t1853*t3272;
  t68553 = -9.e-12*t66927*t1853*t2405*t3272;
  t68554 = t68014 + t68552 + t68553;
  t68550 = t68009 + t68309 + t68310;
  t68559 = t545*t663*t66927*t1853;
  t68560 = 3.e-6*t663*t66927*t1853*t2405;
  t68561 = t68559 + t68560 + t68027;
  t68424 = -6.000000000054e-7*t545*t1823*t66927*t1853;
  t68425 = 0.2000000000018*t1823*t66927*t1853*t2405;
  t68432 = t68431*t19527;
  t68435 = t68434*t23519;
  t68436 = t24492*t68431;
  t68441 = t68440*t30596;
  t68442 = t68434*t31136;
  t68443 = t68436 + t68441 + t68442;
  t68444 = 0.2*t68443;
  t68445 = t31451*t68434;
  t68446 = t68431*t31475;
  t68448 = t68440*t31136;
  t68449 = t68445 + t68446 + t68448;
  t68451 = 0.100001*t68449;
  t68452 = t68440*t39663;
  t68453 = t24492*t68440;
  t68454 = t68434*t31475;
  t68455 = t68431*t39679;
  t68456 = t68453 + t68454 + t68455;
  t68457 = -0.3*t68456;
  t68458 = t68424 + t68425 + t68432 + t68435 + t68444 + t68451 + t68452 + t68457;
  t68126 = var2[4]*t67694;
  t68548 = -0.2000000000018*t545*t66927*t1853*t3272;
  t68549 = -6.000000000054e-7*t66927*t1853*t2405*t3272;
  t68551 = t68550*t19527;
  t68555 = t68554*t23519;
  t68556 = t31451*t68554;
  t68558 = t68550*t31475;
  t68562 = t68561*t31136;
  t68563 = t68556 + t68558 + t68562;
  t68564 = 0.100001*t68563;
  t68565 = t24492*t68550;
  t68566 = t68561*t30596;
  t68567 = t68554*t31136;
  t68569 = t68565 + t68566 + t68567;
  t68570 = 0.2*t68569;
  t68571 = t68561*t39663;
  t68572 = t24492*t68561;
  t68573 = t68554*t31475;
  t68574 = t68550*t39679;
  t68575 = t68572 + t68573 + t68574;
  t68576 = -0.3*t68575;
  t68581 = t68005 + t68548 + t68549 + t68551 + t68555 + t68564 + t68570 + t68571 + t68576;
  t68493 = t68346*t40914;
  t68494 = t68352*t44589;
  t68495 = t68340*t48451;
  t68496 = t68340*t49958;
  t68497 = t68346*t48982;
  t68498 = -1.000000000009*t68352*t4228;
  t68500 = t68496 + t68497 + t68498;
  t68501 = -0.3*t68500;
  t68502 = t68352*t49749;
  t68503 = t68346*t49059;
  t68504 = -1.000000000009*t68340*t4228;
  t68505 = t68502 + t68503 + t68504;
  t68506 = 0.2*t68505;
  t68507 = t68340*t48982;
  t68508 = t68352*t49059;
  t68509 = -1.8e-11*t68346*t4228;
  t68510 = t68507 + t68508 + t68509;
  t68511 = 0.100001*t68510;
  t68512 = t68493 + t68494 + t68495 + t68501 + t68506 + t68511;
  t68372 = t68257*t40914;
  t68373 = t68262*t44589;
  t68374 = t68253*t48451;
  t68375 = t68253*t48982;
  t68376 = t68262*t49059;
  t68377 = -1.8e-11*t68257*t4228;
  t68378 = t68375 + t68376 + t68377;
  t68379 = 0.100001*t68378;
  t68380 = t68262*t49749;
  t68382 = t68257*t49059;
  t68383 = -1.000000000009*t68253*t4228;
  t68384 = t68380 + t68382 + t68383;
  t68385 = 0.2*t68384;
  t68386 = t68253*t49958;
  t68387 = t68257*t48982;
  t68388 = -1.000000000009*t68262*t4228;
  t68389 = t68386 + t68387 + t68388;
  t68390 = -0.3*t68389;
  t68391 = t68372 + t68373 + t68374 + t68379 + t68385 + t68390;
  t68585 = t68305*t40914;
  t68586 = t68311*t44589;
  t68587 = t68300*t48451;
  t68588 = t68300*t48982;
  t68589 = t68311*t49059;
  t68590 = -1.8e-11*t68305*t4228;
  t68591 = t68588 + t68589 + t68590;
  t68592 = 0.100001*t68591;
  t68593 = t68311*t49749;
  t68594 = t68305*t49059;
  t68595 = -1.000000000009*t68300*t4228;
  t68596 = t68593 + t68594 + t68595;
  t68597 = 0.2*t68596;
  t68598 = t68300*t49958;
  t68600 = t68305*t48982;
  t68601 = -1.000000000009*t68311*t4228;
  t68602 = t68598 + t68600 + t68601;
  t68604 = -0.3*t68602;
  t68605 = t68585 + t68586 + t68587 + t68592 + t68597 + t68604;
  t68649 = t66922*t545;
  t68650 = -1.*t66927*t1853*t2405;
  t68651 = t68649 + t68650;
  t68653 = t663*t68651;
  t68654 = t67131 + t68653;
  t68656 = t19630*t67113;
  t68657 = 3.e-6*t1823*t68651;
  t68658 = t68656 + t68657;
  t68664 = -1.*t68651*t3272;
  t68666 = t68015 + t68664;
  t68695 = t68658*t40914;
  t68697 = t68666*t44589;
  t68698 = t68654*t48451;
  t68699 = t68654*t48982;
  t68704 = t68666*t49059;
  t68706 = -1.8e-11*t68658*t4228;
  t68708 = t68699 + t68704 + t68706;
  t68713 = 0.100001*t68708;
  t68722 = t68666*t49749;
  t68724 = t68658*t49059;
  t68727 = -1.000000000009*t68654*t4228;
  t68729 = t68722 + t68724 + t68727;
  t68730 = 0.2*t68729;
  t68731 = t68654*t49958;
  t68735 = t68658*t48982;
  t68737 = -1.000000000009*t68666*t4228;
  t68738 = t68731 + t68735 + t68737;
  t68741 = -0.3*t68738;
  t68742 = t68695 + t68697 + t68698 + t68713 + t68730 + t68741;
  t68754 = t67123 + t67124;
  t68757 = t67131 + t67133;
  t68765 = t67152 + t67167;
  t68756 = t68754*t19527;
  t68759 = t68757*t23519;
  t68763 = t24492*t68754;
  t68766 = t68765*t30596;
  t68767 = t68757*t31136;
  t68768 = t68763 + t68766 + t68767;
  t68769 = 0.2*t68768;
  t68770 = t31451*t68757;
  t68776 = t68754*t31475;
  t68778 = t68765*t31136;
  t68784 = t68770 + t68776 + t68778;
  t68794 = 0.100001*t68784;
  t68800 = t68765*t39663;
  t68802 = t24492*t68765;
  t68804 = t68757*t31475;
  t68813 = t68754*t39679;
  t68814 = t68802 + t68804 + t68813;
  t68815 = -0.3*t68814;
  t68816 = t67115 + t67120 + t68756 + t68759 + t68769 + t68794 + t68800 + t68815;
  t68825 = -9.e-12*t67113*t3272;
  t68828 = 3.e-6*t68651*t3272;
  t68829 = t68825 + t68828;
  t68686 = t24492*t68666;
  t68837 = 3.e-6*t663*t67113;
  t68838 = -1.*t663*t68651;
  t68840 = t68837 + t68838;
  t68820 = -6.000000000054e-7*t67113*t3272;
  t68821 = 0.2000000000018*t68651*t3272;
  t68822 = t68666*t19527;
  t68831 = t68829*t23519;
  t68833 = t31451*t68829;
  t68834 = t68666*t31475;
  t68841 = t68840*t31136;
  t68842 = t68833 + t68834 + t68841;
  t68845 = 0.100001*t68842;
  t68846 = t68840*t30596;
  t68847 = t68829*t31136;
  t68848 = t68686 + t68846 + t68847;
  t68850 = 0.2*t68848;
  t68851 = t68840*t39663;
  t68852 = t24492*t68840;
  t68853 = t68829*t31475;
  t68854 = t68666*t39679;
  t68855 = t68852 + t68853 + t68854;
  t68856 = -0.3*t68855;
  t68858 = t68820 + t68821 + t68822 + t68831 + t68845 + t68850 + t68851 + t68856;
  t68392 = var2[8]*t68391;
  t68393 = var2[3]*t67552;
  t68396 = t68395*t19527;
  t68398 = t68397*t23519;
  t68399 = t24492*t68395;
  t68402 = t68400*t30596;
  t68404 = t68397*t31136;
  t68405 = t68399 + t68402 + t68404;
  t68406 = 0.2*t68405;
  t68409 = t31451*t68397;
  t68410 = t68395*t31475;
  t68412 = t68400*t31136;
  t68413 = t68409 + t68410 + t68412;
  t68414 = 0.100001*t68413;
  t68415 = t68400*t39663;
  t68416 = t24492*t68400;
  t68417 = t68397*t31475;
  t68418 = t68395*t39679;
  t68419 = t68416 + t68417 + t68418;
  t68420 = -0.3*t68419;
  t68421 = t67605 + t67607 + t68396 + t68398 + t68406 + t68414 + t68415 + t68420;
  t68422 = var2[5]*t68421;
  t68459 = var2[4]*t68458;
  t68488 = var2[6]*t68487;
  t68490 = t68392 + t68393 + t68422 + t68459 + t68488;
  t67780 = var2[8]*t67779;
  t67786 = var2[4]*t67552;
  t67802 = t67797*t19527;
  t67808 = t67805*t23519;
  t67809 = t24492*t67797;
  t67815 = t67814*t30596;
  t67816 = t67805*t31136;
  t67818 = t67809 + t67815 + t67816;
  t67820 = 0.2*t67818;
  t67821 = t31451*t67805;
  t67823 = t67797*t31475;
  t67824 = t67814*t31136;
  t67833 = t67821 + t67823 + t67824;
  t67834 = 0.100001*t67833;
  t67836 = t67814*t39663;
  t67837 = t24492*t67814;
  t67838 = t67805*t31475;
  t67839 = t67797*t39679;
  t67840 = t67837 + t67838 + t67839;
  t67843 = -0.3*t67840;
  t67844 = t67788 + t67793 + t67802 + t67808 + t67820 + t67834 + t67836 + t67843;
  t67845 = var2[5]*t67844;
  t67886 = var2[3]*t67885;
  t67921 = var2[6]*t67920;
  t67922 = t67780 + t67786 + t67845 + t67886 + t67921;
  t68889 = -9.e-12*t663*t67113;
  t68890 = 3.e-6*t663*t68651;
  t68891 = t68889 + t68890;
  t68893 = -3.e-6*t67113*t3272;
  t68894 = t68651*t3272;
  t68895 = t68893 + t68894;
  t68919 = t68015 + t68017;
  t68923 = t68025 + t68026;
  t68084 = var2[5]*t67885;
  t68918 = t68765*t19527;
  t68920 = t68919*t23519;
  t68921 = t31451*t68919;
  t68922 = t68765*t31475;
  t68925 = t68923*t31136;
  t68926 = t68921 + t68922 + t68925;
  t68927 = 0.100001*t68926;
  t68928 = t68923*t30596;
  t68929 = t68919*t31136;
  t68930 = t68802 + t68928 + t68929;
  t68932 = 0.2*t68930;
  t68933 = t68923*t39663;
  t68935 = t24492*t68923;
  t68936 = t68919*t31475;
  t68937 = t68765*t39679;
  t68938 = t68935 + t68936 + t68937;
  t68939 = -0.3*t68938;
  t68940 = t68006 + t68008 + t68918 + t68920 + t68927 + t68932 + t68933 + t68939;
  t68864 = t68829*t40914;
  t68866 = t68840*t44589;
  t68867 = t68666*t48451;
  t68869 = t68666*t49958;
  t68870 = t68829*t48982;
  t68871 = -1.000000000009*t68840*t4228;
  t68872 = t68869 + t68870 + t68871;
  t68873 = -0.3*t68872;
  t68874 = t68840*t49749;
  t68875 = t68829*t49059;
  t68876 = t68874 + t68875 + t68737;
  t68877 = 0.2*t68876;
  t68878 = t68666*t48982;
  t68879 = t68840*t49059;
  t68880 = -1.8e-11*t68829*t4228;
  t68881 = t68878 + t68879 + t68880;
  t68882 = 0.100001*t68881;
  t68883 = t68864 + t68866 + t68867 + t68873 + t68877 + t68882;
  t68945 = t68757*t40914;
  t68946 = t68765*t44589;
  t68947 = t68754*t48451;
  t68948 = t68754*t48982;
  t68949 = t68765*t49059;
  t68950 = -1.8e-11*t68757*t4228;
  t68951 = t68948 + t68949 + t68950;
  t68952 = 0.100001*t68951;
  t68953 = t68765*t49749;
  t68954 = t68757*t49059;
  t68955 = -1.000000000009*t68754*t4228;
  t68956 = t68953 + t68954 + t68955;
  t68957 = 0.2*t68956;
  t68959 = t68754*t49958;
  t68960 = t68757*t48982;
  t68961 = -1.000000000009*t68765*t4228;
  t68962 = t68959 + t68960 + t68961;
  t68963 = -0.3*t68962;
  t68964 = t68945 + t68946 + t68947 + t68952 + t68957 + t68963;
  t69038 = 3.e-6*t3051*t663*t66927;
  t69041 = -9.e-12*t68651*t3272;
  t69042 = t69038 + t67864 + t69041;
  t69023 = -1.*t3051*t663*t66927;
  t69024 = -1.*t67848*t3272;
  t69026 = t69023 + t69024 + t68828;
  t69052 = -1.*t663*t67848;
  t69053 = 1.000000000009*t3051*t66927*t3272;
  t69054 = t69052 + t68890 + t69053;
  t69082 = t69042*t40914;
  t69083 = t69054*t44589;
  t69088 = t69026*t48451;
  t69096 = t69026*t49958;
  t69097 = t69042*t48982;
  t69098 = -1.000000000009*t69054*t4228;
  t69099 = t69096 + t69097 + t69098;
  t69100 = -0.3*t69099;
  t69102 = t69026*t48982;
  t69103 = t69054*t49059;
  t69104 = -1.8e-11*t69042*t4228;
  t69105 = t69102 + t69103 + t69104;
  t69106 = 0.100001*t69105;
  t69107 = t69054*t49749;
  t69109 = t69042*t49059;
  t69111 = -1.000000000009*t69026*t4228;
  t69113 = t69107 + t69109 + t69111;
  t69114 = 0.2*t69113;
  t69121 = t69082 + t69083 + t69088 + t69100 + t69106 + t69114;
  t69128 = t69052 + t68890 + t67126;
  t69131 = 3.e-6*t663*t67848;
  t69133 = -9.e-12*t663*t68651;
  t69134 = t69131 + t69133 + t67134;
  t69137 = 1.000000000009*t3051*t663*t66927;
  t69138 = t67848*t3272;
  t69139 = -3.e-6*t68651*t3272;
  t69140 = t69137 + t69138 + t69139;
  t69126 = 0.2000000000018*t663*t67848;
  t69127 = -6.000000000054e-7*t663*t68651;
  t69129 = t69128*t19527;
  t69135 = t69134*t23519;
  t69136 = t24492*t69128;
  t69141 = t69140*t30596;
  t69147 = t69134*t31136;
  t69149 = t69136 + t69141 + t69147;
  t69152 = 0.2*t69149;
  t69153 = t31451*t69134;
  t69154 = t69128*t31475;
  t69155 = t69140*t31136;
  t69156 = t69153 + t69154 + t69155;
  t69159 = 0.100001*t69156;
  t69162 = t69140*t39663;
  t69166 = t24492*t69140;
  t69167 = t69134*t31475;
  t69168 = t69128*t39679;
  t69169 = t69166 + t69167 + t69168;
  t69178 = -0.3*t69169;
  t69180 = t69126 + t69127 + t67121 + t69129 + t69135 + t69152 + t69159 + t69162 + t69178;
  t68513 = var2[8]*t68512;
  t68514 = 0.2000000000018*t3051*t545*t663*t66927;
  t68515 = 6.000000000054e-7*t3051*t663*t66927*t2405;
  t68517 = t68516*t19527;
  t68521 = t68520*t23519;
  t68522 = t24492*t68516;
  t68525 = t68524*t30596;
  t68527 = t68520*t31136;
  t68528 = t68522 + t68525 + t68527;
  t68529 = 0.2*t68528;
  t68531 = t31451*t68520;
  t68532 = t68516*t31475;
  t68533 = t68524*t31136;
  t68534 = t68531 + t68532 + t68533;
  t68535 = 0.100001*t68534;
  t68536 = t68524*t39663;
  t68538 = t24492*t68524;
  t68539 = t68520*t31475;
  t68540 = t68516*t39679;
  t68541 = t68538 + t68539 + t68540;
  t68542 = -0.3*t68541;
  t68544 = t68514 + t68515 + t67609 + t68517 + t68521 + t68529 + t68535 + t68536 + t68542;
  t68545 = var2[6]*t68544;
  t68546 = var2[3]*t67737;
  t68547 = var2[5]*t68487;
  t68582 = var2[4]*t68581;
  t68583 = t68513 + t68545 + t68546 + t68547 + t68582;
  t68886 = -6.000000000054e-7*t663*t67113;
  t68887 = 0.2000000000018*t663*t68651;
  t68888 = t68840*t19527;
  t68892 = t68891*t23519;
  t68896 = t68895*t30596;
  t68897 = t68891*t31136;
  t68898 = t68852 + t68896 + t68897;
  t68899 = 0.2*t68898;
  t68901 = t31451*t68891;
  t68903 = t68840*t31475;
  t68904 = t68895*t31136;
  t68905 = t68901 + t68903 + t68904;
  t68906 = 0.100001*t68905;
  t68907 = t68895*t39663;
  t68908 = t24492*t68895;
  t68909 = t68891*t31475;
  t68910 = t68840*t39679;
  t68911 = t68908 + t68909 + t68910;
  t68912 = -0.3*t68911;
  t68913 = t68886 + t68887 + t68888 + t68892 + t68899 + t68906 + t68907 + t68912;
  t67958 = 0.2000000000018*t663*t66929;
  t67959 = -6.000000000054e-7*t663*t66946;
  t67966 = t67962*t19527;
  t67972 = t67971*t23519;
  t67974 = t24492*t67962;
  t67984 = t67983*t30596;
  t67985 = t67971*t31136;
  t67986 = t67974 + t67984 + t67985;
  t67988 = 0.2*t67986;
  t67990 = t31451*t67971;
  t67991 = t67962*t31475;
  t67992 = t67983*t31136;
  t67993 = t67990 + t67991 + t67992;
  t67994 = 0.100001*t67993;
  t67995 = t67983*t39663;
  t67996 = t24492*t67983;
  t67997 = t67971*t31475;
  t67998 = t67962*t39679;
  t67999 = t67996 + t67997 + t67998;
  t68000 = -0.3*t67999;
  t68001 = t67958 + t67959 + t67564 + t67966 + t67972 + t67988 + t67994 + t67995 + t68000;
  t69252 = -3.e-6*t67848*t3272;
  t69253 = 9.e-12*t68651*t3272;
  t69254 = t68014 + t69252 + t69253;
  t69248 = t68009 + t69138 + t69139;
  t69264 = t663*t67848;
  t69266 = -3.e-6*t663*t68651;
  t69267 = t69264 + t69266 + t68027;
  t68884 = var2[8]*t68883;
  t68914 = var2[6]*t68913;
  t68916 = var2[4]*t68487;
  t68917 = var2[3]*t67920;
  t68941 = var2[5]*t68940;
  t68943 = t68884 + t68914 + t68916 + t68917 + t68941;
  t67957 = var2[8]*t67956;
  t68002 = var2[6]*t68001;
  t68003 = var2[4]*t67737;
  t68004 = var2[5]*t67920;
  t68048 = var2[3]*t68046;
  t68049 = t67957 + t68002 + t68003 + t68004 + t68048;
  t69200 = t69134*t40914;
  t69201 = t69140*t44589;
  t69202 = t69128*t48451;
  t69204 = t69128*t48982;
  t69207 = t69140*t49059;
  t69208 = -1.8e-11*t69134*t4228;
  t69211 = t69204 + t69207 + t69208;
  t69214 = 0.100001*t69211;
  t69215 = t69140*t49749;
  t69217 = t69134*t49059;
  t69219 = -1.000000000009*t69128*t4228;
  t69222 = t69215 + t69217 + t69219;
  t69223 = 0.2*t69222;
  t69224 = t69128*t49958;
  t69228 = t69134*t48982;
  t69235 = -1.000000000009*t69140*t4228;
  t69236 = t69224 + t69228 + t69235;
  t69238 = -0.3*t69236;
  t69241 = t69200 + t69201 + t69202 + t69214 + t69223 + t69238;
  t69353 = -1.*t3051*t25470*t66927;
  t69354 = t69353 + t69024 + t68828;
  t69348 = t19630*t68651;
  t69350 = 3.e-6*t3051*t66927*t3272;
  t69351 = t67853 + t69348 + t69350;
  t69356 = -1.*t3051*t66927*t3272;
  t69357 = t69264 + t68657 + t69356;
  t69360 = t69351*t49059;
  t69382 = t69354*t65607;
  t69383 = t69351*t65665;
  t69384 = -1.8e-11*t3877*t69351;
  t69385 = t69354*t40123;
  t69386 = t69357*t49059;
  t69387 = t69384 + t69385 + t69386;
  t69388 = 0.100001*t69387;
  t69389 = -1.000000000009*t3877*t69354;
  t69390 = t69357*t65686;
  t69391 = t69389 + t69390 + t69360;
  t69392 = -0.3*t69391;
  t69394 = t69357*t65764;
  t69395 = -1.000000000009*t3877*t69357;
  t69396 = t69351*t40123;
  t69397 = t69354*t65775;
  t69398 = t69395 + t69396 + t69397;
  t69399 = 0.2*t69398;
  t69400 = t69382 + t69383 + t69388 + t69392 + t69394 + t69399;
  t69297 = var2[4]*t68512;
  t69298 = var2[3]*t67956;
  t69299 = var2[6]*t69241;
  t69302 = var2[5]*t68883;
  t69304 = t69054*t65607;
  t69305 = t69042*t65665;
  t69306 = -1.000000000009*t3877*t69054;
  t69307 = t69026*t65686;
  t69308 = t69306 + t69307 + t69109;
  t69311 = -0.3*t69308;
  t69314 = -1.8e-11*t3877*t69042;
  t69317 = t69054*t40123;
  t69321 = t69026*t49059;
  t69322 = t69314 + t69317 + t69321;
  t69330 = 0.100001*t69322;
  t69331 = t69026*t65764;
  t69337 = -1.000000000009*t3877*t69026;
  t69339 = t69042*t40123;
  t69340 = t69054*t65775;
  t69341 = t69337 + t69339 + t69340;
  t69342 = 0.2*t69341;
  t69343 = t69304 + t69305 + t69311 + t69330 + t69331 + t69342;
  t69344 = var2[8]*t69343;
  t69345 = t69297 + t69298 + t69299 + t69302 + t69344;
  t68615 = var2[3]*t67466;
  t68617 = var2[6]*t68512;
  t68618 = var2[5]*t68391;
  t68619 = var2[4]*t68605;
  t68620 = t68195*t65607;
  t68621 = t68187*t65665;
  t68622 = -1.000000000009*t3877*t68195;
  t68623 = t68176*t65686;
  t68624 = t68622 + t68623 + t68229;
  t68625 = -0.3*t68624;
  t68626 = -1.8e-11*t3877*t68187;
  t68627 = t68195*t40123;
  t68628 = t68176*t49059;
  t68629 = t68626 + t68627 + t68628;
  t68630 = 0.100001*t68629;
  t68631 = t68176*t65764;
  t68632 = -1.000000000009*t3877*t68176;
  t68634 = t68187*t40123;
  t68635 = t68195*t65775;
  t68636 = t68632 + t68634 + t68635;
  t68638 = 0.2*t68636;
  t68641 = t68620 + t68621 + t68625 + t68630 + t68631 + t68638;
  t68642 = var2[8]*t68641;
  t68644 = t68615 + t68617 + t68618 + t68619 + t68642;
  t68130 = var2[4]*t67466;
  t68131 = var2[5]*t67779;
  t68132 = var2[6]*t67956;
  t68133 = var2[3]*t68082;
  t68134 = t66974*t65607;
  t68135 = t66962*t65665;
  t68136 = -1.8e-11*t3877*t66962;
  t68137 = t66974*t40123;
  t68138 = t66953*t49059;
  t68139 = t68136 + t68137 + t68138;
  t68140 = 0.100001*t68139;
  t68146 = -1.000000000009*t3877*t66974;
  t68149 = t66953*t65686;
  t68153 = t68146 + t68149 + t67016;
  t68154 = -0.3*t68153;
  t68155 = t66953*t65764;
  t68157 = -1.000000000009*t3877*t66953;
  t68158 = t66962*t40123;
  t68159 = t66974*t65775;
  t68160 = t68157 + t68158 + t68159;
  t68161 = 0.2*t68160;
  t68162 = t68134 + t68135 + t68140 + t68154 + t68155 + t68161;
  t68163 = var2[8]*t68162;
  t68164 = t68130 + t68131 + t68132 + t68133 + t68163;
  t66792 = 0.1*t49958;
  t66793 = -0.2000000000018*t4228;
  t66795 = t66792 + t65604 + t66793;
  t66799 = 0.2*t49749;
  t66800 = -9.e-7*t49059;
  t66805 = -0.1000000000009*t4228;
  t66812 = t66799 + t66800 + t66805;
  t66815 = 0.1*t48982;
  t66816 = 0.2*t49059;
  t66817 = 1.62e-17*t4228;
  t66818 = t66815 + t66816 + t66817;
  t68977 = t68666*t65607;
  t68978 = t68658*t65665;
  t68981 = -1.000000000009*t3877*t68666;
  t68982 = t68654*t65686;
  t68983 = t68981 + t68982 + t68724;
  t68984 = -0.3*t68983;
  t68985 = -1.8e-11*t3877*t68658;
  t68986 = t68666*t40123;
  t68987 = t68654*t49059;
  t68988 = t68985 + t68986 + t68987;
  t68989 = 0.100001*t68988;
  t68990 = t68654*t65764;
  t68991 = -1.000000000009*t3877*t68654;
  t69004 = t68658*t40123;
  t69006 = t68666*t65775;
  t69008 = t68991 + t69004 + t69006;
  t69009 = 0.2*t69008;
  t69010 = t68977 + t68978 + t68984 + t68989 + t68990 + t69009;
  t68971 = var2[4]*t68391;
  t68972 = var2[3]*t67779;
  t68974 = var2[6]*t68883;
  t68975 = var2[5]*t68964;
  t69011 = var2[8]*t69010;
  t69012 = t68971 + t68972 + t68974 + t68975 + t69011;
  t66934 = 0.2000000000018*t1823*t66929;
  t66947 = -6.000000000054e-7*t1823*t66946;
  t66948 = 0.2000000000018*t66922*t3051*t3272;
  t66956 = t66953*t19527;
  t66963 = t66962*t23519;
  t66965 = t24492*t66953;
  t66975 = t66974*t30596;
  t66976 = t66962*t31136;
  t66978 = t66965 + t66975 + t66976;
  t66981 = 0.2*t66978;
  t66982 = t31451*t66962;
  t66984 = t66953*t31475;
  t66988 = t66974*t31136;
  t66989 = t66982 + t66984 + t66988;
  t66990 = 0.100001*t66989;
  t66991 = t66974*t39663;
  t66993 = t24492*t66974;
  t66998 = t66962*t31475;
  t67001 = t66953*t39679;
  t67002 = t66993 + t66998 + t67001;
  t67003 = -0.3*t67002;
  t68169 = 0.2000000000018*t3051*t545*t1823*t66927;
  t68170 = 6.000000000054e-7*t3051*t1823*t66927*t2405;
  t68172 = -0.2000000000018*t66927*t1853*t3272;
  t68182 = t68176*t19527;
  t68188 = t68187*t23519;
  t68189 = t24492*t68176;
  t68196 = t68195*t30596;
  t68197 = t68187*t31136;
  t68198 = t68189 + t68196 + t68197;
  t68199 = 0.2*t68198;
  t68201 = t31451*t68187;
  t68202 = t68176*t31475;
  t68204 = t68195*t31136;
  t68205 = t68201 + t68202 + t68204;
  t68206 = 0.100001*t68205;
  t68208 = t68195*t39663;
  t68209 = t24492*t68195;
  t68211 = t68187*t31475;
  t68212 = t68176*t39679;
  t68213 = t68209 + t68211 + t68212;
  t68214 = -0.3*t68213;
  t68648 = -6.000000000054e-7*t1823*t67113;
  t68652 = 0.2000000000018*t1823*t68651;
  t68655 = t68654*t19527;
  t68661 = t68658*t23519;
  t68662 = t24492*t68654;
  t68673 = t68666*t30596;
  t68674 = t68658*t31136;
  t68675 = t68662 + t68673 + t68674;
  t68677 = 0.2*t68675;
  t68678 = t31451*t68658;
  t68681 = t68654*t31475;
  t68682 = t68666*t31136;
  t68683 = t68678 + t68681 + t68682;
  t68684 = 0.100001*t68683;
  t68685 = t68666*t39663;
  t68687 = t68658*t31475;
  t68688 = t68654*t39679;
  t68690 = t68686 + t68687 + t68688;
  t68693 = -0.3*t68690;
  t69015 = 0.2000000000018*t3051*t663*t66927;
  t69021 = 0.2000000000018*t67848*t3272;
  t69022 = -6.000000000054e-7*t68651*t3272;
  t69037 = t69026*t19527;
  t69043 = t69042*t23519;
  t69046 = t31451*t69042;
  t69047 = t69026*t31475;
  t69055 = t69054*t31136;
  t69056 = t69046 + t69047 + t69055;
  t69057 = 0.100001*t69056;
  t69059 = t24492*t69026;
  t69061 = t69054*t30596;
  t69064 = t69042*t31136;
  t69065 = t69059 + t69061 + t69064;
  t69066 = 0.2*t69065;
  t69067 = t69054*t39663;
  t69070 = t24492*t69054;
  t69072 = t69042*t31475;
  t69073 = t69026*t39679;
  t69074 = t69070 + t69072 + t69073;
  t69075 = -0.3*t69074;
  t69352 = t69351*t40914;
  t69355 = t69354*t44589;
  t69358 = t69357*t48451;
  t69359 = t69354*t49749;
  t69361 = -1.000000000009*t69357*t4228;
  t69362 = t69359 + t69360 + t69361;
  t69363 = 0.2*t69362;
  t69364 = t69357*t48982;
  t69365 = t69354*t49059;
  t69366 = -1.8e-11*t69351*t4228;
  t69367 = t69364 + t69365 + t69366;
  t69368 = 0.100001*t69367;
  t69369 = t69357*t49958;
  t69370 = t69351*t48982;
  t69371 = -1.000000000009*t69354*t4228;
  t69372 = t69369 + t69370 + t69371;
  t69373 = -0.3*t69372;
  t69480 = t69352 + t69355 + t69358 + t69363 + t69368 + t69373;
  t69478 = t68648 + t68652 + t68655 + t68661 + t68677 + t68684 + t68685 + t68693;
  t69474 = t66934 + t66947 + t66948 + t66956 + t66963 + t66981 + t66990 + t66991 + t67003;
  t69476 = t68169 + t68170 + t68172 + t68182 + t68188 + t68199 + t68206 + t68208 + t68214;
  t69479 = t69015 + t69021 + t69022 + t69037 + t69043 + t69057 + t69066 + t69067 + t69075;
  t68248 = var2[8]*t68246;
  t68293 = var2[5]*t68289;
  t68330 = var2[4]*t68328;
  t68332 = var2[3]*t67309;
  t68370 = var2[6]*t68368;
  t67046 = var2[8]*t67043;
  t67109 = var2[5]*t67106;
  t67226 = var2[3]*t67221;
  t67311 = var2[4]*t67309;
  t67424 = var2[6]*t67422;
  t69124 = var2[8]*t69121;
  t69187 = var2[6]*t69180;
  t69190 = var2[4]*t68368;
  t69195 = var2[3]*t67422;
  t69198 = var2[5]*t68858;
  t68744 = var2[8]*t68742;
  t68747 = var2[4]*t68289;
  t68751 = var2[3]*t67106;
  t68818 = var2[5]*t68816;
  t68860 = var2[6]*t68858;
  t69375 = var2[4]*t68246;
  t69377 = var2[3]*t67043;
  t69379 = var2[5]*t68742;
  t69381 = var2[6]*t69121;
  t69402 = var2[8]*t69400;
  t69564 = 3.e-6*t66922*t3051*t1823*t2405;
  t69567 = -1.*t66922*t1853*t3272;
  t69568 = t67717 + t69564 + t69567;
  t69575 = t66922*t3051*t19630*t2405;
  t69588 = 3.e-6*t66922*t1853*t3272;
  t69589 = t67491 + t69575 + t69588;
  t69622 = -1.*t66922*t25470*t1853;
  t69623 = t66922*t3051*t545*t3272;
  t69624 = 3.e-6*t66922*t3051*t2405*t3272;
  t69625 = t69622 + t69623 + t69624;
  t69663 = t69589*t40914;
  t69668 = t69625*t44589;
  t69671 = t69568*t48451;
  t69672 = t69625*t49749;
  t69673 = t69589*t49059;
  t69674 = -1.000000000009*t69568*t4228;
  t69676 = t69672 + t69673 + t69674;
  t69677 = 0.2*t69676;
  t69680 = t69568*t48982;
  t69681 = t69625*t49059;
  t69682 = -1.8e-11*t69589*t4228;
  t69683 = t69680 + t69681 + t69682;
  t69684 = 0.100001*t69683;
  t69685 = t69568*t49958;
  t69686 = t69589*t48982;
  t69689 = -1.000000000009*t69625*t4228;
  t69690 = t69685 + t69686 + t69689;
  t69691 = -0.3*t69690;
  t69695 = t69663 + t69668 + t69671 + t69677 + t69684 + t69691;
  t69704 = t66922*t3051*t663*t2405;
  t69710 = t67257 + t69704;
  t69717 = t66922*t3051*t545*t19630;
  t69718 = t69717 + t69564;
  t69721 = -1.*t66922*t3051*t2405*t3272;
  t69722 = t67710 + t69721;
  t69702 = -6.000000000054e-7*t66922*t3051*t545*t1823;
  t69703 = 0.2000000000018*t66922*t3051*t1823*t2405;
  t69715 = t69710*t19527;
  t69719 = t69718*t23519;
  t69720 = t24492*t69710;
  t69723 = t69722*t30596;
  t69725 = t69718*t31136;
  t69727 = t69720 + t69723 + t69725;
  t69733 = 0.2*t69727;
  t69734 = t31451*t69718;
  t69736 = t69710*t31475;
  t69737 = t69722*t31136;
  t69739 = t69734 + t69736 + t69737;
  t69740 = 0.100001*t69739;
  t69741 = t69722*t39663;
  t69742 = t24492*t69722;
  t69743 = t69718*t31475;
  t69746 = t69710*t39679;
  t69749 = t69742 + t69743 + t69746;
  t69751 = -0.3*t69749;
  t69754 = t69702 + t69703 + t69715 + t69719 + t69733 + t69740 + t69741 + t69751;
  t69761 = t66922*t545*t663*t1853;
  t69762 = -3.e-6*t66922*t1823*t1853*t2405;
  t69763 = t69761 + t69762 + t66952;
  t69775 = 3.e-6*t66922*t545*t1823*t1853;
  t69776 = -1.*t66922*t19630*t1853*t2405;
  t69778 = t69775 + t69776 + t66961;
  t69781 = -1.*t66922*t545*t1853*t3272;
  t69782 = -3.e-6*t66922*t1853*t2405*t3272;
  t69783 = t66966 + t69781 + t69782;
  t69759 = 0.2000000000018*t66922*t545*t1823*t1853;
  t69760 = 6.000000000054e-7*t66922*t1823*t1853*t2405;
  t69770 = t69763*t19527;
  t69779 = t69778*t23519;
  t69780 = t24492*t69763;
  t69784 = t69783*t30596;
  t69785 = t69778*t31136;
  t69787 = t69780 + t69784 + t69785;
  t69788 = 0.2*t69787;
  t69789 = t31451*t69778;
  t69791 = t69763*t31475;
  t69792 = t69783*t31136;
  t69793 = t69789 + t69791 + t69792;
  t69794 = 0.100001*t69793;
  t69795 = t69783*t39663;
  t69796 = t24492*t69783;
  t69797 = t69778*t31475;
  t69798 = t69763*t39679;
  t69799 = t69796 + t69797 + t69798;
  t69800 = -0.3*t69799;
  t69801 = t69759 + t69760 + t66948 + t69770 + t69779 + t69788 + t69794 + t69795 + t69800;
  t69814 = 3.e-6*t66922*t663*t1853;
  t69815 = -9.e-12*t66922*t3051*t2405*t3272;
  t69816 = t69814 + t67511 + t69815;
  t69810 = -1.*t66922*t663*t1853;
  t69812 = t69810 + t69623 + t69624;
  t69820 = 3.e-6*t66922*t3051*t663*t2405;
  t69821 = 1.000000000009*t66922*t1853*t3272;
  t69822 = t67236 + t69820 + t69821;
  t69806 = 0.2000000000018*t66922*t663*t1853;
  t69807 = -0.2000000000018*t66922*t3051*t545*t3272;
  t69809 = -6.000000000054e-7*t66922*t3051*t2405*t3272;
  t69813 = t69812*t19527;
  t69817 = t69816*t23519;
  t69818 = t31451*t69816;
  t69819 = t69812*t31475;
  t69823 = t69822*t31136;
  t69824 = t69818 + t69819 + t69823;
  t69825 = 0.100001*t69824;
  t69827 = t24492*t69812;
  t69828 = t69822*t30596;
  t69829 = t69816*t31136;
  t69832 = t69827 + t69828 + t69829;
  t69833 = 0.2*t69832;
  t69834 = t69822*t39663;
  t69836 = t24492*t69822;
  t69837 = t69816*t31475;
  t69838 = t69812*t39679;
  t69839 = t69836 + t69837 + t69838;
  t69840 = -0.3*t69839;
  t69841 = t69806 + t69807 + t69809 + t69813 + t69817 + t69825 + t69833 + t69834 + t69840;
  t69866 = t67236 + t67240;
  t69869 = t67257 + t67259;
  t69873 = t67282 + t67283;
  t69900 = -1.*t66922*t663*t1853*t2405;
  t69901 = t67572 + t69900;
  t69903 = -1.*t66922*t545*t19630*t1853;
  t69904 = t69903 + t69762;
  t69907 = -3.e-6*t66922*t545*t1853*t3272;
  t69909 = t66922*t1853*t2405*t3272;
  t69910 = t69907 + t69909;
  t69933 = -9.e-12*t66922*t3051*t545*t3272;
  t69934 = t69933 + t69624;
  t69946 = 3.e-6*t66922*t3051*t545*t663;
  t69947 = t69946 + t67495;
  t69544 = t68248 + t68293 + t68330 + t68332 + t68370;
  t70000 = t67236 + t69820 + t67247;
  t70004 = -3.e-6*t66922*t3051*t545*t663;
  t70005 = -9.e-12*t66922*t3051*t663*t2405;
  t70006 = t70004 + t70005 + t67262;
  t70010 = 1.000000000009*t66922*t663*t1853;
  t70011 = t70010 + t67282 + t67283;
  t69929 = -6.000000000054e-7*t66922*t3051*t545*t3272;
  t69931 = 0.2000000000018*t66922*t3051*t2405*t3272;
  t69932 = t69722*t19527;
  t69936 = t69934*t23519;
  t69938 = t31451*t69934;
  t69945 = t69722*t31475;
  t69948 = t69947*t31136;
  t69949 = t69938 + t69945 + t69948;
  t69950 = 0.100001*t69949;
  t69951 = t69947*t30596;
  t69952 = t69934*t31136;
  t69953 = t69742 + t69951 + t69952;
  t69954 = 0.2*t69953;
  t69955 = t69947*t39663;
  t69956 = t24492*t69947;
  t69957 = t69934*t31475;
  t69958 = t69722*t39679;
  t69959 = t69956 + t69957 + t69958;
  t69960 = -0.3*t69959;
  t69961 = t69929 + t69931 + t69932 + t69936 + t69950 + t69954 + t69955 + t69960;
  t70060 = 3.e-6*t66922*t545*t1853*t3272;
  t70061 = 9.e-12*t66922*t1853*t2405*t3272;
  t70062 = t67327 + t70060 + t70061;
  t70058 = t67315 + t69781 + t69782;
  t70067 = -3.e-6*t66922*t663*t1853*t2405;
  t70068 = t67566 + t70067 + t67347;
  t69896 = 6.000000000054e-7*t66922*t545*t1823*t1853;
  t69898 = -0.2000000000018*t66922*t1823*t1853*t2405;
  t69902 = t69901*t19527;
  t69905 = t69904*t23519;
  t69906 = t24492*t69901;
  t69911 = t69910*t30596;
  t69912 = t69904*t31136;
  t69913 = t69906 + t69911 + t69912;
  t69914 = 0.2*t69913;
  t69915 = t31451*t69904;
  t69916 = t69901*t31475;
  t69917 = t69910*t31136;
  t69918 = t69915 + t69916 + t69917;
  t69919 = 0.100001*t69918;
  t69921 = t69910*t39663;
  t69922 = t24492*t69910;
  t69923 = t69904*t31475;
  t69924 = t69901*t39679;
  t69925 = t69922 + t69923 + t69924;
  t69926 = -0.3*t69925;
  t69927 = t69896 + t69898 + t69902 + t69905 + t69914 + t69919 + t69921 + t69926;
  t70055 = 0.2000000000018*t66922*t545*t1853*t3272;
  t70056 = 6.000000000054e-7*t66922*t1853*t2405*t3272;
  t70059 = t70058*t19527;
  t70063 = t70062*t23519;
  t70064 = t31451*t70062;
  t70066 = t70058*t31475;
  t70069 = t70068*t31136;
  t70070 = t70064 + t70066 + t70069;
  t70071 = 0.100001*t70070;
  t70072 = t24492*t70058;
  t70074 = t70068*t30596;
  t70076 = t70062*t31136;
  t70078 = t70072 + t70074 + t70076;
  t70079 = 0.2*t70078;
  t70081 = t70068*t39663;
  t70082 = t24492*t70068;
  t70083 = t70062*t31475;
  t70086 = t70058*t39679;
  t70087 = t70082 + t70083 + t70086;
  t70088 = -0.3*t70087;
  t70089 = t67312 + t70055 + t70056 + t70059 + t70063 + t70071 + t70079 + t70081 + t70088;
  t69844 = t69718*t40914;
  t69845 = t69722*t44589;
  t69846 = t69710*t48451;
  t69847 = t69710*t48982;
  t69848 = t69722*t49059;
  t69849 = -1.8e-11*t69718*t4228;
  t69850 = t69847 + t69848 + t69849;
  t69851 = 0.100001*t69850;
  t69852 = t69722*t49749;
  t69853 = t69718*t49059;
  t69854 = -1.000000000009*t69710*t4228;
  t69855 = t69852 + t69853 + t69854;
  t69856 = 0.2*t69855;
  t69857 = t69710*t49958;
  t69858 = t69718*t48982;
  t69859 = -1.000000000009*t69722*t4228;
  t69860 = t69857 + t69858 + t69859;
  t69862 = -0.3*t69860;
  t69864 = t69844 + t69845 + t69846 + t69851 + t69856 + t69862;
  t69966 = t69816*t40914;
  t69968 = t69822*t44589;
  t69969 = t69812*t48451;
  t69970 = t69812*t49958;
  t69971 = t69816*t48982;
  t69972 = -1.000000000009*t69822*t4228;
  t69973 = t69970 + t69971 + t69972;
  t69974 = -0.3*t69973;
  t69976 = t69812*t48982;
  t69980 = t69822*t49059;
  t69981 = -1.8e-11*t69816*t4228;
  t69985 = t69976 + t69980 + t69981;
  t69986 = 0.100001*t69985;
  t69987 = t69822*t49749;
  t69989 = t69816*t49059;
  t69990 = -1.000000000009*t69812*t4228;
  t69991 = t69987 + t69989 + t69990;
  t69992 = 0.2*t69991;
  t69993 = t69966 + t69968 + t69969 + t69974 + t69986 + t69992;
  t70094 = t69778*t40914;
  t70095 = t69783*t44589;
  t70096 = t69763*t48451;
  t70097 = t69783*t49749;
  t70099 = t69778*t49059;
  t70100 = -1.000000000009*t69763*t4228;
  t70103 = t70097 + t70099 + t70100;
  t70105 = 0.2*t70103;
  t70106 = t69763*t48982;
  t70107 = t69783*t49059;
  t70108 = -1.8e-11*t69778*t4228;
  t70109 = t70106 + t70107 + t70108;
  t70110 = 0.100001*t70109;
  t70112 = t69763*t49958;
  t70115 = t69778*t48982;
  t70116 = -1.000000000009*t69783*t4228;
  t70117 = t70112 + t70115 + t70116;
  t70118 = -0.3*t70117;
  t70121 = t70094 + t70095 + t70096 + t70105 + t70110 + t70118;
  t70171 = t663*t67792;
  t70174 = t66958 + t70171;
  t70180 = t19630*t66929;
  t70181 = t70180 + t67796;
  t70185 = -1.*t67792*t3272;
  t70186 = t67330 + t70185;
  t70217 = t70181*t40914;
  t70218 = t70186*t44589;
  t70221 = t70174*t48451;
  t70222 = t70174*t48982;
  t70223 = t70186*t49059;
  t70224 = -1.8e-11*t70181*t4228;
  t70225 = t70222 + t70223 + t70224;
  t70226 = 0.100001*t70225;
  t70227 = t70186*t49749;
  t70228 = t70181*t49059;
  t70230 = -1.000000000009*t70174*t4228;
  t70232 = t70227 + t70228 + t70230;
  t70233 = 0.2*t70232;
  t70235 = t70174*t49958;
  t70238 = t70181*t48982;
  t70239 = -1.000000000009*t70186*t4228;
  t70240 = t70235 + t70238 + t70239;
  t70242 = -0.3*t70240;
  t70243 = t70217 + t70218 + t70221 + t70226 + t70233 + t70242;
  t70251 = t66949 + t66951;
  t70256 = t66958 + t66960;
  t70259 = t66970 + t66973;
  t70252 = t70251*t19527;
  t70257 = t70256*t23519;
  t70258 = t24492*t70251;
  t70260 = t70259*t30596;
  t70261 = t70256*t31136;
  t70262 = t70258 + t70260 + t70261;
  t70263 = 0.2*t70262;
  t70264 = t31451*t70256;
  t70265 = t70251*t31475;
  t70266 = t70259*t31136;
  t70267 = t70264 + t70265 + t70266;
  t70268 = 0.100001*t70267;
  t70270 = t70259*t39663;
  t70273 = t24492*t70259;
  t70278 = t70256*t31475;
  t70279 = t70251*t39679;
  t70281 = t70273 + t70278 + t70279;
  t70286 = -0.3*t70281;
  t70287 = t66934 + t66947 + t70252 + t70257 + t70263 + t70268 + t70270 + t70286;
  t70297 = -9.e-12*t66929*t3272;
  t70299 = t70297 + t67811;
  t70211 = t24492*t70186;
  t70303 = -1.*t663*t67792;
  t70304 = t67969 + t70303;
  t70293 = -6.000000000054e-7*t66929*t3272;
  t70295 = 0.2000000000018*t67792*t3272;
  t70296 = t70186*t19527;
  t70300 = t70299*t23519;
  t70301 = t31451*t70299;
  t70302 = t70186*t31475;
  t70305 = t70304*t31136;
  t70306 = t70301 + t70302 + t70305;
  t70308 = 0.100001*t70306;
  t70309 = t70304*t30596;
  t70311 = t70299*t31136;
  t70312 = t70211 + t70309 + t70311;
  t70313 = 0.2*t70312;
  t70317 = t70304*t39663;
  t70319 = t24492*t70304;
  t70321 = t70299*t31475;
  t70323 = t70186*t39679;
  t70325 = t70319 + t70321 + t70323;
  t70327 = -0.3*t70325;
  t70328 = t70293 + t70295 + t70296 + t70300 + t70308 + t70313 + t70317 + t70327;
  t69865 = var2[8]*t69864;
  t69867 = t69866*t19527;
  t69871 = t69869*t23519;
  t69872 = t24492*t69866;
  t69874 = t69873*t30596;
  t69875 = t69869*t31136;
  t69876 = t69872 + t69874 + t69875;
  t69878 = 0.2*t69876;
  t69879 = t31451*t69869;
  t69880 = t69866*t31475;
  t69881 = t69873*t31136;
  t69883 = t69879 + t69880 + t69881;
  t69884 = 0.100001*t69883;
  t69885 = t69873*t39663;
  t69886 = t24492*t69873;
  t69887 = t69869*t31475;
  t69888 = t69866*t39679;
  t69889 = t69886 + t69887 + t69888;
  t69890 = -0.3*t69889;
  t69893 = t67233 + t67234 + t69867 + t69871 + t69878 + t69884 + t69885 + t69890;
  t69894 = var2[5]*t69893;
  t69895 = var2[3]*t68289;
  t69928 = var2[4]*t69927;
  t69962 = var2[6]*t69961;
  t69963 = t69865 + t69894 + t69895 + t69928 + t69962;
  t70373 = t67330 + t67331;
  t70377 = t67343 + t67344;
  t70423 = -9.e-12*t663*t66929;
  t70424 = 3.e-6*t663*t67792;
  t70425 = t70423 + t70424;
  t70427 = -3.e-6*t66929*t3272;
  t70428 = t67792*t3272;
  t70429 = t70427 + t70428;
  t70372 = t70259*t19527;
  t70374 = t70373*t23519;
  t70375 = t31451*t70373;
  t70376 = t70259*t31475;
  t70378 = t70377*t31136;
  t70379 = t70375 + t70376 + t70378;
  t70381 = 0.100001*t70379;
  t70382 = t70377*t30596;
  t70383 = t70373*t31136;
  t70384 = t70273 + t70382 + t70383;
  t70385 = 0.2*t70384;
  t70386 = t70377*t39663;
  t70387 = t24492*t70377;
  t70388 = t70373*t31475;
  t70390 = t70259*t39679;
  t70391 = t70387 + t70388 + t70390;
  t70392 = -0.3*t70391;
  t70393 = t67313 + t67314 + t70372 + t70374 + t70381 + t70385 + t70386 + t70392;
  t69550 = t68744 + t68747 + t68751 + t68818 + t68860;
  t70332 = t70256*t40914;
  t70333 = t70259*t44589;
  t70337 = t70251*t48451;
  t70338 = t70251*t48982;
  t70339 = t70259*t49059;
  t70340 = -1.8e-11*t70256*t4228;
  t70341 = t70338 + t70339 + t70340;
  t70342 = 0.100001*t70341;
  t70343 = t70259*t49749;
  t70346 = t70256*t49059;
  t70347 = -1.000000000009*t70251*t4228;
  t70348 = t70343 + t70346 + t70347;
  t70349 = 0.2*t70348;
  t70350 = t70251*t49958;
  t70359 = t70256*t48982;
  t70362 = -1.000000000009*t70259*t4228;
  t70364 = t70350 + t70359 + t70362;
  t70365 = -0.3*t70364;
  t70366 = t70332 + t70333 + t70337 + t70342 + t70349 + t70365;
  t70397 = t70299*t40914;
  t70398 = t70304*t44589;
  t70399 = t70186*t48451;
  t70401 = t70186*t49958;
  t70402 = t70299*t48982;
  t70403 = -1.000000000009*t70304*t4228;
  t70404 = t70401 + t70402 + t70403;
  t70405 = -0.3*t70404;
  t70406 = t70304*t49749;
  t70407 = t70299*t49059;
  t70408 = t70406 + t70407 + t70239;
  t70409 = 0.2*t70408;
  t70410 = t70186*t48982;
  t70411 = t70304*t49059;
  t70412 = -1.8e-11*t70299*t4228;
  t70413 = t70410 + t70411 + t70412;
  t70415 = 0.100001*t70413;
  t70416 = t70397 + t70398 + t70399 + t70405 + t70409 + t70415;
  t70490 = -3.e-6*t66922*t3051*t663;
  t70491 = -9.e-12*t67792*t3272;
  t70492 = t70490 + t67086 + t70491;
  t70487 = t66922*t3051*t663;
  t70488 = t70487 + t67810 + t67811;
  t70496 = -1.*t663*t67071;
  t70497 = -1.000000000009*t66922*t3051*t3272;
  t70498 = t70496 + t70424 + t70497;
  t70513 = t70492*t40914;
  t70514 = t70498*t44589;
  t70515 = t70488*t48451;
  t70517 = t70488*t49958;
  t70518 = t70492*t48982;
  t70519 = -1.000000000009*t70498*t4228;
  t70520 = t70517 + t70518 + t70519;
  t70521 = -0.3*t70520;
  t70522 = t70488*t48982;
  t70523 = t70498*t49059;
  t70524 = -1.8e-11*t70492*t4228;
  t70525 = t70522 + t70523 + t70524;
  t70526 = 0.100001*t70525;
  t70527 = t70498*t49749;
  t70528 = t70492*t49059;
  t70529 = -1.000000000009*t70488*t4228;
  t70530 = t70527 + t70528 + t70529;
  t70531 = 0.2*t70530;
  t70532 = t70513 + t70514 + t70515 + t70521 + t70526 + t70531;
  t70538 = t70496 + t70424 + t66952;
  t70540 = -9.e-12*t663*t67792;
  t70542 = t67896 + t70540 + t66961;
  t70546 = -1.000000000009*t66922*t3051*t663;
  t70547 = t67071*t3272;
  t70548 = -3.e-6*t67792*t3272;
  t70549 = t70546 + t70547 + t70548;
  t70536 = 0.2000000000018*t663*t67071;
  t70537 = -6.000000000054e-7*t663*t67792;
  t70539 = t70538*t19527;
  t70543 = t70542*t23519;
  t70545 = t24492*t70538;
  t70552 = t70549*t30596;
  t70554 = t70542*t31136;
  t70557 = t70545 + t70552 + t70554;
  t70558 = 0.2*t70557;
  t70560 = t31451*t70542;
  t70561 = t70538*t31475;
  t70562 = t70549*t31136;
  t70563 = t70560 + t70561 + t70562;
  t70566 = 0.100001*t70563;
  t70567 = t70549*t39663;
  t70568 = t24492*t70549;
  t70569 = t70542*t31475;
  t70570 = t70538*t39679;
  t70571 = t70568 + t70569 + t70570;
  t70573 = -0.3*t70571;
  t70575 = t70536 + t70537 + t66948 + t70539 + t70543 + t70558 + t70566 + t70567 + t70573;
  t69995 = var2[8]*t69993;
  t69998 = -0.2000000000018*t66922*t3051*t545*t663;
  t69999 = -6.000000000054e-7*t66922*t3051*t663*t2405;
  t70002 = t70000*t19527;
  t70007 = t70006*t23519;
  t70008 = t24492*t70000;
  t70012 = t70011*t30596;
  t70013 = t70006*t31136;
  t70015 = t70008 + t70012 + t70013;
  t70016 = 0.2*t70015;
  t70017 = t31451*t70006;
  t70018 = t70000*t31475;
  t70019 = t70011*t31136;
  t70022 = t70017 + t70018 + t70019;
  t70023 = 0.100001*t70022;
  t70025 = t70011*t39663;
  t70028 = t24492*t70011;
  t70032 = t70006*t31475;
  t70033 = t70000*t39679;
  t70034 = t70028 + t70032 + t70033;
  t70037 = -0.3*t70034;
  t70042 = t69998 + t69999 + t67235 + t70002 + t70007 + t70016 + t70023 + t70025 + t70037;
  t70043 = var2[6]*t70042;
  t70052 = var2[5]*t69961;
  t70054 = var2[3]*t68368;
  t70090 = var2[4]*t70089;
  t70091 = t69995 + t70043 + t70052 + t70054 + t70090;
  t70418 = -6.000000000054e-7*t663*t66929;
  t70420 = 0.2000000000018*t663*t67792;
  t70421 = t70304*t19527;
  t70426 = t70425*t23519;
  t70430 = t70429*t30596;
  t70431 = t70425*t31136;
  t70432 = t70319 + t70430 + t70431;
  t70433 = 0.2*t70432;
  t70434 = t31451*t70425;
  t70435 = t70304*t31475;
  t70437 = t70429*t31136;
  t70438 = t70434 + t70435 + t70437;
  t70440 = 0.100001*t70438;
  t70441 = t70429*t39663;
  t70442 = t24492*t70429;
  t70443 = t70425*t31475;
  t70445 = t70304*t39679;
  t70446 = t70442 + t70443 + t70445;
  t70447 = -0.3*t70446;
  t70449 = t70418 + t70420 + t70421 + t70426 + t70433 + t70440 + t70441 + t70447;
  t70625 = -3.e-6*t67071*t3272;
  t70626 = 9.e-12*t67792*t3272;
  t70627 = t67327 + t70625 + t70626;
  t70623 = t67315 + t70547 + t70548;
  t70631 = -3.e-6*t663*t67792;
  t70633 = t67794 + t70631 + t67347;
  t70417 = var2[8]*t70416;
  t70450 = var2[6]*t70449;
  t70451 = var2[4]*t69961;
  t70452 = var2[5]*t70393;
  t70453 = var2[3]*t68858;
  t70454 = t70417 + t70450 + t70451 + t70452 + t70453;
  t69548 = t69124 + t69187 + t69190 + t69195 + t69198;
  t70587 = t70542*t40914;
  t70588 = t70549*t44589;
  t70590 = t70538*t48451;
  t70591 = t70549*t49749;
  t70592 = t70542*t49059;
  t70595 = -1.000000000009*t70538*t4228;
  t70596 = t70591 + t70592 + t70595;
  t70597 = 0.2*t70596;
  t70598 = t70538*t48982;
  t70599 = t70549*t49059;
  t70602 = -1.8e-11*t70542*t4228;
  t70603 = t70598 + t70599 + t70602;
  t70604 = 0.100001*t70603;
  t70607 = t70538*t49958;
  t70608 = t70542*t48982;
  t70609 = -1.000000000009*t70549*t4228;
  t70610 = t70607 + t70608 + t70609;
  t70611 = -0.3*t70610;
  t70612 = t70587 + t70588 + t70590 + t70597 + t70604 + t70611;
  t70744 = t68091*t49059;
  t70772 = t68098*t65607;
  t70773 = t68091*t65665;
  t70778 = -1.000000000009*t3877*t68098;
  t70779 = t68087*t65686;
  t70780 = t70778 + t70779 + t70744;
  t70781 = -0.3*t70780;
  t70782 = -1.8e-11*t3877*t68091;
  t70783 = t68098*t40123;
  t70784 = t68087*t49059;
  t70787 = t70782 + t70783 + t70784;
  t70788 = 0.100001*t70787;
  t70789 = t68087*t65764;
  t70790 = -1.000000000009*t3877*t68087;
  t70791 = t68091*t40123;
  t70795 = t68098*t65775;
  t70798 = t70790 + t70791 + t70795;
  t70802 = 0.2*t70798;
  t70804 = t70772 + t70773 + t70781 + t70788 + t70789 + t70802;
  t70662 = var2[4]*t69993;
  t70664 = var2[6]*t70612;
  t70666 = var2[5]*t70416;
  t70667 = var2[3]*t69121;
  t70668 = t70498*t65607;
  t70669 = t70492*t65665;
  t70670 = -1.000000000009*t3877*t70498;
  t70671 = t70488*t65686;
  t70673 = t70670 + t70671 + t70528;
  t70676 = -0.3*t70673;
  t70678 = -1.8e-11*t3877*t70492;
  t70679 = t70498*t40123;
  t70683 = t70488*t49059;
  t70684 = t70678 + t70679 + t70683;
  t70686 = 0.100001*t70684;
  t70687 = t70488*t65764;
  t70688 = -1.000000000009*t3877*t70488;
  t70690 = t70492*t40123;
  t70692 = t70498*t65775;
  t70697 = t70688 + t70690 + t70692;
  t70701 = 0.2*t70697;
  t70707 = t70668 + t70669 + t70676 + t70686 + t70687 + t70701;
  t70708 = var2[8]*t70707;
  t70718 = t70662 + t70664 + t70666 + t70667 + t70708;
  t70128 = var2[5]*t69864;
  t70129 = var2[6]*t69993;
  t70131 = var2[3]*t68246;
  t70134 = var2[4]*t70121;
  t70135 = t69625*t65607;
  t70136 = t69589*t65665;
  t70137 = -1.8e-11*t3877*t69589;
  t70138 = t69625*t40123;
  t70139 = t69568*t49059;
  t70140 = t70137 + t70138 + t70139;
  t70141 = 0.100001*t70140;
  t70142 = -1.000000000009*t3877*t69625;
  t70143 = t69568*t65686;
  t70144 = t70142 + t70143 + t69673;
  t70145 = -0.3*t70144;
  t70146 = t69568*t65764;
  t70150 = -1.000000000009*t3877*t69568;
  t70151 = t69589*t40123;
  t70152 = t69625*t65775;
  t70153 = t70150 + t70151 + t70152;
  t70158 = 0.2*t70153;
  t70159 = t70135 + t70136 + t70141 + t70145 + t70146 + t70158;
  t70160 = var2[8]*t70159;
  t70161 = t70128 + t70129 + t70131 + t70134 + t70160;
  t70457 = var2[4]*t69864;
  t70458 = var2[5]*t70366;
  t70459 = var2[6]*t70416;
  t70460 = var2[3]*t68742;
  t70461 = t70186*t65607;
  t70462 = t70181*t65665;
  t70463 = -1.000000000009*t3877*t70186;
  t70464 = t70174*t65686;
  t70465 = t70463 + t70464 + t70228;
  t70466 = -0.3*t70465;
  t70467 = -1.8e-11*t3877*t70181;
  t70468 = t70186*t40123;
  t70469 = t70174*t49059;
  t70470 = t70467 + t70468 + t70469;
  t70471 = 0.100001*t70470;
  t70472 = t70174*t65764;
  t70473 = -1.000000000009*t3877*t70174;
  t70474 = t70181*t40123;
  t70475 = t70186*t65775;
  t70476 = t70473 + t70474 + t70475;
  t70477 = 0.2*t70476;
  t70478 = t70461 + t70462 + t70466 + t70471 + t70472 + t70477;
  t70479 = var2[8]*t70478;
  t70480 = t70457 + t70458 + t70459 + t70460 + t70479;
  t69552 = t69375 + t69377 + t69379 + t69381 + t69402;
  t69481 = 0.2000000000018*t1823*t67848;
  t69482 = -6.000000000054e-7*t1823*t68651;
  t69484 = 0.2000000000018*t3051*t66927*t3272;
  t69486 = t69357*t19527;
  t69487 = t69351*t23519;
  t69492 = t24492*t69357;
  t69493 = t69354*t30596;
  t69495 = t69351*t31136;
  t69498 = t69492 + t69493 + t69495;
  t69500 = 0.2*t69498;
  t69501 = t31451*t69351;
  t69503 = t69357*t31475;
  t69508 = t69354*t31136;
  t69509 = t69501 + t69503 + t69508;
  t69510 = 0.100001*t69509;
  t69511 = t69354*t39663;
  t69512 = t24492*t69354;
  t69516 = t69351*t31475;
  t69518 = t69357*t39679;
  t69519 = t69512 + t69516 + t69518;
  t69520 = -0.3*t69519;
  t69561 = -0.2000000000018*t66922*t3051*t545*t1823;
  t69562 = -6.000000000054e-7*t66922*t3051*t1823*t2405;
  t69563 = 0.2000000000018*t66922*t1853*t3272;
  t69569 = t69568*t19527;
  t69590 = t69589*t23519;
  t69621 = t24492*t69568;
  t69631 = t69625*t30596;
  t69632 = t69589*t31136;
  t69636 = t69621 + t69631 + t69632;
  t69637 = 0.2*t69636;
  t69638 = t31451*t69589;
  t69639 = t69568*t31475;
  t69640 = t69625*t31136;
  t69645 = t69638 + t69639 + t69640;
  t69651 = 0.100001*t69645;
  t69652 = t69625*t39663;
  t69653 = t24492*t69625;
  t69654 = t69589*t31475;
  t69660 = t69568*t39679;
  t69661 = t69653 + t69654 + t69660;
  t69662 = -0.3*t69661;
  t70169 = -6.000000000054e-7*t1823*t66929;
  t70170 = 0.2000000000018*t1823*t67792;
  t70175 = t70174*t19527;
  t70182 = t70181*t23519;
  t70183 = t24492*t70174;
  t70187 = t70186*t30596;
  t70188 = t70181*t31136;
  t70189 = t70183 + t70187 + t70188;
  t70190 = 0.2*t70189;
  t70202 = t31451*t70181;
  t70204 = t70174*t31475;
  t70206 = t70186*t31136;
  t70207 = t70202 + t70204 + t70206;
  t70208 = 0.100001*t70207;
  t70209 = t70186*t39663;
  t70212 = t70181*t31475;
  t70213 = t70174*t39679;
  t70215 = t70211 + t70212 + t70213;
  t70216 = -0.3*t70215;
  t70484 = -0.2000000000018*t66922*t3051*t663;
  t70485 = 0.2000000000018*t67071*t3272;
  t70486 = -6.000000000054e-7*t67792*t3272;
  t70489 = t70488*t19527;
  t70493 = t70492*t23519;
  t70494 = t31451*t70492;
  t70495 = t70488*t31475;
  t70499 = t70498*t31136;
  t70500 = t70494 + t70495 + t70499;
  t70501 = 0.100001*t70500;
  t70502 = t24492*t70488;
  t70503 = t70498*t30596;
  t70504 = t70492*t31136;
  t70505 = t70502 + t70503 + t70504;
  t70506 = 0.2*t70505;
  t70507 = t70498*t39663;
  t70508 = t24492*t70498;
  t70509 = t70492*t31475;
  t70510 = t70488*t39679;
  t70511 = t70508 + t70509 + t70510;
  t70512 = -0.3*t70511;
  t70729 = t68091*t40914;
  t70730 = t68098*t44589;
  t70732 = t68087*t48451;
  t70733 = t68087*t48982;
  t70734 = t68098*t49059;
  t70737 = -1.8e-11*t68091*t4228;
  t70738 = t70733 + t70734 + t70737;
  t70741 = 0.100001*t70738;
  t70743 = t68098*t49749;
  t70745 = -1.000000000009*t68087*t4228;
  t70746 = t70743 + t70744 + t70745;
  t70748 = 0.2*t70746;
  t70749 = t68087*t49958;
  t70750 = t68091*t48982;
  t70751 = -1.000000000009*t68098*t4228;
  t70752 = t70749 + t70750 + t70751;
  t70753 = -0.3*t70752;
  p_output1[0]=1.;
  p_output1[1]=t19546 + t2062 + t23686 + t2449 + t31359 + t3533 + t38209 + t39676 + t39690 + t58594*var2[4] + t57444*var2[5] + t65582*var2[5] + t62221*var2[6] + t65160*var2[6] + t52890*var2[8] + t65784*var2[8] + var2[4]*(t63430 + t63900 + (t63434 + t63437 + t63445 + t19527*t63457 + t23519*t63480 + t39663*t63619 - 0.3*(t39679*t63457 + t31475*t63480 + t24492*t63619) + 0.2*(t24492*t63457 + t31136*t63480 + t30596*t63619) + 0.100001*(t31475*t63457 + t31451*t63480 + t31136*t63619))*var2[4] + t62872*var2[8]) + t58594*var3[4] + t57444*var3[5] + t62221*var3[6] + t52890*var3[8];
  p_output1[2]=t65787 + t65788 + t65792 + t65797 + t65810 + t65823 + t65824 + t65834 + t57444*var2[4] + t65582*var2[4] + t65912*var2[5] + t65958*var2[6] + t66165*var2[6] + t65868*var2[8] + t66239*var2[8] + var2[5]*(t63430 + t65565*var2[4] + t66049*var2[6] + t65992*var2[8]) + t57444*var3[4] + t65912*var3[5] + t65958*var3[6] + t65868*var3[8];
  p_output1[3]=t66264 + t66265 + t66270 + t66276 + t66283 + t66292 + t66298 + t66299 + t66306 + t62221*var2[4] + t65160*var2[4] + t65958*var2[5] + t66165*var2[5] + t66435*var2[6] + t66352*var2[8] + t66550*var2[8] + var2[6]*(t63900 + t64681*var2[4] + t66157*var2[5] + t66497*var2[8]) + t62221*var3[4] + t65958*var3[5] + t66435*var3[6] + t66352*var3[8];
  p_output1[4]=t66624 + t66638 + t66654 + t66671 + t66680 + t66692 + t52890*var2[4] + t65784*var2[4] + t65868*var2[5] + t66239*var2[5] + t66352*var2[6] + t66550*var2[6] + t66786*var2[8] + var2[8]*(t65780*var2[4] + t66231*var2[5] + t66548*var2[6] + (0.100001*(1.8e-11*t4228*t66616 + t39825*t66633 + t40123*t66653) + 0.2*(t39825*t66616 + t42774*t66633 + 1.000000000009*t4228*t66653) - 0.3*(1.000000000009*t4228*t66633 + t47221*t66653 + t66780) + t66653*t66795 + t66633*t66812 + t66616*t66818)*var2[8]) + t52890*var3[4] + t65868*var3[5] + t66352*var3[6] + t66786*var3[8];
  p_output1[5]=1.;
  p_output1[6]=t19546 + t2062 + t23686 + t2449 + t31359 + t3533 + t38209 + t39676 + t39690 + 2.*t58594*var2[4] + 2.*t57444*var2[5] + 2.*t62221*var2[6] + 2.*t52890*var2[8];
  p_output1[7]=t65787 + t65788 + t65792 + t65797 + t65810 + t65823 + t65824 + t65834 + 2.*t57444*var2[4] + 2.*t65912*var2[5] + 2.*t65958*var2[6] + 2.*t65868*var2[8];
  p_output1[8]=t66264 + t66265 + t66270 + t66276 + t66283 + t66292 + t66298 + t66299 + t66306 + 2.*t62221*var2[4] + 2.*t65958*var2[5] + 2.*t66435*var2[6] + 2.*t66352*var2[8];
  p_output1[9]=t66624 + t66638 + t66654 + t66671 + t66680 + t66692 + 2.*t52890*var2[4] + 2.*t65868*var2[5] + 2.*t66352*var2[6] + 2.*t66786*var2[8];
  p_output1[10]=1.;
  p_output1[11]=t19546 + t2062 + t23686 + t2449 + t31359 + t3533 + t38209 + t39676 + t39690;
  p_output1[12]=t65787 + t65788 + t65792 + t65797 + t65810 + t65823 + t65824 + t65834;
  p_output1[13]=t66264 + t66265 + t66270 + t66276 + t66283 + t66292 + t66298 + t66299 + t66306;
  p_output1[14]=t66624 + t66638 + t66654 + t66671 + t66680 + t66692;
  p_output1[15]=-1.;
  p_output1[16]=1.;
  p_output1[17]=t66934 + t66947 + t66948 + t66956 + t66963 + t66981 + t66990 + t66991 + t67003 + t67046 + t67109 + t67226 + t67311 + t67424 + t67739*var2[4] + t67922*var2[5] + t68049*var2[6] + t68164*var2[8] + var2[3]*(t68084 + t68126 + (t67564 + t67788 + t67793 + t19527*t68087 + t23519*t68091 + t39663*t68098 - 0.3*(t39679*t68087 + t31475*t68091 + t24492*t68098) + 0.2*(t24492*t68087 + t31136*t68091 + t30596*t68098) + 0.100001*(t31475*t68087 + t31451*t68091 + t31136*t68098))*var2[3] + t68046*var2[6] + t68082*var2[8]) + t67221*var3[3] + t67309*var3[4] + t67106*var3[5] + t67422*var3[6] + t67043*var3[8];
  p_output1[18]=t68169 + t68170 + t68172 + t68182 + t68188 + t68199 + t68206 + t68208 + t68214 + t68248 + t68293 + t68330 + t68332 + t68370 + t67739*var2[3] + t68490*var2[5] + t68583*var2[6] + t68644*var2[8] + var2[4]*(t68126 + t67600*var2[3] + t68458*var2[5] + t68581*var2[6] + t68605*var2[8]) + t67309*var3[3] + t68328*var3[4] + t68289*var3[5] + t68368*var3[6] + t68246*var3[8];
  p_output1[19]=t68648 + t68652 + t68655 + t68661 + t68677 + t68684 + t68685 + t68693 + t68744 + t68747 + t68751 + t68818 + t68860 + t67922*var2[3] + t68490*var2[4] + t68943*var2[6] + t69012*var2[8] + var2[5]*(t68084 + t67844*var2[3] + t68421*var2[4] + t68940*var2[6] + t68964*var2[8]) + t67106*var3[3] + t68289*var3[4] + t68816*var3[5] + t68858*var3[6] + t68742*var3[8];
  p_output1[20]=t69015 + t69021 + t69022 + t69037 + t69043 + t69057 + t69066 + t69067 + t69075 + t69124 + t69187 + t69190 + t69195 + t69198 + t68049*var2[3] + t68583*var2[4] + t68943*var2[5] + t69345*var2[8] + var2[6]*(t68001*var2[3] + t68544*var2[4] + t68913*var2[5] + (-0.2000000000018*t3272*t67848 + t68005 + 6.000000000054e-7*t3272*t68651 + t19527*t69248 + t23519*t69254 + t39663*t69267 - 0.3*(t39679*t69248 + t31475*t69254 + t24492*t69267) + 0.2*(t24492*t69248 + t31136*t69254 + t30596*t69267) + 0.100001*(t31475*t69248 + t31451*t69254 + t31136*t69267))*var2[6] + t69241*var2[8]) + t67422*var3[3] + t68368*var3[4] + t68858*var3[5] + t69180*var3[6] + t69121*var3[8];
  p_output1[21]=t69352 + t69355 + t69358 + t69363 + t69368 + t69373 + t69375 + t69377 + t69379 + t69381 + t69402 + t68164*var2[3] + t68644*var2[4] + t69012*var2[5] + t69345*var2[6] + var2[8]*(t68162*var2[3] + t68641*var2[4] + t69010*var2[5] + t69343*var2[6] + (t66818*t69351 + t66812*t69354 + t66795*t69357 + 0.100001*(1.8e-11*t4228*t69351 + t39825*t69354 + t40123*t69357) + 0.2*(t39825*t69351 + t42774*t69354 + 1.000000000009*t4228*t69357) - 0.3*(1.000000000009*t4228*t69354 + t47221*t69357 + t69396))*var2[8]) + t67043*var3[3] + t68246*var3[4] + t68742*var3[5] + t69121*var3[6] + t69400*var3[8];
  p_output1[22]=1.;
  p_output1[23]=t66934 + t66947 + t66948 + t66956 + t66963 + t66981 + t66990 + t66991 + t67003 + 2.*t67221*var2[3] + 2.*t67309*var2[4] + 2.*t67106*var2[5] + 2.*t67422*var2[6] + 2.*t67043*var2[8];
  p_output1[24]=t68169 + t68170 + t68172 + t68182 + t68188 + t68199 + t68206 + t68208 + t68214 + 2.*t67309*var2[3] + 2.*t68328*var2[4] + 2.*t68289*var2[5] + 2.*t68368*var2[6] + 2.*t68246*var2[8];
  p_output1[25]=t68648 + t68652 + t68655 + t68661 + t68677 + t68684 + t68685 + t68693 + 2.*t67106*var2[3] + 2.*t68289*var2[4] + 2.*t68816*var2[5] + 2.*t68858*var2[6] + 2.*t68742*var2[8];
  p_output1[26]=t69015 + t69021 + t69022 + t69037 + t69043 + t69057 + t69066 + t69067 + t69075 + 2.*t67422*var2[3] + 2.*t68368*var2[4] + 2.*t68858*var2[5] + 2.*t69180*var2[6] + 2.*t69121*var2[8];
  p_output1[27]=t69352 + t69355 + t69358 + t69363 + t69368 + t69373 + 2.*t67043*var2[3] + 2.*t68246*var2[4] + 2.*t68742*var2[5] + 2.*t69121*var2[6] + 2.*t69400*var2[8];
  p_output1[28]=1.;
  p_output1[29]=t69474;
  p_output1[30]=t69476;
  p_output1[31]=t69478;
  p_output1[32]=t69479;
  p_output1[33]=t69480;
  p_output1[34]=-1.;
  p_output1[35]=1.;
  p_output1[36]=t69481 + t69482 + t69484 + t69486 + t69487 + t69500 + t69510 + t69511 + t69520 + (t67046 + t67109 + t67226 + t67311 + t67424)*var2[3] + t69474*var2[3] + t69476*var2[4] + t69544*var2[4] + t69478*var2[5] + t69550*var2[5] + t69479*var2[6] + t69548*var2[6] + t69480*var2[8] + t69552*var2[8] + t69474*var3[3] + t69476*var3[4] + t69478*var3[5] + t69479*var3[6] + t69480*var3[8];
  p_output1[37]=t69561 + t69562 + t69563 + t69569 + t69590 + t69637 + t69651 + t69652 + t69662 + t69476*var2[3] + t69544*var2[3] + t69801*var2[4] + t69754*var2[5] + t69963*var2[5] + t69841*var2[6] + t70091*var2[6] + t69695*var2[8] + t70161*var2[8] + var2[4]*(t67311 + t68328*var2[3] + t69927*var2[5] + t70089*var2[6] + t70121*var2[8]) + t69476*var3[3] + t69801*var3[4] + t69754*var3[5] + t69841*var3[6] + t69695*var3[8];
  p_output1[38]=t70169 + t70170 + t70175 + t70182 + t70190 + t70208 + t70209 + t70216 + t69478*var2[3] + t69550*var2[3] + t69754*var2[4] + t69963*var2[4] + t70287*var2[5] + t70328*var2[6] + t70454*var2[6] + t70243*var2[8] + t70480*var2[8] + var2[5]*(t67109 + t68816*var2[3] + t69893*var2[4] + t70393*var2[6] + t70366*var2[8]) + t69478*var3[3] + t69754*var3[4] + t70287*var3[5] + t70328*var3[6] + t70243*var3[8];
  p_output1[39]=t70484 + t70485 + t70486 + t70489 + t70493 + t70501 + t70506 + t70507 + t70512 + t69479*var2[3] + t69548*var2[3] + t69841*var2[4] + t70091*var2[4] + t70328*var2[5] + t70454*var2[5] + t70575*var2[6] + t70532*var2[8] + t70718*var2[8] + var2[6]*(t69180*var2[3] + t70042*var2[4] + t70449*var2[5] + (-0.2000000000018*t3272*t67071 + t67312 + 6.000000000054e-7*t3272*t67792 + t19527*t70623 + t23519*t70627 + t39663*t70633 - 0.3*(t39679*t70623 + t31475*t70627 + t24492*t70633) + 0.2*(t24492*t70623 + t31136*t70627 + t30596*t70633) + 0.100001*(t31475*t70623 + t31451*t70627 + t31136*t70633))*var2[6] + t70612*var2[8]) + t69479*var3[3] + t69841*var3[4] + t70328*var3[5] + t70575*var3[6] + t70532*var3[8];
  p_output1[40]=t70729 + t70730 + t70732 + t70741 + t70748 + t70753 + t69480*var2[3] + t69552*var2[3] + t69695*var2[4] + t70161*var2[4] + t70243*var2[5] + t70480*var2[5] + t70532*var2[6] + t70718*var2[6] + t70804*var2[8] + var2[8]*(t69400*var2[3] + t70159*var2[4] + t70478*var2[5] + t70707*var2[6] + (t66795*t68087 + t66818*t68091 + t66812*t68098 + 0.100001*(t40123*t68087 + 1.8e-11*t4228*t68091 + t39825*t68098) + 0.2*(1.000000000009*t4228*t68087 + t39825*t68091 + t42774*t68098) - 0.3*(t47221*t68087 + 1.000000000009*t4228*t68098 + t70791))*var2[8]) + t69480*var3[3] + t69695*var3[4] + t70243*var3[5] + t70532*var3[6] + t70804*var3[8];
  p_output1[41]=1.;
  p_output1[42]=t69481 + t69482 + t69484 + t69486 + t69487 + t69500 + t69510 + t69511 + t69520 + 2.*t69474*var2[3] + 2.*t69476*var2[4] + 2.*t69478*var2[5] + 2.*t69479*var2[6] + 2.*t69480*var2[8];
  p_output1[43]=t69561 + t69562 + t69563 + t69569 + t69590 + t69637 + t69651 + t69652 + t69662 + 2.*t69476*var2[3] + 2.*t69801*var2[4] + 2.*t69754*var2[5] + 2.*t69841*var2[6] + 2.*t69695*var2[8];
  p_output1[44]=t70169 + t70170 + t70175 + t70182 + t70190 + t70208 + t70209 + t70216 + 2.*t69478*var2[3] + 2.*t69754*var2[4] + 2.*t70287*var2[5] + 2.*t70328*var2[6] + 2.*t70243*var2[8];
  p_output1[45]=t70484 + t70485 + t70486 + t70489 + t70493 + t70501 + t70506 + t70507 + t70512 + 2.*t69479*var2[3] + 2.*t69841*var2[4] + 2.*t70328*var2[5] + 2.*t70575*var2[6] + 2.*t70532*var2[8];
  p_output1[46]=t70729 + t70730 + t70732 + t70741 + t70748 + t70753 + 2.*t69480*var2[3] + 2.*t69695*var2[4] + 2.*t70243*var2[5] + 2.*t70532*var2[6] + 2.*t70804*var2[8];
  p_output1[47]=1.;
  p_output1[48]=t69481 + t69482 + t69484 + t69486 + t69487 + t69500 + t69510 + t69511 + t69520;
  p_output1[49]=t69561 + t69562 + t69563 + t69569 + t69590 + t69637 + t69651 + t69652 + t69662;
  p_output1[50]=t70169 + t70170 + t70175 + t70182 + t70190 + t70208 + t70209 + t70216;
  p_output1[51]=t70484 + t70485 + t70486 + t70489 + t70493 + t70501 + t70506 + t70507 + t70512;
  p_output1[52]=t70729 + t70730 + t70732 + t70741 + t70748 + t70753;
  p_output1[53]=-1.;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 54, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "J_ddh_LeftFrontFoot_FrontStance.hh"

namespace FrontStance
{

void J_ddh_LeftFrontFoot_FrontStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
