/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:10:52 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t26533;
  double t31588;
  double t32385;
  double t51798;
  double t7042;
  double t29804;
  double t55174;
  double t56859;
  double t53968;
  double t54025;
  double t54030;
  double t47530;
  double t50544;
  double t51857;
  double t52461;
  double t53885;
  double t53933;
  double t54931;
  double t55948;
  double t56858;
  double t56865;
  double t56921;
  double t57001;
  double t57002;
  double t54041;
  double t54046;
  double t57008;
  double t57010;
  double t57011;
  double t57354;
  double t57399;
  double t57433;
  double t57434;
  double t57520;
  double t57660;
  double t57235;
  double t57240;
  double t57294;
  double t57740;
  double t57749;
  double t57846;
  double t57931;
  double t57953;
  double t57950;
  double t57934;
  double t57983;
  double t57984;
  double t57980;
  double t57954;
  double t57955;
  double t57968;
  double t57970;
  double t57972;
  double t57974;
  double t57997;
  double t58047;
  double t58016;
  double t58060;
  double t57994;
  double t58003;
  double t58012;
  double t58018;
  double t58041;
  double t58042;
  double t58043;
  double t58045;
  double t58046;
  double t58048;
  double t58050;
  double t58052;
  double t58055;
  double t58057;
  double t58062;
  double t58063;
  double t58064;
  double t58070;
  double t58071;
  double t58074;
  double t58075;
  double t58077;
  double t58080;
  double t57995;
  double t58005;
  double t58013;
  double t58014;
  double t57957;
  double t57964;
  double t57976;
  double t57977;
  double t57987;
  double t57989;
  double t57991;
  double t58015;
  double t58051;
  double t58065;
  double t58081;
  double t58084;
  double t58123;
  double t58125;
  double t58126;
  double t58127;
  double t58129;
  double t58131;
  double t58135;
  double t58144;
  double t58145;
  double t58149;
  double t58150;
  double t58151;
  double t53958;
  double t56890;
  double t57003;
  double t57005;
  double t57009;
  double t57021;
  double t57079;
  double t57139;
  double t57210;
  double t57234;
  double t57247;
  double t57278;
  double t57282;
  double t57283;
  double t57340;
  double t57346;
  double t57350;
  double t57351;
  double t58156;
  double t58157;
  double t58158;
  double t58161;
  double t58163;
  double t58164;
  double t58165;
  double t58166;
  double t58211;
  double t58214;
  double t58215;
  double t58216;
  double t58242;
  double t58276;
  double t58254;
  double t58255;
  double t58256;
  double t58258;
  double t58260;
  double t58265;
  double t58277;
  double t58279;
  double t58280;
  double t58283;
  double t58286;
  double t58288;
  double t58343;
  double t58345;
  double t58346;
  double t58350;
  double t57432;
  double t57472;
  double t57666;
  double t57668;
  double t57716;
  double t57718;
  double t57719;
  double t57720;
  double t57727;
  double t57729;
  double t57730;
  double t57731;
  double t58369;
  double t58370;
  double t58371;
  double t58373;
  double t58209;
  double t58218;
  double t58219;
  double t58220;
  double t58222;
  double t58225;
  double t58231;
  double t58360;
  double t58361;
  double t58362;
  double t58364;
  double t58269;
  double t58285;
  double t58351;
  double t58353;
  double t58210;
  double t58221;
  double t58239;
  double t58240;
  double t58439;
  double t58451;
  double t58452;
  double t58453;
  double t58458;
  double t58468;
  double t58474;
  double t58483;
  double t58087;
  double t58111;
  double t58120;
  double t58121;
  double t58138;
  double t58139;
  double t58140;
  double t58142;
  double t57741;
  double t57784;
  double t57851;
  double t57853;
  double t57859;
  double t57860;
  double t57878;
  double t57890;
  double t57892;
  double t57893;
  double t57895;
  double t57896;
  double t58609;
  double t58610;
  double t58611;
  double t58616;
  double t58668;
  double t58669;
  double t58680;
  double t58690;
  double t57670;
  double t57726;
  double t57733;
  double t57734;
  double t57735;
  double t57737;
  double t58202;
  double t58204;
  double t58205;
  double t58207;
  double t58525;
  double t58526;
  double t58531;
  double t58566;
  double t57854;
  double t57891;
  double t57897;
  double t57900;
  double t57902;
  double t57906;
  double t58086;
  double t58136;
  double t58152;
  double t58153;
  double t58155;
  double t58162;
  double t58167;
  double t58187;
  double t59037;
  double t59041;
  double t59049;
  double t59057;
  double t59059;
  double t59066;
  double t59072;
  double t59074;
  double t59110;
  double t59111;
  double t59113;
  double t59118;
  double t59124;
  double t59125;
  double t59127;
  double t59131;
  double t59135;
  double t59136;
  double t59145;
  double t59152;
  double t59159;
  double t59160;
  double t59168;
  double t59182;
  double t59186;
  double t59204;
  double t59205;
  double t59237;
  double t59238;
  double t59239;
  double t58578;
  double t58582;
  double t58587;
  double t58588;
  double t58593;
  double t58601;
  double t59280;
  double t59287;
  double t59291;
  double t59294;
  double t59302;
  double t59306;
  double t59308;
  double t59312;
  double t59343;
  double t59348;
  double t59382;
  double t59397;
  double t59401;
  double t59409;
  double t59423;
  double t59432;
  double t59434;
  double t59436;
  double t59437;
  double t59447;
  double t59455;
  double t59461;
  double t58805;
  double t58810;
  double t58811;
  double t58830;
  double t58847;
  double t58851;
  double t59723;
  double t59725;
  double t59726;
  double t59727;
  double t59728;
  double t59729;
  double t59732;
  double t59743;
  double t59744;
  double t59750;
  double t59755;
  double t59762;
  double t59765;
  double t59775;
  double t59010;
  double t59011;
  double t59012;
  double t59013;
  double t59021;
  double t59023;
  double t59860;
  double t59872;
  double t59861;
  double t59862;
  double t59865;
  double t59889;
  double t59899;
  double t59903;
  double t59920;
  double t59928;
  double t59935;
  double t59939;
  double t59944;
  double t59951;
  double t59958;
  double t59963;
  double t59964;
  double t59973;
  double t59979;
  double t59980;
  double t59994;
  double t59995;
  double t59997;
  double t60005;
  double t60010;
  double t60013;
  double t60025;
  double t60028;
  double t60034;
  double t60040;
  double t60041;
  double t60048;
  double t60061;
  double t60071;
  double t60074;
  double t60096;
  double t60127;
  double t60129;
  double t60369;
  double t60371;
  double t60391;
  double t60426;
  double t60430;
  double t60431;
  double t60425;
  double t60452;
  double t60466;
  double t60469;
  double t60472;
  double t60494;
  double t58920;
  double t58943;
  double t58979;
  double t58994;
  double t60556;
  double t60558;
  double t60574;
  double t60576;
  double t60578;
  double t60581;
  double t60615;
  double t60623;
  double t60640;
  double t58621;
  double t58640;
  double t58648;
  double t58661;
  double t60642;
  double t60644;
  double t60645;
  double t60755;
  double t60780;
  double t60786;
  double t58359;
  double t58377;
  double t58393;
  double t58496;
  double t60793;
  double t60798;
  double t60802;
  double t60909;
  double t60911;
  double t60918;
  double t60923;
  double t60924;
  double t60925;
  double t60919;
  double t60931;
  double t60934;
  double t60944;
  double t60947;
  double t60948;
  double t60575;
  double t60588;
  double t60597;
  double t60600;
  double t60963;
  double t60964;
  double t60965;
  double t60972;
  double t60981;
  double t60988;
  double t61032;
  double t61033;
  double t61037;
  double t60651;
  double t60656;
  double t60666;
  double t60700;
  double t61046;
  double t61065;
  double t61076;
  double t61163;
  double t61164;
  double t61167;
  double t60819;
  double t60824;
  double t60835;
  double t60882;
  double t61170;
  double t61171;
  double t61172;
  double t60163;
  double t60164;
  double t60170;
  double t60240;
  double t60241;
  double t60246;
  double t60251;
  double t60258;
  double t60259;
  double t58154;
  double t58192;
  double t58197;
  double t58208;
  double t58368;
  double t58375;
  double t58379;
  double t58380;
  double t58381;
  double t58385;
  double t58407;
  double t58410;
  double t58454;
  double t58488;
  double t58511;
  double t58524;
  double t58576;
  double t58577;
  double t60180;
  double t60181;
  double t60182;
  double t58618;
  double t58626;
  double t58639;
  double t58642;
  double t58645;
  double t58646;
  double t58647;
  double t58650;
  double t58656;
  double t58658;
  double t58659;
  double t58662;
  double t58663;
  double t58802;
  double t58803;
  double t60212;
  double t60222;
  double t60227;
  double t58859;
  double t58871;
  double t58879;
  double t58907;
  double t58908;
  double t58914;
  double t58918;
  double t58919;
  double t58922;
  double t58926;
  double t58944;
  double t58964;
  double t58972;
  double t58977;
  double t58980;
  double t58983;
  double t59000;
  double t59001;
  double t59002;
  double t59004;
  double t59007;
  double t60280;
  double t60308;
  double t60342;
  double t59036;
  double t59058;
  double t59077;
  double t59085;
  double t59086;
  double t59087;
  double t59092;
  double t59094;
  double t59104;
  double t59130;
  double t59151;
  double t59180;
  double t59243;
  double t59244;
  double t59248;
  double t59255;
  double t59257;
  double t59259;
  double t59269;
  double t59270;
  double t59277;
  double t59297;
  double t59392;
  double t59424;
  double t59484;
  double t59499;
  double t59510;
  double t59511;
  double t59513;
  double t59515;
  double t59519;
  double t59529;
  double t59553;
  double t59555;
  double t59563;
  double t59568;
  double t59587;
  double t59588;
  double t59611;
  double t59621;
  double t59626;
  double t59629;
  double t59641;
  double t59643;
  double t59652;
  double t59677;
  double t59680;
  double t59686;
  double t59698;
  double t59715;
  double t59734;
  double t59735;
  double t59782;
  double t59785;
  double t59788;
  double t59793;
  double t59802;
  double t59803;
  double t59805;
  double t59813;
  double t60172;
  double t60197;
  double t60237;
  double t60250;
  double t60261;
  double t60347;
  double t60354;
  double t60000;
  double t60015;
  double t60016;
  double t59967;
  double t59981;
  double t59986;
  double t60036;
  double t60050;
  double t60051;
  double t59936;
  double t59953;
  double t59956;
  double t60077;
  double t60134;
  double t60138;
  double t59867;
  double t59907;
  double t59910;
  double t60468;
  double t60523;
  double t60525;
  double t60528;
  double t60554;
  double t60584;
  double t60591;
  double t60592;
  double t60593;
  double t60599;
  double t60602;
  double t60605;
  double t60606;
  double t60611;
  double t60641;
  double t60646;
  double t60648;
  double t60650;
  double t60653;
  double t60658;
  double t60661;
  double t60663;
  double t60667;
  double t60687;
  double t60704;
  double t60733;
  double t60737;
  double t60748;
  double t60792;
  double t60807;
  double t60808;
  double t60816;
  double t60823;
  double t60827;
  double t60829;
  double t60831;
  double t60861;
  double t60869;
  double t60884;
  double t60885;
  double t60886;
  double t60888;
  double t60937;
  double t60949;
  double t60953;
  double t60959;
  double t60960;
  double t60968;
  double t60994;
  double t60995;
  double t60996;
  double t60997;
  double t60998;
  double t61000;
  double t61001;
  double t61006;
  double t61007;
  double t61009;
  double t61011;
  double t61014;
  double t61045;
  double t61077;
  double t61079;
  double t61081;
  double t61083;
  double t61084;
  double t61088;
  double t61090;
  double t61091;
  double t61092;
  double t61094;
  double t61095;
  double t61096;
  double t61097;
  double t61098;
  double t61114;
  double t61117;
  double t61123;
  double t61168;
  double t61188;
  double t61199;
  double t61207;
  double t61223;
  double t61226;
  double t61238;
  double t61247;
  double t61249;
  double t61262;
  double t61268;
  double t61285;
  double t61287;
  double t61288;
  double t61291;
  double t61293;
  double t61302;
  double t61310;
  double t59917;
  double t59957;
  double t59987;
  double t60021;
  double t60054;
  double t60140;
  double t60148;
  double t61399;
  double t61401;
  double t61403;
  double t61404;
  double t61405;
  double t61407;
  double t61409;
  double t61583;
  double t61591;
  double t60958;
  double t61022;
  double t61080;
  double t61135;
  double t61200;
  double t61317;
  double t61318;
  double t61509;
  double t61517;
  double t61519;
  double t61522;
  double t61528;
  double t61531;
  double t61532;
  double t61445;
  double t61446;
  double t61447;
  double t61448;
  double t61449;
  double t61450;
  double t61451;
  double t61570;
  double t61571;
  double t61572;
  double t61573;
  double t61574;
  double t61576;
  double t61584;
  double t61588;
  double t61589;
  double t61592;
  double t61593;
  double t61596;
  double t61597;
  double t61600;
  double t61601;
  double t61602;
  double t61603;
  double t61604;
  double t60526;
  double t60612;
  double t60649;
  double t60749;
  double t60813;
  double t60890;
  double t60898;
  double t61496;
  double t61497;
  double t61498;
  double t61499;
  double t61500;
  double t61501;
  double t61503;
  double t61420;
  double t61421;
  double t61425;
  double t61431;
  double t61435;
  double t61437;
  double t61438;
  double t61629;
  double t61632;
  double t61633;
  double t61635;
  double t61636;
  double t61637;
  double t61638;
  double t61639;
  double t61640;
  double t61641;
  double t61642;
  double t61643;
  double t61645;
  double t58198;
  double t58608;
  double t58852;
  double t58895;
  double t58915;
  double t59024;
  double t59025;
  double t61463;
  double t61464;
  double t61465;
  double t61466;
  double t61468;
  double t61469;
  double t61470;
  double t61361;
  double t61362;
  double t61366;
  double t61367;
  double t61369;
  double t61370;
  double t61373;
  double t61668;
  double t61672;
  double t61673;
  double t61674;
  double t61675;
  double t61677;
  double t61678;
  double t61679;
  double t61680;
  double t61681;
  double t61683;
  double t61684;
  double t61686;
  double t61547;
  double t61551;
  double t61552;
  double t61553;
  double t61554;
  double t61555;
  double t61556;
  double t61558;
  double t61561;
  double t61562;
  double t61564;
  double t61565;
  double t61566;
  double t61767;
  double t61768;
  double t61769;
  double t61771;
  double t61775;
  double t61779;
  double t61780;
  double t61781;
  double t61782;
  double t61784;
  double t61796;
  double t61803;
  double t61804;
  double t59098;
  double t59271;
  double t59533;
  double t59622;
  double t59693;
  double t59816;
  double t59819;
  double t61472;
  double t61473;
  double t61475;
  double t61476;
  double t61477;
  double t61479;
  double t61482;
  double t61375;
  double t61376;
  double t61378;
  double t61384;
  double t61385;
  double t61393;
  double t61395;
  double t61689;
  double t61690;
  double t61692;
  double t61693;
  double t61694;
  double t61695;
  double t61697;
  double t61698;
  double t61701;
  double t61705;
  double t61706;
  double t61707;
  double t61708;
  double t61575;
  double t61586;
  double t61590;
  double t61595;
  double t61598;
  double t61607;
  double t61608;
  double t61609;
  double t61612;
  double t61613;
  double t61614;
  double t61615;
  double t61620;
  double t61740;
  double t61742;
  double t61743;
  double t61745;
  double t61746;
  double t61826;
  double t61829;
  double t61839;
  double t61846;
  double t61850;
  double t57353;
  double t57738;
  double t57908;
  double t57909;
  double t61456;
  double t61457;
  double t61458;
  double t61459;
  double t61341;
  double t61342;
  double t61343;
  double t61345;
  double t61660;
  double t61661;
  double t61663;
  double t61664;
  double t61665;
  double t61537;
  double t61538;
  double t61539;
  double t61540;
  double t61545;
  t26533 = Cos(var1[12]);
  t31588 = Sin(var1[12]);
  t32385 = 3.e-6*t31588;
  t51798 = 3.e-6*t26533;
  t7042 = Sin(var1[10]);
  t29804 = -3.e-6*t26533;
  t55174 = 9.e-12*t31588;
  t56859 = -2.7e-17*t31588;
  t53968 = Cos(var1[10]);
  t54025 = -1.*t53968;
  t54030 = 1. + t54025;
  t47530 = t29804 + t32385;
  t50544 = 3.e-6*t47530;
  t51857 = t51798 + t32385;
  t52461 = 3.e-6*t51857;
  t53885 = -1.8e-11*t31588;
  t53933 = t50544 + t52461 + t53885;
  t54931 = -1.*t26533;
  t55948 = t54931 + t55174;
  t56858 = 3.e-6*t55948;
  t56865 = t51798 + t56858 + t56859;
  t56921 = t26533 + t55174;
  t57001 = 3.e-6*t56921;
  t57002 = t29804 + t57001 + t56859;
  t54041 = -1.000000000009*t54030;
  t54046 = 1. + t54041;
  t57008 = Sin(var1[4]);
  t57010 = Cos(var1[4]);
  t57011 = Cos(var1[5]);
  t57354 = -3.000000000054e-6*t31588;
  t57399 = t29804 + t57354;
  t57433 = -9.e-12*t31588;
  t57434 = t26533 + t52461 + t57433;
  t57520 = 1.000000000009*t31588;
  t57660 = t50544 + t57520;
  t57235 = -9.e-12*t54030;
  t57240 = 1. + t57235;
  t57294 = Sin(var1[5]);
  t57740 = t51798 + t57354;
  t57749 = t54931 + t50544 + t57433;
  t57846 = t52461 + t57520;
  t57931 = 1. + t54931;
  t57953 = -3.e-6*t31588;
  t57950 = 3.e-6*t57931;
  t57934 = 1.000000000009*t57931;
  t57983 = t57950 + t32385;
  t57984 = 3.e-6*t57983;
  t57980 = -9.e-12*t57931;
  t57954 = t57950 + t57953;
  t57955 = 3.e-6*t57954;
  t57968 = -1.8e-11*t57931;
  t57970 = 1. + t57968;
  t57972 = 3.e-6*t57970;
  t57974 = -3.e-6*t57931;
  t57997 = -1.*t31588;
  t58047 = t57974 + t32385;
  t58016 = 3.e-13*var1[12];
  t58060 = t57974 + t57953;
  t57994 = -1. + t57934 + t57984;
  t58003 = t57980 + t57955 + t57997;
  t58012 = t57972 + t57974 + t32385;
  t58018 = -1. + t57934;
  t58041 = 0.2*t58018;
  t58042 = -0.2000000000048*t57931;
  t58043 = t57980 + t57997;
  t58045 = 0.100000000003*t58043;
  t58046 = 0.1*t57954;
  t58048 = 3.e-7*t58047;
  t58050 = t58016 + t58041 + t58042 + t58045 + t58046 + t58048;
  t58052 = 1.e-7*var1[12];
  t58055 = 0.1*t57970;
  t58057 = 5.4e-18*t57931;
  t58062 = -3.e-12*t58060;
  t58063 = 0.100000000003*t58047;
  t58064 = t58052 + t58055 + t58057 + t58062 + t58063;
  t58070 = 0.1000000000039*t57931;
  t58071 = 3.e-7*t58060;
  t58074 = 0.1*t57983;
  t58075 = t57980 + t31588;
  t58077 = -3.e-12*t58075;
  t58080 = t58016 + t58070 + t58071 + t58074 + t58077;
  t57995 = t54046*t57994;
  t58005 = t7042*t58003;
  t58013 = -3.e-6*t7042*t58012;
  t58014 = t57995 + t58005 + t58013;
  t57957 = -1. + t57934 + t57955;
  t57964 = t7042*t57957;
  t57976 = t57972 + t57974 + t57953;
  t57977 = -3.e-6*t7042*t57976;
  t57987 = t57980 + t57984 + t31588;
  t57989 = t54046*t57987;
  t57991 = t57964 + t57977 + t57989;
  t58015 = 0.2000000000018*t7042;
  t58051 = t7042*t58050;
  t58065 = -3.e-6*t7042*t58064;
  t58081 = t54046*t58080;
  t58084 = t58015 + t58051 + t58065 + t58081;
  t58123 = -1.8e-12*t54030;
  t58125 = -1. + t53968;
  t58126 = 0.2*t58125;
  t58127 = t53968*t58050;
  t58129 = 3.e-6*t54030*t58064;
  t58131 = -1.*t7042*t58080;
  t58135 = t58123 + t58126 + t58127 + t58129 + t58131;
  t58144 = 6.000000000054e-7*t54030;
  t58145 = 3.e-6*t54030*t58050;
  t58149 = t57240*t58064;
  t58150 = 3.e-6*t7042*t58080;
  t58151 = t58144 + t58145 + t58149 + t58150;
  t53958 = -3.e-6*t7042*t53933;
  t56890 = t54046*t56865;
  t57003 = t7042*t57002;
  t57005 = t53958 + t56890 + t57003;
  t57009 = t57005*t57008;
  t57021 = 3.e-6*t54030*t53933;
  t57079 = -1.*t7042*t56865;
  t57139 = t53968*t57002;
  t57210 = t57021 + t57079 + t57139;
  t57234 = t57011*t57210;
  t57247 = t57240*t53933;
  t57278 = 3.e-6*t7042*t56865;
  t57282 = 3.e-6*t54030*t57002;
  t57283 = t57247 + t57278 + t57282;
  t57340 = -1.*t57283*t57294;
  t57346 = t57234 + t57340;
  t57350 = t57010*t57346;
  t57351 = t57009 + t57350;
  t58156 = t53968*t57957;
  t58157 = 3.e-6*t54030*t57976;
  t58158 = -1.*t7042*t57987;
  t58161 = t58156 + t58157 + t58158;
  t58163 = 3.e-6*t54030*t57957;
  t58164 = t57240*t57976;
  t58165 = 3.e-6*t7042*t57987;
  t58166 = t58163 + t58164 + t58165;
  t58211 = -1.000000000009*t57931;
  t58214 = 1. + t58211;
  t58215 = 3.e-6*t58214;
  t58216 = 9.e-12*t57931;
  t58242 = t51798 + t57953;
  t58276 = t29804 + t57953;
  t58254 = 3.e-7*t58242;
  t58255 = t54931 + t57433;
  t58256 = 0.100000000003*t58255;
  t58258 = 0.1*t47530;
  t58260 = -3.000000000027e-12*t31588;
  t58265 = 3.e-13 + t58254 + t58256 + t58258 + t58260;
  t58277 = -3.e-12*t58276;
  t58279 = 0.100000000003*t58242;
  t58280 = -1.7999946e-12*t31588;
  t58283 = 1.e-7 + t58277 + t58279 + t58280;
  t58286 = 3.e-7*t58276;
  t58288 = t26533 + t57433;
  t58343 = -3.e-12*t58288;
  t58345 = 0.1*t51857;
  t58346 = 0.1000000000039*t31588;
  t58350 = 3.e-13 + t58286 + t58343 + t58345 + t58346;
  t57432 = -3.e-6*t7042*t57399;
  t57472 = t54046*t57434;
  t57666 = t7042*t57660;
  t57668 = t57432 + t57472 + t57666;
  t57716 = 3.e-6*t54030*t57399;
  t57718 = -1.*t7042*t57434;
  t57719 = t53968*t57660;
  t57720 = t57716 + t57718 + t57719;
  t57727 = t57240*t57399;
  t57729 = 3.e-6*t7042*t57434;
  t57730 = 3.e-6*t54030*t57660;
  t57731 = t57727 + t57729 + t57730;
  t58369 = 3.e-6*t54030*t58265;
  t58370 = t57240*t58283;
  t58371 = 3.e-6*t7042*t58350;
  t58373 = t58369 + t58370 + t58371;
  t58209 = 1. + t57968 + t57955 + t57984;
  t58218 = t58216 + t57997;
  t58219 = 3.e-6*t58218;
  t58220 = t58215 + t57950 + t58219 + t32385;
  t58222 = t58216 + t31588;
  t58225 = 3.e-6*t58222;
  t58231 = t58215 + t57950 + t57953 + t58225;
  t58360 = t53968*t58265;
  t58361 = 3.e-6*t54030*t58283;
  t58362 = -1.*t7042*t58350;
  t58364 = t58360 + t58361 + t58362;
  t58269 = t7042*t58265;
  t58285 = -3.e-6*t7042*t58283;
  t58351 = t54046*t58350;
  t58353 = t58269 + t58285 + t58351;
  t58210 = -3.e-6*t7042*t58209;
  t58221 = t54046*t58220;
  t58239 = t7042*t58231;
  t58240 = t58210 + t58221 + t58239;
  t58439 = t57240*t58209;
  t58451 = 3.e-6*t7042*t58220;
  t58452 = 3.e-6*t54030*t58231;
  t58453 = t58439 + t58451 + t58452;
  t58458 = 3.e-6*t54030*t58209;
  t58468 = -1.*t7042*t58220;
  t58474 = t53968*t58231;
  t58483 = t58458 + t58468 + t58474;
  t58087 = -1.*t7042*t57994;
  t58111 = t53968*t58003;
  t58120 = 3.e-6*t54030*t58012;
  t58121 = t58087 + t58111 + t58120;
  t58138 = 3.e-6*t7042*t57994;
  t58139 = 3.e-6*t54030*t58003;
  t58140 = t57240*t58012;
  t58142 = t58138 + t58139 + t58140;
  t57741 = -3.e-6*t7042*t57740;
  t57784 = t7042*t57749;
  t57851 = t54046*t57846;
  t57853 = t57741 + t57784 + t57851;
  t57859 = 3.e-6*t54030*t57740;
  t57860 = t53968*t57749;
  t57878 = -1.*t7042*t57846;
  t57890 = t57859 + t57860 + t57878;
  t57892 = t57240*t57740;
  t57893 = 3.e-6*t54030*t57749;
  t57895 = 3.e-6*t7042*t57846;
  t57896 = t57892 + t57893 + t57895;
  t58609 = t58014*t58084;
  t58610 = t58121*t58135;
  t58611 = t58142*t58151;
  t58616 = t58609 + t58610 + t58611;
  t58668 = -1.*t58151*t58453;
  t58669 = -1.*t58135*t58483;
  t58680 = -1.*t58084*t58240;
  t58690 = t58668 + t58669 + t58680;
  t57670 = t57668*t57008;
  t57726 = t57011*t57720;
  t57733 = -1.*t57731*t57294;
  t57734 = t57726 + t57733;
  t57735 = t57010*t57734;
  t57737 = t57670 + t57735;
  t58202 = -1.*t57991*t58084;
  t58204 = -1.*t58161*t58135;
  t58205 = -1.*t58166*t58151;
  t58207 = t58202 + t58204 + t58205;
  t58525 = t58151*t58453;
  t58526 = t58135*t58483;
  t58531 = t58084*t58240;
  t58566 = t58525 + t58526 + t58531;
  t57854 = t57853*t57008;
  t57891 = t57011*t57890;
  t57897 = -1.*t57896*t57294;
  t57900 = t57891 + t57897;
  t57902 = t57010*t57900;
  t57906 = t57854 + t57902;
  t58086 = -1.*t58014*t58084;
  t58136 = -1.*t58121*t58135;
  t58152 = -1.*t58142*t58151;
  t58153 = t58086 + t58136 + t58152;
  t58155 = t57991*t58084;
  t58162 = t58161*t58135;
  t58167 = t58166*t58151;
  t58187 = t58155 + t58162 + t58167;
  t59037 = -1.*t58050*t58003;
  t59041 = -1.*t58064*t58012;
  t59049 = -1.*t57994*t58080;
  t59057 = t59037 + t59041 + t59049;
  t59059 = t57957*t58050;
  t59066 = t58064*t57976;
  t59072 = t57987*t58080;
  t59074 = t59059 + t59066 + t59072;
  t59110 = -1.*t58064*t57399;
  t59111 = -1.*t57957*t58265;
  t59113 = -1.*t57976*t58283;
  t59118 = -1.*t58350*t57987;
  t59124 = -1.*t58050*t57660;
  t59125 = -1.*t57434*t58080;
  t59127 = t59110 + t59111 + t59113 + t59118 + t59124 + t59125;
  t59131 = -1.*t57957*t58050;
  t59135 = -1.*t58064*t57976;
  t59136 = -1.*t57987*t58080;
  t59145 = t59131 + t59135 + t59136;
  t59152 = t58064*t58209;
  t59159 = t58220*t58080;
  t59160 = t58050*t58231;
  t59168 = t59152 + t59159 + t59160;
  t59182 = t58064*t53933;
  t59186 = t58209*t58283;
  t59204 = t58050*t57002;
  t59205 = t58220*t58350;
  t59237 = t56865*t58080;
  t59238 = t58265*t58231;
  t59239 = t59182 + t59186 + t59204 + t59205 + t59237 + t59238;
  t58578 = t58014*t57008;
  t58582 = t57011*t58121;
  t58587 = -1.*t58142*t57294;
  t58588 = t58582 + t58587;
  t58593 = t57010*t58588;
  t58601 = t58578 + t58593;
  t59280 = t58050*t58003;
  t59287 = t58064*t58012;
  t59291 = t57994*t58080;
  t59294 = t59280 + t59287 + t59291;
  t59302 = t58064*t57740;
  t59306 = t58050*t57749;
  t59308 = t58003*t58265;
  t59312 = t58283*t58012;
  t59343 = t57994*t58350;
  t59348 = t57846*t58080;
  t59382 = t59302 + t59306 + t59308 + t59312 + t59343 + t59348;
  t59397 = -1.*t58064*t58209;
  t59401 = -1.*t58220*t58080;
  t59409 = -1.*t58050*t58231;
  t59423 = t59397 + t59401 + t59409;
  t59432 = -1.*t58064*t53933;
  t59434 = -1.*t58209*t58283;
  t59436 = -1.*t58050*t57002;
  t59437 = -1.*t58220*t58350;
  t59447 = -1.*t56865*t58080;
  t59455 = -1.*t58265*t58231;
  t59461 = t59432 + t59434 + t59436 + t59437 + t59447 + t59455;
  t58805 = t57991*t57008;
  t58810 = t57011*t58161;
  t58811 = -1.*t58166*t57294;
  t58830 = t58810 + t58811;
  t58847 = t57010*t58830;
  t58851 = t58805 + t58847;
  t59723 = t58064*t57399;
  t59725 = t57957*t58265;
  t59726 = t57976*t58283;
  t59727 = t58350*t57987;
  t59728 = t58050*t57660;
  t59729 = t57434*t58080;
  t59732 = t59723 + t59725 + t59726 + t59727 + t59728 + t59729;
  t59743 = -1.*t58064*t57740;
  t59744 = -1.*t58050*t57749;
  t59750 = -1.*t58003*t58265;
  t59755 = -1.*t58283*t58012;
  t59762 = -1.*t57994*t58350;
  t59765 = -1.*t57846*t58080;
  t59775 = t59743 + t59744 + t59750 + t59755 + t59762 + t59765;
  t59010 = t58240*t57008;
  t59011 = t57011*t58483;
  t59012 = -1.*t58453*t57294;
  t59013 = t59011 + t59012;
  t59021 = t57010*t59013;
  t59023 = t59010 + t59021;
  t59860 = Sin(var1[3]);
  t59872 = Cos(var1[3]);
  t59861 = t57011*t57283;
  t59862 = t57210*t57294;
  t59865 = t59861 + t59862;
  t59889 = t57010*t57005;
  t59899 = -1.*t57008*t57346;
  t59903 = t59889 + t59899;
  t59920 = t57011*t58142;
  t59928 = t58121*t57294;
  t59935 = t59920 + t59928;
  t59939 = t57010*t58014;
  t59944 = -1.*t57008*t58588;
  t59951 = t59939 + t59944;
  t59958 = t57011*t58166;
  t59963 = t58161*t57294;
  t59964 = t59958 + t59963;
  t59973 = t57010*t57991;
  t59979 = -1.*t57008*t58830;
  t59980 = t59973 + t59979;
  t59994 = t57011*t57731;
  t59995 = t57720*t57294;
  t59997 = t59994 + t59995;
  t60005 = t57010*t57668;
  t60010 = -1.*t57008*t57734;
  t60013 = t60005 + t60010;
  t60025 = t57011*t57896;
  t60028 = t57890*t57294;
  t60034 = t60025 + t60028;
  t60040 = t57010*t57853;
  t60041 = -1.*t57008*t57900;
  t60048 = t60040 + t60041;
  t60061 = t57011*t58453;
  t60071 = t58483*t57294;
  t60074 = t60061 + t60071;
  t60096 = t57010*t58240;
  t60127 = -1.*t57008*t59013;
  t60129 = t60096 + t60127;
  t60369 = t57011*t58151;
  t60371 = t58135*t57294;
  t60391 = t60369 + t60371;
  t60426 = t57011*t58135;
  t60430 = -1.*t58151*t57294;
  t60431 = t60426 + t60430;
  t60425 = -1.*t59935*t60391;
  t60452 = -1.*t58588*t60431;
  t60466 = t58086 + t60425 + t60452;
  t60469 = t59964*t60391;
  t60472 = t58830*t60431;
  t60494 = t58155 + t60469 + t60472;
  t58920 = t58353*t57991;
  t58943 = t57668*t58084;
  t58979 = -1.*t58014*t58353;
  t58994 = -1.*t57853*t58084;
  t60556 = t57011*t58373;
  t60558 = t58364*t57294;
  t60574 = t60556 + t60558;
  t60576 = t57011*t58364;
  t60578 = -1.*t58373*t57294;
  t60581 = t60576 + t60578;
  t60615 = t59935*t60391;
  t60623 = t58588*t60431;
  t60640 = t58609 + t60615 + t60623;
  t58621 = t58014*t58353;
  t58640 = t57853*t58084;
  t58648 = -1.*t57005*t58084;
  t58661 = -1.*t58353*t58240;
  t60642 = -1.*t60431*t59013;
  t60644 = -1.*t60391*t60074;
  t60645 = t58680 + t60642 + t60644;
  t60755 = -1.*t59964*t60391;
  t60780 = -1.*t58830*t60431;
  t60786 = t58202 + t60755 + t60780;
  t58359 = -1.*t58353*t57991;
  t58377 = -1.*t57668*t58084;
  t58393 = t57005*t58084;
  t58496 = t58353*t58240;
  t60793 = t60431*t59013;
  t60798 = t60391*t60074;
  t60802 = t58531 + t60793 + t60798;
  t60909 = t58084*t57008;
  t60911 = t57010*t60431;
  t60918 = t60909 + t60911;
  t60923 = t57010*t58084;
  t60924 = -1.*t57008*t60431;
  t60925 = t60923 + t60924;
  t60919 = -1.*t58601*t60918;
  t60931 = -1.*t59951*t60925;
  t60934 = t60425 + t60919 + t60931;
  t60944 = t58851*t60918;
  t60947 = t59980*t60925;
  t60948 = t60469 + t60944 + t60947;
  t60575 = t60574*t59964;
  t60588 = t59997*t60391;
  t60597 = -1.*t59935*t60574;
  t60600 = -1.*t60034*t60391;
  t60963 = t58353*t57008;
  t60964 = t57010*t60581;
  t60965 = t60963 + t60964;
  t60972 = t57010*t58353;
  t60981 = -1.*t57008*t60581;
  t60988 = t60972 + t60981;
  t61032 = t58601*t60918;
  t61033 = t59951*t60925;
  t61037 = t60615 + t61032 + t61033;
  t60651 = t59935*t60574;
  t60656 = t60034*t60391;
  t60666 = -1.*t59865*t60391;
  t60700 = -1.*t60574*t60074;
  t61046 = -1.*t60918*t59023;
  t61065 = -1.*t60925*t60129;
  t61076 = t60644 + t61046 + t61065;
  t61163 = -1.*t58851*t60918;
  t61164 = -1.*t59980*t60925;
  t61167 = t60755 + t61163 + t61164;
  t60819 = -1.*t60574*t59964;
  t60824 = -1.*t59997*t60391;
  t60835 = t59865*t60391;
  t60882 = t60574*t60074;
  t61170 = t60918*t59023;
  t61171 = t60925*t60129;
  t61172 = t60798 + t61170 + t61171;
  t60163 = t59872*t59865;
  t60164 = -1.*t59860*t59903;
  t60170 = t60163 + t60164;
  t60240 = t59872*t59997;
  t60241 = -1.*t59860*t60013;
  t60246 = t60240 + t60241;
  t60251 = t59872*t60034;
  t60258 = -1.*t59860*t60048;
  t60259 = t60251 + t60258;
  t58154 = t57991*t58153;
  t58192 = t58014*t58187;
  t58197 = t58154 + t58192;
  t58208 = t57005*t58207;
  t58368 = -1.*t58364*t58161;
  t58375 = -1.*t58373*t58166;
  t58379 = -1.*t57720*t58135;
  t58380 = -1.*t57731*t58151;
  t58381 = t58359 + t58368 + t58375 + t58377 + t58379 + t58380;
  t58385 = t58240*t58381;
  t58407 = t57210*t58135;
  t58410 = t57283*t58151;
  t58454 = t58373*t58453;
  t58488 = t58364*t58483;
  t58511 = t58393 + t58407 + t58410 + t58454 + t58488 + t58496;
  t58524 = t57991*t58511;
  t58576 = t57668*t58566;
  t58577 = t58208 + t58385 + t58524 + t58576;
  t60180 = t59872*t59935;
  t60181 = -1.*t59860*t59951;
  t60182 = t60180 + t60181;
  t58618 = t57005*t58616;
  t58626 = t58121*t58364;
  t58639 = t58142*t58373;
  t58642 = t57890*t58135;
  t58645 = t57896*t58151;
  t58646 = t58621 + t58626 + t58639 + t58640 + t58642 + t58645;
  t58647 = t58240*t58646;
  t58650 = -1.*t57210*t58135;
  t58656 = -1.*t57283*t58151;
  t58658 = -1.*t58373*t58453;
  t58659 = -1.*t58364*t58483;
  t58662 = t58648 + t58650 + t58656 + t58658 + t58659 + t58661;
  t58663 = t58014*t58662;
  t58802 = t57853*t58690;
  t58803 = t58618 + t58647 + t58663 + t58802;
  t60212 = t59872*t59964;
  t60222 = -1.*t59860*t59980;
  t60227 = t60212 + t60222;
  t58859 = t58240*t58616;
  t58871 = t58014*t58690;
  t58879 = t58859 + t58871;
  t58907 = t58240*t58207;
  t58908 = t57991*t58566;
  t58914 = t58907 + t58908;
  t58918 = t57668*t58153;
  t58919 = t57853*t58187;
  t58922 = t58364*t58161;
  t58926 = t58373*t58166;
  t58944 = t57720*t58135;
  t58964 = t57731*t58151;
  t58972 = t58920 + t58922 + t58926 + t58943 + t58944 + t58964;
  t58977 = t58014*t58972;
  t58980 = -1.*t58121*t58364;
  t58983 = -1.*t58142*t58373;
  t59000 = -1.*t57890*t58135;
  t59001 = -1.*t57896*t58151;
  t59002 = t58979 + t58980 + t58983 + t58994 + t59000 + t59001;
  t59004 = t57991*t59002;
  t59007 = t58918 + t58919 + t58977 + t59004;
  t60280 = t59872*t60074;
  t60308 = -1.*t59860*t60129;
  t60342 = t60280 + t60308;
  t59036 = 0.2*t58220;
  t59058 = -1.*t57976*t59057;
  t59077 = -1.*t58012*t59074;
  t59085 = t57957*t59057;
  t59086 = t58003*t59074;
  t59087 = t59085 + t59086;
  t59092 = -3.e-6*t59087;
  t59094 = t59036 + t59058 + t59077 + t59092;
  t59104 = 0.2*t57846;
  t59130 = -1.*t58209*t59127;
  t59151 = -1.*t53933*t59145;
  t59180 = -1.*t57399*t59168;
  t59243 = -1.*t57976*t59239;
  t59244 = t58231*t59127;
  t59248 = t57002*t59145;
  t59255 = t57660*t59168;
  t59257 = t57957*t59239;
  t59259 = t59244 + t59248 + t59255 + t59257;
  t59269 = -3.e-6*t59259;
  t59270 = t59104 + t59130 + t59151 + t59180 + t59243 + t59269;
  t59277 = 0.2*t57434;
  t59297 = -1.*t53933*t59294;
  t59392 = -1.*t58209*t59382;
  t59424 = -1.*t57740*t59423;
  t59484 = -1.*t58012*t59461;
  t59499 = t57002*t59294;
  t59510 = t58231*t59382;
  t59511 = t57749*t59423;
  t59513 = t58003*t59461;
  t59515 = t59499 + t59510 + t59511 + t59513;
  t59519 = -3.e-6*t59515;
  t59529 = t59277 + t59297 + t59392 + t59424 + t59484 + t59519;
  t59553 = 0.2*t57987;
  t59555 = -1.*t58209*t59294;
  t59563 = -1.*t58012*t59423;
  t59568 = t58231*t59294;
  t59587 = t58003*t59423;
  t59588 = t59568 + t59587;
  t59611 = -3.e-6*t59588;
  t59621 = t59553 + t59555 + t59563 + t59611;
  t59626 = 0.2*t57994;
  t59629 = -1.*t58209*t59145;
  t59641 = -1.*t57976*t59168;
  t59643 = t58231*t59145;
  t59652 = t57957*t59168;
  t59677 = t59643 + t59652;
  t59680 = -3.e-6*t59677;
  t59686 = t59626 + t59629 + t59641 + t59680;
  t59698 = 0.2*t56865;
  t59715 = -1.*t57399*t59057;
  t59734 = -1.*t58012*t59732;
  t59735 = -1.*t57740*t59074;
  t59782 = -1.*t57976*t59775;
  t59785 = t57660*t59057;
  t59788 = t58003*t59732;
  t59793 = t57749*t59074;
  t59802 = t57957*t59775;
  t59803 = t59785 + t59788 + t59793 + t59802;
  t59805 = -3.e-6*t59803;
  t59813 = t59698 + t59715 + t59734 + t59735 + t59782 + t59805;
  t60172 = 0.05186*t59023*t60170;
  t60197 = 0.05186*t57906*t60182;
  t60237 = 0.05186*t57737*t60227;
  t60250 = 0.05186*t58851*t60246;
  t60261 = 0.05186*t58601*t60259;
  t60347 = 0.05186*t57351*t60342;
  t60354 = t60172 + t60197 + t60237 + t60250 + t60261 + t60347;
  t60000 = t59860*t59997;
  t60015 = t59872*t60013;
  t60016 = t60000 + t60015;
  t59967 = t59860*t59964;
  t59981 = t59872*t59980;
  t59986 = t59967 + t59981;
  t60036 = t59860*t60034;
  t60050 = t59872*t60048;
  t60051 = t60036 + t60050;
  t59936 = t59860*t59935;
  t59953 = t59872*t59951;
  t59956 = t59936 + t59953;
  t60077 = t59860*t60074;
  t60134 = t59872*t60129;
  t60138 = t60077 + t60134;
  t59867 = t59860*t59865;
  t59907 = t59872*t59903;
  t59910 = t59867 + t59907;
  t60468 = t59964*t60466;
  t60523 = t59935*t60494;
  t60525 = t60468 + t60523;
  t60528 = t59997*t60466;
  t60554 = t60034*t60494;
  t60584 = t60581*t58830;
  t60591 = t57734*t60431;
  t60592 = t58920 + t58943 + t60575 + t60584 + t60588 + t60591;
  t60593 = t59935*t60592;
  t60599 = -1.*t58588*t60581;
  t60602 = -1.*t57900*t60431;
  t60605 = t58979 + t58994 + t60597 + t60599 + t60600 + t60602;
  t60606 = t59964*t60605;
  t60611 = t60528 + t60554 + t60593 + t60606;
  t60641 = t60074*t60640;
  t60646 = t59935*t60645;
  t60648 = t60641 + t60646;
  t60650 = t59865*t60640;
  t60653 = t58588*t60581;
  t60658 = t57900*t60431;
  t60661 = t58621 + t58640 + t60651 + t60653 + t60656 + t60658;
  t60663 = t60074*t60661;
  t60667 = -1.*t57346*t60431;
  t60687 = -1.*t60581*t59013;
  t60704 = t58648 + t58661 + t60666 + t60667 + t60687 + t60700;
  t60733 = t59935*t60704;
  t60737 = t60034*t60645;
  t60748 = t60650 + t60663 + t60733 + t60737;
  t60792 = t60074*t60786;
  t60807 = t59964*t60802;
  t60808 = t60792 + t60807;
  t60816 = t59865*t60786;
  t60823 = -1.*t60581*t58830;
  t60827 = -1.*t57734*t60431;
  t60829 = t58359 + t58377 + t60819 + t60823 + t60824 + t60827;
  t60831 = t60074*t60829;
  t60861 = t57346*t60431;
  t60869 = t60581*t59013;
  t60884 = t58393 + t58496 + t60835 + t60861 + t60869 + t60882;
  t60885 = t59964*t60884;
  t60886 = t59997*t60802;
  t60888 = t60816 + t60831 + t60885 + t60886;
  t60937 = t58851*t60934;
  t60949 = t58601*t60948;
  t60953 = t60937 + t60949;
  t60959 = t57737*t60934;
  t60960 = t57906*t60948;
  t60968 = t60965*t58851;
  t60994 = t60988*t59980;
  t60995 = t57737*t60918;
  t60996 = t60013*t60925;
  t60997 = t60575 + t60588 + t60968 + t60994 + t60995 + t60996;
  t60998 = t58601*t60997;
  t61000 = -1.*t58601*t60965;
  t61001 = -1.*t59951*t60988;
  t61006 = -1.*t57906*t60918;
  t61007 = -1.*t60048*t60925;
  t61009 = t60597 + t60600 + t61000 + t61001 + t61006 + t61007;
  t61011 = t58851*t61009;
  t61014 = t60959 + t60960 + t60998 + t61011;
  t61045 = t59023*t61037;
  t61077 = t58601*t61076;
  t61079 = t61045 + t61077;
  t61081 = t57351*t61037;
  t61083 = t58601*t60965;
  t61084 = t59951*t60988;
  t61088 = t57906*t60918;
  t61090 = t60048*t60925;
  t61091 = t60651 + t60656 + t61083 + t61084 + t61088 + t61090;
  t61092 = t59023*t61091;
  t61094 = -1.*t57351*t60918;
  t61095 = -1.*t59903*t60925;
  t61096 = -1.*t60965*t59023;
  t61097 = -1.*t60988*t60129;
  t61098 = t60666 + t60700 + t61094 + t61095 + t61096 + t61097;
  t61114 = t58601*t61098;
  t61117 = t57906*t61076;
  t61123 = t61081 + t61092 + t61114 + t61117;
  t61168 = t59023*t61167;
  t61188 = t58851*t61172;
  t61199 = t61168 + t61188;
  t61207 = t57351*t61167;
  t61223 = -1.*t60965*t58851;
  t61226 = -1.*t60988*t59980;
  t61238 = -1.*t57737*t60918;
  t61247 = -1.*t60013*t60925;
  t61249 = t60819 + t60824 + t61223 + t61226 + t61238 + t61247;
  t61262 = t59023*t61249;
  t61268 = t57351*t60918;
  t61285 = t59903*t60925;
  t61287 = t60965*t59023;
  t61288 = t60988*t60129;
  t61291 = t60835 + t60882 + t61268 + t61285 + t61287 + t61288;
  t61293 = t58851*t61291;
  t61302 = t57737*t61172;
  t61310 = t61207 + t61262 + t61293 + t61302;
  t59917 = 0.05186*t59023*t59910;
  t59957 = 0.05186*t57906*t59956;
  t59987 = 0.05186*t57737*t59986;
  t60021 = 0.05186*t58851*t60016;
  t60054 = 0.05186*t58601*t60051;
  t60140 = 0.05186*t57351*t60138;
  t60148 = t59917 + t59957 + t59987 + t60021 + t60054 + t60140;
  t61399 = 0.05186*t60227*t60016;
  t61401 = 0.05186*t59986*t60246;
  t61403 = 0.05186*t60182*t60051;
  t61404 = 0.05186*t59956*t60259;
  t61405 = 0.05186*t60170*t60138;
  t61407 = 0.05186*t59910*t60342;
  t61409 = t61399 + t61401 + t61403 + t61404 + t61405 + t61407;
  t61583 = 3.000000000054e-6*t31588;
  t61591 = -3.e-6*t57970;
  t60958 = 0.05186*t57351*t60953;
  t61022 = 0.05186*t59023*t61014;
  t61080 = 0.05186*t57737*t61079;
  t61135 = 0.05186*t58851*t61123;
  t61200 = 0.05186*t57906*t61199;
  t61317 = 0.05186*t58601*t61310;
  t61318 = t60958 + t61022 + t61080 + t61135 + t61200 + t61317;
  t61509 = 0.05186*t59910*t60953;
  t61517 = 0.05186*t60138*t61014;
  t61519 = 0.05186*t60016*t61079;
  t61522 = 0.05186*t59986*t61123;
  t61528 = 0.05186*t60051*t61199;
  t61531 = 0.05186*t59956*t61310;
  t61532 = t61509 + t61517 + t61519 + t61522 + t61528 + t61531;
  t61445 = 0.05186*t60170*t60953;
  t61446 = 0.05186*t60342*t61014;
  t61447 = 0.05186*t60246*t61079;
  t61448 = 0.05186*t60227*t61123;
  t61449 = 0.05186*t60259*t61199;
  t61450 = 0.05186*t60182*t61310;
  t61451 = t61445 + t61446 + t61447 + t61448 + t61449 + t61450;
  t61570 = 1.8e-11*t57931;
  t61571 = -3.e-6*t57954;
  t61572 = -3.e-6*t57983;
  t61573 = -3.e-6*t58231;
  t61574 = -1. + t61570 + t61571 + t61572 + t61573;
  t61576 = -3.e-6*t57749;
  t61584 = t29804 + t61576 + t61583;
  t61588 = -3.e-6*t57660;
  t61589 = t51798 + t61583 + t61588;
  t61592 = -3.e-6*t57957;
  t61593 = t61591 + t57950 + t61592 + t32385;
  t61596 = -3.e-6*t58003;
  t61597 = t61591 + t57950 + t61596 + t57953;
  t61600 = -3.e-6*t57002;
  t61601 = -3.e-6*t47530;
  t61602 = -3.e-6*t51857;
  t61603 = 1.8e-11*t31588;
  t61604 = t61600 + t61601 + t61602 + t61603;
  t60526 = 0.05186*t57351*t60525;
  t60612 = 0.05186*t59023*t60611;
  t60649 = 0.05186*t57737*t60648;
  t60749 = 0.05186*t58851*t60748;
  t60813 = 0.05186*t57906*t60808;
  t60890 = 0.05186*t58601*t60888;
  t60898 = t60526 + t60612 + t60649 + t60749 + t60813 + t60890;
  t61496 = 0.05186*t59910*t60525;
  t61497 = 0.05186*t60611*t60138;
  t61498 = 0.05186*t60016*t60648;
  t61499 = 0.05186*t59986*t60748;
  t61500 = 0.05186*t60051*t60808;
  t61501 = 0.05186*t59956*t60888;
  t61503 = t61496 + t61497 + t61498 + t61499 + t61500 + t61501;
  t61420 = 0.05186*t60170*t60525;
  t61421 = 0.05186*t60611*t60342;
  t61425 = 0.05186*t60246*t60648;
  t61431 = 0.05186*t60227*t60748;
  t61435 = 0.05186*t60259*t60808;
  t61437 = 0.05186*t60182*t60888;
  t61438 = t61420 + t61421 + t61425 + t61431 + t61435 + t61437;
  t61629 = 0.000245*t60074*t57351;
  t61632 = 0.000245*t60034*t58601;
  t61633 = 2.e-6*t59997*t58851;
  t61635 = 2.e-6*t59964*t57737;
  t61636 = 0.000245*t59935*t57906;
  t61637 = 0.000245*t59865*t59023;
  t61638 = 0.05186*t60611*t60953;
  t61639 = 0.05186*t60525*t61014;
  t61640 = 0.05186*t60748*t61079;
  t61641 = 0.05186*t60648*t61123;
  t61642 = 0.05186*t60888*t61199;
  t61643 = 0.05186*t60808*t61310;
  t61645 = t61629 + t61632 + t61633 + t61635 + t61636 + t61637 + t61638 + t61639 + t61640 + t61641 + t61642 + t61643;
  t58198 = 0.05186*t58197*t57351;
  t58608 = 0.05186*t58577*t58601;
  t58852 = 0.05186*t58803*t58851;
  t58895 = 0.05186*t58879*t57737;
  t58915 = 0.05186*t58914*t57906;
  t59024 = 0.05186*t59007*t59023;
  t59025 = t58198 + t58608 + t58852 + t58895 + t58915 + t59024;
  t61463 = 0.05186*t58197*t59910;
  t61464 = 0.05186*t58577*t59956;
  t61465 = 0.05186*t58803*t59986;
  t61466 = 0.05186*t58879*t60016;
  t61468 = 0.05186*t58914*t60051;
  t61469 = 0.05186*t59007*t60138;
  t61470 = t61463 + t61464 + t61465 + t61466 + t61468 + t61469;
  t61361 = 0.05186*t58197*t60170;
  t61362 = 0.05186*t58577*t60182;
  t61366 = 0.05186*t58803*t60227;
  t61367 = 0.05186*t58879*t60246;
  t61369 = 0.05186*t58914*t60259;
  t61370 = 0.05186*t59007*t60342;
  t61373 = t61361 + t61362 + t61366 + t61367 + t61369 + t61370;
  t61668 = 0.000245*t58240*t59865;
  t61672 = 0.000245*t57853*t59935;
  t61673 = 2.e-6*t57668*t59964;
  t61674 = 2.e-6*t57991*t59997;
  t61675 = 0.000245*t58014*t60034;
  t61677 = 0.000245*t57005*t60074;
  t61678 = 0.05186*t59007*t60525;
  t61679 = 0.05186*t58197*t60611;
  t61680 = 0.05186*t58803*t60648;
  t61681 = 0.05186*t58879*t60748;
  t61683 = 0.05186*t58577*t60808;
  t61684 = 0.05186*t58914*t60888;
  t61686 = t61668 + t61672 + t61673 + t61674 + t61675 + t61677 + t61678 + t61679 + t61680 + t61681 + t61683 + t61684;
  t61547 = 0.000245*t58240*t57351;
  t61551 = 0.000245*t57853*t58601;
  t61552 = 2.e-6*t57668*t58851;
  t61553 = 2.e-6*t57991*t57737;
  t61554 = 0.000245*t58014*t57906;
  t61555 = 0.000245*t57005*t59023;
  t61556 = 0.05186*t59007*t60953;
  t61558 = 0.05186*t58197*t61014;
  t61561 = 0.05186*t58803*t61079;
  t61562 = 0.05186*t58879*t61123;
  t61564 = 0.05186*t58577*t61199;
  t61565 = 0.05186*t58914*t61310;
  t61566 = t61547 + t61551 + t61552 + t61553 + t61554 + t61555 + t61556 + t61558 + t61561 + t61562 + t61564 + t61565;
  t61767 = 0.000245*t58014*t61584;
  t61768 = 2.e-6*t57991*t61589;
  t61769 = 2.e-6*t61593*t57668;
  t61771 = 0.000245*t61597*t57853;
  t61775 = 0.000245*t57005*t61574;
  t61779 = 0.000245*t61604*t58240;
  t61780 = 0.05186*t59007*t59094;
  t61781 = 0.05186*t58197*t59813;
  t61782 = 0.05186*t58803*t59621;
  t61784 = 0.05186*t58577*t59686;
  t61796 = 0.05186*t58879*t59529;
  t61803 = 0.05186*t58914*t59270;
  t61804 = t61767 + t61768 + t61769 + t61771 + t61775 + t61779 + t61780 + t61781 + t61782 + t61784 + t61796 + t61803;
  t59098 = 0.05186*t59094*t57351;
  t59271 = 0.05186*t59270*t58601;
  t59533 = 0.05186*t59529*t58851;
  t59622 = 0.05186*t59621*t57737;
  t59693 = 0.05186*t59686*t57906;
  t59816 = 0.05186*t59813*t59023;
  t59819 = t59098 + t59271 + t59533 + t59622 + t59693 + t59816;
  t61472 = 0.05186*t59094*t59910;
  t61473 = 0.05186*t59270*t59956;
  t61475 = 0.05186*t59529*t59986;
  t61476 = 0.05186*t59621*t60016;
  t61477 = 0.05186*t59686*t60051;
  t61479 = 0.05186*t59813*t60138;
  t61482 = t61472 + t61473 + t61475 + t61476 + t61477 + t61479;
  t61375 = 0.05186*t59094*t60170;
  t61376 = 0.05186*t59270*t60182;
  t61378 = 0.05186*t59529*t60227;
  t61384 = 0.05186*t59621*t60246;
  t61385 = 0.05186*t59686*t60259;
  t61393 = 0.05186*t59813*t60342;
  t61395 = t61375 + t61376 + t61378 + t61384 + t61385 + t61393;
  t61689 = 0.000245*t61574*t59865;
  t61690 = 0.000245*t61584*t59935;
  t61692 = 2.e-6*t61589*t59964;
  t61693 = 2.e-6*t61593*t59997;
  t61694 = 0.000245*t61597*t60034;
  t61695 = 0.000245*t61604*t60074;
  t61697 = 0.05186*t59813*t60525;
  t61698 = 0.05186*t59094*t60611;
  t61701 = 0.05186*t59529*t60648;
  t61705 = 0.05186*t59621*t60748;
  t61706 = 0.05186*t59270*t60808;
  t61707 = 0.05186*t59686*t60888;
  t61708 = t61689 + t61690 + t61692 + t61693 + t61694 + t61695 + t61697 + t61698 + t61701 + t61705 + t61706 + t61707;
  t61575 = 0.000245*t61574*t57351;
  t61586 = 0.000245*t61584*t58601;
  t61590 = 2.e-6*t61589*t58851;
  t61595 = 2.e-6*t61593*t57737;
  t61598 = 0.000245*t61597*t57906;
  t61607 = 0.000245*t61604*t59023;
  t61608 = 0.05186*t59813*t60953;
  t61609 = 0.05186*t59094*t61014;
  t61612 = 0.05186*t59529*t61079;
  t61613 = 0.05186*t59621*t61123;
  t61614 = 0.05186*t59270*t61199;
  t61615 = 0.05186*t59686*t61310;
  t61620 = t61575 + t61586 + t61590 + t61595 + t61598 + t61607 + t61608 + t61609 + t61612 + t61613 + t61614 + t61615;
  t61740 = 0.00024500000000441*t57005;
  t61742 = 5.186e-9*t59007;
  t61743 = 0.00518601555815558*t58803;
  t61745 = -1.555803111628e-8*t58577;
  t61746 = t61740 + t61742 + t61743 + t61745;
  t61826 = 0.00024500000000441*t61604;
  t61829 = 5.186e-9*t59813;
  t61839 = 0.00518601555815558*t59529;
  t61846 = -1.555803111628e-8*t59270;
  t61850 = t61826 + t61829 + t61839 + t61846;
  t57353 = 5.186e-9*t57351;
  t57738 = 0.00518601555815558*t57737;
  t57908 = -1.555803111628e-8*t57906;
  t57909 = t57353 + t57738 + t57908;
  t61456 = 5.186e-9*t59910;
  t61457 = 0.00518601555815558*t60016;
  t61458 = -1.555803111628e-8*t60051;
  t61459 = t61456 + t61457 + t61458;
  t61341 = 5.186e-9*t60170;
  t61342 = 0.00518601555815558*t60246;
  t61343 = -1.555803111628e-8*t60259;
  t61345 = t61341 + t61342 + t61343;
  t61660 = 0.00024500000000441*t59865;
  t61661 = 5.186e-9*t60611;
  t61663 = 0.00518601555815558*t60748;
  t61664 = -1.555803111628e-8*t60888;
  t61665 = t61660 + t61661 + t61663 + t61664;
  t61537 = 0.00024500000000441*t57351;
  t61538 = 5.186e-9*t61014;
  t61539 = 0.00518601555815558*t61123;
  t61540 = -1.555803111628e-8*t61310;
  t61545 = t61537 + t61538 + t61539 + t61540;
  p_output1[0]=var2[12]*(-0.5*(0.10372*t57906*t58601 + 0.10372*t57737*t58851 + 0.10372*t57351*t59023)*var2[0] - 0.5*t60354*var2[1] - 0.5*t60148*var2[2] - 0.5*t61318*var2[3] - 0.5*t60898*var2[4] - 0.5*t59025*var2[5] - 0.5*t59819*var2[10] - 0.5*t57909*var2[12]);
  p_output1[1]=var2[12]*(-0.5*t60354*var2[0] - 0.5*(0.10372*t60227*t60246 + 0.10372*t60182*t60259 + 0.10372*t60170*t60342)*var2[1] - 0.5*t61409*var2[2] - 0.5*t61451*var2[3] - 0.5*t61438*var2[4] - 0.5*t61373*var2[5] - 0.5*t61395*var2[10] - 0.5*t61345*var2[12]);
  p_output1[2]=var2[12]*(-0.5*t60148*var2[0] - 0.5*t61409*var2[1] - 0.5*(0.10372*t59986*t60016 + 0.10372*t59956*t60051 + 0.10372*t59910*t60138)*var2[2] - 0.5*t61532*var2[3] - 0.5*t61503*var2[4] - 0.5*t61470*var2[5] - 0.5*t61482*var2[10] - 0.5*t61459*var2[12]);
  p_output1[3]=var2[12]*(-0.5*t61318*var2[0] - 0.5*t61451*var2[1] - 0.5*t61532*var2[2] - 0.5*(0.00049*t57906*t58601 + 4.e-6*t57737*t58851 + 0.00049*t57351*t59023 + 0.10372*t60953*t61014 + 0.10372*t61079*t61123 + 0.10372*t61199*t61310)*var2[3] - 0.5*t61645*var2[4] - 0.5*t61566*var2[5] - 0.5*t61620*var2[10] - 0.5*t61545*var2[12]);
  p_output1[4]=var2[12]*(-0.5*t60898*var2[0] - 0.5*t61438*var2[1] - 0.5*t61503*var2[2] - 0.5*t61645*var2[3] - 0.5*(4.e-6*t59964*t59997 + 0.00049*t59935*t60034 + 0.00049*t59865*t60074 + 0.10372*t60525*t60611 + 0.10372*t60648*t60748 + 0.10372*t60808*t60888)*var2[4] - 0.5*t61686*var2[5] - 0.5*t61708*var2[10] - 0.5*t61665*var2[12]);
  p_output1[5]=var2[12]*(-0.5*t59025*var2[0] - 0.5*t61373*var2[1] - 0.5*t61470*var2[2] - 0.5*t61566*var2[3] - 0.5*t61686*var2[4] - 0.5*(4.e-6*t57668*t57991 + 0.00049*t57853*t58014 + 0.00049*t57005*t58240 + 0.10372*t58803*t58879 + 0.10372*t58577*t58914 + 0.10372*t58197*t59007)*var2[5] - 0.5*t61804*var2[10] - 0.5*t61746*var2[12]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=var2[12]*(-0.5*t59819*var2[0] - 0.5*t61395*var2[1] - 0.5*t61482*var2[2] - 0.5*t61620*var2[3] - 0.5*t61708*var2[4] - 0.5*t61804*var2[5] - 0.5*(0.10372*t59529*t59621 + 0.10372*t59270*t59686 + 0.10372*t59094*t59813 + 4.e-6*t61589*t61593 + 0.00049*t61584*t61597 + 0.00049*t61574*t61604)*var2[10] - 0.5*t61850*var2[12]);
  p_output1[11]=0;
  p_output1[12]=(-0.5*t57909*var2[0] - 0.5*t61345*var2[1] - 0.5*t61459*var2[2] - 0.5*t61545*var2[3] - 0.5*t61665*var2[4] - 0.5*t61746*var2[5] - 0.5*t61850*var2[10])*var2[12];
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec13_minitaur.hh"

namespace FrontStance
{

void Ce2_vec13_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
