/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 01:37:15 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t80;
  double t42;
  double t102;
  double t139;
  double t274;
  double t292;
  double t283;
  double t303;
  double t372;
  double t380;
  double t387;
  double t399;
  double t426;
  double t48;
  double t53;
  double t289;
  double t316;
  double t323;
  double t334;
  double t341;
  double t344;
  double t626;
  double t844;
  double t1255;
  double t530;
  double t558;
  double t1316;
  double t880;
  double t881;
  double t888;
  double t894;
  double t909;
  double t1007;
  double t1525;
  double t1564;
  double t1568;
  double t1619;
  double t2357;
  double t3105;
  double t3142;
  double t3569;
  double t3869;
  double t3901;
  double t4243;
  double t4546;
  double t4588;
  double t4463;
  double t1335;
  double t4383;
  double t4748;
  double t164;
  double t238;
  double t251;
  double t266;
  double t363;
  double t394;
  double t582;
  double t852;
  double t879;
  double t5027;
  double t5028;
  double t5030;
  double t5032;
  double t5037;
  double t5097;
  double t1301;
  double t1398;
  double t1401;
  double t1429;
  double t1508;
  double t1734;
  double t1827;
  double t1857;
  double t2078;
  double t2282;
  double t5106;
  double t5137;
  double t5176;
  double t5177;
  double t4531;
  double t5289;
  double t5340;
  double t5362;
  double t5391;
  double t6967;
  double t7131;
  double t7157;
  double t7170;
  double t4800;
  double t4910;
  double t4916;
  double t12264;
  double t12269;
  double t12270;
  double t12271;
  double t12294;
  double t12295;
  double t12296;
  double t12298;
  double t12300;
  double t12305;
  double t12323;
  double t12324;
  double t12480;
  double t12481;
  double t12482;
  double t12484;
  double t12494;
  double t12501;
  double t12505;
  double t12506;
  double t12536;
  double t12537;
  double t12546;
  double t12554;
  double t12806;
  double t12816;
  double t12817;
  double t12839;
  double t12840;
  double t12852;
  double t12858;
  double t12862;
  double t12867;
  double t12868;
  double t12869;
  double t12932;
  double t12935;
  double t12936;
  double t12942;
  double t12943;
  double t12944;
  double t12950;
  double t12954;
  double t12959;
  double t12964;
  double t12967;
  double t13054;
  double t13056;
  double t13060;
  double t13061;
  double t13068;
  double t13070;
  double t13071;
  double t13075;
  double t13080;
  double t13084;
  double t14438;
  double t14500;
  double t14509;
  double t14526;
  double t14529;
  double t14531;
  double t14532;
  double t14540;
  double t14543;
  double t14546;
  double t14550;
  double t14567;
  double t14569;
  double t14570;
  double t14571;
  double t14683;
  double t14688;
  double t14677;
  double t14679;
  double t14718;
  double t14761;
  double t14791;
  double t14768;
  double t14681;
  double t14689;
  double t14695;
  double t14698;
  double t14705;
  double t14719;
  double t14721;
  double t14723;
  double t14724;
  double t14729;
  double t14730;
  double t14731;
  double t14732;
  double t14739;
  double t14844;
  double t14845;
  double t14847;
  double t14848;
  double t14852;
  double t14853;
  double t14855;
  double t14772;
  double t14860;
  double t14862;
  double t14806;
  double t57;
  double t329;
  double t347;
  double t1064;
  double t1669;
  double t4088;
  double t4413;
  double t4542;
  double t4675;
  double t4716;
  double t4747;
  double t4756;
  double t4759;
  double t4855;
  double t4862;
  double t4885;
  double t4975;
  double t4976;
  double t4985;
  double t4987;
  double t4998;
  double t5007;
  double t12249;
  double t12256;
  double t12257;
  double t12292;
  double t12299;
  double t12336;
  double t12341;
  double t12343;
  double t12363;
  double t12364;
  double t12367;
  double t12370;
  double t12376;
  double t12377;
  double t12378;
  double t12404;
  double t12415;
  double t12417;
  double t12418;
  double t12433;
  double t12438;
  double t12441;
  double t12442;
  double t12444;
  double t12450;
  double t12451;
  double t12493;
  double t12513;
  double t12568;
  double t12580;
  double t12587;
  double t12597;
  double t12604;
  double t12610;
  double t12621;
  double t12622;
  double t12656;
  double t12664;
  double t12665;
  double t12669;
  double t12673;
  double t12684;
  double t12785;
  double t12786;
  double t12794;
  double t12800;
  double t12801;
  double t15542;
  double t15543;
  double t15546;
  double t15549;
  double t15555;
  double t15556;
  double t15557;
  double t15558;
  double t15567;
  double t15570;
  double t15571;
  double t15572;
  double t15617;
  double t15618;
  double t15619;
  double t15622;
  double t15625;
  double t15626;
  double t15643;
  double t15646;
  double t15651;
  double t5025;
  double t15732;
  double t15733;
  double t15734;
  double t15758;
  double t16291;
  double t16292;
  double t16303;
  double t16313;
  double t16316;
  double t16378;
  double t16386;
  double t16388;
  double t16400;
  double t16430;
  double t16432;
  double t16433;
  double t16434;
  double t16600;
  double t16603;
  double t16613;
  double t16616;
  double t16645;
  double t16677;
  double t16706;
  double t16721;
  double t16901;
  double t16902;
  double t16912;
  double t17014;
  double t17031;
  double t17036;
  double t17041;
  double t17042;
  double t17043;
  double t17276;
  double t17277;
  double t17279;
  double t17281;
  double t17282;
  double t17283;
  double t17284;
  double t17286;
  double t17287;
  double t17290;
  double t17292;
  double t17343;
  double t17344;
  double t17345;
  double t17357;
  double t17385;
  double t17386;
  double t17391;
  double t17393;
  double t17394;
  double t17397;
  double t17485;
  double t17487;
  double t17488;
  double t17489;
  double t17491;
  double t17497;
  double t17498;
  double t17499;
  double t17503;
  double t17504;
  double t17506;
  double t17528;
  double t17553;
  double t17554;
  double t17555;
  double t17556;
  double t17558;
  double t17561;
  double t17563;
  double t17565;
  double t17566;
  double t17620;
  double t17621;
  double t17623;
  double t17624;
  double t17626;
  double t17628;
  double t17629;
  double t17638;
  double t17641;
  double t12826;
  double t12838;
  double t12850;
  double t12864;
  double t12875;
  double t12898;
  double t12899;
  double t12900;
  double t12901;
  double t12904;
  double t12907;
  double t12908;
  double t12912;
  double t12913;
  double t12914;
  double t12916;
  double t12917;
  double t12918;
  double t12919;
  double t12922;
  double t12926;
  double t12929;
  double t12930;
  double t12938;
  double t12948;
  double t12957;
  double t12969;
  double t12976;
  double t12978;
  double t12984;
  double t12985;
  double t12987;
  double t12992;
  double t12994;
  double t12998;
  double t13000;
  double t13003;
  double t13004;
  double t13005;
  double t13010;
  double t13011;
  double t13012;
  double t13013;
  double t13020;
  double t13022;
  double t16365;
  double t16366;
  double t16399;
  double t16431;
  double t16442;
  double t16444;
  double t16446;
  double t16451;
  double t16452;
  double t16459;
  double t16461;
  double t16463;
  double t16470;
  double t16484;
  double t16505;
  double t16511;
  double t16512;
  double t16521;
  double t16522;
  double t16523;
  double t16591;
  double t16594;
  double t16596;
  double t16597;
  double t16608;
  double t16676;
  double t16760;
  double t16793;
  double t16800;
  double t16801;
  double t16802;
  double t16803;
  double t16828;
  double t16829;
  double t16830;
  double t16832;
  double t16837;
  double t16843;
  double t16846;
  double t16847;
  double t16849;
  double t16871;
  double t16872;
  double t16873;
  double t16876;
  double t16899;
  double t16917;
  double t17037;
  double t17047;
  double t17050;
  double t17052;
  double t17061;
  double t17085;
  double t17091;
  double t17096;
  double t17097;
  double t17099;
  double t17100;
  double t17101;
  double t17102;
  double t17239;
  double t17264;
  double t17265;
  double t17266;
  double t17267;
  double t17269;
  double t17270;
  double t15538;
  double t15540;
  double t17792;
  double t17796;
  double t17798;
  double t17825;
  double t17827;
  double t17829;
  double t5031;
  double t5103;
  double t17862;
  double t17883;
  double t17887;
  double t18102;
  double t18103;
  double t18114;
  double t18144;
  double t18156;
  double t18162;
  double t18176;
  double t18177;
  double t18187;
  double t18455;
  double t18518;
  double t18519;
  double t18524;
  double t18533;
  double t18536;
  double t18542;
  double t18543;
  double t18545;
  double t18546;
  double t18617;
  double t18958;
  double t18982;
  double t18983;
  double t18993;
  double t18995;
  double t19167;
  double t19169;
  double t19170;
  double t19172;
  double t19177;
  double t19329;
  double t19330;
  double t19332;
  double t19335;
  double t19337;
  double t13028;
  double t13031;
  double t13037;
  double t13067;
  double t13077;
  double t13085;
  double t13086;
  double t13087;
  double t13093;
  double t13108;
  double t13114;
  double t13127;
  double t13153;
  double t13159;
  double t13178;
  double t13180;
  double t13198;
  double t13211;
  double t13428;
  double t14218;
  double t14233;
  double t14235;
  double t14395;
  double t14399;
  double t14515;
  double t14523;
  double t14537;
  double t14555;
  double t14572;
  double t14573;
  double t14575;
  double t14577;
  double t14579;
  double t14582;
  double t14585;
  double t14595;
  double t14597;
  double t14604;
  double t14605;
  double t14606;
  double t14608;
  double t14609;
  double t14629;
  double t14650;
  double t14661;
  double t14670;
  double t14676;
  double t17272;
  double t17273;
  double t17275;
  double t17280;
  double t17285;
  double t17293;
  double t17294;
  double t17297;
  double t17298;
  double t17299;
  double t17300;
  double t17301;
  double t17302;
  double t17303;
  double t17304;
  double t17305;
  double t17306;
  double t17307;
  double t17311;
  double t17312;
  double t17315;
  double t17316;
  double t17317;
  double t17319;
  double t17320;
  double t17321;
  double t17376;
  double t17389;
  double t17399;
  double t17402;
  double t17404;
  double t17406;
  double t17428;
  double t17430;
  double t17434;
  double t17435;
  double t17437;
  double t17438;
  double t17439;
  double t17444;
  double t17470;
  double t17474;
  double t17476;
  double t17477;
  double t17478;
  double t17479;
  double t17481;
  double t17482;
  double t17483;
  double t17490;
  double t17500;
  double t17529;
  double t17530;
  double t17531;
  double t17532;
  double t17535;
  double t17536;
  double t17538;
  double t17539;
  double t17540;
  double t17541;
  double t17543;
  double t17544;
  double t17545;
  double t17546;
  double t17547;
  double t17549;
  double t17550;
  double t17551;
  double t17552;
  double t18099;
  double t18101;
  double t18136;
  double t18169;
  double t18188;
  double t18192;
  double t18193;
  double t18196;
  double t18197;
  double t18200;
  double t18201;
  double t18219;
  double t18220;
  double t18224;
  double t18233;
  double t18235;
  double t18411;
  double t18412;
  double t18414;
  double t18418;
  double t18419;
  double t18422;
  double t18423;
  double t18520;
  double t18541;
  double t18544;
  double t18619;
  double t18621;
  double t18623;
  double t18631;
  double t18633;
  double t18634;
  double t18667;
  double t18668;
  double t18670;
  double t18672;
  double t18703;
  double t18704;
  double t18711;
  double t18715;
  double t18728;
  double t18847;
  double t18848;
  double t18942;
  double t18949;
  double t18957;
  double t18985;
  double t18992;
  double t18996;
  double t19057;
  double t19062;
  double t19076;
  double t19079;
  double t19080;
  double t19082;
  double t19085;
  double t19086;
  double t19089;
  double t19093;
  double t19122;
  double t19136;
  double t19153;
  double t19154;
  double t19156;
  double t19158;
  double t19165;
  double t19166;
  double t15539;
  double t19596;
  double t19598;
  double t19603;
  double t19605;
  double t19606;
  double t19611;
  double t19612;
  double t19651;
  double t19652;
  double t19655;
  double t19657;
  double t19659;
  double t19662;
  double t19667;
  double t19669;
  double t19670;
  double t19672;
  double t19759;
  double t19767;
  double t19768;
  double t19770;
  double t19772;
  double t19777;
  double t19778;
  double t19785;
  double t19840;
  double t19841;
  double t19845;
  double t19846;
  double t19851;
  double t19896;
  double t19952;
  double t19955;
  double t19956;
  double t20027;
  double t20028;
  double t20034;
  double t20035;
  double t20037;
  double t20039;
  double t20041;
  double t20043;
  double t14701;
  double t14728;
  double t14745;
  double t14765;
  double t14766;
  double t14774;
  double t14775;
  double t14776;
  double t14786;
  double t14800;
  double t14801;
  double t14802;
  double t14803;
  double t14804;
  double t14808;
  double t14809;
  double t14812;
  double t14813;
  double t14822;
  double t14834;
  double t14851;
  double t14859;
  double t14863;
  double t14874;
  double t14877;
  double t14879;
  double t14880;
  double t14881;
  double t14884;
  double t14887;
  double t14903;
  double t15418;
  double t15419;
  double t15422;
  double t15424;
  double t15425;
  double t15426;
  double t15429;
  double t15430;
  double t15432;
  double t15433;
  double t17557;
  double t17564;
  double t17567;
  double t17569;
  double t17570;
  double t17571;
  double t17572;
  double t17573;
  double t17574;
  double t17576;
  double t17577;
  double t17580;
  double t17581;
  double t17584;
  double t17585;
  double t17588;
  double t17589;
  double t17590;
  double t17591;
  double t17592;
  double t17593;
  double t17595;
  double t17596;
  double t17600;
  double t17601;
  double t17602;
  double t17603;
  double t17604;
  double t17606;
  double t17607;
  double t17609;
  double t17610;
  double t17611;
  double t17612;
  double t17614;
  double t17615;
  double t17616;
  double t17617;
  double t17618;
  double t17619;
  double t17625;
  double t17630;
  double t17642;
  double t17643;
  double t17645;
  double t17650;
  double t17651;
  double t17652;
  double t17653;
  double t17654;
  double t17655;
  double t17657;
  double t17659;
  double t17660;
  double t17661;
  double t17662;
  double t17665;
  double t17666;
  double t17669;
  double t17673;
  double t17674;
  double t19171;
  double t19180;
  double t19181;
  double t19183;
  double t19188;
  double t19191;
  double t19194;
  double t19199;
  double t19200;
  double t19215;
  double t19223;
  double t19240;
  double t19241;
  double t19290;
  double t19316;
  double t19317;
  double t19318;
  double t19322;
  double t19323;
  double t19324;
  double t19333;
  double t19340;
  double t19343;
  double t19349;
  double t19352;
  double t19361;
  double t19371;
  double t19374;
  double t19379;
  double t19382;
  double t19384;
  double t19393;
  double t19404;
  double t19420;
  double t19421;
  double t19423;
  double t19425;
  double t19428;
  double t19433;
  double t19437;
  double t19445;
  double t19448;
  double t19449;
  double t19451;
  double t19452;
  double t19454;
  double t19455;
  double t19456;
  double t19459;
  double t19460;
  double t19461;
  double t19466;
  double t19472;
  double t19482;
  double t19486;
  double t19490;
  double t19494;
  double t19499;
  double t19500;
  double t19503;
  double t19504;
  double t19842;
  double t19853;
  double t19957;
  double t19958;
  double t19959;
  double t19960;
  double t19966;
  double t19968;
  double t19972;
  double t19985;
  double t19986;
  double t19988;
  double t19989;
  double t19993;
  double t19994;
  double t19995;
  double t20017;
  double t20018;
  double t20020;
  double t20026;
  double t20031;
  double t20038;
  double t20044;
  double t20045;
  double t20046;
  double t20047;
  double t20048;
  double t20051;
  double t20054;
  double t20055;
  double t20059;
  double t20065;
  double t20067;
  double t20071;
  double t20072;
  double t20075;
  double t20078;
  double t20104;
  double t20105;
  double t20111;
  double t20113;
  double t20115;
  double t20152;
  double t20153;
  double t20159;
  double t20172;
  double t20174;
  double t20177;
  double t20178;
  double t20179;
  double t20180;
  double t20184;
  double t20185;
  double t20186;
  double t20187;
  double t20198;
  double t20201;
  double t20202;
  double t20203;
  double t20204;
  double t20205;
  double t20734;
  double t20635;
  double t20636;
  double t20648;
  double t20650;
  double t20773;
  double t20776;
  double t20792;
  double t20825;
  double t20838;
  double t20846;
  double t20608;
  double t20618;
  double t20624;
  double t20630;
  double t20663;
  double t20735;
  double t20738;
  double t20770;
  double t20802;
  double t20813;
  double t20814;
  double t20815;
  double t20823;
  double t21075;
  double t21093;
  double t21111;
  double t20856;
  double t21118;
  double t21148;
  double t21153;
  double t21193;
  double t21199;
  double t21019;
  t80 = Cos(var1[10]);
  t42 = Cos(var1[3]);
  t102 = -1.*t80;
  t139 = 1. + t102;
  t274 = Cos(var1[5]);
  t292 = Sin(var1[3]);
  t283 = Sin(var1[4]);
  t303 = Sin(var1[5]);
  t372 = Cos(var1[12]);
  t380 = -1.*t372;
  t387 = 1. + t380;
  t399 = -3.e-6*t387;
  t426 = Sin(var1[12]);
  t48 = Cos(var1[4]);
  t53 = Sin(var1[10]);
  t289 = t42*t274*t283;
  t316 = -1.*t292*t303;
  t323 = t289 + t316;
  t334 = -1.*t274*t292;
  t341 = -1.*t42*t283*t303;
  t344 = t334 + t341;
  t626 = 3.e-6*t426;
  t844 = t399 + t626;
  t1255 = 3.e-13*var1[12];
  t530 = -3.e-6*t426;
  t558 = t399 + t530;
  t1316 = -9.e-12*t387;
  t880 = 3.e-6*t42*t48*t53;
  t881 = 3.e-6*t139*t323;
  t888 = -9.e-12*t139;
  t894 = 1. + t888;
  t909 = t894*t344;
  t1007 = t880 + t881 + t909;
  t1525 = -1.*t42*t48*t53;
  t1564 = t80*t323;
  t1568 = 3.e-6*t139*t344;
  t1619 = t1525 + t1564 + t1568;
  t2357 = -1.000000000009*t139;
  t3105 = 1. + t2357;
  t3142 = -1.*t3105*t42*t48;
  t3569 = -1.*t53*t323;
  t3869 = 3.e-6*t53*t344;
  t3901 = t3142 + t3569 + t3869;
  t4243 = 3.e-6*t387;
  t4546 = -1.000000000009*t387;
  t4588 = 1. + t4546;
  t4463 = 9.e-12*t387;
  t1335 = -1.*t426;
  t4383 = t4243 + t530;
  t4748 = t4243 + t626;
  t164 = -1.8e-12*t139;
  t238 = -1. + t80;
  t251 = 0.2*t238;
  t266 = t164 + t251;
  t363 = 1.e-7*var1[12];
  t394 = 5.4e-18*t387;
  t582 = -0.200000000003*t558;
  t852 = 0.100000000003*t844;
  t879 = t363 + t394 + t582 + t852;
  t5027 = -1.*t274*t292*t283;
  t5028 = -1.*t42*t303;
  t5030 = t5027 + t5028;
  t5032 = -1.*t42*t274;
  t5037 = t292*t283*t303;
  t5097 = t5032 + t5037;
  t1301 = -0.2000000000048*t387;
  t1398 = t1316 + t1335;
  t1401 = 0.100000000003*t1398;
  t1429 = 3.e-7*t844;
  t1508 = t1255 + t1301 + t1401 + t1429;
  t1734 = 0.1000000000039*t387;
  t1827 = 3.e-7*t558;
  t1857 = t1316 + t426;
  t2078 = -0.200000000003*t1857;
  t2282 = t1255 + t1734 + t1827 + t2078;
  t5106 = -3.e-6*t48*t53*t292;
  t5137 = 3.e-6*t139*t5030;
  t5176 = t894*t5097;
  t5177 = t5106 + t5137 + t5176;
  t4531 = t4463 + t426;
  t5289 = t48*t53*t292;
  t5340 = t80*t5030;
  t5362 = 3.e-6*t139*t5097;
  t5391 = t5289 + t5340 + t5362;
  t6967 = t3105*t48*t292;
  t7131 = -1.*t53*t5030;
  t7157 = 3.e-6*t53*t5097;
  t7170 = t6967 + t7131 + t7157;
  t4800 = t4463 + t1335;
  t4910 = -1.8e-11*t387;
  t4916 = 1. + t4910;
  t12264 = 3.e-6*t139*t42*t48*t274;
  t12269 = -3.e-6*t42*t53*t283;
  t12270 = -1.*t894*t42*t48*t303;
  t12271 = t12264 + t12269 + t12270;
  t12294 = t80*t42*t48*t274;
  t12295 = t42*t53*t283;
  t12296 = -3.e-6*t139*t42*t48*t303;
  t12298 = t12294 + t12295 + t12296;
  t12300 = -1.*t42*t48*t274*t53;
  t12305 = t3105*t42*t283;
  t12323 = -3.e-6*t42*t48*t53*t303;
  t12324 = t12300 + t12305 + t12323;
  t12480 = 3.e-6*t139*t48*t274*t292;
  t12481 = -3.e-6*t53*t292*t283;
  t12482 = -1.*t894*t48*t292*t303;
  t12484 = t12480 + t12481 + t12482;
  t12494 = t80*t48*t274*t292;
  t12501 = t53*t292*t283;
  t12505 = -3.e-6*t139*t48*t292*t303;
  t12506 = t12494 + t12501 + t12505;
  t12536 = -1.*t48*t274*t53*t292;
  t12537 = t3105*t292*t283;
  t12546 = -3.e-6*t48*t53*t292*t303;
  t12554 = t12536 + t12537 + t12546;
  t12806 = -1.*t42*t274*t283;
  t12816 = t292*t303;
  t12817 = t12806 + t12816;
  t12839 = t894*t12817;
  t12840 = t12839 + t1568;
  t12852 = 3.e-6*t139*t12817;
  t12858 = t80*t344;
  t12862 = t12852 + t12858;
  t12867 = 3.e-6*t53*t12817;
  t12868 = -1.*t53*t344;
  t12869 = t12867 + t12868;
  t12932 = t42*t274;
  t12935 = -1.*t292*t283*t303;
  t12936 = t12932 + t12935;
  t12942 = t894*t5030;
  t12943 = 3.e-6*t139*t12936;
  t12944 = t12942 + t12943;
  t12950 = t80*t12936;
  t12954 = t5137 + t12950;
  t12959 = 3.e-6*t53*t5030;
  t12964 = -1.*t53*t12936;
  t12967 = t12959 + t12964;
  t13054 = 1.000000000009*t42*t48*t53;
  t13056 = -1.*t80*t323;
  t13060 = 3.e-6*t80*t344;
  t13061 = t13054 + t13056 + t13060;
  t13068 = 3.e-6*t80*t42*t48;
  t13070 = 3.e-6*t53*t323;
  t13071 = -9.e-12*t53*t344;
  t13075 = t13068 + t13070 + t13071;
  t13080 = -1.*t80*t42*t48;
  t13084 = t13080 + t3569 + t3869;
  t14438 = t274*t292*t283;
  t14500 = t42*t303;
  t14509 = t14438 + t14500;
  t14526 = 1.000000000009*t48*t53*t292;
  t14529 = -1.*t80*t14509;
  t14531 = 3.e-6*t80*t12936;
  t14532 = t14526 + t14529 + t14531;
  t14540 = 3.e-6*t80*t48*t292;
  t14543 = 3.e-6*t53*t14509;
  t14546 = -9.e-12*t53*t12936;
  t14550 = t14540 + t14543 + t14546;
  t14567 = -1.*t80*t48*t292;
  t14569 = -1.*t53*t14509;
  t14570 = 3.e-6*t53*t12936;
  t14571 = t14567 + t14569 + t14570;
  t14683 = 3.e-6*t372;
  t14688 = t14683 + t530;
  t14677 = -3.e-6*t372;
  t14679 = t14677 + t530;
  t14718 = -9.e-12*t426;
  t14761 = t14683 + t626;
  t14791 = t14677 + t626;
  t14768 = 9.e-12*t426;
  t14681 = -0.200000000003*t14679;
  t14689 = 0.100000000003*t14688;
  t14695 = 5.4e-18*t426;
  t14698 = 1.e-7 + t14681 + t14689 + t14695;
  t14705 = 3.e-7*t14688;
  t14719 = t380 + t14718;
  t14721 = 0.100000000003*t14719;
  t14723 = -0.2000000000048*t426;
  t14724 = 3.e-13 + t14705 + t14721 + t14723;
  t14729 = 3.e-7*t14679;
  t14730 = t372 + t14718;
  t14731 = -0.200000000003*t14730;
  t14732 = 0.1000000000039*t426;
  t14739 = 3.e-13 + t14729 + t14731 + t14732;
  t14844 = 3.e-6*t48*t53*t292;
  t14845 = 3.e-6*t139*t14509;
  t14847 = t894*t12936;
  t14848 = t14844 + t14845 + t14847;
  t14852 = -1.*t48*t53*t292;
  t14853 = t80*t14509;
  t14855 = t14852 + t14853 + t12943;
  t14772 = t380 + t14768;
  t14860 = -1.*t3105*t48*t292;
  t14862 = t14860 + t14569 + t14570;
  t14806 = t372 + t14768;
  t57 = -0.2000000000018*t42*t48*t53;
  t329 = t266*t323;
  t347 = 6.000000000054e-7*t139*t344;
  t1064 = t879*t1007;
  t1669 = t1508*t1619;
  t4088 = t2282*t3901;
  t4413 = t4383*t1007;
  t4542 = t4531*t1619;
  t4675 = t4588*t3901;
  t4716 = t4413 + t4542 + t4675;
  t4747 = -0.3*t4716;
  t4756 = -1.*t4748*t1007;
  t4759 = -1.*t4588*t1619;
  t4855 = -1.*t4800*t3901;
  t4862 = t4756 + t4759 + t4855;
  t4885 = 0.2*t4862;
  t4975 = t4916*t1007;
  t4976 = t4383*t1619;
  t4985 = t4748*t3901;
  t4987 = t4975 + t4976 + t4985;
  t4998 = 0.100001*t4987;
  t5007 = t57 + t329 + t347 + t1064 + t1669 + t4088 + t4747 + t4885 + t4998;
  t12249 = t266*t42*t48*t274;
  t12256 = 0.2000000000018*t42*t53*t283;
  t12257 = -6.000000000054e-7*t139*t42*t48*t303;
  t12292 = t879*t12271;
  t12299 = t1508*t12298;
  t12336 = t2282*t12324;
  t12341 = t4383*t12271;
  t12343 = t4531*t12298;
  t12363 = t4588*t12324;
  t12364 = t12341 + t12343 + t12363;
  t12367 = -0.3*t12364;
  t12370 = -1.*t4748*t12271;
  t12376 = -1.*t4588*t12298;
  t12377 = -1.*t4800*t12324;
  t12378 = t12370 + t12376 + t12377;
  t12404 = 0.2*t12378;
  t12415 = t4916*t12271;
  t12417 = t4383*t12298;
  t12418 = t4748*t12324;
  t12433 = t12415 + t12417 + t12418;
  t12438 = 0.100001*t12433;
  t12441 = t12249 + t12256 + t12257 + t12292 + t12299 + t12336 + t12367 + t12404 + t12438;
  t12442 = var2[1]*t12441;
  t12444 = t266*t48*t274*t292;
  t12450 = 0.2000000000018*t53*t292*t283;
  t12451 = -6.000000000054e-7*t139*t48*t292*t303;
  t12493 = t879*t12484;
  t12513 = t1508*t12506;
  t12568 = t2282*t12554;
  t12580 = t4383*t12484;
  t12587 = t4531*t12506;
  t12597 = t4588*t12554;
  t12604 = t12580 + t12587 + t12597;
  t12610 = -0.3*t12604;
  t12621 = -1.*t4748*t12484;
  t12622 = -1.*t4588*t12506;
  t12656 = -1.*t4800*t12554;
  t12664 = t12621 + t12622 + t12656;
  t12665 = 0.2*t12664;
  t12669 = t4916*t12484;
  t12673 = t4383*t12506;
  t12684 = t4748*t12554;
  t12785 = t12669 + t12673 + t12684;
  t12786 = 0.100001*t12785;
  t12794 = t12444 + t12450 + t12451 + t12493 + t12513 + t12568 + t12610 + t12665 + t12786;
  t12800 = var2[2]*t12794;
  t12801 = t12442 + t12800;
  t15542 = -3.e-6*t139*t48*t274;
  t15543 = 3.e-6*t53*t283;
  t15546 = t894*t48*t303;
  t15549 = t15542 + t15543 + t15546;
  t15555 = -1.*t80*t48*t274;
  t15556 = -1.*t53*t283;
  t15557 = 3.e-6*t139*t48*t303;
  t15558 = t15555 + t15556 + t15557;
  t15567 = t48*t274*t53;
  t15570 = -1.*t3105*t283;
  t15571 = 3.e-6*t48*t53*t303;
  t15572 = t15567 + t15570 + t15571;
  t15617 = 3.e-6*t139*t42*t274*t283;
  t15618 = -1.*t894*t42*t283*t303;
  t15619 = t880 + t15617 + t15618;
  t15622 = t80*t42*t274*t283;
  t15625 = -3.e-6*t139*t42*t283*t303;
  t15626 = t1525 + t15622 + t15625;
  t15643 = -1.*t42*t274*t53*t283;
  t15646 = -3.e-6*t42*t53*t283*t303;
  t15651 = t3142 + t15643 + t15646;
  t5025 = 0.2000000000018*t48*t53*t292;
  t15732 = -3.e-6*t139*t274*t292*t283;
  t15733 = t894*t292*t283*t303;
  t15734 = t5106 + t15732 + t15733;
  t15758 = -1.*t80*t274*t292*t283;
  t16291 = 3.e-6*t139*t292*t283*t303;
  t16292 = t5289 + t15758 + t16291;
  t16303 = t274*t53*t292*t283;
  t16313 = 3.e-6*t53*t292*t283*t303;
  t16316 = t6967 + t16303 + t16313;
  t16378 = t894*t42*t48*t274;
  t16386 = 3.e-6*t139*t42*t48*t303;
  t16388 = t16378 + t16386;
  t16400 = t80*t42*t48*t303;
  t16430 = t12264 + t16400;
  t16432 = 3.e-6*t42*t48*t274*t53;
  t16433 = -1.*t42*t48*t53*t303;
  t16434 = t16432 + t16433;
  t16600 = -1.*t894*t48*t274*t292;
  t16603 = t16600 + t12505;
  t16613 = -3.e-6*t139*t48*t274*t292;
  t16616 = -1.*t80*t48*t292*t303;
  t16645 = t16613 + t16616;
  t16677 = -3.e-6*t48*t274*t53*t292;
  t16706 = t48*t53*t292*t303;
  t16721 = t16677 + t16706;
  t16901 = t894*t274*t283;
  t16902 = 3.e-6*t139*t283*t303;
  t16912 = t16901 + t16902;
  t17014 = 3.e-6*t139*t274*t283;
  t17031 = t80*t283*t303;
  t17036 = t17014 + t17031;
  t17041 = 3.e-6*t274*t53*t283;
  t17042 = -1.*t53*t283*t303;
  t17043 = t17041 + t17042;
  t17276 = 1.000000000009*t42*t53*t283;
  t17277 = 3.e-6*t80*t42*t48*t303;
  t17279 = t12294 + t17276 + t17277;
  t17281 = -3.e-6*t42*t48*t274*t53;
  t17282 = 3.e-6*t80*t42*t283;
  t17283 = -9.e-12*t42*t48*t53*t303;
  t17284 = t17281 + t17282 + t17283;
  t17286 = t42*t48*t274*t53;
  t17287 = -1.*t80*t42*t283;
  t17290 = 3.e-6*t42*t48*t53*t303;
  t17292 = t17286 + t17287 + t17290;
  t17343 = -1.*t80*t48*t274*t292;
  t17344 = -1.000000000009*t53*t292*t283;
  t17345 = -3.e-6*t80*t48*t292*t303;
  t17357 = t17343 + t17344 + t17345;
  t17385 = t80*t292*t283;
  t17386 = t12536 + t17385 + t12546;
  t17391 = 3.e-6*t48*t274*t53*t292;
  t17393 = -3.e-6*t80*t292*t283;
  t17394 = 9.e-12*t48*t53*t292*t303;
  t17397 = t17391 + t17393 + t17394;
  t17485 = -1.000000000009*t48*t53;
  t17487 = t80*t274*t283;
  t17488 = 3.e-6*t80*t283*t303;
  t17489 = t17485 + t17487 + t17488;
  t17491 = -3.e-6*t80*t48;
  t17497 = -3.e-6*t274*t53*t283;
  t17498 = -9.e-12*t53*t283*t303;
  t17499 = t17491 + t17497 + t17498;
  t17503 = t80*t48;
  t17504 = t274*t53*t283;
  t17506 = 3.e-6*t53*t283*t303;
  t17528 = t17503 + t17504 + t17506;
  t17553 = -3.e-6*t139*t42*t48*t274;
  t17554 = 3.e-6*t42*t53*t283;
  t17555 = t894*t42*t48*t303;
  t17556 = t17553 + t17554 + t17555;
  t17558 = -1.*t80*t42*t48*t274;
  t17561 = -1.*t42*t53*t283;
  t17563 = t17558 + t17561 + t16386;
  t17565 = -1.*t3105*t42*t283;
  t17566 = t17286 + t17565 + t17290;
  t17620 = -3.e-6*t48*t53;
  t17621 = -3.e-6*t139*t274*t283;
  t17623 = t894*t283*t303;
  t17624 = t17620 + t17621 + t17623;
  t17626 = t48*t53;
  t17628 = -1.*t80*t274*t283;
  t17629 = t17626 + t17628 + t16902;
  t17638 = t3105*t48;
  t17641 = t17638 + t17504 + t17506;
  t12826 = 6.000000000054e-7*t139*t12817;
  t12838 = t266*t344;
  t12850 = t879*t12840;
  t12864 = t1508*t12862;
  t12875 = t2282*t12869;
  t12898 = t4383*t12840;
  t12899 = t4531*t12862;
  t12900 = t4588*t12869;
  t12901 = t12898 + t12899 + t12900;
  t12904 = -0.3*t12901;
  t12907 = -1.*t4748*t12840;
  t12908 = -1.*t4588*t12862;
  t12912 = -1.*t4800*t12869;
  t12913 = t12907 + t12908 + t12912;
  t12914 = 0.2*t12913;
  t12916 = t4916*t12840;
  t12917 = t4383*t12862;
  t12918 = t4748*t12869;
  t12919 = t12916 + t12917 + t12918;
  t12922 = 0.100001*t12919;
  t12926 = t12826 + t12838 + t12850 + t12864 + t12875 + t12904 + t12914 + t12922;
  t12929 = var2[1]*t12926;
  t12930 = 6.000000000054e-7*t139*t5030;
  t12938 = t266*t12936;
  t12948 = t879*t12944;
  t12957 = t1508*t12954;
  t12969 = t2282*t12967;
  t12976 = t4383*t12944;
  t12978 = t4531*t12954;
  t12984 = t4588*t12967;
  t12985 = t12976 + t12978 + t12984;
  t12987 = -0.3*t12985;
  t12992 = -1.*t4748*t12944;
  t12994 = -1.*t4588*t12954;
  t12998 = -1.*t4800*t12967;
  t13000 = t12992 + t12994 + t12998;
  t13003 = 0.2*t13000;
  t13004 = t4916*t12944;
  t13005 = t4383*t12954;
  t13010 = t4748*t12967;
  t13011 = t13004 + t13005 + t13010;
  t13012 = 0.100001*t13011;
  t13013 = t12930 + t12938 + t12948 + t12957 + t12969 + t12987 + t13003 + t13012;
  t13020 = var2[2]*t13013;
  t13022 = t12929 + t13020;
  t16365 = 6.000000000054e-7*t139*t42*t48*t274;
  t16366 = t266*t42*t48*t303;
  t16399 = t879*t16388;
  t16431 = t1508*t16430;
  t16442 = t2282*t16434;
  t16444 = t4383*t16388;
  t16446 = t4531*t16430;
  t16451 = t4588*t16434;
  t16452 = t16444 + t16446 + t16451;
  t16459 = -0.3*t16452;
  t16461 = -1.*t4748*t16388;
  t16463 = -1.*t4588*t16430;
  t16470 = -1.*t4800*t16434;
  t16484 = t16461 + t16463 + t16470;
  t16505 = 0.2*t16484;
  t16511 = t4916*t16388;
  t16512 = t4383*t16430;
  t16521 = t4748*t16434;
  t16522 = t16511 + t16512 + t16521;
  t16523 = 0.100001*t16522;
  t16591 = t16365 + t16366 + t16399 + t16431 + t16442 + t16459 + t16505 + t16523;
  t16594 = var2[2]*t16591;
  t16596 = -6.000000000054e-7*t139*t48*t274*t292;
  t16597 = -1.*t266*t48*t292*t303;
  t16608 = t879*t16603;
  t16676 = t1508*t16645;
  t16760 = t2282*t16721;
  t16793 = t4383*t16603;
  t16800 = t4531*t16645;
  t16801 = t4588*t16721;
  t16802 = t16793 + t16800 + t16801;
  t16803 = -0.3*t16802;
  t16828 = -1.*t4748*t16603;
  t16829 = -1.*t4588*t16645;
  t16830 = -1.*t4800*t16721;
  t16832 = t16828 + t16829 + t16830;
  t16837 = 0.2*t16832;
  t16843 = t4916*t16603;
  t16846 = t4383*t16645;
  t16847 = t4748*t16721;
  t16849 = t16843 + t16846 + t16847;
  t16871 = 0.100001*t16849;
  t16872 = t16596 + t16597 + t16608 + t16676 + t16760 + t16803 + t16837 + t16871;
  t16873 = var2[1]*t16872;
  t16876 = 6.000000000054e-7*t139*t274*t283;
  t16899 = t266*t283*t303;
  t16917 = t879*t16912;
  t17037 = t1508*t17036;
  t17047 = t2282*t17043;
  t17050 = t4383*t16912;
  t17052 = t4531*t17036;
  t17061 = t4588*t17043;
  t17085 = t17050 + t17052 + t17061;
  t17091 = -0.3*t17085;
  t17096 = -1.*t4748*t16912;
  t17097 = -1.*t4588*t17036;
  t17099 = -1.*t4800*t17043;
  t17100 = t17096 + t17097 + t17099;
  t17101 = 0.2*t17100;
  t17102 = t4916*t16912;
  t17239 = t4383*t17036;
  t17264 = t4748*t17043;
  t17265 = t17102 + t17239 + t17264;
  t17266 = 0.100001*t17265;
  t17267 = t16876 + t16899 + t16917 + t17037 + t17047 + t17091 + t17101 + t17266;
  t17269 = var2[0]*t17267;
  t17270 = t16594 + t16873 + t17269;
  t15538 = -1.*t266*t48*t274;
  t15540 = 6.000000000054e-7*t139*t48*t303;
  t17792 = t15542 + t15546;
  t17796 = t15555 + t15557;
  t17798 = t15567 + t15571;
  t17825 = t881 + t909;
  t17827 = t1564 + t1568;
  t17829 = t3569 + t3869;
  t5031 = t266*t5030;
  t5103 = 6.000000000054e-7*t139*t5097;
  t17862 = t5137 + t5176;
  t17883 = t5340 + t5362;
  t17887 = t7131 + t7157;
  t18102 = -3.e-6*t80*t48*t274;
  t18103 = t80*t48*t303;
  t18114 = t18102 + t18103;
  t18144 = 9.e-12*t48*t274*t53;
  t18156 = -3.e-6*t48*t53*t303;
  t18162 = t18144 + t18156;
  t18176 = -3.e-6*t48*t274*t53;
  t18177 = t48*t53*t303;
  t18187 = t18176 + t18177;
  t18455 = t274*t292;
  t18518 = t42*t283*t303;
  t18519 = t18455 + t18518;
  t18524 = 3.e-6*t80*t323;
  t18533 = -1.*t80*t18519;
  t18536 = t18524 + t18533;
  t18542 = -1.*t53*t18519;
  t18543 = t13070 + t18542;
  t18545 = -9.e-12*t53*t323;
  t18546 = 3.e-6*t53*t18519;
  t18617 = t18545 + t18546;
  t18958 = 3.e-6*t80*t5030;
  t18982 = -1.*t80*t12936;
  t18983 = t18958 + t18982;
  t18993 = -9.e-12*t53*t5030;
  t18995 = t18993 + t14570;
  t19167 = -1.*t894*t48*t274;
  t19169 = -3.e-6*t139*t48*t303;
  t19170 = t19167 + t19169;
  t19172 = -1.*t80*t48*t303;
  t19177 = t15542 + t19172;
  t19329 = t894*t323;
  t19330 = 3.e-6*t139*t18519;
  t19332 = t19329 + t19330;
  t19335 = t80*t18519;
  t19337 = t881 + t19335;
  t13028 = -0.2000000000018*t80*t42*t48;
  t13031 = -0.2000000000018*t53*t323;
  t13037 = 6.000000000054e-7*t53*t344;
  t13067 = t2282*t13061;
  t13077 = t879*t13075;
  t13085 = t1508*t13084;
  t13086 = -1.*t4800*t13061;
  t13087 = -1.*t4748*t13075;
  t13093 = -1.*t4588*t13084;
  t13108 = t13086 + t13087 + t13093;
  t13114 = 0.2*t13108;
  t13127 = t4748*t13061;
  t13153 = t4916*t13075;
  t13159 = t4383*t13084;
  t13178 = t13127 + t13153 + t13159;
  t13180 = 0.100001*t13178;
  t13198 = t4588*t13061;
  t13211 = t4383*t13075;
  t13428 = t4531*t13084;
  t14218 = t13198 + t13211 + t13428;
  t14233 = -0.3*t14218;
  t14235 = t13028 + t13031 + t13037 + t13067 + t13077 + t13085 + t13114 + t13180 + t14233;
  t14395 = var2[1]*t14235;
  t14399 = -0.2000000000018*t80*t48*t292;
  t14515 = -0.2000000000018*t53*t14509;
  t14523 = 6.000000000054e-7*t53*t12936;
  t14537 = t2282*t14532;
  t14555 = t879*t14550;
  t14572 = t1508*t14571;
  t14573 = -1.*t4800*t14532;
  t14575 = -1.*t4748*t14550;
  t14577 = -1.*t4588*t14571;
  t14579 = t14573 + t14575 + t14577;
  t14582 = 0.2*t14579;
  t14585 = t4748*t14532;
  t14595 = t4916*t14550;
  t14597 = t4383*t14571;
  t14604 = t14585 + t14595 + t14597;
  t14605 = 0.100001*t14604;
  t14606 = t4588*t14532;
  t14608 = t4383*t14550;
  t14609 = t4531*t14571;
  t14629 = t14606 + t14608 + t14609;
  t14650 = -0.3*t14629;
  t14661 = t14399 + t14515 + t14523 + t14537 + t14555 + t14572 + t14582 + t14605 + t14650;
  t14670 = var2[2]*t14661;
  t14676 = t14395 + t14670;
  t17272 = 0.2000000000018*t42*t48*t274*t53;
  t17273 = -0.2000000000018*t80*t42*t283;
  t17275 = 6.000000000054e-7*t42*t48*t53*t303;
  t17280 = t2282*t17279;
  t17285 = t879*t17284;
  t17293 = t1508*t17292;
  t17294 = -1.*t4800*t17279;
  t17297 = -1.*t4748*t17284;
  t17298 = -1.*t4588*t17292;
  t17299 = t17294 + t17297 + t17298;
  t17300 = 0.2*t17299;
  t17301 = t4748*t17279;
  t17302 = t4916*t17284;
  t17303 = t4383*t17292;
  t17304 = t17301 + t17302 + t17303;
  t17305 = 0.100001*t17304;
  t17306 = t4588*t17279;
  t17307 = t4383*t17284;
  t17311 = t4531*t17292;
  t17312 = t17306 + t17307 + t17311;
  t17315 = -0.3*t17312;
  t17316 = t17272 + t17273 + t17275 + t17280 + t17285 + t17293 + t17300 + t17305 + t17315;
  t17317 = var2[2]*t17316;
  t17319 = -0.2000000000018*t48*t274*t53*t292;
  t17320 = 0.2000000000018*t80*t292*t283;
  t17321 = -6.000000000054e-7*t48*t53*t292*t303;
  t17376 = t2282*t17357;
  t17389 = t1508*t17386;
  t17399 = t879*t17397;
  t17402 = t4748*t17357;
  t17404 = t4383*t17386;
  t17406 = t4916*t17397;
  t17428 = t17402 + t17404 + t17406;
  t17430 = 0.100001*t17428;
  t17434 = t4588*t17357;
  t17435 = t4531*t17386;
  t17437 = t4383*t17397;
  t17438 = t17434 + t17435 + t17437;
  t17439 = -0.3*t17438;
  t17444 = -1.*t4800*t17357;
  t17470 = -1.*t4588*t17386;
  t17474 = -1.*t4748*t17397;
  t17476 = t17444 + t17470 + t17474;
  t17477 = 0.2*t17476;
  t17478 = t17319 + t17320 + t17321 + t17376 + t17389 + t17399 + t17430 + t17439 + t17477;
  t17479 = var2[1]*t17478;
  t17481 = 0.2000000000018*t80*t48;
  t17482 = 0.2000000000018*t274*t53*t283;
  t17483 = 6.000000000054e-7*t53*t283*t303;
  t17490 = t2282*t17489;
  t17500 = t879*t17499;
  t17529 = t1508*t17528;
  t17530 = -1.*t4800*t17489;
  t17531 = -1.*t4748*t17499;
  t17532 = -1.*t4588*t17528;
  t17535 = t17530 + t17531 + t17532;
  t17536 = 0.2*t17535;
  t17538 = t4748*t17489;
  t17539 = t4916*t17499;
  t17540 = t4383*t17528;
  t17541 = t17538 + t17539 + t17540;
  t17543 = 0.100001*t17541;
  t17544 = t4588*t17489;
  t17545 = t4383*t17499;
  t17546 = t4531*t17528;
  t17547 = t17544 + t17545 + t17546;
  t17549 = -0.3*t17547;
  t17550 = t17481 + t17482 + t17483 + t17490 + t17500 + t17529 + t17536 + t17543 + t17549;
  t17551 = var2[0]*t17550;
  t17552 = t17317 + t17479 + t17551;
  t18099 = -6.000000000054e-7*t48*t274*t53;
  t18101 = 0.2000000000018*t48*t53*t303;
  t18136 = t2282*t18114;
  t18169 = t879*t18162;
  t18188 = t1508*t18187;
  t18192 = -1.*t4800*t18114;
  t18193 = -1.*t4748*t18162;
  t18196 = -1.*t4588*t18187;
  t18197 = t18192 + t18193 + t18196;
  t18200 = 0.2*t18197;
  t18201 = t4748*t18114;
  t18219 = t4916*t18162;
  t18220 = t4383*t18187;
  t18224 = t18201 + t18219 + t18220;
  t18233 = 0.100001*t18224;
  t18235 = t4588*t18114;
  t18411 = t4383*t18162;
  t18412 = t4531*t18187;
  t18414 = t18235 + t18411 + t18412;
  t18418 = -0.3*t18414;
  t18419 = t18099 + t18101 + t18136 + t18169 + t18188 + t18200 + t18233 + t18418;
  t18422 = var2[0]*t18419;
  t18423 = 6.000000000054e-7*t53*t323;
  t18520 = -0.2000000000018*t53*t18519;
  t18541 = t2282*t18536;
  t18544 = t1508*t18543;
  t18619 = t879*t18617;
  t18621 = t4748*t18536;
  t18623 = t4383*t18543;
  t18631 = t4916*t18617;
  t18633 = t18621 + t18623 + t18631;
  t18634 = 0.100001*t18633;
  t18667 = t4588*t18536;
  t18668 = t4531*t18543;
  t18670 = t4383*t18617;
  t18672 = t18667 + t18668 + t18670;
  t18703 = -0.3*t18672;
  t18704 = -1.*t4800*t18536;
  t18711 = -1.*t4588*t18543;
  t18715 = -1.*t4748*t18617;
  t18728 = t18704 + t18711 + t18715;
  t18847 = 0.2*t18728;
  t18848 = t18423 + t18520 + t18541 + t18544 + t18619 + t18634 + t18703 + t18847;
  t18942 = var2[2]*t18848;
  t18949 = 6.000000000054e-7*t53*t5030;
  t18957 = -0.2000000000018*t53*t12936;
  t18985 = t2282*t18983;
  t18992 = t1508*t12967;
  t18996 = t879*t18995;
  t19057 = t4748*t18983;
  t19062 = t4383*t12967;
  t19076 = t4916*t18995;
  t19079 = t19057 + t19062 + t19076;
  t19080 = 0.100001*t19079;
  t19082 = t4588*t18983;
  t19085 = t4531*t12967;
  t19086 = t4383*t18995;
  t19089 = t19082 + t19085 + t19086;
  t19093 = -0.3*t19089;
  t19122 = -1.*t4800*t18983;
  t19136 = -1.*t4588*t12967;
  t19153 = -1.*t4748*t18995;
  t19154 = t19122 + t19136 + t19153;
  t19156 = 0.2*t19154;
  t19158 = t18949 + t18957 + t18985 + t18992 + t18996 + t19080 + t19093 + t19156;
  t19165 = var2[1]*t19158;
  t19166 = t18422 + t18942 + t19165;
  t15539 = -0.2000000000018*t53*t283;
  t19596 = -3.e-6*t80*t48*t303;
  t19598 = t15555 + t15556 + t19596;
  t19603 = 3.e-6*t80*t48*t274;
  t19605 = 9.e-12*t80*t48*t303;
  t19606 = t19603 + t15543 + t19605;
  t19611 = -1.000000000009*t80*t283;
  t19612 = t15567 + t19611 + t15571;
  t19651 = 3.e-6*t80*t12817;
  t19652 = -9.e-12*t80*t18519;
  t19655 = t880 + t19651 + t19652;
  t19657 = -1.*t80*t12817;
  t19659 = 3.e-6*t80*t18519;
  t19662 = t1525 + t19657 + t19659;
  t19667 = -1.000000000009*t80*t42*t48;
  t19669 = t53*t12817;
  t19670 = -3.e-6*t53*t18519;
  t19672 = t19667 + t19669 + t19670;
  t19759 = 3.e-6*t80*t14509;
  t19767 = -9.e-12*t80*t12936;
  t19768 = t5106 + t19759 + t19767;
  t19770 = t5289 + t14529 + t14531;
  t19772 = 1.000000000009*t80*t48*t292;
  t19777 = t53*t14509;
  t19778 = -3.e-6*t53*t12936;
  t19785 = t19772 + t19777 + t19778;
  t19840 = -1.000000000009*t53*t283;
  t19841 = t15555 + t19840 + t19596;
  t19845 = -1.*t48*t274*t53;
  t19846 = t80*t283;
  t19851 = t19845 + t19846 + t18156;
  t19896 = 3.e-6*t48*t274*t53;
  t19952 = -3.e-6*t80*t283;
  t19955 = 9.e-12*t48*t53*t303;
  t19956 = t19896 + t19952 + t19955;
  t20027 = -1.000000000009*t42*t48*t53;
  t20028 = t20027 + t19657 + t19659;
  t20034 = -3.e-6*t80*t42*t48;
  t20035 = -9.e-12*t53*t18519;
  t20037 = t20034 + t12867 + t20035;
  t20039 = t80*t42*t48;
  t20041 = -1.*t53*t12817;
  t20043 = t20039 + t20041 + t18546;
  t14701 = t14698*t1007;
  t14728 = t14724*t1619;
  t14745 = t14739*t3901;
  t14765 = -1.*t14761*t1007;
  t14766 = 1.000000000009*t426*t1619;
  t14774 = -1.*t14772*t3901;
  t14775 = t14765 + t14766 + t14774;
  t14776 = 0.2*t14775;
  t14786 = -1.8e-11*t426*t1007;
  t14800 = t14791*t1619;
  t14801 = t14761*t3901;
  t14802 = t14786 + t14800 + t14801;
  t14803 = 0.100001*t14802;
  t14804 = t14791*t1007;
  t14808 = t14806*t1619;
  t14809 = -1.000000000009*t426*t3901;
  t14812 = t14804 + t14808 + t14809;
  t14813 = -0.3*t14812;
  t14822 = t14701 + t14728 + t14745 + t14776 + t14803 + t14813;
  t14834 = var2[1]*t14822;
  t14851 = t14698*t14848;
  t14859 = t14724*t14855;
  t14863 = t14739*t14862;
  t14874 = -1.*t14761*t14848;
  t14877 = 1.000000000009*t426*t14855;
  t14879 = -1.*t14772*t14862;
  t14880 = t14874 + t14877 + t14879;
  t14881 = 0.2*t14880;
  t14884 = -1.8e-11*t426*t14848;
  t14887 = t14791*t14855;
  t14903 = t14761*t14862;
  t15418 = t14884 + t14887 + t14903;
  t15419 = 0.100001*t15418;
  t15422 = t14791*t14848;
  t15424 = t14806*t14855;
  t15425 = -1.000000000009*t426*t14862;
  t15426 = t15422 + t15424 + t15425;
  t15429 = -0.3*t15426;
  t15430 = t14851 + t14859 + t14863 + t14881 + t15419 + t15429;
  t15432 = var2[2]*t15430;
  t15433 = t14834 + t15432;
  t17557 = t14698*t17556;
  t17564 = t14724*t17563;
  t17567 = t14739*t17566;
  t17569 = -1.*t14761*t17556;
  t17570 = 1.000000000009*t426*t17563;
  t17571 = -1.*t14772*t17566;
  t17572 = t17569 + t17570 + t17571;
  t17573 = 0.2*t17572;
  t17574 = -1.8e-11*t426*t17556;
  t17576 = t14791*t17563;
  t17577 = t14761*t17566;
  t17580 = t17574 + t17576 + t17577;
  t17581 = 0.100001*t17580;
  t17584 = t14791*t17556;
  t17585 = t14806*t17563;
  t17588 = -1.000000000009*t426*t17566;
  t17589 = t17584 + t17585 + t17588;
  t17590 = -0.3*t17589;
  t17591 = t17557 + t17564 + t17567 + t17573 + t17581 + t17590;
  t17592 = var2[2]*t17591;
  t17593 = t14698*t12484;
  t17595 = t14724*t12506;
  t17596 = t14739*t12554;
  t17600 = -1.*t14761*t12484;
  t17601 = 1.000000000009*t426*t12506;
  t17602 = -1.*t14772*t12554;
  t17603 = t17600 + t17601 + t17602;
  t17604 = 0.2*t17603;
  t17606 = -1.8e-11*t426*t12484;
  t17607 = t14791*t12506;
  t17609 = t14761*t12554;
  t17610 = t17606 + t17607 + t17609;
  t17611 = 0.100001*t17610;
  t17612 = t14791*t12484;
  t17614 = t14806*t12506;
  t17615 = -1.000000000009*t426*t12554;
  t17616 = t17612 + t17614 + t17615;
  t17617 = -0.3*t17616;
  t17618 = t17593 + t17595 + t17596 + t17604 + t17611 + t17617;
  t17619 = var2[1]*t17618;
  t17625 = t14698*t17624;
  t17630 = t14724*t17629;
  t17642 = t14739*t17641;
  t17643 = -1.*t14761*t17624;
  t17645 = 1.000000000009*t426*t17629;
  t17650 = -1.*t14772*t17641;
  t17651 = t17643 + t17645 + t17650;
  t17652 = 0.2*t17651;
  t17653 = -1.8e-11*t426*t17624;
  t17654 = t14791*t17629;
  t17655 = t14761*t17641;
  t17657 = t17653 + t17654 + t17655;
  t17659 = 0.100001*t17657;
  t17660 = t14791*t17624;
  t17661 = t14806*t17629;
  t17662 = -1.000000000009*t426*t17641;
  t17665 = t17660 + t17661 + t17662;
  t17666 = -0.3*t17665;
  t17669 = t17625 + t17630 + t17642 + t17652 + t17659 + t17666;
  t17673 = var2[0]*t17669;
  t17674 = t17592 + t17619 + t17673;
  t19171 = t14698*t19170;
  t19180 = t14724*t19177;
  t19181 = t14739*t18187;
  t19183 = -1.*t14761*t19170;
  t19188 = 1.000000000009*t426*t19177;
  t19191 = -1.*t14772*t18187;
  t19194 = t19183 + t19188 + t19191;
  t19199 = 0.2*t19194;
  t19200 = -1.8e-11*t426*t19170;
  t19215 = t14791*t19177;
  t19223 = t14761*t18187;
  t19240 = t19200 + t19215 + t19223;
  t19241 = 0.100001*t19240;
  t19290 = t14791*t19170;
  t19316 = t14806*t19177;
  t19317 = -1.000000000009*t426*t18187;
  t19318 = t19290 + t19316 + t19317;
  t19322 = -0.3*t19318;
  t19323 = t19171 + t19180 + t19181 + t19199 + t19241 + t19322;
  t19324 = var2[0]*t19323;
  t19333 = t14698*t19332;
  t19340 = t14724*t19337;
  t19343 = t14739*t18543;
  t19349 = -1.*t14761*t19332;
  t19352 = 1.000000000009*t426*t19337;
  t19361 = -1.*t14772*t18543;
  t19371 = t19349 + t19352 + t19361;
  t19374 = 0.2*t19371;
  t19379 = -1.8e-11*t426*t19332;
  t19382 = t14791*t19337;
  t19384 = t14761*t18543;
  t19393 = t19379 + t19382 + t19384;
  t19404 = 0.100001*t19393;
  t19420 = t14791*t19332;
  t19421 = t14806*t19337;
  t19423 = -1.000000000009*t426*t18543;
  t19425 = t19420 + t19421 + t19423;
  t19428 = -0.3*t19425;
  t19433 = t19333 + t19340 + t19343 + t19374 + t19404 + t19428;
  t19437 = var2[2]*t19433;
  t19445 = t14698*t12944;
  t19448 = t14724*t12954;
  t19449 = t14739*t12967;
  t19451 = -1.*t14761*t12944;
  t19452 = 1.000000000009*t426*t12954;
  t19454 = -1.*t14772*t12967;
  t19455 = t19451 + t19452 + t19454;
  t19456 = 0.2*t19455;
  t19459 = -1.8e-11*t426*t12944;
  t19460 = t14791*t12954;
  t19461 = t14761*t12967;
  t19466 = t19459 + t19460 + t19461;
  t19472 = 0.100001*t19466;
  t19482 = t14791*t12944;
  t19486 = t14806*t12954;
  t19490 = -1.000000000009*t426*t12967;
  t19494 = t19482 + t19486 + t19490;
  t19499 = -0.3*t19494;
  t19500 = t19445 + t19448 + t19449 + t19456 + t19472 + t19499;
  t19503 = var2[1]*t19500;
  t19504 = t19324 + t19437 + t19503;
  t19842 = t14739*t19841;
  t19853 = t14724*t19851;
  t19957 = t14698*t19956;
  t19958 = -1.000000000009*t426*t19841;
  t19959 = t14806*t19851;
  t19960 = t14791*t19956;
  t19966 = t19958 + t19959 + t19960;
  t19968 = -0.3*t19966;
  t19972 = -1.*t14772*t19841;
  t19985 = 1.000000000009*t426*t19851;
  t19986 = -1.*t14761*t19956;
  t19988 = t19972 + t19985 + t19986;
  t19989 = 0.2*t19988;
  t19993 = t14761*t19841;
  t19994 = t14791*t19851;
  t19995 = -1.8e-11*t426*t19956;
  t20017 = t19993 + t19994 + t19995;
  t20018 = 0.100001*t20017;
  t20020 = t19842 + t19853 + t19957 + t19968 + t19989 + t20018;
  t20026 = var2[0]*t20020;
  t20031 = t14739*t20028;
  t20038 = t14698*t20037;
  t20044 = t14724*t20043;
  t20045 = -1.000000000009*t426*t20028;
  t20046 = t14791*t20037;
  t20047 = t14806*t20043;
  t20048 = t20045 + t20046 + t20047;
  t20051 = -0.3*t20048;
  t20054 = t14761*t20028;
  t20055 = -1.8e-11*t426*t20037;
  t20059 = t14791*t20043;
  t20065 = t20054 + t20055 + t20059;
  t20067 = 0.100001*t20065;
  t20071 = -1.*t14772*t20028;
  t20072 = -1.*t14761*t20037;
  t20075 = 1.000000000009*t426*t20043;
  t20078 = t20071 + t20072 + t20075;
  t20104 = 0.2*t20078;
  t20105 = t20031 + t20038 + t20044 + t20051 + t20067 + t20104;
  t20111 = var2[2]*t20105;
  t20113 = t14739*t14532;
  t20115 = t14698*t14550;
  t20152 = t14724*t14571;
  t20153 = -1.000000000009*t426*t14532;
  t20159 = t14791*t14550;
  t20172 = t14806*t14571;
  t20174 = t20153 + t20159 + t20172;
  t20177 = -0.3*t20174;
  t20178 = t14761*t14532;
  t20179 = -1.8e-11*t426*t14550;
  t20180 = t14791*t14571;
  t20184 = t20178 + t20179 + t20180;
  t20185 = 0.100001*t20184;
  t20186 = -1.*t14772*t14532;
  t20187 = -1.*t14761*t14550;
  t20198 = 1.000000000009*t426*t14571;
  t20201 = t20186 + t20187 + t20198;
  t20202 = 0.2*t20201;
  t20203 = t20113 + t20115 + t20152 + t20177 + t20185 + t20202;
  t20204 = var2[1]*t20203;
  t20205 = t20026 + t20111 + t20204;
  t20734 = -9.e-12*t372;
  t20635 = 3.e-6*t139*t48*t274;
  t20636 = -3.e-6*t53*t283;
  t20648 = -1.*t894*t48*t303;
  t20650 = t20635 + t20636 + t20648;
  t20773 = t80*t48*t274;
  t20776 = t53*t283;
  t20792 = t20773 + t20776 + t19169;
  t20825 = t3105*t283;
  t20838 = t19845 + t20825 + t18156;
  t20846 = 9.e-12*t372;
  t20608 = 5.4e-18*t372;
  t20618 = 0.100000000003*t14679;
  t20624 = -0.200000000003*t14791;
  t20630 = t20608 + t20618 + t20624;
  t20663 = -0.2000000000048*t372;
  t20735 = t20734 + t426;
  t20738 = 0.100000000003*t20735;
  t20770 = t20663 + t14729 + t20738;
  t20802 = 0.1000000000039*t372;
  t20813 = t20734 + t1335;
  t20814 = -0.200000000003*t20813;
  t20815 = 3.e-7*t14791;
  t20823 = t20802 + t20814 + t20815;
  t21075 = -3.e-6*t42*t48*t53;
  t21093 = t894*t18519;
  t21111 = t21075 + t12852 + t21093;
  t20856 = t20846 + t1335;
  t21118 = t42*t48*t53;
  t21148 = t80*t12817;
  t21153 = t21118 + t21148 + t19330;
  t21193 = t3105*t42*t48;
  t21199 = t21193 + t20041 + t18546;
  t21019 = t20846 + t426;
  p_output1[0]=1.;
  p_output1[1]=1.;
  p_output1[2]=1.;
  p_output1[3]=(t5025 + t5031 + t5103 + t1508*t5391 + t2282*t7170 - 0.3*(t4383*t5177 + t4531*t5391 + t4588*t7170) + 0.100001*(t4916*t5177 + t4383*t5391 + t4748*t7170) + 0.2*(-1.*t4748*t5177 - 1.*t4588*t5391 - 1.*t4800*t7170) + t5177*t879)*var2[1] + t5007*var2[2];
  p_output1[4]=t12801;
  p_output1[5]=t13022;
  p_output1[6]=t14676;
  p_output1[7]=t15433;
  p_output1[8]=t5007;
  p_output1[9]=6.000000000054e-7*t12936*t139 + t14855*t1508 + t14862*t2282 + t14509*t266 - 0.3*(t14848*t4383 + t14855*t4531 + t14862*t4588) + 0.2*(-1.*t14855*t4588 - 1.*t14848*t4748 - 1.*t14862*t4800) + 0.100001*(t14855*t4383 + t14862*t4748 + t14848*t4916) - 0.2000000000018*t292*t48*t53 + t14848*t879;
  p_output1[10]=t12801;
  p_output1[11]=(t15538 + t15539 + t15540 + t1508*t15558 + t15572*t2282 - 0.3*(t15549*t4383 + t15558*t4531 + t15572*t4588) + 0.2*(-1.*t15558*t4588 - 1.*t15549*t4748 - 1.*t15572*t4800) + 0.100001*(t15558*t4383 + t15572*t4748 + t15549*t4916) + t15549*t879)*var2[0] + (t1508*t16292 + t16316*t2282 - 1.*t266*t274*t283*t292 + 6.000000000054e-7*t139*t283*t292*t303 - 0.3*(t15734*t4383 + t16292*t4531 + t16316*t4588) + 0.2*(-1.*t16292*t4588 - 1.*t15734*t4748 - 1.*t16316*t4800) + 0.100001*(t16292*t4383 + t16316*t4748 + t15734*t4916) + t5025 + t15734*t879)*var2[1] + (t1508*t15626 + t15651*t2282 + t266*t274*t283*t42 - 6.000000000054e-7*t139*t283*t303*t42 - 0.3*(t15619*t4383 + t15626*t4531 + t15651*t4588) + 0.2*(-1.*t15626*t4588 - 1.*t15619*t4748 - 1.*t15651*t4800) + 0.100001*(t15626*t4383 + t15651*t4748 + t15619*t4916) + t57 + t15619*t879)*var2[2];
  p_output1[12]=t17270;
  p_output1[13]=t17552;
  p_output1[14]=t17674;
  p_output1[15]=t1508*t17629 + t17641*t2282 - 1.*t266*t274*t283 + 6.000000000054e-7*t139*t283*t303 - 0.3*(t17624*t4383 + t17629*t4531 + t17641*t4588) + 0.2*(-1.*t17629*t4588 - 1.*t17624*t4748 - 1.*t17641*t4800) + 0.100001*(t17629*t4383 + t17641*t4748 + t17624*t4916) + 0.2000000000018*t48*t53 + t17624*t879;
  p_output1[16]=t12794;
  p_output1[17]=t1508*t17563 + t17566*t2282 - 0.3*(t17556*t4383 + t17563*t4531 + t17566*t4588) - 1.*t266*t274*t42*t48 + 6.000000000054e-7*t139*t303*t42*t48 + 0.2*(-1.*t17563*t4588 - 1.*t17556*t4748 - 1.*t17566*t4800) + 0.100001*(t17563*t4383 + t17566*t4748 + t17556*t4916) - 0.2000000000018*t283*t42*t53 + t17556*t879;
  p_output1[18]=t13022;
  p_output1[19]=t17270;
  p_output1[20]=(t15538 + t15540 + t1508*t17796 + t17798*t2282 - 0.3*(t17792*t4383 + t17796*t4531 + t17798*t4588) + 0.2*(-1.*t17796*t4588 - 1.*t17792*t4748 - 1.*t17798*t4800) + 0.100001*(t17796*t4383 + t17798*t4748 + t17792*t4916) + t17792*t879)*var2[0] + (t1508*t17883 + t17887*t2282 - 0.3*(t17862*t4383 + t17883*t4531 + t17887*t4588) + 0.2*(-1.*t17883*t4588 - 1.*t17862*t4748 - 1.*t17887*t4800) + 0.100001*(t17883*t4383 + t17887*t4748 + t17862*t4916) + t5031 + t5103 + t17862*t879)*var2[1] + (t1508*t17827 + t17829*t2282 + t329 + t347 - 0.3*(t17825*t4383 + t17827*t4531 + t17829*t4588) + 0.2*(-1.*t17827*t4588 - 1.*t17825*t4748 - 1.*t17829*t4800) + 0.100001*(t17827*t4383 + t17829*t4748 + t17825*t4916) + t17825*t879)*var2[2];
  p_output1[21]=t19166;
  p_output1[22]=t19504;
  p_output1[23]=t1508*t19177 + t18187*t2282 - 0.3*(t19170*t4383 + t19177*t4531 + t18187*t4588) - 6.000000000054e-7*t139*t274*t48 - 1.*t266*t303*t48 + 0.2*(-1.*t19177*t4588 - 1.*t19170*t4748 - 1.*t18187*t4800) + 0.100001*(t19177*t4383 + t18187*t4748 + t19170*t4916) + t19170*t879;
  p_output1[24]=t13013;
  p_output1[25]=t1508*t19337 + t18543*t2282 + t18519*t266 + 6.000000000054e-7*t139*t323 - 0.3*(t19332*t4383 + t19337*t4531 + t18543*t4588) + 0.2*(-1.*t19337*t4588 - 1.*t19332*t4748 - 1.*t18543*t4800) + 0.100001*(t19337*t4383 + t18543*t4748 + t19332*t4916) + t19332*t879;
  p_output1[26]=t14676;
  p_output1[27]=t17552;
  p_output1[28]=t19166;
  p_output1[29]=(t15539 + t1508*t19598 + t19612*t2282 - 0.3*(t19606*t4383 + t19598*t4531 + t19612*t4588) + 0.2*(-1.*t19598*t4588 - 1.*t19606*t4748 - 1.*t19612*t4800) + 0.100001*(t19598*t4383 + t19612*t4748 + t19606*t4916) - 0.2000000000018*t274*t48*t80 - 6.000000000054e-7*t303*t48*t80 + t19606*t879)*var2[0] + (t1508*t19770 + t19785*t2282 - 0.3*(t19768*t4383 + t19770*t4531 + t19785*t4588) + 0.2*(-1.*t19770*t4588 - 1.*t19768*t4748 - 1.*t19785*t4800) + 0.100001*(t19770*t4383 + t19785*t4748 + t19768*t4916) + t5025 + 6.000000000054e-7*t12936*t80 - 0.2000000000018*t14509*t80 + t19768*t879)*var2[1] + (t1508*t19662 + t19672*t2282 - 0.3*(t19655*t4383 + t19662*t4531 + t19672*t4588) + 0.2*(-1.*t19662*t4588 - 1.*t19655*t4748 - 1.*t19672*t4800) + 0.100001*(t19662*t4383 + t19672*t4748 + t19655*t4916) + t57 - 0.2000000000018*t12817*t80 + 6.000000000054e-7*t18519*t80 + t19655*t879)*var2[2];
  p_output1[30]=t20205;
  p_output1[31]=t1508*t19851 + t19841*t2282 - 0.3*(t19956*t4383 + t19851*t4531 + t19841*t4588) + 0.2*(-1.*t19851*t4588 - 1.*t19956*t4748 - 1.*t19841*t4800) + 0.100001*(t19851*t4383 + t19841*t4748 + t19956*t4916) - 0.2000000000018*t274*t48*t53 - 6.000000000054e-7*t303*t48*t53 + 0.2000000000018*t283*t80 + t19956*t879;
  p_output1[32]=t14661;
  p_output1[33]=t1508*t20043 + t20028*t2282 - 0.3*(t20037*t4383 + t20043*t4531 + t20028*t4588) + 0.2*(-1.*t20043*t4588 - 1.*t20037*t4748 - 1.*t20028*t4800) + 0.100001*(t20043*t4383 + t20028*t4748 + t20037*t4916) - 0.2000000000018*t12817*t53 + 6.000000000054e-7*t18519*t53 + 0.2000000000018*t42*t48*t80 + t20037*t879;
  p_output1[34]=t15433;
  p_output1[35]=t17674;
  p_output1[36]=t19504;
  p_output1[37]=t20205;
  p_output1[38]=(t20630*t20650 + t20770*t20792 + t20823*t20838 + 0.100001*(t14761*t20792 + t14688*t20838 - 1.8e-11*t20650*t372) + 0.2*(-1.*t14688*t20650 - 1.*t20838*t21019 + 1.000000000009*t20792*t372) - 0.3*(t14761*t20650 + t20792*t20856 - 1.000000000009*t20838*t372))*var2[0] + (t14848*t20630 + t14855*t20770 + t14862*t20823 + 0.100001*(t14761*t14855 + t14688*t14862 - 1.8e-11*t14848*t372) + 0.2*(-1.*t14688*t14848 - 1.*t14862*t21019 + 1.000000000009*t14855*t372) - 0.3*(t14761*t14848 + t14855*t20856 - 1.000000000009*t14862*t372))*var2[1] + (t20630*t21111 + t20770*t21153 + t20823*t21199 + 0.100001*(t14761*t21153 + t14688*t21199 - 1.8e-11*t21111*t372) + 0.2*(-1.*t14688*t21111 - 1.*t21019*t21199 + 1.000000000009*t21153*t372) - 0.3*(t14761*t21111 + t20856*t21153 - 1.000000000009*t21199*t372))*var2[2];
  p_output1[39]=t14698*t20650 + t14724*t20792 + t14739*t20838 + 0.100001*(t14791*t20792 + t14761*t20838 - 1.8e-11*t20650*t426) + 0.2*(-1.*t14761*t20650 - 1.*t14772*t20838 + 1.000000000009*t20792*t426) - 0.3*(t14791*t20650 + t14806*t20792 - 1.000000000009*t20838*t426);
  p_output1[40]=t15430;
  p_output1[41]=t14698*t21111 + t14724*t21153 + t14739*t21199 + 0.100001*(t14791*t21153 + t14761*t21199 - 1.8e-11*t21111*t426) + 0.2*(-1.*t14761*t21111 - 1.*t14772*t21199 + 1.000000000009*t21153*t426) - 0.3*(t14791*t21111 + t14806*t21153 - 1.000000000009*t21199*t426);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 42, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fLeftBackFoot_vec_BackStance.hh"

namespace BackStance
{

void J_fLeftBackFoot_vec_BackStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
