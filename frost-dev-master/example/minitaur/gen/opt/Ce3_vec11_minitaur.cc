/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:13:05 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t48734;
  double t48751;
  double t48756;
  double t50383;
  double t50386;
  double t49190;
  double t48840;
  double t48944;
  double t48947;
  double t48952;
  double t49065;
  double t50393;
  double t46805;
  double t50437;
  double t50412;
  double t50420;
  double t50444;
  double t50894;
  double t50895;
  double t50900;
  double t51208;
  double t51220;
  double t51255;
  double t51318;
  double t51365;
  double t50943;
  double t52069;
  double t52111;
  double t52113;
  double t52031;
  double t52626;
  double t52645;
  double t52686;
  double t52559;
  double t52347;
  double t52743;
  double t52782;
  double t52806;
  double t52680;
  double t52726;
  double t52732;
  double t52748;
  double t52759;
  double t52778;
  double t52119;
  double t52563;
  double t52842;
  double t52847;
  double t52850;
  double t52880;
  double t52885;
  double t52892;
  double t52382;
  double t52411;
  double t52536;
  double t52574;
  double t52580;
  double t52593;
  double t52659;
  double t52662;
  double t52955;
  double t52962;
  double t53014;
  double t53061;
  double t53630;
  double t53813;
  double t53856;
  double t52122;
  double t52671;
  double t52807;
  double t52836;
  double t52914;
  double t52916;
  double t52926;
  double t53141;
  double t53550;
  double t53619;
  double t53626;
  double t53924;
  double t54171;
  double t51371;
  double t54692;
  double t54732;
  double t50754;
  double t50758;
  double t54804;
  double t54827;
  double t54828;
  double t54907;
  double t54688;
  double t54720;
  double t54780;
  double t54791;
  double t55306;
  double t55315;
  double t55325;
  double t55342;
  double t55383;
  double t55423;
  double t55457;
  double t55468;
  double t55706;
  double t55774;
  double t55794;
  double t55797;
  double t55633;
  double t55637;
  double t55647;
  double t55685;
  double t56020;
  double t56027;
  double t56031;
  double t56033;
  double t56064;
  double t56069;
  double t56103;
  double t56114;
  double t56281;
  double t56285;
  double t56288;
  double t56290;
  double t56214;
  double t56228;
  double t56232;
  double t56248;
  double t49283;
  double t50395;
  double t50399;
  double t50442;
  double t50484;
  double t50546;
  double t50549;
  double t50558;
  double t50599;
  double t50629;
  double t50631;
  double t50695;
  double t50798;
  double t50814;
  double t50817;
  double t50825;
  double t50837;
  double t50850;
  double t52030;
  double t52918;
  double t54220;
  double t54262;
  double t54435;
  double t54505;
  double t54549;
  double t54612;
  double t54800;
  double t54912;
  double t54914;
  double t55004;
  double t55012;
  double t55015;
  double t55022;
  double t55027;
  double t55134;
  double t55142;
  double t55157;
  double t55187;
  double t55188;
  double t55296;
  double t55352;
  double t55518;
  double t55524;
  double t55609;
  double t55612;
  double t55621;
  double t55629;
  double t55687;
  double t55828;
  double t55847;
  double t55854;
  double t55856;
  double t55859;
  double t55864;
  double t55868;
  double t55875;
  double t55880;
  double t55907;
  double t55911;
  double t55937;
  double t56015;
  double t56041;
  double t56124;
  double t56136;
  double t56142;
  double t56143;
  double t56147;
  double t56148;
  double t56270;
  double t56292;
  double t56298;
  double t56309;
  double t56315;
  double t56316;
  double t56317;
  double t56319;
  double t56320;
  double t56322;
  double t56330;
  double t56332;
  double t56340;
  double t57251;
  double t57253;
  double t57255;
  double t57259;
  double t57267;
  double t57271;
  double t57345;
  double t57377;
  double t57380;
  double t57401;
  double t57413;
  double t57419;
  double t57424;
  double t57427;
  double t57430;
  double t57840;
  double t57698;
  double t57709;
  double t57785;
  double t57825;
  double t58839;
  double t58985;
  double t59272;
  double t59362;
  double t59413;
  double t59501;
  double t59532;
  double t59534;
  double t59547;
  double t59552;
  double t59582;
  double t59592;
  double t59596;
  double t59605;
  double t59627;
  double t59647;
  double t59685;
  double t59691;
  double t59800;
  double t59285;
  double t59653;
  double t59668;
  double t60338;
  double t60366;
  double t60475;
  double t58426;
  double t58504;
  double t58827;
  double t59999;
  double t60114;
  double t60193;
  double t59880;
  double t59898;
  double t59932;
  double t61120;
  double t61124;
  double t61125;
  double t61365;
  double t61396;
  double t61398;
  double t61411;
  double t61412;
  double t61415;
  double t61418;
  double t61444;
  double t61494;
  double t61505;
  double t61533;
  double t61646;
  double t61647;
  double t61649;
  double t61658;
  double t61659;
  double t61713;
  double t61714;
  double t61760;
  double t61762;
  double t61764;
  double t61806;
  double t61812;
  double t61813;
  double t61730;
  double t61731;
  double t61755;
  double t61414;
  double t61717;
  double t61723;
  double t61328;
  double t61333;
  double t61360;
  double t61862;
  double t61867;
  double t61873;
  double t62074;
  double t62075;
  double t62077;
  double t62294;
  double t62296;
  double t62297;
  double t62307;
  double t62309;
  double t62310;
  double t62315;
  double t62320;
  double t62330;
  double t62333;
  double t62334;
  double t62337;
  double t62346;
  double t62350;
  double t62353;
  double t57880;
  double t57910;
  double t58307;
  double t58344;
  double t58354;
  double t58355;
  double t58357;
  double t58358;
  double t58363;
  double t60232;
  double t61002;
  double t62557;
  double t62558;
  double t62559;
  double t61151;
  double t62577;
  double t62579;
  double t61211;
  double t61875;
  double t62640;
  double t62641;
  double t62645;
  double t62046;
  double t62103;
  double t62131;
  double t62205;
  double t62238;
  double t60286;
  double t60685;
  double t60686;
  double t62566;
  double t62570;
  double t62575;
  double t62585;
  double t61013;
  double t61023;
  double t61026;
  double t61153;
  double t61154;
  double t61175;
  double t62857;
  double t62862;
  double t62604;
  double t62608;
  double t62617;
  double t62620;
  double t61213;
  double t61215;
  double t61217;
  double t62648;
  double t62657;
  double t62675;
  double t62680;
  double t61876;
  double t61951;
  double t62007;
  double t62048;
  double t62053;
  double t62060;
  double t62723;
  double t62729;
  double t62104;
  double t62105;
  double t62107;
  double t62742;
  double t62746;
  double t62134;
  double t62136;
  double t62138;
  double t62757;
  double t62759;
  double t62209;
  double t62213;
  double t62217;
  double t62793;
  double t62800;
  double t62241;
  double t62245;
  double t62257;
  double t63106;
  double t63107;
  double t63110;
  double t63149;
  double t63153;
  double t63154;
  double t62633;
  double t63143;
  double t63144;
  double t63146;
  double t63204;
  double t63216;
  double t63217;
  double t63218;
  double t63222;
  double t63230;
  double t63231;
  double t63233;
  double t63237;
  double t63250;
  double t63267;
  double t63281;
  double t63283;
  double t63289;
  double t62685;
  double t63164;
  double t63174;
  double t63175;
  double t62706;
  double t63297;
  double t63300;
  double t63307;
  double t63310;
  double t63326;
  double t63333;
  double t63341;
  double t63344;
  double t62732;
  double t63379;
  double t63386;
  double t63387;
  double t63388;
  double t63397;
  double t63407;
  double t63409;
  double t63410;
  double t62769;
  double t62781;
  double t63511;
  double t63515;
  double t63519;
  double t63522;
  double t63528;
  double t63531;
  double t63536;
  double t63537;
  double t63705;
  double t63706;
  double t63708;
  double t63726;
  double t63731;
  double t63739;
  double t63763;
  double t63769;
  double t63773;
  double t63788;
  double t63795;
  double t63797;
  double t63809;
  double t63810;
  double t63813;
  double t63829;
  double t63831;
  double t63832;
  double t63836;
  double t63839;
  double t63858;
  double t63863;
  double t63864;
  double t63868;
  double t63871;
  double t63873;
  double t63891;
  double t63893;
  double t63895;
  double t63900;
  double t63903;
  double t63906;
  double t63916;
  double t63918;
  double t63921;
  double t63927;
  double t63928;
  double t63933;
  double t63945;
  double t63947;
  double t63952;
  double t63954;
  double t63962;
  double t63964;
  double t62594;
  double t62597;
  double t63104;
  double t63115;
  double t64067;
  double t64091;
  double t64094;
  double t64101;
  double t64065;
  double t64078;
  double t64082;
  double t62542;
  double t62543;
  double t64120;
  double t64136;
  double t64185;
  double t62635;
  double t62636;
  double t63203;
  double t63290;
  double t63370;
  double t63377;
  double t64292;
  double t64293;
  double t64295;
  double t64316;
  double t64318;
  double t64320;
  double t62691;
  double t62693;
  double t62714;
  double t62718;
  double t63452;
  double t63468;
  double t62735;
  double t62737;
  double t63503;
  double t63541;
  double t63572;
  double t63588;
  double t62770;
  double t62774;
  double t62783;
  double t62785;
  double t63649;
  double t63664;
  double t63761;
  double t63775;
  double t63780;
  double t63785;
  double t63800;
  double t63801;
  double t63805;
  double t63816;
  double t63820;
  double t64109;
  double t63710;
  double t63719;
  double t64206;
  double t64213;
  double t64632;
  double t64636;
  double t64643;
  double t64647;
  double t64648;
  double t64683;
  double t64235;
  double t63723;
  double t63748;
  double t63751;
  double t64259;
  double t64267;
  double t64313;
  double t64325;
  double t64343;
  double t64393;
  double t66891;
  double t66906;
  double t66952;
  double t66962;
  double t66982;
  double t66984;
  double t64456;
  double t64460;
  double t64506;
  double t64512;
  double t64531;
  double t64543;
  double t64584;
  double t64585;
  double t67942;
  double t67957;
  double t67944;
  double t67949;
  double t67985;
  double t67989;
  double t67955;
  double t68000;
  double t68077;
  double t68020;
  double t67958;
  double t68166;
  double t68122;
  double t68003;
  double t68027;
  double t68029;
  double t68041;
  double t68073;
  double t68075;
  double t68078;
  double t68083;
  double t68084;
  double t68086;
  double t68091;
  double t68092;
  double t68099;
  double t68101;
  double t68103;
  double t68109;
  double t68146;
  double t68133;
  double t68135;
  double t67998;
  double t68076;
  double t68088;
  double t68117;
  double t68140;
  double t68149;
  double t68154;
  double t68160;
  double t68170;
  double t68169;
  double t68171;
  double t68176;
  double t68183;
  double t68186;
  double t68187;
  double t68190;
  double t68201;
  double t68240;
  double t68244;
  double t67945;
  double t67946;
  double t67951;
  double t67973;
  double t67974;
  double t67977;
  double t68260;
  double t68261;
  double t68262;
  double t68270;
  double t68271;
  double t68272;
  double t68275;
  double t68279;
  double t68282;
  double t68283;
  double t68285;
  double t68292;
  double t68315;
  double t68327;
  double t68393;
  double t68410;
  double t68420;
  double t68432;
  double t68472;
  double t68486;
  double t68488;
  double t68508;
  double t68511;
  double t68518;
  double t68520;
  double t68522;
  double t68527;
  double t68529;
  double t68682;
  double t67952;
  double t67956;
  double t67966;
  double t67970;
  double t67971;
  double t68708;
  double t68711;
  double t68713;
  double t68722;
  double t63192;
  double t63194;
  double t63197;
  double t68735;
  double t68738;
  double t68744;
  double t68748;
  double t63423;
  double t63424;
  double t63429;
  double t68794;
  double t68802;
  double t68815;
  double t68834;
  double t68848;
  double t68850;
  double t68854;
  double t68855;
  double t68866;
  double t68867;
  double t68871;
  double t68874;
  double t67978;
  double t67991;
  double t68161;
  double t68168;
  double t68202;
  double t68205;
  double t68209;
  double t68211;
  double t68225;
  double t68227;
  double t68229;
  double t68234;
  double t68769;
  double t68770;
  double t68776;
  double t68778;
  double t63446;
  double t63449;
  double t63450;
  double t69006;
  double t69008;
  double t69013;
  double t69016;
  double t69021;
  double t69022;
  double t69023;
  double t69024;
  double t63479;
  double t63485;
  double t63491;
  double t63604;
  double t63606;
  double t63611;
  double t68913;
  double t68923;
  double t68928;
  double t68929;
  double t68949;
  double t68958;
  double t68962;
  double t68975;
  double t69053;
  double t69054;
  double t69056;
  double t69061;
  double t69064;
  double t69065;
  double t69066;
  double t69067;
  double t63620;
  double t63632;
  double t63634;
  double t68236;
  double t68245;
  double t68277;
  double t68278;
  double t68332;
  double t68343;
  double t68349;
  double t68357;
  double t68362;
  double t68373;
  double t68374;
  double t68386;
  double t68390;
  double t68493;
  double t68504;
  double t68506;
  double t68534;
  double t68535;
  double t68536;
  double t68545;
  double t68553;
  double t68576;
  double t68579;
  double t68588;
  double t68654;
  double t68683;
  double t68693;
  double t68698;
  double t69162;
  double t69167;
  double t69178;
  double t69208;
  double t69218;
  double t69219;
  double t69229;
  double t69235;
  double t69238;
  double t69272;
  double t69283;
  double t69284;
  double t69298;
  double t69303;
  double t69304;
  double t56664;
  double t56899;
  double t56902;
  double t56919;
  double t57206;
  double t57231;
  double t69459;
  double t69461;
  double t69462;
  double t69465;
  double t69468;
  double t69469;
  double t69473;
  double t69474;
  double t69476;
  double t69482;
  double t69484;
  double t69486;
  double t57238;
  double t57239;
  double t57242;
  double t68847;
  double t68894;
  double t68999;
  double t69004;
  double t69621;
  double t69652;
  double t69654;
  double t69668;
  double t69673;
  double t69675;
  double t69041;
  double t69046;
  double t69052;
  double t69073;
  double t69083;
  double t69088;
  double t69095;
  double t69101;
  double t69156;
  double t69180;
  double t69187;
  double t69207;
  double t69223;
  double t69224;
  double t69228;
  double t69246;
  double t69253;
  double t69655;
  double t69704;
  double t69743;
  double t69746;
  double t70123;
  double t70124;
  double t70125;
  double t70128;
  double t70129;
  double t70131;
  double t69782;
  double t69786;
  double t69831;
  double t69889;
  double t70004;
  double t70018;
  double t70035;
  double t70049;
  t48734 = Cos(var1[10]);
  t48751 = -1.*t48734;
  t48756 = 1. + t48751;
  t50383 = 9.e-12*t48756;
  t50386 = t50383 + t48751;
  t49190 = Cos(var1[5]);
  t48840 = -9.e-12*t48756;
  t48944 = 1. + t48840;
  t48947 = 3.e-6*t48944;
  t48952 = -3.e-6*t48756;
  t49065 = t48947 + t48952;
  t50393 = Sin(var1[5]);
  t46805 = Sin(var1[3]);
  t50437 = Sin(var1[10]);
  t50412 = Cos(var1[3]);
  t50420 = Cos(var1[4]);
  t50444 = Sin(var1[4]);
  t50894 = Cos(var1[12]);
  t50895 = -1.*t50894;
  t50900 = 1. + t50895;
  t51208 = 3.e-6*t50900;
  t51220 = Sin(var1[12]);
  t51255 = 3.e-6*t51220;
  t51318 = t51208 + t51255;
  t51365 = 3.e-6*t51318;
  t50943 = 1.000000000009*t50900;
  t52069 = -3.e-6*t51220;
  t52111 = t51208 + t52069;
  t52113 = 3.e-6*t52111;
  t52031 = -1.8e-11*t50900;
  t52626 = -3.e-6*t50900;
  t52645 = t52626 + t51255;
  t52686 = 1. + t52031;
  t52559 = -9.e-12*t50900;
  t52347 = 3.e-13*var1[12];
  t52743 = t52626 + t52069;
  t52782 = 3.e-6*t52686;
  t52806 = t52782 + t52626 + t52069;
  t52680 = 1.e-7*var1[12];
  t52726 = 0.1*t52686;
  t52732 = 5.4e-18*t50900;
  t52748 = -3.e-12*t52743;
  t52759 = 0.100000000003*t52645;
  t52778 = t52680 + t52726 + t52732 + t52748 + t52759;
  t52119 = 1. + t52031 + t52113 + t51365;
  t52563 = -1.*t51220;
  t52842 = 0.1000000000039*t50900;
  t52847 = 3.e-7*t52743;
  t52850 = 0.1*t51318;
  t52880 = t52559 + t51220;
  t52885 = -3.e-12*t52880;
  t52892 = t52347 + t52842 + t52847 + t52850 + t52885;
  t52382 = -1. + t50943;
  t52411 = 0.2*t52382;
  t52536 = -0.2000000000048*t50900;
  t52574 = t52559 + t52563;
  t52580 = 0.100000000003*t52574;
  t52593 = 0.1*t52111;
  t52659 = 3.e-7*t52645;
  t52662 = t52347 + t52411 + t52536 + t52580 + t52593 + t52659;
  t52955 = -1.000000000009*t50900;
  t52962 = 1. + t52955;
  t53014 = 3.e-6*t52962;
  t53061 = 9.e-12*t50900;
  t53630 = t53061 + t51220;
  t53813 = 3.e-6*t53630;
  t53856 = t53014 + t51208 + t52069 + t53813;
  t52122 = -1. + t50943 + t52113;
  t52671 = -1.*t52122*t52662;
  t52807 = -1.*t52778*t52806;
  t52836 = t52559 + t51365 + t51220;
  t52914 = -1.*t52836*t52892;
  t52916 = t52671 + t52807 + t52914;
  t52926 = t52778*t52119;
  t53141 = t53061 + t52563;
  t53550 = 3.e-6*t53141;
  t53619 = t53014 + t51208 + t53550 + t51255;
  t53626 = t53619*t52892;
  t53924 = t52662*t53856;
  t54171 = t52926 + t53626 + t53924;
  t51371 = -1. + t50943 + t51365;
  t54692 = t52559 + t52113 + t52563;
  t54732 = t52782 + t52626 + t51255;
  t50754 = -1.000000000009*t48756;
  t50758 = 1. + t50754;
  t54804 = -1.*t50437*t51371;
  t54827 = t48734*t54692;
  t54828 = 3.e-6*t48756*t54732;
  t54907 = t54804 + t54827 + t54828;
  t54688 = 3.e-6*t50437*t51371;
  t54720 = 3.e-6*t48756*t54692;
  t54780 = t48944*t54732;
  t54791 = t54688 + t54720 + t54780;
  t55306 = t52662*t54692;
  t55315 = t52778*t54732;
  t55325 = t51371*t52892;
  t55342 = t55306 + t55315 + t55325;
  t55383 = -1.*t52778*t52119;
  t55423 = -1.*t53619*t52892;
  t55457 = -1.*t52662*t53856;
  t55468 = t55383 + t55423 + t55457;
  t55706 = t48734*t52122;
  t55774 = 3.e-6*t48756*t52806;
  t55794 = -1.*t50437*t52836;
  t55797 = t55706 + t55774 + t55794;
  t55633 = 3.e-6*t48756*t52122;
  t55637 = t48944*t52806;
  t55647 = 3.e-6*t50437*t52836;
  t55685 = t55633 + t55637 + t55647;
  t56020 = -1.*t52662*t54692;
  t56027 = -1.*t52778*t54732;
  t56031 = -1.*t51371*t52892;
  t56033 = t56020 + t56027 + t56031;
  t56064 = t52122*t52662;
  t56069 = t52778*t52806;
  t56103 = t52836*t52892;
  t56114 = t56064 + t56069 + t56103;
  t56281 = 3.e-6*t48756*t52119;
  t56285 = -1.*t50437*t53619;
  t56288 = t48734*t53856;
  t56290 = t56281 + t56285 + t56288;
  t56214 = t48944*t52119;
  t56228 = 3.e-6*t50437*t53619;
  t56232 = 3.e-6*t48756*t53856;
  t56248 = t56214 + t56228 + t56232;
  t49283 = t49065*t49190;
  t50395 = t50386*t50393;
  t50399 = t49283 + t50395;
  t50442 = -1.000000000009*t50420*t50437;
  t50484 = t50386*t49190;
  t50546 = -1.*t49065*t50393;
  t50549 = t50484 + t50546;
  t50558 = -1.*t50444*t50549;
  t50599 = t50442 + t50558;
  t50629 = 3.e-6*t49190*t50437;
  t50631 = -1.*t50437*t50393;
  t50695 = t50629 + t50631;
  t50798 = t50758*t50420;
  t50814 = -1.*t49190*t50437;
  t50817 = -3.e-6*t50437*t50393;
  t50825 = t50814 + t50817;
  t50837 = -1.*t50444*t50825;
  t50850 = t50798 + t50837;
  t52030 = 0.2*t51371;
  t52918 = -1.*t52119*t52916;
  t54220 = -1.*t52806*t54171;
  t54262 = t53856*t52916;
  t54435 = t52122*t54171;
  t54505 = t54262 + t54435;
  t54549 = -3.e-6*t54505;
  t54612 = t52030 + t52918 + t54220 + t54549;
  t54800 = t49190*t54791;
  t54912 = t54907*t50393;
  t54914 = t54800 + t54912;
  t55004 = t50758*t51371;
  t55012 = t50437*t54692;
  t55015 = -3.e-6*t50437*t54732;
  t55022 = t55004 + t55012 + t55015;
  t55027 = t50420*t55022;
  t55134 = t49190*t54907;
  t55142 = -1.*t54791*t50393;
  t55157 = t55134 + t55142;
  t55187 = -1.*t50444*t55157;
  t55188 = t55027 + t55187;
  t55296 = 0.2*t52836;
  t55352 = -1.*t52119*t55342;
  t55518 = -1.*t54732*t55468;
  t55524 = t53856*t55342;
  t55609 = t54692*t55468;
  t55612 = t55524 + t55609;
  t55621 = -3.e-6*t55612;
  t55629 = t55296 + t55352 + t55518 + t55621;
  t55687 = t49190*t55685;
  t55828 = t55797*t50393;
  t55847 = t55687 + t55828;
  t55854 = t50437*t52122;
  t55856 = -3.e-6*t50437*t52806;
  t55859 = t50758*t52836;
  t55864 = t55854 + t55856 + t55859;
  t55868 = t50420*t55864;
  t55875 = t49190*t55797;
  t55880 = -1.*t55685*t50393;
  t55907 = t55875 + t55880;
  t55911 = -1.*t50444*t55907;
  t55937 = t55868 + t55911;
  t56015 = 0.2*t53619;
  t56041 = -1.*t52806*t56033;
  t56124 = -1.*t54732*t56114;
  t56136 = t52122*t56033;
  t56142 = t54692*t56114;
  t56143 = t56136 + t56142;
  t56147 = -3.e-6*t56143;
  t56148 = t56015 + t56041 + t56124 + t56147;
  t56270 = t49190*t56248;
  t56292 = t56290*t50393;
  t56298 = t56270 + t56292;
  t56309 = -3.e-6*t50437*t52119;
  t56315 = t50758*t53619;
  t56316 = t50437*t53856;
  t56317 = t56309 + t56315 + t56316;
  t56319 = t50420*t56317;
  t56320 = t49190*t56290;
  t56322 = -1.*t56248*t50393;
  t56330 = t56320 + t56322;
  t56332 = -1.*t50444*t56330;
  t56340 = t56319 + t56332;
  t57251 = 1.000000000009*t50437*t50444;
  t57253 = -1.*t50420*t50549;
  t57255 = t57251 + t57253;
  t57259 = -1.*t50758*t50444;
  t57267 = -1.*t50420*t50825;
  t57271 = t57259 + t57267;
  t57345 = -1.*t55022*t50444;
  t57377 = -1.*t50420*t55157;
  t57380 = t57345 + t57377;
  t57401 = -1.*t55864*t50444;
  t57413 = -1.*t50420*t55907;
  t57419 = t57401 + t57413;
  t57424 = -1.*t56317*t50444;
  t57427 = -1.*t50420*t56330;
  t57430 = t57424 + t57427;
  t57840 = -3.e-6*t52686;
  t57698 = -3.e-6*t48734;
  t57709 = t48952 + t57698;
  t57785 = t57709*t49190;
  t57825 = t57785 + t50393;
  t58839 = 0.05*t50758;
  t58985 = -2.999982e-7*t50437;
  t59272 = t58839 + t58985;
  t59362 = 2.999982e-7*t48756;
  t59413 = -1. + t48734;
  t59501 = 0.2*t59413;
  t59532 = -0.2*t48734;
  t59534 = -0.05*t50437;
  t59547 = t59362 + t59501 + t59532 + t59534;
  t59552 = t49190*t59547;
  t59582 = 0.1*t48944;
  t59592 = 5.4e-18*t48756;
  t59596 = 1.5e-7*t50437;
  t59605 = t59582 + t59592 + t59596;
  t59627 = -1.*t59605*t50393;
  t59647 = t59552 + t59627;
  t59685 = t59272*t50444;
  t59691 = t50420*t59647;
  t59800 = t59685 + t59691;
  t59285 = -1.*t59272*t50444;
  t59653 = -1.*t50420*t59647;
  t59668 = t59285 + t59653;
  t60338 = t50420*t59272;
  t60366 = -1.*t50444*t59647;
  t60475 = t60338 + t60366;
  t58426 = -1.000000000009*t50437*t50444;
  t58504 = t50420*t50549;
  t58827 = t58426 + t58504;
  t59999 = t49190*t59605;
  t60114 = t59547*t50393;
  t60193 = t59999 + t60114;
  t59880 = -1.*t49190;
  t59898 = t57709*t50393;
  t59932 = t59880 + t59898;
  t61120 = t50758*t50444;
  t61124 = t50420*t50825;
  t61125 = t61120 + t61124;
  t61365 = 0.2000000000018*t50437;
  t61396 = t50437*t52662;
  t61398 = -3.e-6*t50437*t52778;
  t61411 = t50758*t52892;
  t61412 = t61365 + t61396 + t61398 + t61411;
  t61415 = -1.8e-12*t48756;
  t61418 = t48734*t52662;
  t61444 = 3.e-6*t48756*t52778;
  t61494 = -1.*t50437*t52892;
  t61505 = t61415 + t59501 + t61418 + t61444 + t61494;
  t61533 = t49190*t61505;
  t61646 = 6.000000000054e-7*t48756;
  t61647 = 3.e-6*t48756*t52662;
  t61649 = t48944*t52778;
  t61658 = 3.e-6*t50437*t52892;
  t61659 = t61646 + t61647 + t61649 + t61658;
  t61713 = -1.*t61659*t50393;
  t61714 = t61533 + t61713;
  t61760 = t50420*t61412;
  t61762 = -1.*t50444*t61714;
  t61764 = t61760 + t61762;
  t61806 = t55022*t50444;
  t61812 = t50420*t55157;
  t61813 = t61806 + t61812;
  t61730 = t61412*t50444;
  t61731 = t50420*t61714;
  t61755 = t61730 + t61731;
  t61414 = -1.*t61412*t50444;
  t61717 = -1.*t50420*t61714;
  t61723 = t61414 + t61717;
  t61328 = t55864*t50444;
  t61333 = t50420*t55907;
  t61360 = t61328 + t61333;
  t61862 = t49190*t61659;
  t61867 = t61505*t50393;
  t61873 = t61862 + t61867;
  t62074 = t56317*t50444;
  t62075 = t50420*t56330;
  t62077 = t62074 + t62075;
  t62294 = -1.*t49065*t49190;
  t62296 = -1.*t50386*t50393;
  t62297 = t62294 + t62296;
  t62307 = -3.e-6*t49190*t50437;
  t62309 = t50437*t50393;
  t62310 = t62307 + t62309;
  t62315 = -1.*t49190*t54791;
  t62320 = -1.*t54907*t50393;
  t62330 = t62315 + t62320;
  t62333 = -1.*t49190*t55685;
  t62334 = -1.*t55797*t50393;
  t62337 = t62333 + t62334;
  t62346 = -1.*t49190*t56248;
  t62350 = -1.*t56290*t50393;
  t62353 = t62346 + t62350;
  t57880 = -3.e-6*t54692;
  t57910 = t57840 + t51208 + t57880 + t52069;
  t58307 = -3.e-6*t52122;
  t58344 = t57840 + t51208 + t58307 + t51255;
  t58354 = 1.8e-11*t50900;
  t58355 = -3.e-6*t52111;
  t58357 = -3.e-6*t51318;
  t58358 = -3.e-6*t53856;
  t58363 = -1. + t58354 + t58355 + t58357 + t58358;
  t60232 = t59932*t60193;
  t61002 = -1.*t50399*t60193;
  t62557 = -1.*t49190*t59605;
  t62558 = -1.*t59547*t50393;
  t62559 = t62557 + t62558;
  t61151 = -1.*t59932*t60193;
  t62577 = -1.*t57709*t50393;
  t62579 = t49190 + t62577;
  t61211 = t60193*t50695;
  t61875 = -1.*t54914*t61873;
  t62640 = -1.*t49190*t61659;
  t62641 = -1.*t61505*t50393;
  t62645 = t62640 + t62641;
  t62046 = t55847*t61873;
  t62103 = t54914*t61873;
  t62131 = -1.*t61873*t56298;
  t62205 = -1.*t55847*t61873;
  t62238 = t61873*t56298;
  t60286 = t50420*t57825*t59800;
  t60685 = -1.*t50444*t57825*t60475;
  t60686 = t60232 + t60286 + t60685;
  t62566 = -1.*t50549*t60193;
  t62570 = -1.*t50399*t59647;
  t62575 = t57825*t60193;
  t62585 = t59932*t59647;
  t61013 = -1.*t58827*t59800;
  t61023 = -1.*t50599*t60475;
  t61026 = t61002 + t61013 + t61023;
  t61153 = -1.*t50420*t57825*t59800;
  t61154 = t50444*t57825*t60475;
  t61175 = t61151 + t61153 + t61154;
  t62857 = Power(t50420,2);
  t62862 = Power(t50444,2);
  t62604 = -1.*t57825*t60193;
  t62608 = -1.*t59932*t59647;
  t62617 = t59647*t50695;
  t62620 = t60193*t50825;
  t61213 = t59800*t61125;
  t61215 = t60475*t50850;
  t61217 = t61211 + t61213 + t61215;
  t62648 = -1.*t55157*t61873;
  t62657 = -1.*t54914*t61714;
  t62675 = t55907*t61873;
  t62680 = t55847*t61714;
  t61876 = -1.*t61813*t61755;
  t61951 = -1.*t55188*t61764;
  t62007 = t61875 + t61876 + t61951;
  t62048 = t61360*t61755;
  t62053 = t55937*t61764;
  t62060 = t62046 + t62048 + t62053;
  t62723 = t55157*t61873;
  t62729 = t54914*t61714;
  t62104 = t61813*t61755;
  t62105 = t55188*t61764;
  t62107 = t62103 + t62104 + t62105;
  t62742 = -1.*t61873*t56330;
  t62746 = -1.*t61714*t56298;
  t62134 = -1.*t61755*t62077;
  t62136 = -1.*t61764*t56340;
  t62138 = t62131 + t62134 + t62136;
  t62757 = -1.*t55907*t61873;
  t62759 = -1.*t55847*t61714;
  t62209 = -1.*t61360*t61755;
  t62213 = -1.*t55937*t61764;
  t62217 = t62205 + t62209 + t62213;
  t62793 = t61873*t56330;
  t62800 = t61714*t56298;
  t62241 = t61755*t62077;
  t62245 = t61764*t56340;
  t62257 = t62238 + t62241 + t62245;
  t63106 = -0.05*t48734;
  t63107 = 2.999982e-7*t50437;
  t63110 = t63106 + t63107;
  t63149 = -3.e-6*t48734*t52806;
  t63153 = -1.000000000009*t50437*t52836;
  t63154 = t55706 + t63149 + t63153;
  t62633 = -1.*t55022*t61412;
  t63143 = -1.000000000009*t50437*t51371;
  t63144 = -3.e-6*t48734*t54732;
  t63146 = t63143 + t54827 + t63144;
  t63204 = -0.2000000000018*t50437;
  t63216 = -1.*t50437*t52662;
  t63217 = 3.e-6*t50437*t52778;
  t63218 = -1.*t48734*t52892;
  t63222 = t63204 + t63216 + t63217 + t63218;
  t63230 = 6.000000000054e-7*t50437;
  t63231 = 3.e-6*t50437*t52662;
  t63233 = -9.e-12*t50437*t52778;
  t63237 = 3.e-6*t48734*t52892;
  t63250 = t63230 + t63231 + t63233 + t63237;
  t63267 = 0.2000000000018*t48734;
  t63281 = -3.e-6*t48734*t52778;
  t63283 = -1.000000000009*t50437*t52892;
  t63289 = t63267 + t61418 + t63281 + t63283;
  t62685 = t55864*t61412;
  t63164 = -3.e-6*t48734*t52119;
  t63174 = -1.000000000009*t50437*t53619;
  t63175 = t63164 + t63174 + t56288;
  t62706 = t55022*t61412;
  t63297 = -1.*t48734*t51371;
  t63300 = -1.*t50437*t54692;
  t63307 = 3.e-6*t50437*t54732;
  t63310 = t63297 + t63300 + t63307;
  t63326 = 3.e-6*t48734*t51371;
  t63333 = 3.e-6*t50437*t54692;
  t63341 = -9.e-12*t50437*t54732;
  t63344 = t63326 + t63333 + t63341;
  t62732 = -1.*t61412*t56317;
  t63379 = -1.*t50437*t52122;
  t63386 = 3.e-6*t50437*t52806;
  t63387 = -1.*t48734*t52836;
  t63388 = t63379 + t63386 + t63387;
  t63397 = 3.e-6*t50437*t52122;
  t63407 = -9.e-12*t50437*t52806;
  t63409 = 3.e-6*t48734*t52836;
  t63410 = t63397 + t63407 + t63409;
  t62769 = -1.*t55864*t61412;
  t62781 = t61412*t56317;
  t63511 = 3.e-6*t50437*t52119;
  t63515 = -1.*t48734*t53619;
  t63519 = -1.*t50437*t53856;
  t63522 = t63511 + t63515 + t63519;
  t63528 = -9.e-12*t50437*t52119;
  t63531 = 3.e-6*t48734*t53619;
  t63536 = 3.e-6*t50437*t53856;
  t63537 = t63528 + t63531 + t63536;
  t63705 = -1.*t48734*t49190;
  t63706 = -3.e-6*t48734*t50393;
  t63708 = t63705 + t63706;
  t63726 = 1.000000000009*t49190*t50437;
  t63731 = 3.000000000027e-6*t50437*t50393;
  t63739 = t63726 + t63731;
  t63763 = t49190*t63310;
  t63769 = -1.*t63344*t50393;
  t63773 = t63763 + t63769;
  t63788 = t49190*t63388;
  t63795 = -1.*t63410*t50393;
  t63797 = t63788 + t63795;
  t63809 = t49190*t63522;
  t63810 = -1.*t63537*t50393;
  t63813 = t63809 + t63810;
  t63829 = 3.e-6*t48734*t49190;
  t63831 = -1.*t48734*t50393;
  t63832 = t63829 + t63831;
  t63836 = -1.*t50444*t63708;
  t63839 = t50442 + t63836;
  t63858 = -3.000000000027e-6*t49190*t50437;
  t63863 = 1.000000000009*t50437*t50393;
  t63864 = t63858 + t63863;
  t63868 = -1.000000000009*t48734*t50420;
  t63871 = -1.*t50444*t63739;
  t63873 = t63868 + t63871;
  t63891 = t49190*t63344;
  t63893 = t63310*t50393;
  t63895 = t63891 + t63893;
  t63900 = t50420*t63146;
  t63903 = -1.*t50444*t63773;
  t63906 = t63900 + t63903;
  t63916 = t49190*t63410;
  t63918 = t63388*t50393;
  t63921 = t63916 + t63918;
  t63927 = t50420*t63154;
  t63928 = -1.*t50444*t63797;
  t63933 = t63927 + t63928;
  t63945 = t49190*t63537;
  t63947 = t63522*t50393;
  t63952 = t63945 + t63947;
  t63954 = t50420*t63175;
  t63962 = -1.*t50444*t63813;
  t63964 = t63954 + t63962;
  t62594 = -1.*t57825*t59647;
  t62597 = t61151 + t62594;
  t63104 = 1.5e-7*t48734;
  t63115 = -8.999946e-13*t50437;
  t64067 = t63104 + t63115;
  t64091 = t49190*t64067;
  t64094 = t63110*t50393;
  t64101 = t64091 + t64094;
  t64065 = t49190*t63110;
  t64078 = -1.*t64067*t50393;
  t64082 = t64065 + t64078;
  t62542 = t57825*t59647;
  t62543 = t60232 + t62542;
  t64120 = -2.999982e-7*t48734;
  t64136 = -0.05000000000045*t50437;
  t64185 = t64120 + t64136;
  t62635 = -1.*t55157*t61714;
  t62636 = t62633 + t61875 + t62635;
  t63203 = -1.*t63146*t61412;
  t63290 = -1.*t55022*t63289;
  t63370 = t63154*t61412;
  t63377 = t55864*t63289;
  t64292 = t49190*t63250;
  t64293 = t63222*t50393;
  t64295 = t64292 + t64293;
  t64316 = t49190*t63222;
  t64318 = -1.*t63250*t50393;
  t64320 = t64316 + t64318;
  t62691 = t55907*t61714;
  t62693 = t62685 + t62046 + t62691;
  t62714 = t55157*t61714;
  t62718 = t62706 + t62103 + t62714;
  t63452 = t63146*t61412;
  t63468 = t55022*t63289;
  t62735 = -1.*t61714*t56330;
  t62737 = t62732 + t62735 + t62131;
  t63503 = -1.*t61412*t63175;
  t63541 = -1.*t63289*t56317;
  t63572 = -1.*t63154*t61412;
  t63588 = -1.*t55864*t63289;
  t62770 = -1.*t55907*t61714;
  t62774 = t62769 + t62205 + t62770;
  t62783 = t61714*t56330;
  t62785 = t62781 + t62783 + t62238;
  t63649 = t61412*t63175;
  t63664 = t63289*t56317;
  t63761 = t63146*t50444;
  t63775 = t50420*t63773;
  t63780 = t63761 + t63775;
  t63785 = t63154*t50444;
  t63800 = t50420*t63797;
  t63801 = t63785 + t63800;
  t63805 = t63175*t50444;
  t63816 = t50420*t63813;
  t63820 = t63805 + t63816;
  t64109 = -1.*t59932*t64101;
  t63710 = t50420*t63708;
  t63719 = t58426 + t63710;
  t64206 = t63832*t60193;
  t64213 = t64101*t50695;
  t64632 = t64185*t50444;
  t64636 = t50420*t64082;
  t64643 = t64632 + t64636;
  t64647 = t50420*t64185;
  t64648 = -1.*t50444*t64082;
  t64683 = t64647 + t64648;
  t64235 = t59932*t64101;
  t63723 = -1.000000000009*t48734*t50444;
  t63748 = t50420*t63739;
  t63751 = t63723 + t63748;
  t64259 = -1.*t50399*t64101;
  t64267 = -1.*t60193*t63864;
  t64313 = -1.*t54914*t64295;
  t64325 = -1.*t63895*t61873;
  t64343 = t55847*t64295;
  t64393 = t63921*t61873;
  t66891 = t63289*t50444;
  t66906 = t50420*t64320;
  t66952 = t66891 + t66906;
  t66962 = t50420*t63289;
  t66982 = -1.*t50444*t64320;
  t66984 = t66962 + t66982;
  t64456 = t54914*t64295;
  t64460 = t63895*t61873;
  t64506 = -1.*t64295*t56298;
  t64512 = -1.*t61873*t63952;
  t64531 = -1.*t55847*t64295;
  t64543 = -1.*t63921*t61873;
  t64584 = t64295*t56298;
  t64585 = t61873*t63952;
  t67942 = -3.e-6*t50894;
  t67957 = 3.e-6*t50894;
  t67944 = 9.e-12*t51220;
  t67949 = -2.7e-17*t51220;
  t67985 = -3.000000000054e-6*t51220;
  t67989 = t67942 + t67985;
  t67955 = t67942 + t51255;
  t68000 = t67957 + t52069;
  t68077 = t67942 + t52069;
  t68020 = -9.e-12*t51220;
  t67958 = t67957 + t51255;
  t68166 = t67957 + t67985;
  t68122 = 3.e-6*t67955;
  t68003 = 3.e-7*t68000;
  t68027 = t50895 + t68020;
  t68029 = 0.100000000003*t68027;
  t68041 = 0.1*t67955;
  t68073 = -3.000000000027e-12*t51220;
  t68075 = 3.e-13 + t68003 + t68029 + t68041 + t68073;
  t68078 = -3.e-12*t68077;
  t68083 = 0.100000000003*t68000;
  t68084 = -1.7999946e-12*t51220;
  t68086 = 1.e-7 + t68078 + t68083 + t68084;
  t68091 = 3.e-7*t68077;
  t68092 = t50894 + t68020;
  t68099 = -3.e-12*t68092;
  t68101 = 0.1*t67958;
  t68103 = 0.1000000000039*t51220;
  t68109 = 3.e-13 + t68091 + t68099 + t68101 + t68103;
  t68146 = 3.e-6*t67958;
  t68133 = 1.000000000009*t51220;
  t68135 = t68122 + t68133;
  t67998 = t52778*t67989;
  t68076 = t52122*t68075;
  t68088 = t52806*t68086;
  t68117 = t68109*t52836;
  t68140 = t52662*t68135;
  t68149 = t50894 + t68146 + t68020;
  t68154 = t68149*t52892;
  t68160 = t67998 + t68076 + t68088 + t68117 + t68140 + t68154;
  t68170 = t50895 + t68122 + t68020;
  t68169 = -1.*t52778*t68166;
  t68171 = -1.*t52662*t68170;
  t68176 = -1.*t54692*t68075;
  t68183 = -1.*t68086*t54732;
  t68186 = -1.*t51371*t68109;
  t68187 = t68146 + t68133;
  t68190 = -1.*t68187*t52892;
  t68201 = t68169 + t68171 + t68176 + t68183 + t68186 + t68190;
  t68240 = -1.8e-11*t51220;
  t68244 = t68122 + t68146 + t68240;
  t67945 = t50894 + t67944;
  t67946 = 3.e-6*t67945;
  t67951 = t67942 + t67946 + t67949;
  t67973 = t50895 + t67944;
  t67974 = 3.e-6*t67973;
  t67977 = t67957 + t67974 + t67949;
  t68260 = t52778*t68166;
  t68261 = t52662*t68170;
  t68262 = t54692*t68075;
  t68270 = t68086*t54732;
  t68271 = t51371*t68109;
  t68272 = t68187*t52892;
  t68275 = t68260 + t68261 + t68262 + t68270 + t68271 + t68272;
  t68279 = -1.*t52778*t68244;
  t68282 = -1.*t52119*t68086;
  t68283 = -1.*t52662*t67951;
  t68285 = -1.*t53619*t68109;
  t68292 = -1.*t67977*t52892;
  t68315 = -1.*t68075*t53856;
  t68327 = t68279 + t68282 + t68283 + t68285 + t68292 + t68315;
  t68393 = -1.*t52778*t67989;
  t68410 = -1.*t52122*t68075;
  t68420 = -1.*t52806*t68086;
  t68432 = -1.*t68109*t52836;
  t68472 = -1.*t52662*t68135;
  t68486 = -1.*t68149*t52892;
  t68488 = t68393 + t68410 + t68420 + t68432 + t68472 + t68486;
  t68508 = t52778*t68244;
  t68511 = t52119*t68086;
  t68518 = t52662*t67951;
  t68520 = t53619*t68109;
  t68522 = t67977*t52892;
  t68527 = t68075*t53856;
  t68529 = t68508 + t68511 + t68518 + t68520 + t68522 + t68527;
  t68682 = 3.000000000054e-6*t51220;
  t67952 = -3.e-6*t67951;
  t67956 = -3.e-6*t67955;
  t67966 = -3.e-6*t67958;
  t67970 = 1.8e-11*t51220;
  t67971 = t67952 + t67956 + t67966 + t67970;
  t68708 = -3.e-6*t50437*t67989;
  t68711 = t50758*t68149;
  t68713 = t50437*t68135;
  t68722 = t68708 + t68711 + t68713;
  t63192 = -1.*t54907*t61505;
  t63194 = -1.*t54791*t61659;
  t63197 = t62633 + t63192 + t63194;
  t68735 = -3.e-6*t50437*t68166;
  t68738 = t50437*t68170;
  t68744 = t50758*t68187;
  t68748 = t68735 + t68738 + t68744;
  t63423 = t55797*t61505;
  t63424 = t55685*t61659;
  t63429 = t62685 + t63423 + t63424;
  t68794 = t50437*t68075;
  t68802 = -3.e-6*t50437*t68086;
  t68815 = t50758*t68109;
  t68834 = t68794 + t68802 + t68815;
  t68848 = t48734*t68075;
  t68850 = 3.e-6*t48756*t68086;
  t68854 = -1.*t50437*t68109;
  t68855 = t68848 + t68850 + t68854;
  t68866 = 3.e-6*t48756*t68075;
  t68867 = t48944*t68086;
  t68871 = 3.e-6*t50437*t68109;
  t68874 = t68866 + t68867 + t68871;
  t67978 = 0.2*t67977;
  t67991 = -1.*t67989*t56033;
  t68161 = -1.*t54732*t68160;
  t68168 = -1.*t68166*t56114;
  t68202 = -1.*t52806*t68201;
  t68205 = t68135*t56033;
  t68209 = t54692*t68160;
  t68211 = t68170*t56114;
  t68225 = t52122*t68201;
  t68227 = t68205 + t68209 + t68211 + t68225;
  t68229 = -3.e-6*t68227;
  t68234 = t67978 + t67991 + t68161 + t68168 + t68202 + t68229;
  t68769 = -3.e-6*t50437*t68244;
  t68770 = t50758*t67977;
  t68776 = t50437*t67951;
  t68778 = t68769 + t68770 + t68776;
  t63446 = t54907*t61505;
  t63449 = t54791*t61659;
  t63450 = t62706 + t63446 + t63449;
  t69006 = 3.e-6*t48756*t68166;
  t69008 = t48734*t68170;
  t69013 = -1.*t50437*t68187;
  t69016 = t69006 + t69008 + t69013;
  t69021 = t48944*t68166;
  t69022 = 3.e-6*t48756*t68170;
  t69023 = 3.e-6*t50437*t68187;
  t69024 = t69021 + t69022 + t69023;
  t63479 = -1.*t61659*t56248;
  t63485 = -1.*t61505*t56290;
  t63491 = t63479 + t63485 + t62732;
  t63604 = -1.*t55797*t61505;
  t63606 = -1.*t55685*t61659;
  t63611 = t62769 + t63604 + t63606;
  t68913 = 3.e-6*t48756*t67989;
  t68923 = -1.*t50437*t68149;
  t68928 = t48734*t68135;
  t68929 = t68913 + t68923 + t68928;
  t68949 = t48944*t67989;
  t68958 = 3.e-6*t50437*t68149;
  t68962 = 3.e-6*t48756*t68135;
  t68975 = t68949 + t68958 + t68962;
  t69053 = 3.e-6*t48756*t68244;
  t69054 = -1.*t50437*t67977;
  t69056 = t48734*t67951;
  t69061 = t69053 + t69054 + t69056;
  t69064 = t48944*t68244;
  t69065 = 3.e-6*t50437*t67977;
  t69066 = 3.e-6*t48756*t67951;
  t69067 = t69064 + t69065 + t69066;
  t63620 = t61659*t56248;
  t63632 = t61505*t56290;
  t63634 = t63620 + t63632 + t62781;
  t68236 = 0.2*t68149;
  t68245 = -1.*t68244*t55342;
  t68277 = -1.*t52119*t68275;
  t68278 = -1.*t68166*t55468;
  t68332 = -1.*t54732*t68327;
  t68343 = t67951*t55342;
  t68349 = t53856*t68275;
  t68357 = t68170*t55468;
  t68362 = t54692*t68327;
  t68373 = t68343 + t68349 + t68357 + t68362;
  t68374 = -3.e-6*t68373;
  t68386 = t68236 + t68245 + t68277 + t68278 + t68332 + t68374;
  t68390 = 0.2*t68187;
  t68493 = -1.*t52119*t68488;
  t68504 = -1.*t68244*t52916;
  t68506 = -1.*t67989*t54171;
  t68534 = -1.*t52806*t68529;
  t68535 = t53856*t68488;
  t68536 = t67951*t52916;
  t68545 = t68135*t54171;
  t68553 = t52122*t68529;
  t68576 = t68535 + t68536 + t68545 + t68553;
  t68579 = -3.e-6*t68576;
  t68588 = t68390 + t68493 + t68504 + t68506 + t68534 + t68579;
  t68654 = -3.e-6*t68170;
  t68683 = t67942 + t68654 + t68682;
  t68693 = -3.e-6*t68135;
  t68698 = t67957 + t68682 + t68693;
  t69162 = t49190*t69061;
  t69167 = -1.*t69067*t50393;
  t69178 = t69162 + t69167;
  t69208 = t49190*t68929;
  t69218 = -1.*t68975*t50393;
  t69219 = t69208 + t69218;
  t69229 = t49190*t69016;
  t69235 = -1.*t69024*t50393;
  t69238 = t69229 + t69235;
  t69272 = t49190*t69067;
  t69283 = t69061*t50393;
  t69284 = t69272 + t69283;
  t69298 = t50420*t68778;
  t69303 = -1.*t50444*t69178;
  t69304 = t69298 + t69303;
  t56664 = t50412*t54914;
  t56899 = -1.*t46805*t55188;
  t56902 = t56664 + t56899;
  t56919 = t50412*t55847;
  t57206 = -1.*t46805*t55937;
  t57231 = t56919 + t57206;
  t69459 = t49190*t68975;
  t69461 = t68929*t50393;
  t69462 = t69459 + t69461;
  t69465 = t50420*t68722;
  t69468 = -1.*t50444*t69219;
  t69469 = t69465 + t69468;
  t69473 = t49190*t69024;
  t69474 = t69016*t50393;
  t69476 = t69473 + t69474;
  t69482 = t50420*t68748;
  t69484 = -1.*t50444*t69238;
  t69486 = t69482 + t69484;
  t57238 = t50412*t56298;
  t57239 = -1.*t46805*t56340;
  t57242 = t57238 + t57239;
  t68847 = t68834*t55864;
  t68894 = t68722*t61412;
  t68999 = -1.*t55022*t68834;
  t69004 = -1.*t68748*t61412;
  t69621 = t49190*t68874;
  t69652 = t68855*t50393;
  t69654 = t69621 + t69652;
  t69668 = t49190*t68855;
  t69673 = -1.*t68874*t50393;
  t69675 = t69668 + t69673;
  t69041 = t55022*t68834;
  t69046 = t68748*t61412;
  t69052 = -1.*t68778*t61412;
  t69073 = -1.*t68834*t56317;
  t69083 = -1.*t68834*t55864;
  t69088 = -1.*t68722*t61412;
  t69095 = t68778*t61412;
  t69101 = t68834*t56317;
  t69156 = t68778*t50444;
  t69180 = t50420*t69178;
  t69187 = t69156 + t69180;
  t69207 = t68722*t50444;
  t69223 = t50420*t69219;
  t69224 = t69207 + t69223;
  t69228 = t68748*t50444;
  t69246 = t50420*t69238;
  t69253 = t69228 + t69246;
  t69655 = t69654*t55847;
  t69704 = t69462*t61873;
  t69743 = -1.*t54914*t69654;
  t69746 = -1.*t69476*t61873;
  t70123 = t68834*t50444;
  t70124 = t50420*t69675;
  t70125 = t70123 + t70124;
  t70128 = t50420*t68834;
  t70129 = -1.*t50444*t69675;
  t70131 = t70128 + t70129;
  t69782 = t54914*t69654;
  t69786 = t69476*t61873;
  t69831 = -1.*t69284*t61873;
  t69889 = -1.*t69654*t56298;
  t70004 = -1.*t69654*t55847;
  t70018 = -1.*t69462*t61873;
  t70035 = t69284*t61873;
  t70049 = t69654*t56298;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.0013000000000117*(-1.*t46805*t50399 - 1.*t50412*t50599) + 7.8000468000702e-9*(-1.*t46805*t50695 - 1.*t50412*t50850) - 0.05186*t54612*(-1.*t46805*t54914 - 1.*t50412*t55188) - 0.05186*t55629*(-1.*t46805*t55847 - 1.*t50412*t55937) - 0.05186*t56148*(-1.*t46805*t56298 - 1.*t50412*t56340))*var2[1] - 0.5*(-0.0013000000000117*(t50399*t50412 - 1.*t46805*t50599) + 7.8000468000702e-9*(t50412*t50695 - 1.*t46805*t50850) - 0.05186*t54612*t56902 - 0.05186*t55629*t57231 - 0.05186*t56148*t57242)*var2[2])*var2[10];
  p_output1[4]=(-0.5*(-0.0013000000000117*t50599 + 7.8000468000702e-9*t50850 - 0.05186*t54612*t55188 - 0.05186*t55629*t55937 - 0.05186*t56148*t56340)*var2[0] - 0.5*(0.0013000000000117*t46805*t57255 - 7.8000468000702e-9*t46805*t57271 + 0.05186*t46805*t54612*t57380 + 0.05186*t46805*t55629*t57419 + 0.05186*t46805*t56148*t57430)*var2[1] - 0.5*(-0.0013000000000117*t50412*t57255 + 7.8000468000702e-9*t50412*t57271 - 0.05186*t50412*t54612*t57380 - 0.05186*t50412*t55629*t57419 - 0.05186*t50412*t56148*t57430)*var2[2] - 0.5*(0.000046000000000414*t50444*t57825 - 0.000245*t55188*t57910 - 2.e-6*t55937*t58344 - 0.000245*t56340*t58363 + 7.8000468000702e-9*(t58827*(-1.*t50444*t57825*t59668 - 1.*t50444*t57825*t59800) + t50420*t57825*(-1.*t50599*t59668 - 1.*t50599*t59800 - 1.*t57255*t60475 - 1.*t58827*t60475) + t50599*t60686 - 1.*t50444*t57825*t61026) - 0.0013000000000117*((t50444*t57825*t59668 + t50444*t57825*t59800)*t61125 + t50420*t57825*(t50850*t59668 + t50850*t59800 + t57271*t60475 + t60475*t61125) + t50850*t61175 - 1.*t50444*t57825*t61217) - 0.05186*t56148*((t55937*t61723 + t55937*t61755 + t57419*t61764 + t61360*t61764)*t61813 + t61360*(-1.*t55188*t61723 - 1.*t55188*t61755 - 1.*t57380*t61764 - 1.*t61764*t61813) + t55937*t62007 + t55188*t62060) - 0.05186*t55629*((t55188*t61723 + t55188*t61755 + t57380*t61764 + t61764*t61813)*t62077 + t61813*(-1.*t56340*t61723 - 1.*t56340*t61755 - 1.*t57430*t61764 - 1.*t61764*t62077) + t56340*t62107 + t55188*t62138) - 0.05186*t54612*((-1.*t55937*t61723 - 1.*t55937*t61755 - 1.*t57419*t61764 - 1.*t61360*t61764)*t62077 + t61360*(t56340*t61723 + t56340*t61755 + t57430*t61764 + t61764*t62077) + t56340*t62217 + t55937*t62257))*var2[3])*var2[10];
  p_output1[5]=(-0.5*(-0.0013000000000117*t50420*t62297 + 7.8000468000702e-9*t50420*t62310 - 0.05186*t50420*t54612*t62330 - 0.05186*t50420*t55629*t62337 - 0.05186*t50420*t56148*t62353)*var2[0] - 0.5*(-0.0013000000000117*(t50412*t50549 + t46805*t50444*t62297) + 7.8000468000702e-9*(t50412*t50825 + t46805*t50444*t62310) - 0.05186*t54612*(t50412*t55157 + t46805*t50444*t62330) - 0.05186*t55629*(t50412*t55907 + t46805*t50444*t62337) - 0.05186*t56148*(t50412*t56330 + t46805*t50444*t62353))*var2[1] - 0.5*(-0.0013000000000117*(t46805*t50549 - 1.*t50412*t50444*t62297) + 7.8000468000702e-9*(t46805*t50825 - 1.*t50412*t50444*t62310) - 0.05186*t54612*(t46805*t55157 - 1.*t50412*t50444*t62330) - 0.05186*t55629*(t46805*t55907 - 1.*t50412*t50444*t62337) - 0.05186*t56148*(t46805*t56330 - 1.*t50412*t50444*t62353))*var2[2] - 0.5*(-0.000245*t50420*t57910*t62330 - 2.e-6*t50420*t58344*t62337 - 0.000245*t50420*t58363*t62353 - 0.000046000000000414*t50420*t62579 - 0.05186*t56148*(t50420*t62060*t62330 + t50420*t62007*t62337 + t61360*(-1.*t50420*t61755*t62330 + t50444*t61764*t62330 + t50444*t55188*t62645 - 1.*t50420*t61813*t62645 + t62648 + t62657) + t61813*(t50420*t61755*t62337 - 1.*t50444*t61764*t62337 - 1.*t50444*t55937*t62645 + t50420*t61360*t62645 + t62675 + t62680)) - 0.05186*t55629*(t50420*t62138*t62330 + t50420*t62107*t62353 + t62077*(t50420*t61755*t62330 - 1.*t50444*t61764*t62330 - 1.*t50444*t55188*t62645 + t50420*t61813*t62645 + t62723 + t62729) + t61813*(-1.*t50420*t61755*t62353 + t50444*t61764*t62353 + t50444*t56340*t62645 - 1.*t50420*t62077*t62645 + t62742 + t62746)) - 0.05186*t54612*(t50420*t62257*t62337 + t50420*t62217*t62353 + t62077*(-1.*t50420*t61755*t62337 + t50444*t61764*t62337 + t50444*t55937*t62645 - 1.*t50420*t61360*t62645 + t62757 + t62759) + t61360*(t50420*t61755*t62353 - 1.*t50444*t61764*t62353 - 1.*t50444*t56340*t62645 + t50420*t62077*t62645 + t62793 + t62800)) - 0.0013000000000117*(t50420*t61175*t62310 + t50420*t61217*t62579 + t50420*t57825*(t50420*t59800*t62310 - 1.*t50444*t60475*t62310 - 1.*t50444*t50850*t62559 + t50420*t61125*t62559 + t62617 + t62620) + t61125*(-1.*t50420*t59800*t62579 + t50444*t60475*t62579 + t62604 + t62608 - 1.*t57825*t62559*t62857 - 1.*t57825*t62559*t62862)) + 7.8000468000702e-9*(t50420*t60686*t62297 + t50420*t57825*(-1.*t50420*t59800*t62297 + t50444*t60475*t62297 + t50444*t50599*t62559 - 1.*t50420*t58827*t62559 + t62566 + t62570) + t50420*t61026*t62579 + t58827*(t62575 + t50420*t59800*t62579 - 1.*t50444*t60475*t62579 + t62585 + t57825*t62559*t62857 + t57825*t62559*t62862)))*var2[3] - 0.5*(-0.000046000000000414*t57825 - 0.000245*t55157*t57910 - 2.e-6*t55907*t58344 - 0.000245*t56330*t58363 + 7.8000468000702e-9*(t57825*(1.000000000009*t50437*t59272 - 1.*t50549*t59647 + t61002) + t50549*t62543 + t59932*(-1.*t59647*t62297 - 1.*t50549*t62559 + t62566 + t62570) + t50399*(t57825*t62559 + t62575 + t59647*t62579 + t62585)) - 0.0013000000000117*(t57825*(t50758*t59272 + t50825*t59647 + t61211) + t50825*t62597 + t50695*(-1.*t57825*t62559 - 1.*t59647*t62579 + t62604 + t62608) + t59932*(t59647*t62310 + t50825*t62559 + t62617 + t62620)) - 0.05186*t56148*(t55907*t62636 + t55847*(-1.*t61714*t62330 - 1.*t55157*t62645 + t62648 + t62657) + t54914*(t61714*t62337 + t55907*t62645 + t62675 + t62680) + t55157*t62693) - 0.05186*t55629*(t56330*t62718 + t56298*(t61714*t62330 + t55157*t62645 + t62723 + t62729) + t55157*t62737 + t54914*(-1.*t61714*t62353 - 1.*t56330*t62645 + t62742 + t62746)) - 0.05186*t54612*(t56298*(-1.*t61714*t62337 - 1.*t55907*t62645 + t62757 + t62759) + t56330*t62774 + t55907*t62785 + t55847*(t61714*t62353 + t56330*t62645 + t62793 + t62800)))*var2[4])*var2[10];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=(-0.5*(7.8000468000702e-9*t63719 - 0.0013000000000117*t63751 - 0.05186*t54612*t63780 - 0.05186*t55629*t63801 - 0.05186*t56148*t63820)*var2[0] - 0.5*(7.8000468000702e-9*(t50412*t63832 - 1.*t46805*t63839) - 0.0013000000000117*(t50412*t63864 - 1.*t46805*t63873) - 0.05186*t54612*(t50412*t63895 - 1.*t46805*t63906) - 0.05186*t55629*(t50412*t63921 - 1.*t46805*t63933) - 0.05186*t56148*(t50412*t63952 - 1.*t46805*t63964))*var2[1] - 0.5*(7.8000468000702e-9*(t46805*t63832 + t50412*t63839) - 0.0013000000000117*(t46805*t63864 + t50412*t63873) - 0.05186*t54612*(t46805*t63895 + t50412*t63906) - 0.05186*t55629*(t46805*t63921 + t50412*t63933) - 0.05186*t56148*(t46805*t63952 + t50412*t63964))*var2[2] - 0.5*(-0.000245*t57910*t63780 - 2.e-6*t58344*t63801 - 0.000245*t58363*t63820 + 7.8000468000702e-9*(t60686*t63751 + t50420*t57825*(-1.*t59800*t63751 - 1.*t60475*t63873 + t64259 + t64267 - 1.*t58827*t64643 - 1.*t50599*t64683) + t58827*(t64235 + t50420*t57825*t64643 - 1.*t50444*t57825*t64683)) - 0.0013000000000117*(t61175*t63719 + t50420*t57825*(t59800*t63719 + t60475*t63839 + t64206 + t64213 + t61125*t64643 + t50850*t64683) + t61125*(t64109 - 1.*t50420*t57825*t64643 + t50444*t57825*t64683)) - 0.05186*t56148*(t62060*t63780 + t62007*t63801 + t61360*(-1.*t61755*t63780 - 1.*t61764*t63906 + t64313 + t64325 - 1.*t61813*t66952 - 1.*t55188*t66984) + t61813*(t61755*t63801 + t61764*t63933 + t64343 + t64393 + t61360*t66952 + t55937*t66984)) - 0.05186*t55629*(t62138*t63780 + t62107*t63820 + t62077*(t61755*t63780 + t61764*t63906 + t64456 + t64460 + t61813*t66952 + t55188*t66984) + t61813*(-1.*t61755*t63820 - 1.*t61764*t63964 + t64506 + t64512 - 1.*t62077*t66952 - 1.*t56340*t66984)) - 0.05186*t54612*(t62257*t63801 + t62217*t63820 + t62077*(-1.*t61755*t63801 - 1.*t61764*t63933 + t64531 + t64543 - 1.*t61360*t66952 - 1.*t55937*t66984) + t61360*(t61755*t63820 + t61764*t63964 + t64584 + t64585 + t62077*t66952 + t56340*t66984)))*var2[3] - 0.5*(-0.000245*t57910*t63895 - 2.e-6*t58344*t63921 - 0.000245*t58363*t63952 - 0.0013000000000117*(t62597*t63832 + t50695*(-1.*t57825*t64082 + t64109) + t59932*(-1.000000000009*t50437*t59272 + t59647*t63708 + t50825*t64082 + t50758*t64185 + t64206 + t64213)) + 7.8000468000702e-9*(t62543*t63864 + t50399*(t57825*t64082 + t64235) + t59932*(1.000000000009*t48734*t59272 - 1.*t59647*t63739 - 1.*t50549*t64082 + 1.000000000009*t50437*t64185 + t64259 + t64267)) - 0.05186*t56148*(t62693*t63895 + t62636*t63921 + t55847*(t63203 + t63290 - 1.*t61714*t63773 + t64313 - 1.*t55157*t64320 + t64325) + t54914*(t63370 + t63377 + t61714*t63797 + t55907*t64320 + t64343 + t64393)) - 0.05186*t55629*(t62737*t63895 + t62718*t63952 + t56298*(t63452 + t63468 + t61714*t63773 + t55157*t64320 + t64456 + t64460) + t54914*(t63503 + t63541 - 1.*t61714*t63813 - 1.*t56330*t64320 + t64506 + t64512)) - 0.05186*t54612*(t62785*t63921 + t62774*t63952 + t56298*(t63572 + t63588 - 1.*t61714*t63797 - 1.*t55907*t64320 + t64531 + t64543) + t55847*(t63649 + t63664 + t61714*t63813 + t56330*t64320 + t64584 + t64585)))*var2[4] - 0.5*(-7.8000468001404e-9*t48734*(-5.4e-18*t48756 + 0.1*(-1. + t50383) - 1.5e-7*t50437 + t57709*t59547) + 0.0013000000000234*t50437*(-1.*t57709*t59547 + t59582 + t59592 + t59596) - 7.8000468001404e-9*t50437*(-1.5e-7*t48734 + 8.999946e-13*t50437 + t57709*t63110) - 0.0013000000000117*t50758*(t63104 - 1.*t57709*t63110 + t63115) - 0.000245*t57910*t63146 - 2.e-6*t58344*t63154 - 0.000245*t58363*t63175 - 0.05186*t56148*(t63154*t63197 + t55864*(t63203 - 1.*t54907*t63222 - 1.*t54791*t63250 + t63290 - 1.*t61505*t63310 - 1.*t61659*t63344) + t55022*(t55797*t63222 + t55685*t63250 + t63370 + t63377 + t61505*t63388 + t61659*t63410) + t63146*t63429) - 0.05186*t55629*(t63175*t63450 + t56317*(t54907*t63222 + t54791*t63250 + t61505*t63310 + t61659*t63344 + t63452 + t63468) + t63146*t63491 + t55022*(-1.*t56290*t63222 - 1.*t56248*t63250 + t63503 - 1.*t61505*t63522 - 1.*t61659*t63537 + t63541)) - 0.05186*t54612*(t56317*(-1.*t55797*t63222 - 1.*t55685*t63250 - 1.*t61505*t63388 - 1.*t61659*t63410 + t63572 + t63588) + t63175*t63611 + t63154*t63634 + t55864*(t56290*t63222 + t56248*t63250 + t61505*t63522 + t61659*t63537 + t63649 + t63664)))*var2[5])*var2[10];
  p_output1[11]=0;
  p_output1[12]=var2[10]*(-0.5*(-0.05186*t62077*t68234 - 0.05186*t61360*t68386 - 0.05186*t61813*t68588 - 0.05186*t56148*t69187 - 0.05186*t55629*t69224 - 0.05186*t54612*t69253)*var2[0] - 0.5*(-0.05186*t57242*t68234 - 0.05186*t57231*t68386 - 0.05186*t56902*t68588 - 0.05186*t56148*(t50412*t69284 - 1.*t46805*t69304) - 0.05186*t55629*(t50412*t69462 - 1.*t46805*t69469) - 0.05186*t54612*(t50412*t69476 - 1.*t46805*t69486))*var2[1] - 0.5*(-0.05186*(t46805*t56298 + t50412*t56340)*t68234 - 0.05186*(t46805*t55847 + t50412*t55937)*t68386 - 0.05186*(t46805*t54914 + t50412*t55188)*t68588 - 0.05186*t56148*(t46805*t69284 + t50412*t69304) - 0.05186*t55629*(t46805*t69462 + t50412*t69469) - 0.05186*t54612*(t46805*t69476 + t50412*t69486))*var2[2] - 0.5*(-0.000245*t62077*t67971 - 0.05186*(t61360*t62007 + t61813*t62060)*t68234 - 0.05186*(t62077*t62107 + t61813*t62138)*t68386 - 0.05186*(t62077*t62217 + t61360*t62257)*t68588 - 0.000245*t61813*t68683 - 2.e-6*t61360*t68698 - 0.000245*t58363*t69187 - 2.e-6*t58344*t69224 - 0.000245*t57910*t69253 - 0.05186*t56148*(t62007*t69224 + t62060*t69253 + t61360*(-1.*t61755*t69253 - 1.*t61764*t69486 + t69743 + t69746 - 1.*t61813*t70125 - 1.*t55188*t70131) + t61813*(t61755*t69224 + t61764*t69469 + t69655 + t69704 + t61360*t70125 + t55937*t70131)) - 0.05186*t55629*(t62107*t69187 + t62138*t69253 + t62077*(t61755*t69253 + t61764*t69486 + t69782 + t69786 + t61813*t70125 + t55188*t70131) + t61813*(-1.*t61755*t69187 - 1.*t61764*t69304 + t69831 + t69889 - 1.*t62077*t70125 - 1.*t56340*t70131)) - 0.05186*t54612*(t62217*t69187 + t62257*t69224 + t62077*(-1.*t61755*t69224 - 1.*t61764*t69469 + t70004 + t70018 - 1.*t61360*t70125 - 1.*t55937*t70131) + t61360*(t61755*t69187 + t61764*t69304 + t70035 + t70049 + t62077*t70125 + t56340*t70131)))*var2[3] - 0.5*(-0.000245*t56298*t67971 - 0.05186*(t55847*t62636 + t54914*t62693)*t68234 - 0.05186*(t56298*t62718 + t54914*t62737)*t68386 - 0.05186*(t56298*t62774 + t55847*t62785)*t68588 - 0.000245*t54914*t68683 - 2.e-6*t55847*t68698 - 0.000245*t58363*t69284 - 2.e-6*t58344*t69462 - 0.000245*t57910*t69476 - 0.05186*t56148*(t62636*t69462 + t62693*t69476 + t54914*(t68847 + t68894 + t61714*t69219 + t69655 + t55907*t69675 + t69704) + t55847*(t68999 + t69004 - 1.*t61714*t69238 - 1.*t55157*t69675 + t69743 + t69746)) - 0.05186*t55629*(t62718*t69284 + t62737*t69476 + t56298*(t69041 + t69046 + t61714*t69238 + t55157*t69675 + t69782 + t69786) + t54914*(t69052 + t69073 - 1.*t61714*t69178 - 1.*t56330*t69675 + t69831 + t69889)) - 0.05186*t54612*(t62774*t69284 + t62785*t69462 + t56298*(t69083 + t69088 - 1.*t61714*t69219 - 1.*t55907*t69675 + t70004 + t70018) + t55847*(t69095 + t69101 + t61714*t69178 + t56330*t69675 + t70035 + t70049)))*var2[4] - 0.5*(-0.000245*t56317*t67971 - 0.05186*(t55864*t63197 + t55022*t63429)*t68234 - 0.05186*(t56317*t63450 + t55022*t63491)*t68386 - 0.05186*(t56317*t63611 + t55864*t63634)*t68588 - 0.000245*t55022*t68683 - 2.e-6*t55864*t68698 - 2.e-6*t58344*t68722 - 0.000245*t57910*t68748 - 0.000245*t58363*t68778 - 0.05186*t56148*(t63197*t68722 + t63429*t68748 + t55022*(t68847 + t55797*t68855 + t55685*t68874 + t68894 + t61505*t68929 + t61659*t68975) + t55864*(-1.*t54907*t68855 - 1.*t54791*t68874 + t68999 + t69004 - 1.*t61505*t69016 - 1.*t61659*t69024)) - 0.05186*t55629*(t63491*t68748 + t63450*t68778 + t56317*(t54907*t68855 + t54791*t68874 + t61505*t69016 + t61659*t69024 + t69041 + t69046) + t55022*(-1.*t56290*t68855 - 1.*t56248*t68874 + t69052 - 1.*t61505*t69061 - 1.*t61659*t69067 + t69073)) - 0.05186*t54612*(t63634*t68722 + t63611*t68778 + t56317*(-1.*t55797*t68855 - 1.*t55685*t68874 - 1.*t61505*t68929 - 1.*t61659*t68975 + t69083 + t69088) + t55864*(t56290*t68855 + t56248*t68874 + t61505*t69061 + t61659*t69067 + t69095 + t69101)))*var2[5] - 0.5*(-0.00049*t58363*t67971 - 0.10372*t56148*t68234 - 0.10372*t55629*t68386 - 0.10372*t54612*t68588 - 0.00049*t57910*t68683 - 4.e-6*t58344*t68698)*var2[10] - 0.5*(-0.00024500000000441*t67971 - 5.186e-9*t68234 - 0.00518601555815558*t68386 + 1.555803111628e-8*t68588)*var2[12]);
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec11_minitaur.hh"

namespace FrontStance
{

void Ce3_vec11_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
