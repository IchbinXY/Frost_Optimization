/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:13:53 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t37134;
  double t40380;
  double t44888;
  double t50931;
  double t51473;
  double t50900;
  double t44913;
  double t50549;
  double t50631;
  double t50833;
  double t50898;
  double t51475;
  double t34446;
  double t52107;
  double t52096;
  double t52101;
  double t52626;
  double t54912;
  double t54928;
  double t55004;
  double t55015;
  double t55022;
  double t55027;
  double t55134;
  double t55142;
  double t55012;
  double t55325;
  double t55342;
  double t55352;
  double t57401;
  double t57419;
  double t55315;
  double t57251;
  double t56114;
  double t61154;
  double t61731;
  double t61762;
  double t61812;
  double t59582;
  double t59592;
  double t59596;
  double t59605;
  double t59932;
  double t61398;
  double t61646;
  double t61658;
  double t55423;
  double t57345;
  double t62103;
  double t62104;
  double t62105;
  double t62131;
  double t62134;
  double t56124;
  double t56248;
  double t56899;
  double t57377;
  double t57380;
  double t57427;
  double t57430;
  double t62346;
  double t62350;
  double t62359;
  double t62542;
  double t62732;
  double t62737;
  double t62742;
  double t55468;
  double t59501;
  double t62074;
  double t62075;
  double t62224;
  double t62238;
  double t62337;
  double t62543;
  double t62636;
  double t62693;
  double t62729;
  double t62743;
  double t62746;
  double t55187;
  double t63290;
  double t63387;
  double t53163;
  double t53489;
  double t63485;
  double t63491;
  double t63503;
  double t63515;
  double t63250;
  double t63300;
  double t63397;
  double t63407;
  double t63952;
  double t63983;
  double t64065;
  double t64078;
  double t64091;
  double t64094;
  double t64120;
  double t64136;
  double t67942;
  double t67946;
  double t67957;
  double t67958;
  double t64614;
  double t65442;
  double t67023;
  double t67124;
  double t68135;
  double t68140;
  double t68146;
  double t68149;
  double t68160;
  double t68161;
  double t68169;
  double t68183;
  double t68278;
  double t68309;
  double t68343;
  double t68373;
  double t68260;
  double t68262;
  double t68270;
  double t68271;
  double t50923;
  double t51478;
  double t51503;
  double t52411;
  double t52645;
  double t52659;
  double t52754;
  double t52759;
  double t52786;
  double t52842;
  double t52847;
  double t52892;
  double t53535;
  double t53625;
  double t53626;
  double t53630;
  double t54147;
  double t54505;
  double t55310;
  double t62297;
  double t62814;
  double t63154;
  double t63197;
  double t63203;
  double t63222;
  double t63230;
  double t63450;
  double t63522;
  double t63536;
  double t63620;
  double t63621;
  double t63634;
  double t63708;
  double t63710;
  double t63731;
  double t63773;
  double t63785;
  double t63816;
  double t63863;
  double t63944;
  double t64082;
  double t64185;
  double t64230;
  double t64273;
  double t64292;
  double t64293;
  double t64320;
  double t67649;
  double t67966;
  double t67970;
  double t67985;
  double t68000;
  double t68003;
  double t68020;
  double t68025;
  double t68029;
  double t68041;
  double t68075;
  double t68083;
  double t68101;
  double t68133;
  double t68154;
  double t68187;
  double t68190;
  double t68197;
  double t68202;
  double t68205;
  double t68209;
  double t68275;
  double t68390;
  double t68393;
  double t68493;
  double t68504;
  double t68511;
  double t68522;
  double t68527;
  double t68529;
  double t68534;
  double t68682;
  double t68683;
  double t68693;
  double t69064;
  double t69066;
  double t69072;
  double t69105;
  double t69156;
  double t69162;
  double t69180;
  double t69207;
  double t69208;
  double t69223;
  double t69224;
  double t69228;
  double t69235;
  double t69238;
  double t69246;
  double t74688;
  double t70125;
  double t70131;
  double t72203;
  double t73000;
  double t75168;
  double t75169;
  double t75171;
  double t75173;
  double t75179;
  double t75203;
  double t75205;
  double t75210;
  double t75212;
  double t75213;
  double t75215;
  double t75236;
  double t75347;
  double t75354;
  double t75355;
  double t75365;
  double t75377;
  double t75387;
  double t75390;
  double t75393;
  double t75172;
  double t75379;
  double t75380;
  double t75558;
  double t75597;
  double t75598;
  double t75030;
  double t75048;
  double t75153;
  double t75465;
  double t75468;
  double t75506;
  double t75437;
  double t75447;
  double t75464;
  double t75802;
  double t76045;
  double t76206;
  double t81001;
  double t81002;
  double t81004;
  double t81011;
  double t81016;
  double t81026;
  double t81031;
  double t81033;
  double t81034;
  double t81035;
  double t81039;
  double t81041;
  double t81042;
  double t81045;
  double t81047;
  double t81049;
  double t81050;
  double t81052;
  double t81086;
  double t81089;
  double t81091;
  double t81130;
  double t81159;
  double t81193;
  double t81058;
  double t81076;
  double t81080;
  double t81017;
  double t81053;
  double t81056;
  double t80950;
  double t80993;
  double t80995;
  double t81338;
  double t81342;
  double t81361;
  double t83467;
  double t83480;
  double t83482;
  double t86648;
  double t86651;
  double t86653;
  double t86656;
  double t86657;
  double t86667;
  double t86670;
  double t86671;
  double t86672;
  double t86683;
  double t86684;
  double t86694;
  double t86706;
  double t86707;
  double t86708;
  double t74891;
  double t74895;
  double t74940;
  double t74946;
  double t74959;
  double t74963;
  double t74964;
  double t74970;
  double t75524;
  double t75663;
  double t87599;
  double t87683;
  double t87684;
  double t80414;
  double t87723;
  double t87730;
  double t80810;
  double t81363;
  double t87972;
  double t87977;
  double t87978;
  double t83331;
  double t83697;
  double t86215;
  double t86254;
  double t86290;
  double t75537;
  double t75599;
  double t75601;
  double t87698;
  double t87703;
  double t87722;
  double t87735;
  double t75664;
  double t75665;
  double t75668;
  double t80423;
  double t80432;
  double t80454;
  double t88273;
  double t88282;
  double t87838;
  double t87869;
  double t87884;
  double t87928;
  double t80812;
  double t80845;
  double t80846;
  double t87987;
  double t87989;
  double t88000;
  double t88004;
  double t81364;
  double t81365;
  double t81367;
  double t83362;
  double t83404;
  double t83405;
  double t88111;
  double t88115;
  double t83706;
  double t84217;
  double t84427;
  double t88125;
  double t88145;
  double t86216;
  double t86217;
  double t86222;
  double t88157;
  double t88164;
  double t86256;
  double t86257;
  double t86264;
  double t88219;
  double t88222;
  double t86297;
  double t86299;
  double t86300;
  double t88389;
  double t88391;
  double t88395;
  double t88413;
  double t88415;
  double t88416;
  double t87948;
  double t88409;
  double t88410;
  double t88411;
  double t88431;
  double t88433;
  double t88434;
  double t88435;
  double t88436;
  double t88438;
  double t88441;
  double t88442;
  double t88443;
  double t88445;
  double t88447;
  double t88448;
  double t88449;
  double t88451;
  double t88010;
  double t88418;
  double t88420;
  double t88421;
  double t88030;
  double t88453;
  double t88454;
  double t88455;
  double t88456;
  double t88459;
  double t88460;
  double t88461;
  double t88462;
  double t88118;
  double t88471;
  double t88472;
  double t88473;
  double t88474;
  double t88481;
  double t88482;
  double t88483;
  double t88486;
  double t88187;
  double t88201;
  double t88521;
  double t88522;
  double t88524;
  double t88526;
  double t88528;
  double t88531;
  double t88532;
  double t88534;
  double t88573;
  double t88576;
  double t88577;
  double t88583;
  double t88584;
  double t88585;
  double t88591;
  double t88592;
  double t88593;
  double t88601;
  double t88602;
  double t88604;
  double t88617;
  double t88618;
  double t88619;
  double t88627;
  double t88628;
  double t88629;
  double t88633;
  double t88634;
  double t88646;
  double t88647;
  double t88648;
  double t88650;
  double t88652;
  double t88655;
  double t88660;
  double t88663;
  double t88664;
  double t88666;
  double t88669;
  double t88672;
  double t88678;
  double t88679;
  double t88680;
  double t88683;
  double t88685;
  double t88686;
  double t88691;
  double t88692;
  double t88694;
  double t88696;
  double t88698;
  double t88699;
  double t88387;
  double t88397;
  double t88767;
  double t87829;
  double t87830;
  double t88769;
  double t88770;
  double t88772;
  double t88776;
  double t88778;
  double t88779;
  double t87570;
  double t87574;
  double t88786;
  double t88789;
  double t88791;
  double t87960;
  double t87967;
  double t88430;
  double t88452;
  double t88466;
  double t88470;
  double t88854;
  double t88857;
  double t88858;
  double t88861;
  double t88864;
  double t88865;
  double t88011;
  double t88012;
  double t88031;
  double t88108;
  double t88502;
  double t88505;
  double t88120;
  double t88121;
  double t88519;
  double t88536;
  double t88542;
  double t88545;
  double t88197;
  double t88198;
  double t88205;
  double t88206;
  double t88561;
  double t88565;
  double t88590;
  double t88595;
  double t88596;
  double t88598;
  double t88606;
  double t88609;
  double t88614;
  double t88620;
  double t88621;
  double t88775;
  double t88578;
  double t88579;
  double t88794;
  double t88796;
  double t88954;
  double t88957;
  double t88959;
  double t88962;
  double t88964;
  double t88965;
  double t88824;
  double t88582;
  double t88586;
  double t88587;
  double t88839;
  double t88844;
  double t88859;
  double t88870;
  double t88880;
  double t88885;
  double t89020;
  double t89021;
  double t89024;
  double t89031;
  double t89035;
  double t89037;
  double t88896;
  double t88898;
  double t88909;
  double t88910;
  double t88922;
  double t88924;
  double t88936;
  double t88938;
  double t89139;
  double t89153;
  double t89140;
  double t89146;
  double t89171;
  double t89172;
  double t89180;
  double t89200;
  double t89185;
  double t89151;
  double t89156;
  double t89241;
  double t89227;
  double t89182;
  double t89188;
  double t89189;
  double t89190;
  double t89193;
  double t89206;
  double t89207;
  double t89209;
  double t89210;
  double t89214;
  double t89216;
  double t89218;
  double t89220;
  double t89222;
  double t89232;
  double t89228;
  double t89229;
  double t89178;
  double t89194;
  double t89211;
  double t89225;
  double t89231;
  double t89235;
  double t89237;
  double t89239;
  double t89246;
  double t89243;
  double t89247;
  double t89249;
  double t89250;
  double t89251;
  double t89252;
  double t89253;
  double t89255;
  double t89272;
  double t89273;
  double t89142;
  double t89145;
  double t89147;
  double t89165;
  double t89166;
  double t89167;
  double t89276;
  double t89278;
  double t89279;
  double t89280;
  double t89281;
  double t89282;
  double t89284;
  double t89291;
  double t89292;
  double t89295;
  double t89296;
  double t89297;
  double t89298;
  double t89300;
  double t89315;
  double t89317;
  double t89319;
  double t89320;
  double t89323;
  double t89324;
  double t89325;
  double t89330;
  double t89333;
  double t89334;
  double t89335;
  double t89337;
  double t89338;
  double t89339;
  double t89360;
  double t89150;
  double t89152;
  double t89157;
  double t89160;
  double t89162;
  double t89367;
  double t89368;
  double t89370;
  double t89372;
  double t88424;
  double t88425;
  double t88426;
  double t89378;
  double t89380;
  double t89381;
  double t89382;
  double t88490;
  double t88491;
  double t88492;
  double t89396;
  double t89397;
  double t89402;
  double t89403;
  double t89407;
  double t89409;
  double t89410;
  double t89411;
  double t89413;
  double t89415;
  double t89416;
  double t89420;
  double t89168;
  double t89176;
  double t89240;
  double t89242;
  double t89256;
  double t89257;
  double t89260;
  double t89262;
  double t89263;
  double t89264;
  double t89265;
  double t89267;
  double t89385;
  double t89387;
  double t89388;
  double t89390;
  double t88498;
  double t88499;
  double t88500;
  double t89472;
  double t89473;
  double t89475;
  double t89476;
  double t89479;
  double t89480;
  double t89482;
  double t89487;
  double t88513;
  double t88515;
  double t88516;
  double t88550;
  double t88551;
  double t88554;
  double t89424;
  double t89425;
  double t89428;
  double t89429;
  double t89439;
  double t89440;
  double t89441;
  double t89447;
  double t89512;
  double t89513;
  double t89514;
  double t89515;
  double t89518;
  double t89519;
  double t89520;
  double t89522;
  double t88556;
  double t88557;
  double t88558;
  double t89271;
  double t89274;
  double t89288;
  double t89289;
  double t89302;
  double t89303;
  double t89304;
  double t89307;
  double t89308;
  double t89310;
  double t89311;
  double t89312;
  double t89314;
  double t89327;
  double t89328;
  double t89329;
  double t89340;
  double t89341;
  double t89342;
  double t89344;
  double t89346;
  double t89347;
  double t89348;
  double t89349;
  double t89359;
  double t89362;
  double t89364;
  double t89365;
  double t89597;
  double t89598;
  double t89599;
  double t89615;
  double t89617;
  double t89618;
  double t89626;
  double t89628;
  double t89629;
  double t89638;
  double t89639;
  double t89640;
  double t89643;
  double t89645;
  double t89646;
  double t68894;
  double t68913;
  double t68928;
  double t68975;
  double t69006;
  double t69013;
  double t89669;
  double t89670;
  double t89671;
  double t89675;
  double t89678;
  double t89680;
  double t89689;
  double t89691;
  double t89692;
  double t89696;
  double t89697;
  double t89699;
  double t69023;
  double t69041;
  double t69046;
  double t89405;
  double t89423;
  double t89453;
  double t89465;
  double t89774;
  double t89775;
  double t89776;
  double t89778;
  double t89779;
  double t89781;
  double t89503;
  double t89506;
  double t89511;
  double t89527;
  double t89536;
  double t89541;
  double t89550;
  double t89556;
  double t89594;
  double t89601;
  double t89605;
  double t89614;
  double t89619;
  double t89621;
  double t89624;
  double t89630;
  double t89631;
  double t89777;
  double t89785;
  double t89792;
  double t89795;
  double t89899;
  double t89900;
  double t89902;
  double t89904;
  double t89905;
  double t89910;
  double t89812;
  double t89816;
  double t89821;
  double t89825;
  double t89843;
  double t89849;
  double t89855;
  double t89862;
  t37134 = Cos(var1[19]);
  t40380 = -1.*t37134;
  t44888 = 1. + t40380;
  t50931 = 9.e-12*t44888;
  t51473 = t50931 + t40380;
  t50900 = Cos(var1[5]);
  t44913 = -9.e-12*t44888;
  t50549 = 1. + t44913;
  t50631 = 3.e-6*t50549;
  t50833 = -3.e-6*t44888;
  t50898 = t50631 + t50833;
  t51475 = Sin(var1[5]);
  t34446 = Sin(var1[3]);
  t52107 = Sin(var1[19]);
  t52096 = Cos(var1[3]);
  t52101 = Cos(var1[4]);
  t52626 = Sin(var1[4]);
  t54912 = Cos(var1[21]);
  t54928 = -1.*t54912;
  t55004 = 1. + t54928;
  t55015 = 3.e-6*t55004;
  t55022 = Sin(var1[21]);
  t55027 = 3.e-6*t55022;
  t55134 = t55015 + t55027;
  t55142 = 3.e-6*t55134;
  t55012 = 1.000000000009*t55004;
  t55325 = -3.e-6*t55022;
  t55342 = t55015 + t55325;
  t55352 = 3.e-6*t55342;
  t57401 = -3.e-6*t55004;
  t57419 = t57401 + t55027;
  t55315 = -1.8e-11*t55004;
  t57251 = -9.e-12*t55004;
  t56114 = 3.e-13*var1[21];
  t61154 = t57401 + t55325;
  t61731 = 1. + t55315;
  t61762 = 3.e-6*t61731;
  t61812 = t61762 + t57401 + t55325;
  t59582 = 1.e-7*var1[21];
  t59592 = 1.8e-11*t55004;
  t59596 = -1. + t59592;
  t59605 = 0.1*t59596;
  t59932 = 5.4e-18*t55004;
  t61398 = -3.e-12*t61154;
  t61646 = 0.100000000003*t57419;
  t61658 = t59582 + t59605 + t59932 + t61398 + t61646;
  t55423 = 1. + t55315 + t55352 + t55142;
  t57345 = -1.*t55022;
  t62103 = 0.1000000000039*t55004;
  t62104 = 0.1000003*t61154;
  t62105 = t57251 + t55022;
  t62131 = -3.e-12*t62105;
  t62134 = t56114 + t62103 + t62104 + t62131;
  t56124 = -1. + t55012;
  t56248 = 0.2*t56124;
  t56899 = -0.2000000000048*t55004;
  t57377 = t57251 + t57345;
  t57380 = 0.100000000003*t57377;
  t57427 = 0.1000003*t57419;
  t57430 = t56114 + t56248 + t56899 + t57380 + t57427;
  t62346 = -1.000000000009*t55004;
  t62350 = 1. + t62346;
  t62359 = 3.e-6*t62350;
  t62542 = 9.e-12*t55004;
  t62732 = t62542 + t55022;
  t62737 = 3.e-6*t62732;
  t62742 = t62359 + t55015 + t55325 + t62737;
  t55468 = -1. + t55012 + t55352;
  t59501 = -1.*t55468*t57430;
  t62074 = -1.*t61658*t61812;
  t62075 = t57251 + t55142 + t55022;
  t62224 = -1.*t62075*t62134;
  t62238 = t59501 + t62074 + t62224;
  t62337 = t61658*t55423;
  t62543 = t62542 + t57345;
  t62636 = 3.e-6*t62543;
  t62693 = t62359 + t55015 + t62636 + t55027;
  t62729 = t62693*t62134;
  t62743 = t57430*t62742;
  t62746 = t62337 + t62729 + t62743;
  t55187 = -1. + t55012 + t55142;
  t63290 = t57251 + t55352 + t57345;
  t63387 = t61762 + t57401 + t55027;
  t53163 = -1.000000000009*t44888;
  t53489 = 1. + t53163;
  t63485 = -1.*t52107*t55187;
  t63491 = t37134*t63290;
  t63503 = 3.e-6*t44888*t63387;
  t63515 = t63485 + t63491 + t63503;
  t63250 = 3.e-6*t52107*t55187;
  t63300 = 3.e-6*t44888*t63290;
  t63397 = t50549*t63387;
  t63407 = t63250 + t63300 + t63397;
  t63952 = t57430*t63290;
  t63983 = t61658*t63387;
  t64065 = t55187*t62134;
  t64078 = t63952 + t63983 + t64065;
  t64091 = -1.*t61658*t55423;
  t64094 = -1.*t62693*t62134;
  t64120 = -1.*t57430*t62742;
  t64136 = t64091 + t64094 + t64120;
  t67942 = t37134*t55468;
  t67946 = 3.e-6*t44888*t61812;
  t67957 = -1.*t52107*t62075;
  t67958 = t67942 + t67946 + t67957;
  t64614 = 3.e-6*t44888*t55468;
  t65442 = t50549*t61812;
  t67023 = 3.e-6*t52107*t62075;
  t67124 = t64614 + t65442 + t67023;
  t68135 = -1.*t57430*t63290;
  t68140 = -1.*t61658*t63387;
  t68146 = -1.*t55187*t62134;
  t68149 = t68135 + t68140 + t68146;
  t68160 = t55468*t57430;
  t68161 = t61658*t61812;
  t68169 = t62075*t62134;
  t68183 = t68160 + t68161 + t68169;
  t68278 = 3.e-6*t44888*t55423;
  t68309 = -1.*t52107*t62693;
  t68343 = t37134*t62742;
  t68373 = t68278 + t68309 + t68343;
  t68260 = t50549*t55423;
  t68262 = 3.e-6*t52107*t62693;
  t68270 = 3.e-6*t44888*t62742;
  t68271 = t68260 + t68262 + t68270;
  t50923 = t50898*t50900;
  t51478 = t51473*t51475;
  t51503 = t50923 + t51478;
  t52411 = -1.000000000009*t52101*t52107;
  t52645 = t51473*t50900;
  t52659 = -1.*t50898*t51475;
  t52754 = t52645 + t52659;
  t52759 = -1.*t52626*t52754;
  t52786 = t52411 + t52759;
  t52842 = 3.e-6*t50900*t52107;
  t52847 = -1.*t52107*t51475;
  t52892 = t52842 + t52847;
  t53535 = t53489*t52101;
  t53625 = -1.*t50900*t52107;
  t53626 = -3.e-6*t52107*t51475;
  t53630 = t53625 + t53626;
  t54147 = -1.*t52626*t53630;
  t54505 = t53535 + t54147;
  t55310 = 0.2*t55187;
  t62297 = -1.*t55423*t62238;
  t62814 = -1.*t61812*t62746;
  t63154 = t62742*t62238;
  t63197 = t55468*t62746;
  t63203 = t63154 + t63197;
  t63222 = -3.e-6*t63203;
  t63230 = t55310 + t62297 + t62814 + t63222;
  t63450 = t50900*t63407;
  t63522 = t63515*t51475;
  t63536 = t63450 + t63522;
  t63620 = t53489*t55187;
  t63621 = t52107*t63290;
  t63634 = -3.e-6*t52107*t63387;
  t63708 = t63620 + t63621 + t63634;
  t63710 = t52101*t63708;
  t63731 = t50900*t63515;
  t63773 = -1.*t63407*t51475;
  t63785 = t63731 + t63773;
  t63816 = -1.*t52626*t63785;
  t63863 = t63710 + t63816;
  t63944 = 0.2*t62075;
  t64082 = -1.*t55423*t64078;
  t64185 = -1.*t63387*t64136;
  t64230 = t62742*t64078;
  t64273 = t63290*t64136;
  t64292 = t64230 + t64273;
  t64293 = -3.e-6*t64292;
  t64320 = t63944 + t64082 + t64185 + t64293;
  t67649 = t50900*t67124;
  t67966 = t67958*t51475;
  t67970 = t67649 + t67966;
  t67985 = t52107*t55468;
  t68000 = -3.e-6*t52107*t61812;
  t68003 = t53489*t62075;
  t68020 = t67985 + t68000 + t68003;
  t68025 = t52101*t68020;
  t68029 = t50900*t67958;
  t68041 = -1.*t67124*t51475;
  t68075 = t68029 + t68041;
  t68083 = -1.*t52626*t68075;
  t68101 = t68025 + t68083;
  t68133 = 0.2*t62693;
  t68154 = -1.*t61812*t68149;
  t68187 = -1.*t63387*t68183;
  t68190 = t55468*t68149;
  t68197 = t63290*t68183;
  t68202 = t68190 + t68197;
  t68205 = -3.e-6*t68202;
  t68209 = t68133 + t68154 + t68187 + t68205;
  t68275 = t50900*t68271;
  t68390 = t68373*t51475;
  t68393 = t68275 + t68390;
  t68493 = -3.e-6*t52107*t55423;
  t68504 = t53489*t62693;
  t68511 = t52107*t62742;
  t68522 = t68493 + t68504 + t68511;
  t68527 = t52101*t68522;
  t68529 = t50900*t68373;
  t68534 = -1.*t68271*t51475;
  t68682 = t68529 + t68534;
  t68683 = -1.*t52626*t68682;
  t68693 = t68527 + t68683;
  t69064 = 1.000000000009*t52107*t52626;
  t69066 = -1.*t52101*t52754;
  t69072 = t69064 + t69066;
  t69105 = -1.*t53489*t52626;
  t69156 = -1.*t52101*t53630;
  t69162 = t69105 + t69156;
  t69180 = -1.*t63708*t52626;
  t69207 = -1.*t52101*t63785;
  t69208 = t69180 + t69207;
  t69223 = -1.*t68020*t52626;
  t69224 = -1.*t52101*t68075;
  t69228 = t69223 + t69224;
  t69235 = -1.*t68522*t52626;
  t69238 = -1.*t52101*t68682;
  t69246 = t69235 + t69238;
  t74688 = -3.e-6*t61731;
  t70125 = -3.e-6*t37134;
  t70131 = t50833 + t70125;
  t72203 = t70131*t50900;
  t73000 = t72203 + t51475;
  t75168 = 0.05*t53489;
  t75169 = 3.000018e-7*t52107;
  t75171 = t75168 + t75169;
  t75173 = -3.000018e-7*t44888;
  t75179 = -1. + t37134;
  t75203 = 0.2*t75179;
  t75205 = -0.2*t37134;
  t75210 = -0.05*t52107;
  t75212 = t75173 + t75203 + t75205 + t75210;
  t75213 = t50900*t75212;
  t75215 = -1. + t50931;
  t75236 = 0.1*t75215;
  t75347 = 5.4e-18*t44888;
  t75354 = 1.5e-7*t52107;
  t75355 = t75236 + t75347 + t75354;
  t75365 = -1.*t75355*t51475;
  t75377 = t75213 + t75365;
  t75387 = t75171*t52626;
  t75390 = t52101*t75377;
  t75393 = t75387 + t75390;
  t75172 = -1.*t75171*t52626;
  t75379 = -1.*t52101*t75377;
  t75380 = t75172 + t75379;
  t75558 = t52101*t75171;
  t75597 = -1.*t52626*t75377;
  t75598 = t75558 + t75597;
  t75030 = -1.000000000009*t52107*t52626;
  t75048 = t52101*t52754;
  t75153 = t75030 + t75048;
  t75465 = t50900*t75355;
  t75468 = t75212*t51475;
  t75506 = t75465 + t75468;
  t75437 = -1.*t50900;
  t75447 = t70131*t51475;
  t75464 = t75437 + t75447;
  t75802 = t53489*t52626;
  t76045 = t52101*t53630;
  t76206 = t75802 + t76045;
  t81001 = 0.2000000000018*t52107;
  t81002 = -3.e-6*t52107*t61658;
  t81004 = t52107*t57430;
  t81011 = t53489*t62134;
  t81016 = t81001 + t81002 + t81004 + t81011;
  t81026 = -1.8e-12*t44888;
  t81031 = 3.e-6*t44888*t61658;
  t81033 = t37134*t57430;
  t81034 = -1.*t52107*t62134;
  t81035 = t81026 + t75203 + t81031 + t81033 + t81034;
  t81039 = t50900*t81035;
  t81041 = 6.000000000054e-7*t44888;
  t81042 = t50549*t61658;
  t81045 = 3.e-6*t44888*t57430;
  t81047 = 3.e-6*t52107*t62134;
  t81049 = t81041 + t81042 + t81045 + t81047;
  t81050 = -1.*t81049*t51475;
  t81052 = t81039 + t81050;
  t81086 = t52101*t81016;
  t81089 = -1.*t52626*t81052;
  t81091 = t81086 + t81089;
  t81130 = t63708*t52626;
  t81159 = t52101*t63785;
  t81193 = t81130 + t81159;
  t81058 = t81016*t52626;
  t81076 = t52101*t81052;
  t81080 = t81058 + t81076;
  t81017 = -1.*t81016*t52626;
  t81053 = -1.*t52101*t81052;
  t81056 = t81017 + t81053;
  t80950 = t68020*t52626;
  t80993 = t52101*t68075;
  t80995 = t80950 + t80993;
  t81338 = t50900*t81049;
  t81342 = t81035*t51475;
  t81361 = t81338 + t81342;
  t83467 = t68522*t52626;
  t83480 = t52101*t68682;
  t83482 = t83467 + t83480;
  t86648 = -1.*t50898*t50900;
  t86651 = -1.*t51473*t51475;
  t86653 = t86648 + t86651;
  t86656 = -3.e-6*t50900*t52107;
  t86657 = t52107*t51475;
  t86667 = t86656 + t86657;
  t86670 = -1.*t50900*t63407;
  t86671 = -1.*t63515*t51475;
  t86672 = t86670 + t86671;
  t86683 = -1.*t50900*t67124;
  t86684 = -1.*t67958*t51475;
  t86694 = t86683 + t86684;
  t86706 = -1.*t50900*t68271;
  t86707 = -1.*t68373*t51475;
  t86708 = t86706 + t86707;
  t74891 = -3.e-6*t63290;
  t74895 = t74688 + t55015 + t74891 + t55325;
  t74940 = -3.e-6*t55468;
  t74946 = t74688 + t55015 + t74940 + t55027;
  t74959 = -3.e-6*t55342;
  t74963 = -3.e-6*t55134;
  t74964 = -3.e-6*t62742;
  t74970 = -1. + t59592 + t74959 + t74963 + t74964;
  t75524 = t75464*t75506;
  t75663 = -1.*t51503*t75506;
  t87599 = -1.*t50900*t75355;
  t87683 = -1.*t75212*t51475;
  t87684 = t87599 + t87683;
  t80414 = -1.*t75464*t75506;
  t87723 = -1.*t70131*t51475;
  t87730 = t50900 + t87723;
  t80810 = t75506*t52892;
  t81363 = -1.*t63536*t81361;
  t87972 = -1.*t50900*t81049;
  t87977 = -1.*t81035*t51475;
  t87978 = t87972 + t87977;
  t83331 = t67970*t81361;
  t83697 = t63536*t81361;
  t86215 = -1.*t81361*t68393;
  t86254 = -1.*t67970*t81361;
  t86290 = t81361*t68393;
  t75537 = t52101*t73000*t75393;
  t75599 = -1.*t52626*t73000*t75598;
  t75601 = t75524 + t75537 + t75599;
  t87698 = -1.*t52754*t75506;
  t87703 = -1.*t51503*t75377;
  t87722 = t73000*t75506;
  t87735 = t75464*t75377;
  t75664 = -1.*t75153*t75393;
  t75665 = -1.*t52786*t75598;
  t75668 = t75663 + t75664 + t75665;
  t80423 = -1.*t52101*t73000*t75393;
  t80432 = t52626*t73000*t75598;
  t80454 = t80414 + t80423 + t80432;
  t88273 = Power(t52101,2);
  t88282 = Power(t52626,2);
  t87838 = -1.*t73000*t75506;
  t87869 = -1.*t75464*t75377;
  t87884 = t75377*t52892;
  t87928 = t75506*t53630;
  t80812 = t75393*t76206;
  t80845 = t75598*t54505;
  t80846 = t80810 + t80812 + t80845;
  t87987 = -1.*t63785*t81361;
  t87989 = -1.*t63536*t81052;
  t88000 = t68075*t81361;
  t88004 = t67970*t81052;
  t81364 = -1.*t81193*t81080;
  t81365 = -1.*t63863*t81091;
  t81367 = t81363 + t81364 + t81365;
  t83362 = t80995*t81080;
  t83404 = t68101*t81091;
  t83405 = t83331 + t83362 + t83404;
  t88111 = t63785*t81361;
  t88115 = t63536*t81052;
  t83706 = t81193*t81080;
  t84217 = t63863*t81091;
  t84427 = t83697 + t83706 + t84217;
  t88125 = -1.*t81361*t68682;
  t88145 = -1.*t81052*t68393;
  t86216 = -1.*t81080*t83482;
  t86217 = -1.*t81091*t68693;
  t86222 = t86215 + t86216 + t86217;
  t88157 = -1.*t68075*t81361;
  t88164 = -1.*t67970*t81052;
  t86256 = -1.*t80995*t81080;
  t86257 = -1.*t68101*t81091;
  t86264 = t86254 + t86256 + t86257;
  t88219 = t81361*t68682;
  t88222 = t81052*t68393;
  t86297 = t81080*t83482;
  t86299 = t81091*t68693;
  t86300 = t86290 + t86297 + t86299;
  t88389 = -0.05*t37134;
  t88391 = -3.000018e-7*t52107;
  t88395 = t88389 + t88391;
  t88413 = -3.e-6*t37134*t61812;
  t88415 = -1.000000000009*t52107*t62075;
  t88416 = t67942 + t88413 + t88415;
  t87948 = -1.*t63708*t81016;
  t88409 = -1.000000000009*t52107*t55187;
  t88410 = -3.e-6*t37134*t63387;
  t88411 = t88409 + t63491 + t88410;
  t88431 = -0.2000000000018*t52107;
  t88433 = 3.e-6*t52107*t61658;
  t88434 = -1.*t52107*t57430;
  t88435 = -1.*t37134*t62134;
  t88436 = t88431 + t88433 + t88434 + t88435;
  t88438 = 6.000000000054e-7*t52107;
  t88441 = -9.e-12*t52107*t61658;
  t88442 = 3.e-6*t52107*t57430;
  t88443 = 3.e-6*t37134*t62134;
  t88445 = t88438 + t88441 + t88442 + t88443;
  t88447 = 0.2000000000018*t37134;
  t88448 = -3.e-6*t37134*t61658;
  t88449 = -1.000000000009*t52107*t62134;
  t88451 = t88447 + t88448 + t81033 + t88449;
  t88010 = t68020*t81016;
  t88418 = -3.e-6*t37134*t55423;
  t88420 = -1.000000000009*t52107*t62693;
  t88421 = t88418 + t88420 + t68343;
  t88030 = t63708*t81016;
  t88453 = -1.*t37134*t55187;
  t88454 = -1.*t52107*t63290;
  t88455 = 3.e-6*t52107*t63387;
  t88456 = t88453 + t88454 + t88455;
  t88459 = 3.e-6*t37134*t55187;
  t88460 = 3.e-6*t52107*t63290;
  t88461 = -9.e-12*t52107*t63387;
  t88462 = t88459 + t88460 + t88461;
  t88118 = -1.*t81016*t68522;
  t88471 = -1.*t52107*t55468;
  t88472 = 3.e-6*t52107*t61812;
  t88473 = -1.*t37134*t62075;
  t88474 = t88471 + t88472 + t88473;
  t88481 = 3.e-6*t52107*t55468;
  t88482 = -9.e-12*t52107*t61812;
  t88483 = 3.e-6*t37134*t62075;
  t88486 = t88481 + t88482 + t88483;
  t88187 = -1.*t68020*t81016;
  t88201 = t81016*t68522;
  t88521 = 3.e-6*t52107*t55423;
  t88522 = -1.*t37134*t62693;
  t88524 = -1.*t52107*t62742;
  t88526 = t88521 + t88522 + t88524;
  t88528 = -9.e-12*t52107*t55423;
  t88531 = 3.e-6*t37134*t62693;
  t88532 = 3.e-6*t52107*t62742;
  t88534 = t88528 + t88531 + t88532;
  t88573 = -1.*t37134*t50900;
  t88576 = -3.e-6*t37134*t51475;
  t88577 = t88573 + t88576;
  t88583 = 1.000000000009*t50900*t52107;
  t88584 = 3.000000000027e-6*t52107*t51475;
  t88585 = t88583 + t88584;
  t88591 = t50900*t88456;
  t88592 = -1.*t88462*t51475;
  t88593 = t88591 + t88592;
  t88601 = t50900*t88474;
  t88602 = -1.*t88486*t51475;
  t88604 = t88601 + t88602;
  t88617 = t50900*t88526;
  t88618 = -1.*t88534*t51475;
  t88619 = t88617 + t88618;
  t88627 = 3.e-6*t37134*t50900;
  t88628 = -1.*t37134*t51475;
  t88629 = t88627 + t88628;
  t88633 = -1.*t52626*t88577;
  t88634 = t52411 + t88633;
  t88646 = -3.000000000027e-6*t50900*t52107;
  t88647 = 1.000000000009*t52107*t51475;
  t88648 = t88646 + t88647;
  t88650 = -1.000000000009*t37134*t52101;
  t88652 = -1.*t52626*t88585;
  t88655 = t88650 + t88652;
  t88660 = t50900*t88462;
  t88663 = t88456*t51475;
  t88664 = t88660 + t88663;
  t88666 = t52101*t88411;
  t88669 = -1.*t52626*t88593;
  t88672 = t88666 + t88669;
  t88678 = t50900*t88486;
  t88679 = t88474*t51475;
  t88680 = t88678 + t88679;
  t88683 = t52101*t88416;
  t88685 = -1.*t52626*t88604;
  t88686 = t88683 + t88685;
  t88691 = t50900*t88534;
  t88692 = t88526*t51475;
  t88694 = t88691 + t88692;
  t88696 = t52101*t88421;
  t88698 = -1.*t52626*t88619;
  t88699 = t88696 + t88698;
  t88387 = 1.5e-7*t37134;
  t88397 = 9.000054e-13*t52107;
  t88767 = t88387 + t88397;
  t87829 = -1.*t73000*t75377;
  t87830 = t80414 + t87829;
  t88769 = t50900*t88767;
  t88770 = t88395*t51475;
  t88772 = t88769 + t88770;
  t88776 = t50900*t88395;
  t88778 = -1.*t88767*t51475;
  t88779 = t88776 + t88778;
  t87570 = t73000*t75377;
  t87574 = t75524 + t87570;
  t88786 = 3.000018e-7*t37134;
  t88789 = -0.05000000000045*t52107;
  t88791 = t88786 + t88789;
  t87960 = -1.*t63785*t81052;
  t87967 = t87948 + t81363 + t87960;
  t88430 = -1.*t88411*t81016;
  t88452 = -1.*t63708*t88451;
  t88466 = t88416*t81016;
  t88470 = t68020*t88451;
  t88854 = t50900*t88445;
  t88857 = t88436*t51475;
  t88858 = t88854 + t88857;
  t88861 = t50900*t88436;
  t88864 = -1.*t88445*t51475;
  t88865 = t88861 + t88864;
  t88011 = t68075*t81052;
  t88012 = t88010 + t83331 + t88011;
  t88031 = t63785*t81052;
  t88108 = t88030 + t83697 + t88031;
  t88502 = t88411*t81016;
  t88505 = t63708*t88451;
  t88120 = -1.*t81052*t68682;
  t88121 = t88118 + t88120 + t86215;
  t88519 = -1.*t81016*t88421;
  t88536 = -1.*t88451*t68522;
  t88542 = -1.*t88416*t81016;
  t88545 = -1.*t68020*t88451;
  t88197 = -1.*t68075*t81052;
  t88198 = t88187 + t86254 + t88197;
  t88205 = t81052*t68682;
  t88206 = t88201 + t88205 + t86290;
  t88561 = t81016*t88421;
  t88565 = t88451*t68522;
  t88590 = t88411*t52626;
  t88595 = t52101*t88593;
  t88596 = t88590 + t88595;
  t88598 = t88416*t52626;
  t88606 = t52101*t88604;
  t88609 = t88598 + t88606;
  t88614 = t88421*t52626;
  t88620 = t52101*t88619;
  t88621 = t88614 + t88620;
  t88775 = -1.*t75464*t88772;
  t88578 = t52101*t88577;
  t88579 = t75030 + t88578;
  t88794 = t88629*t75506;
  t88796 = t88772*t52892;
  t88954 = t88791*t52626;
  t88957 = t52101*t88779;
  t88959 = t88954 + t88957;
  t88962 = t52101*t88791;
  t88964 = -1.*t52626*t88779;
  t88965 = t88962 + t88964;
  t88824 = t75464*t88772;
  t88582 = -1.000000000009*t37134*t52626;
  t88586 = t52101*t88585;
  t88587 = t88582 + t88586;
  t88839 = -1.*t51503*t88772;
  t88844 = -1.*t75506*t88648;
  t88859 = -1.*t63536*t88858;
  t88870 = -1.*t88664*t81361;
  t88880 = t67970*t88858;
  t88885 = t88680*t81361;
  t89020 = t88451*t52626;
  t89021 = t52101*t88865;
  t89024 = t89020 + t89021;
  t89031 = t52101*t88451;
  t89035 = -1.*t52626*t88865;
  t89037 = t89031 + t89035;
  t88896 = t63536*t88858;
  t88898 = t88664*t81361;
  t88909 = -1.*t88858*t68393;
  t88910 = -1.*t81361*t88694;
  t88922 = -1.*t67970*t88858;
  t88924 = -1.*t88680*t81361;
  t88936 = t88858*t68393;
  t88938 = t81361*t88694;
  t89139 = -3.e-6*t54912;
  t89153 = 3.e-6*t54912;
  t89140 = 9.e-12*t55022;
  t89146 = -2.7e-17*t55022;
  t89171 = -3.000000000054e-6*t55022;
  t89172 = t89139 + t89171;
  t89180 = t89153 + t55325;
  t89200 = t89139 + t55325;
  t89185 = -9.e-12*t55022;
  t89151 = t89139 + t55027;
  t89156 = t89153 + t55027;
  t89241 = t89153 + t89171;
  t89227 = 3.e-6*t89151;
  t89182 = 0.1000003*t89180;
  t89188 = t54928 + t89185;
  t89189 = 0.100000000003*t89188;
  t89190 = -3.000000000027e-12*t55022;
  t89193 = 3.e-13 + t89182 + t89189 + t89190;
  t89206 = -3.e-12*t89200;
  t89207 = 0.100000000003*t89180;
  t89209 = 1.8000054e-12*t55022;
  t89210 = 1.e-7 + t89206 + t89207 + t89209;
  t89214 = 0.1000003*t89200;
  t89216 = t54912 + t89185;
  t89218 = -3.e-12*t89216;
  t89220 = 0.1000000000039*t55022;
  t89222 = 3.e-13 + t89214 + t89218 + t89220;
  t89232 = 3.e-6*t89156;
  t89228 = 1.000000000009*t55022;
  t89229 = t89227 + t89228;
  t89178 = t61658*t89172;
  t89194 = t55468*t89193;
  t89211 = t61812*t89210;
  t89225 = t89222*t62075;
  t89231 = t57430*t89229;
  t89235 = t54912 + t89232 + t89185;
  t89237 = t89235*t62134;
  t89239 = t89178 + t89194 + t89211 + t89225 + t89231 + t89237;
  t89246 = t54928 + t89227 + t89185;
  t89243 = -1.*t61658*t89241;
  t89247 = -1.*t57430*t89246;
  t89249 = -1.*t63290*t89193;
  t89250 = -1.*t89210*t63387;
  t89251 = -1.*t55187*t89222;
  t89252 = t89232 + t89228;
  t89253 = -1.*t89252*t62134;
  t89255 = t89243 + t89247 + t89249 + t89250 + t89251 + t89253;
  t89272 = -1.8e-11*t55022;
  t89273 = t89227 + t89232 + t89272;
  t89142 = t54912 + t89140;
  t89145 = 3.e-6*t89142;
  t89147 = t89139 + t89145 + t89146;
  t89165 = t54928 + t89140;
  t89166 = 3.e-6*t89165;
  t89167 = t89153 + t89166 + t89146;
  t89276 = t61658*t89241;
  t89278 = t57430*t89246;
  t89279 = t63290*t89193;
  t89280 = t89210*t63387;
  t89281 = t55187*t89222;
  t89282 = t89252*t62134;
  t89284 = t89276 + t89278 + t89279 + t89280 + t89281 + t89282;
  t89291 = -1.*t61658*t89273;
  t89292 = -1.*t57430*t89147;
  t89295 = -1.*t55423*t89210;
  t89296 = -1.*t62693*t89222;
  t89297 = -1.*t89167*t62134;
  t89298 = -1.*t89193*t62742;
  t89300 = t89291 + t89292 + t89295 + t89296 + t89297 + t89298;
  t89315 = -1.*t61658*t89172;
  t89317 = -1.*t55468*t89193;
  t89319 = -1.*t61812*t89210;
  t89320 = -1.*t89222*t62075;
  t89323 = -1.*t57430*t89229;
  t89324 = -1.*t89235*t62134;
  t89325 = t89315 + t89317 + t89319 + t89320 + t89323 + t89324;
  t89330 = t61658*t89273;
  t89333 = t57430*t89147;
  t89334 = t55423*t89210;
  t89335 = t62693*t89222;
  t89337 = t89167*t62134;
  t89338 = t89193*t62742;
  t89339 = t89330 + t89333 + t89334 + t89335 + t89337 + t89338;
  t89360 = 3.000000000054e-6*t55022;
  t89150 = -3.e-6*t89147;
  t89152 = -3.e-6*t89151;
  t89157 = -3.e-6*t89156;
  t89160 = 1.8e-11*t55022;
  t89162 = t89150 + t89152 + t89157 + t89160;
  t89367 = -3.e-6*t52107*t89172;
  t89368 = t53489*t89235;
  t89370 = t52107*t89229;
  t89372 = t89367 + t89368 + t89370;
  t88424 = -1.*t63515*t81035;
  t88425 = -1.*t63407*t81049;
  t88426 = t87948 + t88424 + t88425;
  t89378 = -3.e-6*t52107*t89241;
  t89380 = t52107*t89246;
  t89381 = t53489*t89252;
  t89382 = t89378 + t89380 + t89381;
  t88490 = t67958*t81035;
  t88491 = t67124*t81049;
  t88492 = t88010 + t88490 + t88491;
  t89396 = t52107*t89193;
  t89397 = -3.e-6*t52107*t89210;
  t89402 = t53489*t89222;
  t89403 = t89396 + t89397 + t89402;
  t89407 = t37134*t89193;
  t89409 = 3.e-6*t44888*t89210;
  t89410 = -1.*t52107*t89222;
  t89411 = t89407 + t89409 + t89410;
  t89413 = 3.e-6*t44888*t89193;
  t89415 = t50549*t89210;
  t89416 = 3.e-6*t52107*t89222;
  t89420 = t89413 + t89415 + t89416;
  t89168 = 0.2*t89167;
  t89176 = -1.*t89172*t68149;
  t89240 = -1.*t63387*t89239;
  t89242 = -1.*t89241*t68183;
  t89256 = -1.*t61812*t89255;
  t89257 = t89229*t68149;
  t89260 = t63290*t89239;
  t89262 = t89246*t68183;
  t89263 = t55468*t89255;
  t89264 = t89257 + t89260 + t89262 + t89263;
  t89265 = -3.e-6*t89264;
  t89267 = t89168 + t89176 + t89240 + t89242 + t89256 + t89265;
  t89385 = -3.e-6*t52107*t89273;
  t89387 = t53489*t89167;
  t89388 = t52107*t89147;
  t89390 = t89385 + t89387 + t89388;
  t88498 = t63515*t81035;
  t88499 = t63407*t81049;
  t88500 = t88030 + t88498 + t88499;
  t89472 = 3.e-6*t44888*t89241;
  t89473 = t37134*t89246;
  t89475 = -1.*t52107*t89252;
  t89476 = t89472 + t89473 + t89475;
  t89479 = t50549*t89241;
  t89480 = 3.e-6*t44888*t89246;
  t89482 = 3.e-6*t52107*t89252;
  t89487 = t89479 + t89480 + t89482;
  t88513 = -1.*t81049*t68271;
  t88515 = -1.*t81035*t68373;
  t88516 = t88513 + t88515 + t88118;
  t88550 = -1.*t67958*t81035;
  t88551 = -1.*t67124*t81049;
  t88554 = t88187 + t88550 + t88551;
  t89424 = 3.e-6*t44888*t89172;
  t89425 = -1.*t52107*t89235;
  t89428 = t37134*t89229;
  t89429 = t89424 + t89425 + t89428;
  t89439 = t50549*t89172;
  t89440 = 3.e-6*t52107*t89235;
  t89441 = 3.e-6*t44888*t89229;
  t89447 = t89439 + t89440 + t89441;
  t89512 = 3.e-6*t44888*t89273;
  t89513 = -1.*t52107*t89167;
  t89514 = t37134*t89147;
  t89515 = t89512 + t89513 + t89514;
  t89518 = t50549*t89273;
  t89519 = 3.e-6*t52107*t89167;
  t89520 = 3.e-6*t44888*t89147;
  t89522 = t89518 + t89519 + t89520;
  t88556 = t81049*t68271;
  t88557 = t81035*t68373;
  t88558 = t88556 + t88557 + t88201;
  t89271 = 0.2*t89235;
  t89274 = -1.*t89273*t64078;
  t89288 = -1.*t55423*t89284;
  t89289 = -1.*t89241*t64136;
  t89302 = -1.*t63387*t89300;
  t89303 = t89147*t64078;
  t89304 = t62742*t89284;
  t89307 = t89246*t64136;
  t89308 = t63290*t89300;
  t89310 = t89303 + t89304 + t89307 + t89308;
  t89311 = -3.e-6*t89310;
  t89312 = t89271 + t89274 + t89288 + t89289 + t89302 + t89311;
  t89314 = 0.2*t89252;
  t89327 = -1.*t55423*t89325;
  t89328 = -1.*t89273*t62238;
  t89329 = -1.*t89172*t62746;
  t89340 = -1.*t61812*t89339;
  t89341 = t62742*t89325;
  t89342 = t89147*t62238;
  t89344 = t89229*t62746;
  t89346 = t55468*t89339;
  t89347 = t89341 + t89342 + t89344 + t89346;
  t89348 = -3.e-6*t89347;
  t89349 = t89314 + t89327 + t89328 + t89329 + t89340 + t89348;
  t89359 = -3.e-6*t89246;
  t89362 = t89139 + t89359 + t89360;
  t89364 = -3.e-6*t89229;
  t89365 = t89153 + t89360 + t89364;
  t89597 = t50900*t89515;
  t89598 = -1.*t89522*t51475;
  t89599 = t89597 + t89598;
  t89615 = t50900*t89429;
  t89617 = -1.*t89447*t51475;
  t89618 = t89615 + t89617;
  t89626 = t50900*t89476;
  t89628 = -1.*t89487*t51475;
  t89629 = t89626 + t89628;
  t89638 = t50900*t89522;
  t89639 = t89515*t51475;
  t89640 = t89638 + t89639;
  t89643 = t52101*t89390;
  t89645 = -1.*t52626*t89599;
  t89646 = t89643 + t89645;
  t68894 = t52096*t63536;
  t68913 = -1.*t34446*t63863;
  t68928 = t68894 + t68913;
  t68975 = t52096*t67970;
  t69006 = -1.*t34446*t68101;
  t69013 = t68975 + t69006;
  t89669 = t50900*t89447;
  t89670 = t89429*t51475;
  t89671 = t89669 + t89670;
  t89675 = t52101*t89372;
  t89678 = -1.*t52626*t89618;
  t89680 = t89675 + t89678;
  t89689 = t50900*t89487;
  t89691 = t89476*t51475;
  t89692 = t89689 + t89691;
  t89696 = t52101*t89382;
  t89697 = -1.*t52626*t89629;
  t89699 = t89696 + t89697;
  t69023 = t52096*t68393;
  t69041 = -1.*t34446*t68693;
  t69046 = t69023 + t69041;
  t89405 = t89403*t68020;
  t89423 = t89372*t81016;
  t89453 = -1.*t63708*t89403;
  t89465 = -1.*t89382*t81016;
  t89774 = t50900*t89420;
  t89775 = t89411*t51475;
  t89776 = t89774 + t89775;
  t89778 = t50900*t89411;
  t89779 = -1.*t89420*t51475;
  t89781 = t89778 + t89779;
  t89503 = t63708*t89403;
  t89506 = t89382*t81016;
  t89511 = -1.*t89390*t81016;
  t89527 = -1.*t89403*t68522;
  t89536 = -1.*t89403*t68020;
  t89541 = -1.*t89372*t81016;
  t89550 = t89390*t81016;
  t89556 = t89403*t68522;
  t89594 = t89390*t52626;
  t89601 = t52101*t89599;
  t89605 = t89594 + t89601;
  t89614 = t89372*t52626;
  t89619 = t52101*t89618;
  t89621 = t89614 + t89619;
  t89624 = t89382*t52626;
  t89630 = t52101*t89629;
  t89631 = t89624 + t89630;
  t89777 = t89776*t67970;
  t89785 = t89671*t81361;
  t89792 = -1.*t63536*t89776;
  t89795 = -1.*t89692*t81361;
  t89899 = t89403*t52626;
  t89900 = t52101*t89781;
  t89902 = t89899 + t89900;
  t89904 = t52101*t89403;
  t89905 = -1.*t52626*t89781;
  t89910 = t89904 + t89905;
  t89812 = t63536*t89776;
  t89816 = t89692*t81361;
  t89821 = -1.*t89640*t81361;
  t89825 = -1.*t89776*t68393;
  t89843 = -1.*t89776*t67970;
  t89849 = -1.*t89671*t81361;
  t89855 = t89640*t81361;
  t89862 = t89776*t68393;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(-0.0013000000000117*(-1.*t34446*t51503 - 1.*t52096*t52786) - 7.7999532000702e-9*(-1.*t34446*t52892 - 1.*t52096*t54505) - 0.043*t63230*(-1.*t34446*t63536 - 1.*t52096*t63863) - 0.043*t64320*(-1.*t34446*t67970 - 1.*t52096*t68101) - 0.043*t68209*(-1.*t34446*t68393 - 1.*t52096*t68693))*var2[1] - 0.5*(-0.0013000000000117*(t51503*t52096 - 1.*t34446*t52786) - 7.7999532000702e-9*(t52096*t52892 - 1.*t34446*t54505) - 0.043*t63230*t68928 - 0.043*t64320*t69013 - 0.043*t68209*t69046)*var2[2])*var2[19];
  p_output1[4]=(-0.5*(-0.0013000000000117*t52786 - 7.7999532000702e-9*t54505 - 0.043*t63230*t63863 - 0.043*t64320*t68101 - 0.043*t68209*t68693)*var2[0] - 0.5*(0.0013000000000117*t34446*t69072 + 7.7999532000702e-9*t34446*t69162 + 0.043*t34446*t63230*t69208 + 0.043*t34446*t64320*t69228 + 0.043*t34446*t68209*t69246)*var2[1] - 0.5*(-0.0013000000000117*t52096*t69072 - 7.7999532000702e-9*t52096*t69162 - 0.043*t52096*t63230*t69208 - 0.043*t52096*t64320*t69228 - 0.043*t52096*t68209*t69246)*var2[2] - 0.5*(0.000046000000000414*t52626*t73000 - 0.000271*t63863*t74895 - 2.e-6*t68101*t74946 - 0.000271*t68693*t74970 - 7.7999532000702e-9*(t75153*(-1.*t52626*t73000*t75380 - 1.*t52626*t73000*t75393) + t52101*t73000*(-1.*t52786*t75380 - 1.*t52786*t75393 - 1.*t69072*t75598 - 1.*t75153*t75598) + t52786*t75601 - 1.*t52626*t73000*t75668) - 0.0013000000000117*((t52626*t73000*t75380 + t52626*t73000*t75393)*t76206 + t52101*t73000*(t54505*t75380 + t54505*t75393 + t69162*t75598 + t75598*t76206) + t54505*t80454 - 1.*t52626*t73000*t80846) - 0.043*t68209*((t68101*t81056 + t68101*t81080 + t69228*t81091 + t80995*t81091)*t81193 + t80995*(-1.*t63863*t81056 - 1.*t63863*t81080 - 1.*t69208*t81091 - 1.*t81091*t81193) + t68101*t81367 + t63863*t83405) - 0.043*t64320*((t63863*t81056 + t63863*t81080 + t69208*t81091 + t81091*t81193)*t83482 + t81193*(-1.*t68693*t81056 - 1.*t68693*t81080 - 1.*t69246*t81091 - 1.*t81091*t83482) + t68693*t84427 + t63863*t86222) - 0.043*t63230*((-1.*t68101*t81056 - 1.*t68101*t81080 - 1.*t69228*t81091 - 1.*t80995*t81091)*t83482 + t80995*(t68693*t81056 + t68693*t81080 + t69246*t81091 + t81091*t83482) + t68693*t86264 + t68101*t86300))*var2[3])*var2[19];
  p_output1[5]=(-0.5*(-0.0013000000000117*t52101*t86653 - 7.7999532000702e-9*t52101*t86667 - 0.043*t52101*t63230*t86672 - 0.043*t52101*t64320*t86694 - 0.043*t52101*t68209*t86708)*var2[0] - 0.5*(-0.0013000000000117*(t52096*t52754 + t34446*t52626*t86653) - 7.7999532000702e-9*(t52096*t53630 + t34446*t52626*t86667) - 0.043*t63230*(t52096*t63785 + t34446*t52626*t86672) - 0.043*t64320*(t52096*t68075 + t34446*t52626*t86694) - 0.043*t68209*(t52096*t68682 + t34446*t52626*t86708))*var2[1] - 0.5*(-0.0013000000000117*(t34446*t52754 - 1.*t52096*t52626*t86653) - 7.7999532000702e-9*(t34446*t53630 - 1.*t52096*t52626*t86667) - 0.043*t63230*(t34446*t63785 - 1.*t52096*t52626*t86672) - 0.043*t64320*(t34446*t68075 - 1.*t52096*t52626*t86694) - 0.043*t68209*(t34446*t68682 - 1.*t52096*t52626*t86708))*var2[2] - 0.5*(-0.000271*t52101*t74895*t86672 - 2.e-6*t52101*t74946*t86694 - 0.000271*t52101*t74970*t86708 - 0.000046000000000414*t52101*t87730 - 0.043*t68209*(t52101*t83405*t86672 + t52101*t81367*t86694 + t80995*(-1.*t52101*t81080*t86672 + t52626*t81091*t86672 + t52626*t63863*t87978 - 1.*t52101*t81193*t87978 + t87987 + t87989) + t81193*(t52101*t81080*t86694 - 1.*t52626*t81091*t86694 - 1.*t52626*t68101*t87978 + t52101*t80995*t87978 + t88000 + t88004)) - 0.043*t64320*(t52101*t86222*t86672 + t52101*t84427*t86708 + t83482*(t52101*t81080*t86672 - 1.*t52626*t81091*t86672 - 1.*t52626*t63863*t87978 + t52101*t81193*t87978 + t88111 + t88115) + t81193*(-1.*t52101*t81080*t86708 + t52626*t81091*t86708 + t52626*t68693*t87978 - 1.*t52101*t83482*t87978 + t88125 + t88145)) - 0.043*t63230*(t52101*t86300*t86694 + t52101*t86264*t86708 + t83482*(-1.*t52101*t81080*t86694 + t52626*t81091*t86694 + t52626*t68101*t87978 - 1.*t52101*t80995*t87978 + t88157 + t88164) + t80995*(t52101*t81080*t86708 - 1.*t52626*t81091*t86708 - 1.*t52626*t68693*t87978 + t52101*t83482*t87978 + t88219 + t88222)) - 0.0013000000000117*(t52101*t80454*t86667 + t52101*t80846*t87730 + t52101*t73000*(t52101*t75393*t86667 - 1.*t52626*t75598*t86667 - 1.*t52626*t54505*t87684 + t52101*t76206*t87684 + t87884 + t87928) + t76206*(-1.*t52101*t75393*t87730 + t52626*t75598*t87730 + t87838 + t87869 - 1.*t73000*t87684*t88273 - 1.*t73000*t87684*t88282)) - 7.7999532000702e-9*(t52101*t75601*t86653 + t52101*t73000*(-1.*t52101*t75393*t86653 + t52626*t75598*t86653 + t52626*t52786*t87684 - 1.*t52101*t75153*t87684 + t87698 + t87703) + t52101*t75668*t87730 + t75153*(t87722 + t52101*t75393*t87730 - 1.*t52626*t75598*t87730 + t87735 + t73000*t87684*t88273 + t73000*t87684*t88282)))*var2[3] - 0.5*(-0.000046000000000414*t73000 - 0.000271*t63785*t74895 - 2.e-6*t68075*t74946 - 0.000271*t68682*t74970 - 7.7999532000702e-9*(t73000*(1.000000000009*t52107*t75171 - 1.*t52754*t75377 + t75663) + t52754*t87574 + t75464*(-1.*t75377*t86653 - 1.*t52754*t87684 + t87698 + t87703) + t51503*(t73000*t87684 + t87722 + t75377*t87730 + t87735)) - 0.0013000000000117*(t73000*(t53489*t75171 + t53630*t75377 + t80810) + t53630*t87830 + t52892*(-1.*t73000*t87684 - 1.*t75377*t87730 + t87838 + t87869) + t75464*(t75377*t86667 + t53630*t87684 + t87884 + t87928)) - 0.043*t68209*(t68075*t87967 + t67970*(-1.*t81052*t86672 - 1.*t63785*t87978 + t87987 + t87989) + t63536*(t81052*t86694 + t68075*t87978 + t88000 + t88004) + t63785*t88012) - 0.043*t64320*(t68682*t88108 + t68393*(t81052*t86672 + t63785*t87978 + t88111 + t88115) + t63785*t88121 + t63536*(-1.*t81052*t86708 - 1.*t68682*t87978 + t88125 + t88145)) - 0.043*t63230*(t68393*(-1.*t81052*t86694 - 1.*t68075*t87978 + t88157 + t88164) + t68682*t88198 + t68075*t88206 + t67970*(t81052*t86708 + t68682*t87978 + t88219 + t88222)))*var2[4])*var2[19];
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=(-0.5*(-7.7999532000702e-9*t88579 - 0.0013000000000117*t88587 - 0.043*t63230*t88596 - 0.043*t64320*t88609 - 0.043*t68209*t88621)*var2[0] - 0.5*(-7.7999532000702e-9*(t52096*t88629 - 1.*t34446*t88634) - 0.0013000000000117*(t52096*t88648 - 1.*t34446*t88655) - 0.043*t63230*(t52096*t88664 - 1.*t34446*t88672) - 0.043*t64320*(t52096*t88680 - 1.*t34446*t88686) - 0.043*t68209*(t52096*t88694 - 1.*t34446*t88699))*var2[1] - 0.5*(-7.7999532000702e-9*(t34446*t88629 + t52096*t88634) - 0.0013000000000117*(t34446*t88648 + t52096*t88655) - 0.043*t63230*(t34446*t88664 + t52096*t88672) - 0.043*t64320*(t34446*t88680 + t52096*t88686) - 0.043*t68209*(t34446*t88694 + t52096*t88699))*var2[2] - 0.5*(-0.000271*t74895*t88596 - 2.e-6*t74946*t88609 - 0.000271*t74970*t88621 - 7.7999532000702e-9*(t75601*t88587 + t52101*t73000*(-1.*t75393*t88587 - 1.*t75598*t88655 + t88839 + t88844 - 1.*t75153*t88959 - 1.*t52786*t88965) + t75153*(t88824 + t52101*t73000*t88959 - 1.*t52626*t73000*t88965)) - 0.0013000000000117*(t80454*t88579 + t52101*t73000*(t75393*t88579 + t75598*t88634 + t88794 + t88796 + t76206*t88959 + t54505*t88965) + t76206*(t88775 - 1.*t52101*t73000*t88959 + t52626*t73000*t88965)) - 0.043*t68209*(t83405*t88596 + t81367*t88609 + t80995*(-1.*t81080*t88596 - 1.*t81091*t88672 + t88859 + t88870 - 1.*t81193*t89024 - 1.*t63863*t89037) + t81193*(t81080*t88609 + t81091*t88686 + t88880 + t88885 + t80995*t89024 + t68101*t89037)) - 0.043*t64320*(t86222*t88596 + t84427*t88621 + t83482*(t81080*t88596 + t81091*t88672 + t88896 + t88898 + t81193*t89024 + t63863*t89037) + t81193*(-1.*t81080*t88621 - 1.*t81091*t88699 + t88909 + t88910 - 1.*t83482*t89024 - 1.*t68693*t89037)) - 0.043*t63230*(t86300*t88609 + t86264*t88621 + t83482*(-1.*t81080*t88609 - 1.*t81091*t88686 + t88922 + t88924 - 1.*t80995*t89024 - 1.*t68101*t89037) + t80995*(t81080*t88621 + t81091*t88699 + t88936 + t88938 + t83482*t89024 + t68693*t89037)))*var2[3] - 0.5*(-0.000271*t74895*t88664 - 2.e-6*t74946*t88680 - 0.000271*t74970*t88694 - 0.0013000000000117*(t87830*t88629 + t52892*(t88775 - 1.*t73000*t88779) + t75464*(-1.000000000009*t52107*t75171 + t75377*t88577 + t53630*t88779 + t53489*t88791 + t88794 + t88796)) - 7.7999532000702e-9*(t87574*t88648 + t51503*(t73000*t88779 + t88824) + t75464*(1.000000000009*t37134*t75171 - 1.*t75377*t88585 - 1.*t52754*t88779 + 1.000000000009*t52107*t88791 + t88839 + t88844)) - 0.043*t68209*(t88012*t88664 + t87967*t88680 + t67970*(t88430 + t88452 - 1.*t81052*t88593 + t88859 - 1.*t63785*t88865 + t88870) + t63536*(t88466 + t88470 + t81052*t88604 + t68075*t88865 + t88880 + t88885)) - 0.043*t64320*(t88121*t88664 + t88108*t88694 + t68393*(t88502 + t88505 + t81052*t88593 + t63785*t88865 + t88896 + t88898) + t63536*(t88519 + t88536 - 1.*t81052*t88619 - 1.*t68682*t88865 + t88909 + t88910)) - 0.043*t63230*(t88206*t88680 + t88198*t88694 + t68393*(t88542 + t88545 - 1.*t81052*t88604 - 1.*t68075*t88865 + t88922 + t88924) + t67970*(t88561 + t88565 + t81052*t88619 + t68682*t88865 + t88936 + t88938)))*var2[4] - 0.5*(7.7999532001404e-9*t37134*(-5.4e-18*t44888 + 0.1*t50549 - 1.5e-7*t52107 + t70131*t75212) + 0.0013000000000234*t52107*(-1.*t70131*t75212 + t75236 + t75347 + t75354) + 7.7999532001404e-9*t52107*(-1.5e-7*t37134 - 9.000054e-13*t52107 + t70131*t88395) - 0.0013000000000117*t53489*(t88387 - 1.*t70131*t88395 + t88397) - 0.000271*t74895*t88411 - 2.e-6*t74946*t88416 - 0.000271*t74970*t88421 - 0.043*t68209*(t88416*t88426 + t68020*(t88430 - 1.*t63515*t88436 - 1.*t63407*t88445 + t88452 - 1.*t81035*t88456 - 1.*t81049*t88462) + t63708*(t67958*t88436 + t67124*t88445 + t88466 + t88470 + t81035*t88474 + t81049*t88486) + t88411*t88492) - 0.043*t64320*(t88421*t88500 + t68522*(t63515*t88436 + t63407*t88445 + t81035*t88456 + t81049*t88462 + t88502 + t88505) + t88411*t88516 + t63708*(-1.*t68373*t88436 - 1.*t68271*t88445 + t88519 - 1.*t81035*t88526 - 1.*t81049*t88534 + t88536)) - 0.043*t63230*(t68522*(-1.*t67958*t88436 - 1.*t67124*t88445 - 1.*t81035*t88474 - 1.*t81049*t88486 + t88542 + t88545) + t88421*t88554 + t88416*t88558 + t68020*(t68373*t88436 + t68271*t88445 + t81035*t88526 + t81049*t88534 + t88561 + t88565)))*var2[5])*var2[19];
  p_output1[20]=0;
  p_output1[21]=var2[19]*(-0.5*(-0.043*t83482*t89267 - 0.043*t80995*t89312 - 0.043*t81193*t89349 - 0.043*t68209*t89605 - 0.043*t64320*t89621 - 0.043*t63230*t89631)*var2[0] - 0.5*(-0.043*t69046*t89267 - 0.043*t69013*t89312 - 0.043*t68928*t89349 - 0.043*t68209*(t52096*t89640 - 1.*t34446*t89646) - 0.043*t64320*(t52096*t89671 - 1.*t34446*t89680) - 0.043*t63230*(t52096*t89692 - 1.*t34446*t89699))*var2[1] - 0.5*(-0.043*(t34446*t68393 + t52096*t68693)*t89267 - 0.043*(t34446*t67970 + t52096*t68101)*t89312 - 0.043*(t34446*t63536 + t52096*t63863)*t89349 - 0.043*t68209*(t34446*t89640 + t52096*t89646) - 0.043*t64320*(t34446*t89671 + t52096*t89680) - 0.043*t63230*(t34446*t89692 + t52096*t89699))*var2[2] - 0.5*(-0.000271*t83482*t89162 - 0.043*(t80995*t81367 + t81193*t83405)*t89267 - 0.043*(t83482*t84427 + t81193*t86222)*t89312 - 0.043*(t83482*t86264 + t80995*t86300)*t89349 - 0.000271*t81193*t89362 - 2.e-6*t80995*t89365 - 0.000271*t74970*t89605 - 2.e-6*t74946*t89621 - 0.000271*t74895*t89631 - 0.043*t68209*(t81367*t89621 + t83405*t89631 + t80995*(-1.*t81080*t89631 - 1.*t81091*t89699 + t89792 + t89795 - 1.*t81193*t89902 - 1.*t63863*t89910) + t81193*(t81080*t89621 + t81091*t89680 + t89777 + t89785 + t80995*t89902 + t68101*t89910)) - 0.043*t64320*(t84427*t89605 + t86222*t89631 + t83482*(t81080*t89631 + t81091*t89699 + t89812 + t89816 + t81193*t89902 + t63863*t89910) + t81193*(-1.*t81080*t89605 - 1.*t81091*t89646 + t89821 + t89825 - 1.*t83482*t89902 - 1.*t68693*t89910)) - 0.043*t63230*(t86264*t89605 + t86300*t89621 + t83482*(-1.*t81080*t89621 - 1.*t81091*t89680 + t89843 + t89849 - 1.*t80995*t89902 - 1.*t68101*t89910) + t80995*(t81080*t89605 + t81091*t89646 + t89855 + t89862 + t83482*t89902 + t68693*t89910)))*var2[3] - 0.5*(-0.000271*t68393*t89162 - 0.043*(t67970*t87967 + t63536*t88012)*t89267 - 0.043*(t68393*t88108 + t63536*t88121)*t89312 - 0.043*(t68393*t88198 + t67970*t88206)*t89349 - 0.000271*t63536*t89362 - 2.e-6*t67970*t89365 - 0.000271*t74970*t89640 - 2.e-6*t74946*t89671 - 0.000271*t74895*t89692 - 0.043*t68209*(t87967*t89671 + t88012*t89692 + t63536*(t89405 + t89423 + t81052*t89618 + t89777 + t68075*t89781 + t89785) + t67970*(t89453 + t89465 - 1.*t81052*t89629 - 1.*t63785*t89781 + t89792 + t89795)) - 0.043*t64320*(t88108*t89640 + t88121*t89692 + t68393*(t89503 + t89506 + t81052*t89629 + t63785*t89781 + t89812 + t89816) + t63536*(t89511 + t89527 - 1.*t81052*t89599 - 1.*t68682*t89781 + t89821 + t89825)) - 0.043*t63230*(t88198*t89640 + t88206*t89671 + t68393*(t89536 + t89541 - 1.*t81052*t89618 - 1.*t68075*t89781 + t89843 + t89849) + t67970*(t89550 + t89556 + t81052*t89599 + t68682*t89781 + t89855 + t89862)))*var2[4] - 0.5*(-0.000271*t68522*t89162 - 0.043*(t68020*t88426 + t63708*t88492)*t89267 - 0.043*(t68522*t88500 + t63708*t88516)*t89312 - 0.043*(t68522*t88554 + t68020*t88558)*t89349 - 0.000271*t63708*t89362 - 2.e-6*t68020*t89365 - 2.e-6*t74946*t89372 - 0.000271*t74895*t89382 - 0.000271*t74970*t89390 - 0.043*t68209*(t88426*t89372 + t88492*t89382 + t63708*(t89405 + t67958*t89411 + t67124*t89420 + t89423 + t81035*t89429 + t81049*t89447) + t68020*(-1.*t63515*t89411 - 1.*t63407*t89420 + t89453 + t89465 - 1.*t81035*t89476 - 1.*t81049*t89487)) - 0.043*t64320*(t88516*t89382 + t88500*t89390 + t68522*(t63515*t89411 + t63407*t89420 + t81035*t89476 + t81049*t89487 + t89503 + t89506) + t63708*(-1.*t68373*t89411 - 1.*t68271*t89420 + t89511 - 1.*t81035*t89515 - 1.*t81049*t89522 + t89527)) - 0.043*t63230*(t88558*t89372 + t88554*t89390 + t68522*(-1.*t67958*t89411 - 1.*t67124*t89420 - 1.*t81035*t89429 - 1.*t81049*t89447 + t89536 + t89541) + t68020*(t68373*t89411 + t68271*t89420 + t81035*t89515 + t81049*t89522 + t89550 + t89556)))*var2[5] - 0.5*(-0.000542*t74970*t89162 - 0.086*t68209*t89267 - 0.086*t64320*t89312 - 0.086*t63230*t89349 - 0.000542*t74895*t89362 - 4.e-6*t74946*t89365)*var2[19] - 0.5*(-0.000271000000004878*t89162 - 4.3e-9*t89267 - 0.004299987100129*t89312 - 1.28999742002322e-8*t89349)*var2[21]);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec20_minitaur.hh"

namespace FrontStance
{

void Ce3_vec20_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
