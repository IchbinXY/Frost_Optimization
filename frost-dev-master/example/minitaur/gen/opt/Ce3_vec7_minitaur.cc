/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:12:43 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t4434;
  double t4435;
  double t4649;
  double t2964;
  double t6696;
  double t6885;
  double t4864;
  double t5186;
  double t5307;
  double t5396;
  double t6371;
  double t6975;
  double t38;
  double t8399;
  double t7222;
  double t8310;
  double t7293;
  double t12310;
  double t12344;
  double t12347;
  double t12371;
  double t12382;
  double t12420;
  double t12348;
  double t12578;
  double t12606;
  double t12651;
  double t12735;
  double t12803;
  double t12808;
  double t12814;
  double t12830;
  double t12841;
  double t12854;
  double t12861;
  double t12866;
  double t12952;
  double t12966;
  double t12686;
  double t12847;
  double t13027;
  double t13036;
  double t13200;
  double t13908;
  double t13959;
  double t14018;
  double t12136;
  double t12159;
  double t15028;
  double t18225;
  double t15808;
  double t19604;
  double t19976;
  double t15664;
  double t18534;
  double t18624;
  double t19515;
  double t19905;
  double t19962;
  double t19971;
  double t19973;
  double t17079;
  double t22089;
  double t22368;
  double t22069;
  double t23023;
  double t23099;
  double t23142;
  double t23330;
  double t23340;
  double t23472;
  double t17697;
  double t18105;
  double t18123;
  double t18138;
  double t18178;
  double t18228;
  double t18528;
  double t27754;
  double t29626;
  double t29751;
  double t30318;
  double t15749;
  double t18532;
  double t20006;
  double t20844;
  double t23953;
  double t25917;
  double t26564;
  double t28042;
  double t29343;
  double t29345;
  double t30418;
  double t31032;
  double t15116;
  double t32465;
  double t32652;
  double t32802;
  double t32922;
  double t32987;
  double t33012;
  double t33014;
  double t33028;
  double t33219;
  double t33226;
  double t33244;
  double t33253;
  double t33313;
  double t33334;
  double t33509;
  double t33534;
  double t36322;
  double t36332;
  double t36684;
  double t37134;
  double t37564;
  double t37572;
  double t37755;
  double t37921;
  double t38511;
  double t38820;
  double t38846;
  double t38871;
  double t38935;
  double t39039;
  double t39122;
  double t39150;
  double t6482;
  double t6976;
  double t7144;
  double t7319;
  double t7510;
  double t7712;
  double t7719;
  double t8931;
  double t9558;
  double t11040;
  double t11049;
  double t12125;
  double t12161;
  double t12173;
  double t12189;
  double t12198;
  double t12199;
  double t12200;
  double t13165;
  double t14025;
  double t14030;
  double t14207;
  double t14221;
  double t14337;
  double t14506;
  double t14549;
  double t14618;
  double t14693;
  double t14697;
  double t14733;
  double t14861;
  double t15214;
  double t15304;
  double t26199;
  double t31417;
  double t31424;
  double t31439;
  double t31658;
  double t31678;
  double t31811;
  double t32374;
  double t32397;
  double t32984;
  double t33032;
  double t33194;
  double t33197;
  double t33198;
  double t33202;
  double t33206;
  double t33254;
  double t33624;
  double t33694;
  double t34141;
  double t34155;
  double t34157;
  double t34192;
  double t34203;
  double t34212;
  double t34217;
  double t34371;
  double t34380;
  double t34446;
  double t34651;
  double t36093;
  double t36160;
  double t36178;
  double t37395;
  double t38036;
  double t38233;
  double t38279;
  double t38327;
  double t38335;
  double t38509;
  double t38878;
  double t39162;
  double t39165;
  double t39327;
  double t39334;
  double t40365;
  double t40380;
  double t40394;
  double t40449;
  double t40526;
  double t40707;
  double t40708;
  double t40775;
  double t41651;
  double t41652;
  double t41656;
  double t41676;
  double t41681;
  double t41682;
  double t41687;
  double t41688;
  double t41691;
  double t41712;
  double t41714;
  double t41715;
  double t41723;
  double t41726;
  double t41730;
  double t42027;
  double t42181;
  double t42216;
  double t42221;
  double t42240;
  double t42440;
  double t42484;
  double t42510;
  double t42518;
  double t42523;
  double t42526;
  double t42528;
  double t42535;
  double t42548;
  double t42610;
  double t42646;
  double t42657;
  double t42662;
  double t42724;
  double t42734;
  double t42739;
  double t43035;
  double t43188;
  double t43197;
  double t42635;
  double t42677;
  double t42681;
  double t43833;
  double t43864;
  double t43873;
  double t43719;
  double t43769;
  double t43802;
  double t42856;
  double t42897;
  double t42952;
  double t44401;
  double t44513;
  double t44525;
  double t44709;
  double t44823;
  double t44877;
  double t44885;
  double t44887;
  double t44888;
  double t44895;
  double t44897;
  double t44908;
  double t44918;
  double t44960;
  double t45040;
  double t45112;
  double t45131;
  double t45140;
  double t45143;
  double t45183;
  double t45185;
  double t45232;
  double t45145;
  double t45233;
  double t45276;
  double t45278;
  double t45283;
  double t45285;
  double t44973;
  double t44997;
  double t45039;
  double t45293;
  double t45294;
  double t45295;
  double t45289;
  double t45290;
  double t45292;
  double t44889;
  double t44961;
  double t44963;
  double t45611;
  double t45617;
  double t45624;
  double t46682;
  double t46691;
  double t46695;
  double t46740;
  double t46741;
  double t46744;
  double t46753;
  double t46754;
  double t46759;
  double t46782;
  double t46793;
  double t46796;
  double t46812;
  double t46814;
  double t46816;
  double t43210;
  double t47755;
  double t47774;
  double t47819;
  double t43896;
  double t48018;
  double t48063;
  double t44644;
  double t44660;
  double t44712;
  double t44719;
  double t44726;
  double t44728;
  double t44732;
  double t44734;
  double t44744;
  double t44747;
  double t44964;
  double t48270;
  double t48289;
  double t48295;
  double t45326;
  double t45484;
  double t45949;
  double t46125;
  double t46485;
  double t42691;
  double t42740;
  double t43294;
  double t48011;
  double t48122;
  double t43910;
  double t43921;
  double t43925;
  double t47859;
  double t47888;
  double t44551;
  double t44560;
  double t44648;
  double t48640;
  double t48666;
  double t48169;
  double t48171;
  double t44662;
  double t44663;
  double t44664;
  double t48199;
  double t48207;
  double t48309;
  double t48343;
  double t45277;
  double t45286;
  double t45287;
  double t48371;
  double t48378;
  double t45330;
  double t45387;
  double t45396;
  double t48436;
  double t48440;
  double t45490;
  double t45555;
  double t45575;
  double t48463;
  double t48493;
  double t45983;
  double t45984;
  double t45985;
  double t48511;
  double t48517;
  double t46129;
  double t46130;
  double t46131;
  double t48573;
  double t48576;
  double t46487;
  double t46489;
  double t46493;
  double t49430;
  double t49433;
  double t49445;
  double t49282;
  double t49284;
  double t49289;
  double t49150;
  double t49162;
  double t49166;
  double t49095;
  double t49097;
  double t49108;
  double t48240;
  double t49226;
  double t49234;
  double t49249;
  double t49253;
  double t49209;
  double t49210;
  double t49213;
  double t49217;
  double t49553;
  double t49565;
  double t49577;
  double t49584;
  double t49610;
  double t49622;
  double t49624;
  double t49626;
  double t49633;
  double t49635;
  double t49647;
  double t49662;
  double t49664;
  double t49667;
  double t49170;
  double t49173;
  double t49174;
  double t49175;
  double t49178;
  double t49181;
  double t49182;
  double t49183;
  double t48404;
  double t48428;
  double t48447;
  double t49114;
  double t49116;
  double t49117;
  double t49118;
  double t49121;
  double t49124;
  double t49126;
  double t49127;
  double t48541;
  double t48552;
  double t49013;
  double t49015;
  double t49017;
  double t49063;
  double t49070;
  double t49073;
  double t49221;
  double t49257;
  double t49258;
  double t49177;
  double t49187;
  double t49191;
  double t49119;
  double t49131;
  double t49141;
  double t50154;
  double t50155;
  double t50160;
  double t50169;
  double t50170;
  double t50186;
  double t50187;
  double t50202;
  double t50209;
  double t50210;
  double t50214;
  double t50222;
  double t50223;
  double t50240;
  double t50243;
  double t50250;
  double t50253;
  double t50270;
  double t50279;
  double t50288;
  double t50292;
  double t50295;
  double t50296;
  double t50319;
  double t50320;
  double t50322;
  double t50331;
  double t50332;
  double t50334;
  double t48182;
  double t48183;
  double t49425;
  double t49448;
  double t50504;
  double t50530;
  double t50535;
  double t50536;
  double t50506;
  double t50518;
  double t50522;
  double t47629;
  double t47713;
  double t50577;
  double t50584;
  double t50593;
  double t48246;
  double t48248;
  double t49551;
  double t49673;
  double t49752;
  double t49775;
  double t50775;
  double t50776;
  double t50779;
  double t50787;
  double t50791;
  double t50797;
  double t48408;
  double t48411;
  double t48429;
  double t48430;
  double t49875;
  double t49910;
  double t48450;
  double t48451;
  double t49947;
  double t49972;
  double t49994;
  double t50012;
  double t48543;
  double t48549;
  double t48555;
  double t48557;
  double t50085;
  double t50105;
  double t49030;
  double t49045;
  double t50537;
  double t50547;
  double t50619;
  double t51052;
  double t51056;
  double t51058;
  double t51037;
  double t51046;
  double t51047;
  double t50663;
  double t49051;
  double t49084;
  double t49088;
  double t50729;
  double t50738;
  double t49281;
  double t49297;
  double t49318;
  double t49167;
  double t49193;
  double t49207;
  double t49113;
  double t49142;
  double t49144;
  double t50786;
  double t50802;
  double t50833;
  double t50846;
  double t51138;
  double t51143;
  double t51153;
  double t51162;
  double t51166;
  double t51167;
  double t50892;
  double t50898;
  double t50923;
  double t50931;
  double t50962;
  double t50969;
  double t51002;
  double t51006;
  double t51378;
  double t51385;
  double t51434;
  double t51428;
  double t51476;
  double t51478;
  double t51487;
  double t51439;
  double t51528;
  double t51494;
  double t51462;
  double t51493;
  double t51499;
  double t51503;
  double t51509;
  double t51512;
  double t51635;
  double t51584;
  double t51531;
  double t51535;
  double t51547;
  double t51548;
  double t51550;
  double t51555;
  double t51558;
  double t51564;
  double t51565;
  double t51568;
  double t51569;
  double t51571;
  double t51612;
  double t51587;
  double t51600;
  double t51513;
  double t51515;
  double t51553;
  double t51575;
  double t51611;
  double t51627;
  double t51628;
  double t51629;
  double t51652;
  double t51646;
  double t51650;
  double t51663;
  double t51665;
  double t51666;
  double t51670;
  double t51672;
  double t51673;
  double t51444;
  double t51732;
  double t51736;
  double t51386;
  double t51387;
  double t51399;
  double t51416;
  double t51740;
  double t51749;
  double t51752;
  double t51754;
  double t51764;
  double t51768;
  double t51770;
  double t51784;
  double t51793;
  double t51796;
  double t51801;
  double t51803;
  double t51806;
  double t51809;
  double t51817;
  double t51818;
  double t51900;
  double t51902;
  double t51904;
  double t51909;
  double t51910;
  double t51922;
  double t51926;
  double t51947;
  double t51955;
  double t51958;
  double t51970;
  double t51981;
  double t51992;
  double t51996;
  double t51467;
  double t51469;
  double t51473;
  double t51475;
  double t51479;
  double t51630;
  double t51638;
  double t51677;
  double t51689;
  double t51696;
  double t51697;
  double t51700;
  double t51707;
  double t51714;
  double t51719;
  double t51726;
  double t51727;
  double t51738;
  double t51776;
  double t51779;
  double t51820;
  double t51823;
  double t51825;
  double t51828;
  double t51829;
  double t51832;
  double t51838;
  double t51841;
  double t51846;
  double t51860;
  double t51880;
  double t51937;
  double t51939;
  double t51943;
  double t51998;
  double t52006;
  double t52012;
  double t52016;
  double t52019;
  double t52021;
  double t52022;
  double t52029;
  double t52336;
  double t52117;
  double t52121;
  double t52127;
  double t52130;
  double t52211;
  double t52217;
  double t52238;
  double t52257;
  double t52096;
  double t52098;
  double t52100;
  double t52101;
  double t51422;
  double t51431;
  double t51448;
  double t51458;
  double t49508;
  double t49516;
  double t49532;
  double t49794;
  double t49799;
  double t49804;
  double t52171;
  double t52176;
  double t52184;
  double t52187;
  double t52134;
  double t52150;
  double t52155;
  double t52157;
  double t52383;
  double t52406;
  double t52408;
  double t52415;
  double t52424;
  double t52430;
  double t52434;
  double t52441;
  double t52457;
  double t52468;
  double t52476;
  double t52495;
  double t52267;
  double t52271;
  double t52272;
  double t52273;
  double t52281;
  double t52289;
  double t52292;
  double t52293;
  double t49849;
  double t49861;
  double t49864;
  double t52070;
  double t52075;
  double t52081;
  double t52083;
  double t52047;
  double t52048;
  double t52057;
  double t52066;
  double t49924;
  double t49926;
  double t49932;
  double t50029;
  double t50031;
  double t50052;
  double t50056;
  double t50066;
  double t50068;
  double t52328;
  double t52339;
  double t52343;
  double t52344;
  double t52067;
  double t52088;
  double t52089;
  double t52164;
  double t52189;
  double t52190;
  double t52276;
  double t52295;
  double t52296;
  double t52973;
  double t52978;
  double t52980;
  double t53004;
  double t53006;
  double t53007;
  double t41553;
  double t41554;
  double t41557;
  double t41560;
  double t41563;
  double t41569;
  double t53111;
  double t53114;
  double t53122;
  double t53158;
  double t53163;
  double t53167;
  double t53186;
  double t53187;
  double t53204;
  double t53208;
  double t53223;
  double t53225;
  double t41585;
  double t41586;
  double t41590;
  double t52423;
  double t52514;
  double t53440;
  double t53446;
  double t53452;
  double t53466;
  double t53488;
  double t53489;
  double t52557;
  double t52565;
  double t52641;
  double t52656;
  double t52684;
  double t52700;
  double t52746;
  double t52754;
  double t52786;
  double t52825;
  double t52094;
  double t52105;
  double t52107;
  double t52132;
  double t52193;
  double t52203;
  double t52266;
  double t52298;
  double t52299;
  double t53456;
  double t53491;
  double t54137;
  double t54147;
  double t54168;
  double t54065;
  double t54073;
  double t54087;
  double t53529;
  double t53535;
  double t53618;
  double t53625;
  double t53636;
  double t53653;
  double t53735;
  double t53746;
  double t53783;
  double t53812;
  t4434 = Cos(var1[6]);
  t4435 = -1.*t4434;
  t4649 = 1. + t4435;
  t2964 = Cos(var1[5]);
  t6696 = 9.e-12*t4649;
  t6885 = t6696 + t4435;
  t4864 = -9.e-12*t4649;
  t5186 = 1. + t4864;
  t5307 = 3.e-6*t5186;
  t5396 = -3.e-6*t4649;
  t6371 = t5307 + t5396;
  t6975 = Sin(var1[5]);
  t38 = Sin(var1[3]);
  t8399 = Sin(var1[6]);
  t7222 = Cos(var1[3]);
  t8310 = Cos(var1[4]);
  t7293 = Sin(var1[4]);
  t12310 = Cos(var1[8]);
  t12344 = -1.*t12310;
  t12347 = 1. + t12344;
  t12371 = 3.e-6*t12347;
  t12382 = Sin(var1[8]);
  t12420 = 3.e-6*t12382;
  t12348 = 1.000000000009*t12347;
  t12578 = t12371 + t12420;
  t12606 = 3.e-6*t12578;
  t12651 = -1. + t12348 + t12606;
  t12735 = -9.e-12*t12347;
  t12803 = -3.e-6*t12382;
  t12808 = t12371 + t12803;
  t12814 = 3.e-6*t12808;
  t12830 = -1.*t12382;
  t12841 = t12735 + t12814 + t12830;
  t12854 = -1.8e-11*t12347;
  t12861 = 1. + t12854;
  t12866 = 3.e-6*t12861;
  t12952 = -3.e-6*t12347;
  t12966 = t12866 + t12952 + t12420;
  t12686 = 3.e-6*t8399*t12651;
  t12847 = 3.e-6*t4649*t12841;
  t13027 = t5186*t12966;
  t13036 = t12686 + t12847 + t13027;
  t13200 = -1.*t8399*t12651;
  t13908 = t4434*t12841;
  t13959 = 3.e-6*t4649*t12966;
  t14018 = t13200 + t13908 + t13959;
  t12136 = -1.000000000009*t4649;
  t12159 = 1. + t12136;
  t15028 = -1.000000000009*t12347;
  t18225 = t12952 + t12420;
  t15808 = 9.e-13*var1[8];
  t19604 = t12952 + t12803;
  t19976 = t12866 + t12952 + t12803;
  t15664 = 1. + t12854 + t12814 + t12606;
  t18534 = 3.e-7*var1[8];
  t18624 = 0.1*t12861;
  t19515 = -1.62e-17*t12347;
  t19905 = 0.2*t19604;
  t19962 = 0.1*t18225;
  t19971 = 0.2*t12578;
  t19973 = t18534 + t18624 + t19515 + t19905 + t19962 + t19971;
  t17079 = 1. + t15028;
  t22089 = 9.e-12*t12347;
  t22368 = t22089 + t12830;
  t22069 = 0.1000000000009*t12347;
  t23023 = 0.2*t22368;
  t23099 = -9.e-7*t19604;
  t23142 = 0.1*t12578;
  t23330 = t12735 + t12382;
  t23340 = 0.2*t23330;
  t23472 = t15808 + t22069 + t23023 + t23099 + t23142 + t23340;
  t17697 = 0.2*t17079;
  t18105 = 0.2000000000018*t12347;
  t18123 = t12735 + t12830;
  t18138 = 0.1*t18123;
  t18178 = 0.1*t12808;
  t18228 = -9.e-7*t18225;
  t18528 = t15808 + t17697 + t18105 + t18138 + t18178 + t18228;
  t27754 = 3.e-6*t17079;
  t29626 = t22089 + t12382;
  t29751 = 3.e-6*t29626;
  t30318 = t27754 + t12371 + t12803 + t29751;
  t15749 = -1. + t12348 + t12814;
  t18532 = -1.*t15749*t18528;
  t20006 = -1.*t19973*t19976;
  t20844 = t12735 + t12606 + t12382;
  t23953 = -1.*t20844*t23472;
  t25917 = t18532 + t20006 + t23953;
  t26564 = t15664*t19973;
  t28042 = 3.e-6*t22368;
  t29343 = t27754 + t12371 + t28042 + t12420;
  t29345 = t29343*t23472;
  t30418 = t18528*t30318;
  t31032 = t26564 + t29345 + t30418;
  t15116 = -3.e-6*t12578;
  t32465 = t18528*t12841;
  t32652 = t19973*t12966;
  t32802 = t12651*t23472;
  t32922 = t32465 + t32652 + t32802;
  t32987 = -1.*t15664*t19973;
  t33012 = -1.*t29343*t23472;
  t33014 = -1.*t18528*t30318;
  t33028 = t32987 + t33012 + t33014;
  t33219 = t4434*t15749;
  t33226 = 3.e-6*t4649*t19976;
  t33244 = -1.*t8399*t20844;
  t33253 = t33219 + t33226 + t33244;
  t33313 = 3.e-6*t4649*t15749;
  t33334 = t5186*t19976;
  t33509 = 3.e-6*t8399*t20844;
  t33534 = t33313 + t33334 + t33509;
  t36322 = -1.*t18528*t12841;
  t36332 = -1.*t19973*t12966;
  t36684 = -1.*t12651*t23472;
  t37134 = t36322 + t36332 + t36684;
  t37564 = t15749*t18528;
  t37572 = t19973*t19976;
  t37755 = t20844*t23472;
  t37921 = t37564 + t37572 + t37755;
  t38511 = t5186*t15664;
  t38820 = 3.e-6*t8399*t29343;
  t38846 = 3.e-6*t4649*t30318;
  t38871 = t38511 + t38820 + t38846;
  t38935 = 3.e-6*t4649*t15664;
  t39039 = -1.*t8399*t29343;
  t39122 = t4434*t30318;
  t39150 = t38935 + t39039 + t39122;
  t6482 = t2964*t6371;
  t6976 = t6885*t6975;
  t7144 = t6482 + t6976;
  t7319 = t2964*t6885;
  t7510 = -1.*t6371*t6975;
  t7712 = t7319 + t7510;
  t7719 = -1.*t7293*t7712;
  t8931 = -1.000000000009*t8310*t8399;
  t9558 = t7719 + t8931;
  t11040 = 3.e-6*t2964*t8399;
  t11049 = -1.*t6975*t8399;
  t12125 = t11040 + t11049;
  t12161 = t8310*t12159;
  t12173 = -1.*t2964*t8399;
  t12189 = -3.e-6*t6975*t8399;
  t12198 = t12173 + t12189;
  t12199 = -1.*t7293*t12198;
  t12200 = t12161 + t12199;
  t13165 = t2964*t13036;
  t14025 = t6975*t14018;
  t14030 = t13165 + t14025;
  t14207 = -1.*t6975*t13036;
  t14221 = t2964*t14018;
  t14337 = t14207 + t14221;
  t14506 = -1.*t7293*t14337;
  t14549 = t12159*t12651;
  t14618 = t8399*t12841;
  t14693 = -3.e-6*t8399*t12966;
  t14697 = t14549 + t14618 + t14693;
  t14733 = t8310*t14697;
  t14861 = t14506 + t14733;
  t15214 = 1. + t15028 + t15116;
  t15304 = 0.2*t15214;
  t26199 = -1.*t15664*t25917;
  t31417 = -1.*t19976*t31032;
  t31424 = t30318*t25917;
  t31439 = t15749*t31032;
  t31658 = t31424 + t31439;
  t31678 = -3.e-6*t31658;
  t31811 = t15304 + t26199 + t31417 + t31678;
  t32374 = t22089 + t15116 + t12830;
  t32397 = 0.2*t32374;
  t32984 = -1.*t15664*t32922;
  t33032 = -1.*t12966*t33028;
  t33194 = t30318*t32922;
  t33197 = t12841*t33028;
  t33198 = t33194 + t33197;
  t33202 = -3.e-6*t33198;
  t33206 = t32397 + t32984 + t33032 + t33202;
  t33254 = t6975*t33253;
  t33624 = t2964*t33534;
  t33694 = t33254 + t33624;
  t34141 = t8399*t15749;
  t34155 = -3.e-6*t8399*t19976;
  t34157 = t12159*t20844;
  t34192 = t34141 + t34155 + t34157;
  t34203 = t8310*t34192;
  t34212 = t2964*t33253;
  t34217 = -1.*t6975*t33534;
  t34371 = t34212 + t34217;
  t34380 = -1.*t7293*t34371;
  t34446 = t34203 + t34380;
  t34651 = -3.e-6*t17079;
  t36093 = -3.e-6*t22368;
  t36160 = t34651 + t12952 + t36093 + t12803;
  t36178 = 0.2*t36160;
  t37395 = -1.*t19976*t37134;
  t38036 = -1.*t12966*t37921;
  t38233 = t15749*t37134;
  t38279 = t12841*t37921;
  t38327 = t38233 + t38279;
  t38335 = -3.e-6*t38327;
  t38509 = t36178 + t37395 + t38036 + t38335;
  t38878 = t2964*t38871;
  t39162 = t6975*t39150;
  t39165 = t38878 + t39162;
  t39327 = -3.e-6*t8399*t15664;
  t39334 = t12159*t29343;
  t40365 = t8399*t30318;
  t40380 = t39327 + t39334 + t40365;
  t40394 = t8310*t40380;
  t40449 = -1.*t6975*t38871;
  t40526 = t2964*t39150;
  t40707 = t40449 + t40526;
  t40708 = -1.*t7293*t40707;
  t40775 = t40394 + t40708;
  t41651 = -1.*t8310*t7712;
  t41652 = 1.000000000009*t7293*t8399;
  t41656 = t41651 + t41652;
  t41676 = -1.*t12159*t7293;
  t41681 = -1.*t8310*t12198;
  t41682 = t41676 + t41681;
  t41687 = -1.*t7293*t40380;
  t41688 = -1.*t8310*t40707;
  t41691 = t41687 + t41688;
  t41712 = -1.*t7293*t34192;
  t41714 = -1.*t8310*t34371;
  t41715 = t41712 + t41714;
  t41723 = -1.*t8310*t14337;
  t41726 = -1.*t7293*t14697;
  t41730 = t41723 + t41726;
  t42027 = -3.e-6*t4434;
  t42181 = t5396 + t42027;
  t42216 = t2964*t42181;
  t42221 = t42216 + t6975;
  t42240 = 0.2000003000018*t4649;
  t42440 = 0.2*t4434;
  t42484 = -0.05*t8399;
  t42510 = t42240 + t42440 + t42484;
  t42518 = t2964*t42510;
  t42523 = 0.1*t5186;
  t42526 = -5.4e-18*t4649;
  t42528 = 1.5e-7*t8399;
  t42535 = t42523 + t42526 + t42528;
  t42548 = -1.*t6975*t42535;
  t42610 = t42518 + t42548;
  t42646 = 0.05*t12159;
  t42657 = -3.000018e-7*t8399;
  t42662 = t42646 + t42657;
  t42724 = t8310*t42610;
  t42734 = t7293*t42662;
  t42739 = t42724 + t42734;
  t43035 = t6975*t42510;
  t43188 = t2964*t42535;
  t43197 = t43035 + t43188;
  t42635 = -1.*t7293*t42610;
  t42677 = t8310*t42662;
  t42681 = t42635 + t42677;
  t43833 = t8310*t7712;
  t43864 = -1.000000000009*t7293*t8399;
  t43873 = t43833 + t43864;
  t43719 = -1.*t8310*t42610;
  t43769 = -1.*t7293*t42662;
  t43802 = t43719 + t43769;
  t42856 = -1.*t2964;
  t42897 = t42181*t6975;
  t42952 = t42856 + t42897;
  t44401 = t12159*t7293;
  t44513 = t8310*t12198;
  t44525 = t44401 + t44513;
  t44709 = -3.e-6*t12861;
  t44823 = 0.2000000000018*t4649;
  t44877 = t4434*t18528;
  t44885 = 3.e-6*t4649*t19973;
  t44887 = -1.*t8399*t23472;
  t44888 = t44823 + t44877 + t44885 + t44887;
  t44895 = -6.000000000054e-7*t4649;
  t44897 = 3.e-6*t4649*t18528;
  t44908 = t5186*t19973;
  t44918 = 3.e-6*t8399*t23472;
  t44960 = t44895 + t44897 + t44908 + t44918;
  t45040 = -0.2000000000018*t8399;
  t45112 = t8399*t18528;
  t45131 = -3.e-6*t8399*t19973;
  t45140 = t12159*t23472;
  t45143 = t45040 + t45112 + t45131 + t45140;
  t45183 = t2964*t44888;
  t45185 = -1.*t6975*t44960;
  t45232 = t45183 + t45185;
  t45145 = t7293*t45143;
  t45233 = t8310*t45232;
  t45276 = t45145 + t45233;
  t45278 = t8310*t45143;
  t45283 = -1.*t7293*t45232;
  t45285 = t45278 + t45283;
  t44973 = t8310*t14337;
  t44997 = t7293*t14697;
  t45039 = t44973 + t44997;
  t45293 = -1.*t7293*t45143;
  t45294 = -1.*t8310*t45232;
  t45295 = t45293 + t45294;
  t45289 = t7293*t34192;
  t45290 = t8310*t34371;
  t45292 = t45289 + t45290;
  t44889 = t6975*t44888;
  t44961 = t2964*t44960;
  t44963 = t44889 + t44961;
  t45611 = t7293*t40380;
  t45617 = t8310*t40707;
  t45624 = t45611 + t45617;
  t46682 = -1.*t2964*t6371;
  t46691 = -1.*t6885*t6975;
  t46695 = t46682 + t46691;
  t46740 = -3.e-6*t2964*t8399;
  t46741 = t6975*t8399;
  t46744 = t46740 + t46741;
  t46753 = -1.*t2964*t38871;
  t46754 = -1.*t6975*t39150;
  t46759 = t46753 + t46754;
  t46782 = -1.*t6975*t33253;
  t46793 = -1.*t2964*t33534;
  t46796 = t46782 + t46793;
  t46812 = -1.*t2964*t13036;
  t46814 = -1.*t6975*t14018;
  t46816 = t46812 + t46814;
  t43210 = t42952*t43197;
  t47755 = -1.*t6975*t42510;
  t47774 = -1.*t2964*t42535;
  t47819 = t47755 + t47774;
  t43896 = -1.*t7144*t43197;
  t48018 = -1.*t42181*t6975;
  t48063 = t2964 + t48018;
  t44644 = -1.*t42952*t43197;
  t44660 = t43197*t12125;
  t44712 = -3.e-6*t12841;
  t44719 = t44709 + t12371 + t44712 + t12803;
  t44726 = -3.e-6*t15749;
  t44728 = t44709 + t12371 + t44726 + t12420;
  t44732 = 1.8e-11*t12347;
  t44734 = -3.e-6*t12808;
  t44744 = -3.e-6*t30318;
  t44747 = -1. + t44732 + t44734 + t15116 + t44744;
  t44964 = -1.*t14030*t44963;
  t48270 = -1.*t6975*t44888;
  t48289 = -1.*t2964*t44960;
  t48295 = t48270 + t48289;
  t45326 = t33694*t44963;
  t45484 = t14030*t44963;
  t45949 = -1.*t44963*t39165;
  t46125 = -1.*t33694*t44963;
  t46485 = t44963*t39165;
  t42691 = -1.*t7293*t42221*t42681;
  t42740 = t8310*t42221*t42739;
  t43294 = t42691 + t42740 + t43210;
  t48011 = t42221*t43197;
  t48122 = t42952*t42610;
  t43910 = -1.*t42681*t9558;
  t43921 = -1.*t42739*t43873;
  t43925 = t43896 + t43910 + t43921;
  t47859 = -1.*t7712*t43197;
  t47888 = -1.*t7144*t42610;
  t44551 = t7293*t42221*t42681;
  t44560 = -1.*t8310*t42221*t42739;
  t44648 = t44551 + t44560 + t44644;
  t48640 = Power(t8310,2);
  t48666 = Power(t7293,2);
  t48169 = -1.*t42221*t43197;
  t48171 = -1.*t42952*t42610;
  t44662 = t42739*t44525;
  t44663 = t42681*t12200;
  t44664 = t44660 + t44662 + t44663;
  t48199 = t42610*t12125;
  t48207 = t43197*t12198;
  t48309 = -1.*t14337*t44963;
  t48343 = -1.*t14030*t45232;
  t45277 = -1.*t45039*t45276;
  t45286 = -1.*t14861*t45285;
  t45287 = t44964 + t45277 + t45286;
  t48371 = t34371*t44963;
  t48378 = t33694*t45232;
  t45330 = t45292*t45276;
  t45387 = t34446*t45285;
  t45396 = t45326 + t45330 + t45387;
  t48436 = t14337*t44963;
  t48440 = t14030*t45232;
  t45490 = t45039*t45276;
  t45555 = t14861*t45285;
  t45575 = t45484 + t45490 + t45555;
  t48463 = -1.*t44963*t40707;
  t48493 = -1.*t45232*t39165;
  t45983 = -1.*t45276*t45624;
  t45984 = -1.*t45285*t40775;
  t45985 = t45949 + t45983 + t45984;
  t48511 = -1.*t34371*t44963;
  t48517 = -1.*t33694*t45232;
  t46129 = -1.*t45292*t45276;
  t46130 = -1.*t34446*t45285;
  t46131 = t46125 + t46129 + t46130;
  t48573 = t44963*t40707;
  t48576 = t45232*t39165;
  t46487 = t45276*t45624;
  t46489 = t45285*t40775;
  t46493 = t46485 + t46487 + t46489;
  t49430 = -0.05*t4434;
  t49433 = 3.000018e-7*t8399;
  t49445 = t49430 + t49433;
  t49282 = -1.000000000009*t8399*t12651;
  t49284 = -3.e-6*t4434*t12966;
  t49289 = t49282 + t13908 + t49284;
  t49150 = -3.e-6*t4434*t19976;
  t49162 = -1.000000000009*t8399*t20844;
  t49166 = t33219 + t49150 + t49162;
  t49095 = -3.e-6*t4434*t15664;
  t49097 = -1.000000000009*t8399*t29343;
  t49108 = t49095 + t49097 + t39122;
  t48240 = -1.*t14697*t45143;
  t49226 = -1.*t4434*t12651;
  t49234 = -1.*t8399*t12841;
  t49249 = 3.e-6*t8399*t12966;
  t49253 = t49226 + t49234 + t49249;
  t49209 = 3.e-6*t4434*t12651;
  t49210 = 3.e-6*t8399*t12841;
  t49213 = -9.e-12*t8399*t12966;
  t49217 = t49209 + t49210 + t49213;
  t49553 = 0.2000000000018*t8399;
  t49565 = -1.*t8399*t18528;
  t49577 = 3.e-6*t8399*t19973;
  t49584 = -1.*t4434*t23472;
  t49610 = t49553 + t49565 + t49577 + t49584;
  t49622 = -6.000000000054e-7*t8399;
  t49624 = 3.e-6*t8399*t18528;
  t49626 = -9.e-12*t8399*t19973;
  t49633 = 3.e-6*t4434*t23472;
  t49635 = t49622 + t49624 + t49626 + t49633;
  t49647 = -0.2000000000018*t4434;
  t49662 = -3.e-6*t4434*t19973;
  t49664 = -1.000000000009*t8399*t23472;
  t49667 = t49647 + t44877 + t49662 + t49664;
  t49170 = -1.*t8399*t15749;
  t49173 = 3.e-6*t8399*t19976;
  t49174 = -1.*t4434*t20844;
  t49175 = t49170 + t49173 + t49174;
  t49178 = 3.e-6*t8399*t15749;
  t49181 = -9.e-12*t8399*t19976;
  t49182 = 3.e-6*t4434*t20844;
  t49183 = t49178 + t49181 + t49182;
  t48404 = t34192*t45143;
  t48428 = t14697*t45143;
  t48447 = -1.*t45143*t40380;
  t49114 = 3.e-6*t8399*t15664;
  t49116 = -1.*t4434*t29343;
  t49117 = -1.*t8399*t30318;
  t49118 = t49114 + t49116 + t49117;
  t49121 = -9.e-12*t8399*t15664;
  t49124 = 3.e-6*t4434*t29343;
  t49126 = 3.e-6*t8399*t30318;
  t49127 = t49121 + t49124 + t49126;
  t48541 = -1.*t34192*t45143;
  t48552 = t45143*t40380;
  t49013 = -1.*t2964*t4434;
  t49015 = -3.e-6*t4434*t6975;
  t49017 = t49013 + t49015;
  t49063 = 1.000000000009*t2964*t8399;
  t49070 = 3.000000000027e-6*t6975*t8399;
  t49073 = t49063 + t49070;
  t49221 = -1.*t6975*t49217;
  t49257 = t2964*t49253;
  t49258 = t49221 + t49257;
  t49177 = t2964*t49175;
  t49187 = -1.*t6975*t49183;
  t49191 = t49177 + t49187;
  t49119 = t2964*t49118;
  t49131 = -1.*t6975*t49127;
  t49141 = t49119 + t49131;
  t50154 = 3.e-6*t2964*t4434;
  t50155 = -1.*t4434*t6975;
  t50160 = t50154 + t50155;
  t50169 = -1.*t7293*t49017;
  t50170 = t50169 + t8931;
  t50186 = -3.000000000027e-6*t2964*t8399;
  t50187 = 1.000000000009*t6975*t8399;
  t50202 = t50186 + t50187;
  t50209 = -1.000000000009*t8310*t4434;
  t50210 = -1.*t7293*t49073;
  t50214 = t50209 + t50210;
  t50222 = -1.*t7293*t49258;
  t50223 = t8310*t49289;
  t50240 = t50222 + t50223;
  t50243 = t2964*t49217;
  t50250 = t6975*t49253;
  t50253 = t50243 + t50250;
  t50270 = t6975*t49175;
  t50279 = t2964*t49183;
  t50288 = t50270 + t50279;
  t50292 = t8310*t49166;
  t50295 = -1.*t7293*t49191;
  t50296 = t50292 + t50295;
  t50319 = t6975*t49118;
  t50320 = t2964*t49127;
  t50322 = t50319 + t50320;
  t50331 = t8310*t49108;
  t50332 = -1.*t7293*t49141;
  t50334 = t50331 + t50332;
  t48182 = -1.*t42221*t42610;
  t48183 = t44644 + t48182;
  t49425 = 1.5e-7*t4434;
  t49448 = -9.000054e-13*t8399;
  t50504 = t49425 + t49448;
  t50530 = t2964*t50504;
  t50535 = t6975*t49445;
  t50536 = t50530 + t50535;
  t50506 = -1.*t6975*t50504;
  t50518 = t2964*t49445;
  t50522 = t50506 + t50518;
  t47629 = t42221*t42610;
  t47713 = t43210 + t47629;
  t50577 = -3.000018e-7*t4434;
  t50584 = -0.05000000000045*t8399;
  t50593 = t50577 + t50584;
  t48246 = -1.*t14337*t45232;
  t48248 = t48240 + t44964 + t48246;
  t49551 = -1.*t49289*t45143;
  t49673 = -1.*t14697*t49667;
  t49752 = t49166*t45143;
  t49775 = t34192*t49667;
  t50775 = t6975*t49610;
  t50776 = t2964*t49635;
  t50779 = t50775 + t50776;
  t50787 = t2964*t49610;
  t50791 = -1.*t6975*t49635;
  t50797 = t50787 + t50791;
  t48408 = t34371*t45232;
  t48411 = t48404 + t45326 + t48408;
  t48429 = t14337*t45232;
  t48430 = t48428 + t45484 + t48429;
  t49875 = t49289*t45143;
  t49910 = t14697*t49667;
  t48450 = -1.*t45232*t40707;
  t48451 = t48447 + t48450 + t45949;
  t49947 = -1.*t45143*t49108;
  t49972 = -1.*t49667*t40380;
  t49994 = -1.*t49166*t45143;
  t50012 = -1.*t34192*t49667;
  t48543 = -1.*t34371*t45232;
  t48549 = t48541 + t46125 + t48543;
  t48555 = t45232*t40707;
  t48557 = t48552 + t48555 + t46485;
  t50085 = t45143*t49108;
  t50105 = t49667*t40380;
  t49030 = t8310*t49017;
  t49045 = t49030 + t43864;
  t50537 = -1.*t42952*t50536;
  t50547 = t50160*t43197;
  t50619 = t50536*t12125;
  t51052 = t8310*t50522;
  t51056 = t7293*t50593;
  t51058 = t51052 + t51056;
  t51037 = -1.*t7293*t50522;
  t51046 = t8310*t50593;
  t51047 = t51037 + t51046;
  t50663 = t42952*t50536;
  t49051 = -1.000000000009*t4434*t7293;
  t49084 = t8310*t49073;
  t49088 = t49051 + t49084;
  t50729 = -1.*t7144*t50536;
  t50738 = -1.*t43197*t50202;
  t49281 = t8310*t49258;
  t49297 = t7293*t49289;
  t49318 = t49281 + t49297;
  t49167 = t7293*t49166;
  t49193 = t8310*t49191;
  t49207 = t49167 + t49193;
  t49113 = t7293*t49108;
  t49142 = t8310*t49141;
  t49144 = t49113 + t49142;
  t50786 = -1.*t14030*t50779;
  t50802 = -1.*t50253*t44963;
  t50833 = t33694*t50779;
  t50846 = t50288*t44963;
  t51138 = t7293*t49667;
  t51143 = t8310*t50797;
  t51153 = t51138 + t51143;
  t51162 = t8310*t49667;
  t51166 = -1.*t7293*t50797;
  t51167 = t51162 + t51166;
  t50892 = t14030*t50779;
  t50898 = t50253*t44963;
  t50923 = -1.*t50779*t39165;
  t50931 = -1.*t44963*t50322;
  t50962 = -1.*t33694*t50779;
  t50969 = -1.*t50288*t44963;
  t51002 = t50779*t39165;
  t51006 = t44963*t50322;
  t51378 = -3.e-6*t12310;
  t51385 = 9.e-12*t12382;
  t51434 = 3.e-6*t12310;
  t51428 = t51378 + t12420;
  t51476 = -3.000000000054e-6*t12382;
  t51478 = t51378 + t51476;
  t51487 = t51434 + t12803;
  t51439 = t51434 + t12420;
  t51528 = t51378 + t12803;
  t51494 = -9.e-12*t12382;
  t51462 = t12344 + t51385;
  t51493 = -9.e-7*t51487;
  t51499 = t12344 + t51494;
  t51503 = 0.1*t51499;
  t51509 = 0.1*t51428;
  t51512 = 9.e-13 + t51493 + t51503 + t51509;
  t51635 = t51434 + t51476;
  t51584 = 3.e-6*t51428;
  t51531 = 0.2*t51528;
  t51535 = 0.1*t51487;
  t51547 = 0.2*t51439;
  t51548 = -1.8000162e-12*t12382;
  t51550 = 3.e-7 + t51531 + t51535 + t51547 + t51548;
  t51555 = -9.e-7*t51528;
  t51558 = t12310 + t51494;
  t51564 = 0.2*t51558;
  t51565 = 0.2*t51462;
  t51568 = 0.1*t51439;
  t51569 = 0.1000000000009*t12382;
  t51571 = 9.e-13 + t51555 + t51564 + t51565 + t51568 + t51569;
  t51612 = 3.e-6*t51439;
  t51587 = 1.000000000009*t12382;
  t51600 = t51584 + t51587;
  t51513 = t15749*t51512;
  t51515 = t19973*t51478;
  t51553 = t19976*t51550;
  t51575 = t51571*t20844;
  t51611 = t18528*t51600;
  t51627 = t12310 + t51612 + t51494;
  t51628 = t51627*t23472;
  t51629 = t51513 + t51515 + t51553 + t51575 + t51611 + t51628;
  t51652 = t12344 + t51584 + t51494;
  t51646 = -1.*t51512*t12841;
  t51650 = -1.*t19973*t51635;
  t51663 = -1.*t18528*t51652;
  t51665 = -1.*t51550*t12966;
  t51666 = -1.*t12651*t51571;
  t51670 = t51612 + t51587;
  t51672 = -1.*t51670*t23472;
  t51673 = t51646 + t51650 + t51663 + t51665 + t51666 + t51672;
  t51444 = -3.e-6*t51439;
  t51732 = -1.8e-11*t12382;
  t51736 = t51584 + t51612 + t51732;
  t51386 = t12310 + t51385;
  t51387 = 3.e-6*t51386;
  t51399 = -2.7e-17*t12382;
  t51416 = t51378 + t51387 + t51399;
  t51740 = t51512*t12841;
  t51749 = t19973*t51635;
  t51752 = t18528*t51652;
  t51754 = t51550*t12966;
  t51764 = t12651*t51571;
  t51768 = t51670*t23472;
  t51770 = t51740 + t51749 + t51752 + t51754 + t51764 + t51768;
  t51784 = -1.*t19973*t51736;
  t51793 = -1.*t15664*t51550;
  t51796 = -1.*t18528*t51416;
  t51801 = -1.*t29343*t51571;
  t51803 = 3.e-6*t51462;
  t51806 = t51434 + t51803 + t51399;
  t51809 = -1.*t51806*t23472;
  t51817 = -1.*t51512*t30318;
  t51818 = t51784 + t51793 + t51796 + t51801 + t51809 + t51817;
  t51900 = -1.*t15749*t51512;
  t51902 = -1.*t19973*t51478;
  t51904 = -1.*t19976*t51550;
  t51909 = -1.*t51571*t20844;
  t51910 = -1.*t18528*t51600;
  t51922 = -1.*t51627*t23472;
  t51926 = t51900 + t51902 + t51904 + t51909 + t51910 + t51922;
  t51947 = t19973*t51736;
  t51955 = t15664*t51550;
  t51958 = t18528*t51416;
  t51970 = t29343*t51571;
  t51981 = t51806*t23472;
  t51992 = t51512*t30318;
  t51996 = t51947 + t51955 + t51958 + t51970 + t51981 + t51992;
  t51467 = -3.e-6*t51462;
  t51469 = 2.7e-17*t12382;
  t51473 = t51378 + t51467 + t51469;
  t51475 = 0.2*t51473;
  t51479 = -1.*t51478*t37134;
  t51630 = -1.*t12966*t51629;
  t51638 = -1.*t51635*t37921;
  t51677 = -1.*t19976*t51673;
  t51689 = t51600*t37134;
  t51696 = t12841*t51629;
  t51697 = t51652*t37921;
  t51700 = t15749*t51673;
  t51707 = t51689 + t51696 + t51697 + t51700;
  t51714 = -3.e-6*t51707;
  t51719 = t51475 + t51479 + t51630 + t51638 + t51677 + t51714;
  t51726 = t12344 + t51444 + t51385;
  t51727 = 0.2*t51726;
  t51738 = -1.*t51736*t32922;
  t51776 = -1.*t15664*t51770;
  t51779 = -1.*t51635*t33028;
  t51820 = -1.*t12966*t51818;
  t51823 = t51416*t32922;
  t51825 = t30318*t51770;
  t51828 = t51652*t33028;
  t51829 = t12841*t51818;
  t51832 = t51823 + t51825 + t51828 + t51829;
  t51838 = -3.e-6*t51832;
  t51841 = t51727 + t51738 + t51776 + t51779 + t51820 + t51838;
  t51846 = -1.000000000009*t12382;
  t51860 = t51444 + t51846;
  t51880 = 0.2*t51860;
  t51937 = -1.*t15664*t51926;
  t51939 = -1.*t51736*t25917;
  t51943 = -1.*t51478*t31032;
  t51998 = -1.*t19976*t51996;
  t52006 = t30318*t51926;
  t52012 = t51416*t25917;
  t52016 = t51600*t31032;
  t52019 = t15749*t51996;
  t52021 = t52006 + t52012 + t52016 + t52019;
  t52022 = -3.e-6*t52021;
  t52029 = t51880 + t51937 + t51939 + t51943 + t51998 + t52022;
  t52336 = 3.000000000054e-6*t12382;
  t52117 = -3.e-6*t8399*t51478;
  t52121 = t12159*t51627;
  t52127 = t8399*t51600;
  t52130 = t52117 + t52121 + t52127;
  t52211 = -3.e-6*t8399*t51635;
  t52217 = t8399*t51652;
  t52238 = t12159*t51670;
  t52257 = t52211 + t52217 + t52238;
  t52096 = -3.e-6*t8399*t51736;
  t52098 = t12159*t51806;
  t52100 = t8399*t51416;
  t52101 = t52096 + t52098 + t52100;
  t51422 = -3.e-6*t51416;
  t51431 = -3.e-6*t51428;
  t51448 = 1.8e-11*t12382;
  t51458 = t51422 + t51431 + t51444 + t51448;
  t49508 = -1.*t14018*t44888;
  t49516 = -1.*t13036*t44960;
  t49532 = t48240 + t49508 + t49516;
  t49794 = t33253*t44888;
  t49799 = t33534*t44960;
  t49804 = t48404 + t49794 + t49799;
  t52171 = 3.e-6*t4649*t51478;
  t52176 = -1.*t8399*t51627;
  t52184 = t4434*t51600;
  t52187 = t52171 + t52176 + t52184;
  t52134 = t5186*t51478;
  t52150 = 3.e-6*t8399*t51627;
  t52155 = 3.e-6*t4649*t51600;
  t52157 = t52134 + t52150 + t52155;
  t52383 = t8399*t51512;
  t52406 = -3.e-6*t8399*t51550;
  t52408 = t12159*t51571;
  t52415 = t52383 + t52406 + t52408;
  t52424 = t4434*t51512;
  t52430 = 3.e-6*t4649*t51550;
  t52434 = -1.*t8399*t51571;
  t52441 = t52424 + t52430 + t52434;
  t52457 = 3.e-6*t4649*t51512;
  t52468 = t5186*t51550;
  t52476 = 3.e-6*t8399*t51571;
  t52495 = t52457 + t52468 + t52476;
  t52267 = 3.e-6*t4649*t51635;
  t52271 = t4434*t51652;
  t52272 = -1.*t8399*t51670;
  t52273 = t52267 + t52271 + t52272;
  t52281 = t5186*t51635;
  t52289 = 3.e-6*t4649*t51652;
  t52292 = 3.e-6*t8399*t51670;
  t52293 = t52281 + t52289 + t52292;
  t49849 = t14018*t44888;
  t49861 = t13036*t44960;
  t49864 = t48428 + t49849 + t49861;
  t52070 = 3.e-6*t4649*t51736;
  t52075 = -1.*t8399*t51806;
  t52081 = t4434*t51416;
  t52083 = t52070 + t52075 + t52081;
  t52047 = t5186*t51736;
  t52048 = 3.e-6*t8399*t51806;
  t52057 = 3.e-6*t4649*t51416;
  t52066 = t52047 + t52048 + t52057;
  t49924 = -1.*t44960*t38871;
  t49926 = -1.*t44888*t39150;
  t49932 = t49924 + t49926 + t48447;
  t50029 = -1.*t33253*t44888;
  t50031 = -1.*t33534*t44960;
  t50052 = t48541 + t50029 + t50031;
  t50056 = t44960*t38871;
  t50066 = t44888*t39150;
  t50068 = t50056 + t50066 + t48552;
  t52328 = -3.e-6*t51652;
  t52339 = t51378 + t52328 + t52336;
  t52343 = -3.e-6*t51600;
  t52344 = t51434 + t52336 + t52343;
  t52067 = -1.*t6975*t52066;
  t52088 = t2964*t52083;
  t52089 = t52067 + t52088;
  t52164 = -1.*t6975*t52157;
  t52189 = t2964*t52187;
  t52190 = t52164 + t52189;
  t52276 = t2964*t52273;
  t52295 = -1.*t6975*t52293;
  t52296 = t52276 + t52295;
  t52973 = t2964*t52066;
  t52978 = t6975*t52083;
  t52980 = t52973 + t52978;
  t53004 = -1.*t7293*t52089;
  t53006 = t8310*t52101;
  t53007 = t53004 + t53006;
  t41553 = t7222*t14030;
  t41554 = -1.*t38*t14861;
  t41557 = t41553 + t41554;
  t41560 = t7222*t33694;
  t41563 = -1.*t38*t34446;
  t41569 = t41560 + t41563;
  t53111 = t2964*t52157;
  t53114 = t6975*t52187;
  t53122 = t53111 + t53114;
  t53158 = t8310*t52130;
  t53163 = -1.*t7293*t52190;
  t53167 = t53158 + t53163;
  t53186 = t6975*t52273;
  t53187 = t2964*t52293;
  t53204 = t53186 + t53187;
  t53208 = t8310*t52257;
  t53223 = -1.*t7293*t52296;
  t53225 = t53208 + t53223;
  t41585 = t7222*t39165;
  t41586 = -1.*t38*t40775;
  t41590 = t41585 + t41586;
  t52423 = t52415*t34192;
  t52514 = t52130*t45143;
  t53440 = t6975*t52441;
  t53446 = t2964*t52495;
  t53452 = t53440 + t53446;
  t53466 = t2964*t52441;
  t53488 = -1.*t6975*t52495;
  t53489 = t53466 + t53488;
  t52557 = -1.*t14697*t52415;
  t52565 = -1.*t52257*t45143;
  t52641 = t14697*t52415;
  t52656 = t52257*t45143;
  t52684 = -1.*t52101*t45143;
  t52700 = -1.*t52415*t40380;
  t52746 = -1.*t52415*t34192;
  t52754 = -1.*t52130*t45143;
  t52786 = t52101*t45143;
  t52825 = t52415*t40380;
  t52094 = t8310*t52089;
  t52105 = t7293*t52101;
  t52107 = t52094 + t52105;
  t52132 = t7293*t52130;
  t52193 = t8310*t52190;
  t52203 = t52132 + t52193;
  t52266 = t7293*t52257;
  t52298 = t8310*t52296;
  t52299 = t52266 + t52298;
  t53456 = t53452*t33694;
  t53491 = t53122*t44963;
  t54137 = -1.*t7293*t53489;
  t54147 = t8310*t52415;
  t54168 = t54137 + t54147;
  t54065 = t8310*t53489;
  t54073 = t7293*t52415;
  t54087 = t54065 + t54073;
  t53529 = -1.*t14030*t53452;
  t53535 = -1.*t53204*t44963;
  t53618 = t14030*t53452;
  t53625 = t53204*t44963;
  t53636 = -1.*t52980*t44963;
  t53653 = -1.*t53452*t39165;
  t53735 = -1.*t53452*t33694;
  t53746 = -1.*t53122*t44963;
  t53783 = t52980*t44963;
  t53812 = t53452*t39165;
  p_output1[0]=0;
  p_output1[1]=0;
  p_output1[2]=0;
  p_output1[3]=(-0.5*(7.7999532000702e-9*(-1.*t12125*t38 - 1.*t12200*t7222) - 0.05186*t31811*(-1.*t14030*t38 - 1.*t14861*t7222) - 0.05186*t33206*(-1.*t33694*t38 - 1.*t34446*t7222) - 0.05186*t38509*(-1.*t38*t39165 - 1.*t40775*t7222) - 0.0013000000000117*(-1.*t38*t7144 - 1.*t7222*t9558))*var2[1] - 0.5*(-0.05186*t31811*t41557 - 0.05186*t33206*t41569 - 0.05186*t38509*t41590 + 7.7999532000702e-9*(-1.*t12200*t38 + t12125*t7222) - 0.0013000000000117*(t7144*t7222 - 1.*t38*t9558))*var2[2])*var2[6];
  p_output1[4]=(-0.5*(7.7999532000702e-9*t12200 - 0.05186*t14861*t31811 - 0.05186*t33206*t34446 - 0.05186*t38509*t40775 - 0.0013000000000117*t9558)*var2[0] - 0.5*(0.0013000000000117*t38*t41656 - 7.7999532000702e-9*t38*t41682 + 0.05186*t38*t38509*t41691 + 0.05186*t33206*t38*t41715 + 0.05186*t31811*t38*t41730)*var2[1] - 0.5*(-0.0013000000000117*t41656*t7222 + 7.7999532000702e-9*t41682*t7222 - 0.05186*t38509*t41691*t7222 - 0.05186*t33206*t41715*t7222 - 0.05186*t31811*t41730*t7222)*var2[2] - 0.5*(-0.000245*t14861*t44719 - 2.e-6*t34446*t44728 - 0.000245*t40775*t44747 - 0.05186*t38509*(t34446*t45287 + t45292*(-1.*t14861*t45276 - 1.*t41730*t45285 - 1.*t45039*t45285 - 1.*t14861*t45295) + t45039*(t34446*t45276 + t41715*t45285 + t45285*t45292 + t34446*t45295) + t14861*t45396) - 0.05186*t33206*(t40775*t45575 + (t14861*t45276 + t41730*t45285 + t45039*t45285 + t14861*t45295)*t45624 + t45039*(-1.*t40775*t45276 - 1.*t41691*t45285 - 1.*t40775*t45295 - 1.*t45285*t45624) + t14861*t45985) - 0.05186*t31811*((-1.*t34446*t45276 - 1.*t41715*t45285 - 1.*t45285*t45292 - 1.*t34446*t45295)*t45624 + t45292*(t40775*t45276 + t41691*t45285 + t40775*t45295 + t45285*t45624) + t40775*t46131 + t34446*t46493) + 0.000046000000000414*t42221*t7293 - 0.0013000000000117*(t12200*t44648 - 1.*t42221*t44664*t7293 + t44525*(t42221*t42739*t7293 + t42221*t43802*t7293) + t42221*(t41682*t42681 + t12200*t42739 + t12200*t43802 + t42681*t44525)*t8310) + 7.7999532000702e-9*(-1.*t42221*t43925*t7293 + t43873*(-1.*t42221*t42739*t7293 - 1.*t42221*t43802*t7293) + t43294*t9558 + t42221*t8310*(-1.*t41656*t42681 - 1.*t42681*t43873 - 1.*t42739*t9558 - 1.*t43802*t9558)))*var2[3])*var2[6];
  p_output1[5]=(-0.5*(-0.0013000000000117*t46695*t8310 + 7.7999532000702e-9*t46744*t8310 - 0.05186*t38509*t46759*t8310 - 0.05186*t33206*t46796*t8310 - 0.05186*t31811*t46816*t8310)*var2[0] - 0.5*(7.7999532000702e-9*(t12198*t7222 + t38*t46744*t7293) - 0.05186*t38509*(t40707*t7222 + t38*t46759*t7293) - 0.05186*t33206*(t34371*t7222 + t38*t46796*t7293) - 0.05186*t31811*(t14337*t7222 + t38*t46816*t7293) - 0.0013000000000117*(t38*t46695*t7293 + t7222*t7712))*var2[1] - 0.5*(7.7999532000702e-9*(t12198*t38 - 1.*t46744*t7222*t7293) - 0.05186*t38509*(t38*t40707 - 1.*t46759*t7222*t7293) - 0.05186*t33206*(t34371*t38 - 1.*t46796*t7222*t7293) - 0.05186*t31811*(t14337*t38 - 1.*t46816*t7222*t7293) - 0.0013000000000117*(-1.*t46695*t7222*t7293 + t38*t7712))*var2[2] - 0.5*(-0.000245*t44747*t46759*t8310 - 2.e-6*t44728*t46796*t8310 - 0.000245*t44719*t46816*t8310 - 0.000046000000000414*t48063*t8310 - 0.0013000000000117*(t44648*t46744*t8310 + t44664*t48063*t8310 + t42221*t8310*(t48199 + t48207 - 1.*t42681*t46744*t7293 - 1.*t12200*t47819*t7293 + t42739*t46744*t8310 + t44525*t47819*t8310) + t44525*(t48169 + t48171 - 1.*t42221*t47819*t48640 - 1.*t42221*t47819*t48666 + t42681*t48063*t7293 - 1.*t42739*t48063*t8310)) - 0.05186*t38509*(t45287*t46796*t8310 + t45396*t46816*t8310 + t45292*(t48309 + t48343 + t45285*t46816*t7293 + t14861*t48295*t7293 - 1.*t45276*t46816*t8310 - 1.*t45039*t48295*t8310) + t45039*(t48371 + t48378 - 1.*t45285*t46796*t7293 - 1.*t34446*t48295*t7293 + t45276*t46796*t8310 + t45292*t48295*t8310)) - 0.05186*t33206*(t45575*t46759*t8310 + t45985*t46816*t8310 + t45624*(t48436 + t48440 - 1.*t45285*t46816*t7293 - 1.*t14861*t48295*t7293 + t45276*t46816*t8310 + t45039*t48295*t8310) + t45039*(t48463 + t48493 + t45285*t46759*t7293 + t40775*t48295*t7293 - 1.*t45276*t46759*t8310 - 1.*t45624*t48295*t8310)) - 0.05186*t31811*(t46131*t46759*t8310 + t46493*t46796*t8310 + t45624*(t48511 + t48517 + t45285*t46796*t7293 + t34446*t48295*t7293 - 1.*t45276*t46796*t8310 - 1.*t45292*t48295*t8310) + t45292*(t48573 + t48576 - 1.*t45285*t46759*t7293 - 1.*t40775*t48295*t7293 + t45276*t46759*t8310 + t45624*t48295*t8310)) + 7.7999532000702e-9*(t43294*t46695*t8310 + t43925*t48063*t8310 + t43873*(t48011 + t48122 + t42221*t47819*t48640 + t42221*t47819*t48666 - 1.*t42681*t48063*t7293 + t42739*t48063*t8310) + t42221*t8310*(t47859 + t47888 + t42681*t46695*t7293 - 1.*t42739*t46695*t8310 - 1.*t43873*t47819*t8310 + t47819*t7293*t9558)))*var2[3] - 0.5*(-0.000046000000000414*t42221 - 0.000245*t14337*t44719 - 2.e-6*t34371*t44728 - 0.000245*t40707*t44747 - 0.0013000000000117*(t42221*(t12198*t42610 + t12159*t42662 + t44660) + t12125*(-1.*t42221*t47819 - 1.*t42610*t48063 + t48169 + t48171) + t12198*t48183 + t42952*(t42610*t46744 + t12198*t47819 + t48199 + t48207)) - 0.05186*t38509*(t34371*t48248 + t33694*(-1.*t45232*t46816 - 1.*t14337*t48295 + t48309 + t48343) + t14030*(t45232*t46796 + t34371*t48295 + t48371 + t48378) + t14337*t48411) - 0.05186*t33206*(t40707*t48430 + t39165*(t45232*t46816 + t14337*t48295 + t48436 + t48440) + t14337*t48451 + t14030*(-1.*t45232*t46759 - 1.*t40707*t48295 + t48463 + t48493)) - 0.05186*t31811*(t39165*(-1.*t45232*t46796 - 1.*t34371*t48295 + t48511 + t48517) + t40707*t48549 + t34371*t48557 + t33694*(t45232*t46759 + t40707*t48295 + t48573 + t48576)) + 7.7999532000702e-9*((t42221*t47819 + t48011 + t42610*t48063 + t48122)*t7144 + t47713*t7712 + t42952*(-1.*t42610*t46695 + t47859 + t47888 - 1.*t47819*t7712) + t42221*(t43896 - 1.*t42610*t7712 + 1.000000000009*t42662*t8399)))*var2[4])*var2[6];
  p_output1[6]=(-0.5*(7.7999532000702e-9*t49045 - 0.0013000000000117*t49088 - 0.05186*t38509*t49144 - 0.05186*t33206*t49207 - 0.05186*t31811*t49318)*var2[0] - 0.5*(7.7999532000702e-9*(-1.*t38*t50170 + t50160*t7222) - 0.0013000000000117*(-1.*t38*t50214 + t50202*t7222) - 0.05186*t31811*(-1.*t38*t50240 + t50253*t7222) - 0.05186*t33206*(-1.*t38*t50296 + t50288*t7222) - 0.05186*t38509*(-1.*t38*t50334 + t50322*t7222))*var2[1] - 0.5*(7.7999532000702e-9*(t38*t50160 + t50170*t7222) - 0.0013000000000117*(t38*t50202 + t50214*t7222) - 0.05186*t31811*(t38*t50253 + t50240*t7222) - 0.05186*t33206*(t38*t50288 + t50296*t7222) - 0.05186*t38509*(t38*t50322 + t50334*t7222))*var2[2] - 0.5*(-0.000245*t44747*t49144 - 2.e-6*t44728*t49207 - 0.000245*t44719*t49318 - 0.05186*t38509*(t45287*t49207 + t45396*t49318 + t45292*(-1.*t45276*t49318 - 1.*t45285*t50240 + t50786 + t50802 - 1.*t45039*t51153 - 1.*t14861*t51167) + t45039*(t45276*t49207 + t45285*t50296 + t50833 + t50846 + t45292*t51153 + t34446*t51167)) - 0.05186*t33206*(t45575*t49144 + t45985*t49318 + t45624*(t45276*t49318 + t45285*t50240 + t50892 + t50898 + t45039*t51153 + t14861*t51167) + t45039*(-1.*t45276*t49144 - 1.*t45285*t50334 + t50923 + t50931 - 1.*t45624*t51153 - 1.*t40775*t51167)) - 0.05186*t31811*(t46131*t49144 + t46493*t49207 + t45624*(-1.*t45276*t49207 - 1.*t45285*t50296 + t50962 + t50969 - 1.*t45292*t51153 - 1.*t34446*t51167) + t45292*(t45276*t49144 + t45285*t50334 + t51002 + t51006 + t45624*t51153 + t40775*t51167)) - 0.0013000000000117*(t44648*t49045 + t42221*(t42739*t49045 + t42681*t50170 + t50547 + t50619 + t12200*t51047 + t44525*t51058)*t8310 + t44525*(t50537 + t42221*t51047*t7293 - 1.*t42221*t51058*t8310)) + 7.7999532000702e-9*(t43294*t49088 + t43873*(t50663 - 1.*t42221*t51047*t7293 + t42221*t51058*t8310) + t42221*t8310*(-1.*t42739*t49088 - 1.*t42681*t50214 + t50729 + t50738 - 1.*t43873*t51058 - 1.*t51047*t9558)))*var2[3] - 0.5*(-0.000245*t44719*t50253 - 2.e-6*t44728*t50288 - 0.000245*t44747*t50322 - 0.05186*t38509*(t48411*t50253 + t48248*t50288 + t33694*(-1.*t45232*t49258 + t49551 + t49673 + t50786 - 1.*t14337*t50797 + t50802) + t14030*(t45232*t49191 + t49752 + t49775 + t34371*t50797 + t50833 + t50846)) - 0.05186*t33206*(t48451*t50253 + t48430*t50322 + t39165*(t45232*t49258 + t49875 + t49910 + t14337*t50797 + t50892 + t50898) + t14030*(-1.*t45232*t49141 + t49947 + t49972 - 1.*t40707*t50797 + t50923 + t50931)) - 0.05186*t31811*(t48557*t50288 + t48549*t50322 + t39165*(-1.*t45232*t49191 + t49994 + t50012 - 1.*t34371*t50797 + t50962 + t50969) + t33694*(t45232*t49141 + t50085 + t50105 + t40707*t50797 + t51002 + t51006)) - 0.0013000000000117*(t48183*t50160 + t12125*(-1.*t42221*t50522 + t50537) + t42952*(t42610*t49017 + t12198*t50522 + t50547 + t12159*t50593 + t50619 - 1.000000000009*t42662*t8399)) + 7.7999532000702e-9*(t47713*t50202 + (t42221*t50522 + t50663)*t7144 + t42952*(1.000000000009*t42662*t4434 - 1.*t42610*t49073 + t50729 + t50738 - 1.*t50522*t7712 + 1.000000000009*t50593*t8399)))*var2[4] - 0.5*(-0.000245*t44747*t49108 - 2.e-6*t44728*t49166 - 0.000245*t44719*t49289 - 0.0013000000000117*t12159*(t49425 - 1.*t42181*t49445 + t49448) - 0.05186*t38509*(t49166*t49532 + t34192*(-1.*t44960*t49217 - 1.*t44888*t49253 + t49551 - 1.*t14018*t49610 - 1.*t13036*t49635 + t49673) + t14697*(t44888*t49175 + t44960*t49183 + t33253*t49610 + t33534*t49635 + t49752 + t49775) + t49289*t49804) - 0.05186*t33206*(t49108*t49864 + t40380*(t44960*t49217 + t44888*t49253 + t14018*t49610 + t13036*t49635 + t49875 + t49910) + t49289*t49932 + t14697*(-1.*t44888*t49118 - 1.*t44960*t49127 - 1.*t39150*t49610 - 1.*t38871*t49635 + t49947 + t49972)) - 0.05186*t31811*(t40380*(-1.*t44888*t49175 - 1.*t44960*t49183 - 1.*t33253*t49610 - 1.*t33534*t49635 + t49994 + t50012) + t49108*t50052 + t49166*t50068 + t34192*(t44888*t49118 + t44960*t49127 + t39150*t49610 + t38871*t49635 + t50085 + t50105)) - 7.7999532001404e-9*t4434*(t42181*t42510 + 5.4e-18*t4649 + 0.1*(-1. + t6696) - 1.5e-7*t8399) + 0.0013000000000234*(-1.*t42181*t42510 + t42523 + t42526 + t42528)*t8399 - 7.7999532001404e-9*(-1.5e-7*t4434 + t42181*t49445 + 9.000054e-13*t8399)*t8399)*var2[5])*var2[6];
  p_output1[7]=0;
  p_output1[8]=var2[6]*(-0.5*(-0.05186*t45624*t51719 - 0.05186*t45292*t51841 - 0.05186*t45039*t52029 - 0.05186*t38509*t52107 - 0.05186*t33206*t52203 - 0.05186*t31811*t52299)*var2[0] - 0.5*(-0.05186*t41590*t51719 - 0.05186*t41569*t51841 - 0.05186*t41557*t52029 - 0.05186*t38509*(-1.*t38*t53007 + t52980*t7222) - 0.05186*t33206*(-1.*t38*t53167 + t53122*t7222) - 0.05186*t31811*(-1.*t38*t53225 + t53204*t7222))*var2[1] - 0.5*(-0.05186*t52029*(t14030*t38 + t14861*t7222) - 0.05186*t51841*(t33694*t38 + t34446*t7222) - 0.05186*t51719*(t38*t39165 + t40775*t7222) - 0.05186*t38509*(t38*t52980 + t53007*t7222) - 0.05186*t33206*(t38*t53122 + t53167*t7222) - 0.05186*t31811*(t38*t53204 + t53225*t7222))*var2[2] - 0.5*(-0.000245*t45624*t51458 - 0.05186*(t45287*t45292 + t45039*t45396)*t51719 - 0.05186*(t45575*t45624 + t45039*t45985)*t51841 - 0.05186*(t45624*t46131 + t45292*t46493)*t52029 - 0.000245*t44747*t52107 - 2.e-6*t44728*t52203 - 0.000245*t44719*t52299 - 0.000245*t45039*t52339 - 2.e-6*t45292*t52344 - 0.05186*t38509*(t45287*t52203 + t45396*t52299 + t45292*(-1.*t45276*t52299 - 1.*t45285*t53225 + t53529 + t53535 - 1.*t45039*t54087 - 1.*t14861*t54168) + t45039*(t45276*t52203 + t45285*t53167 + t53456 + t53491 + t45292*t54087 + t34446*t54168)) - 0.05186*t33206*(t45575*t52107 + t45985*t52299 + t45624*(t45276*t52299 + t45285*t53225 + t53618 + t53625 + t45039*t54087 + t14861*t54168) + t45039*(-1.*t45276*t52107 - 1.*t45285*t53007 + t53636 + t53653 - 1.*t45624*t54087 - 1.*t40775*t54168)) - 0.05186*t31811*(t46131*t52107 + t46493*t52203 + t45624*(-1.*t45276*t52203 - 1.*t45285*t53167 + t53735 + t53746 - 1.*t45292*t54087 - 1.*t34446*t54168) + t45292*(t45276*t52107 + t45285*t53007 + t53783 + t53812 + t45624*t54087 + t40775*t54168)))*var2[3] - 0.5*(-0.000245*t39165*t51458 - 0.05186*(t33694*t48248 + t14030*t48411)*t51719 - 0.05186*(t39165*t48430 + t14030*t48451)*t51841 - 0.05186*(t39165*t48549 + t33694*t48557)*t52029 - 0.000245*t14030*t52339 - 2.e-6*t33694*t52344 - 0.000245*t44747*t52980 - 2.e-6*t44728*t53122 - 0.000245*t44719*t53204 - 0.05186*t38509*(t48248*t53122 + t48411*t53204 + t14030*(t45232*t52190 + t52423 + t52514 + t53456 + t34371*t53489 + t53491) + t33694*(-1.*t45232*t52296 + t52557 + t52565 - 1.*t14337*t53489 + t53529 + t53535)) - 0.05186*t33206*(t48430*t52980 + t48451*t53204 + t39165*(t45232*t52296 + t52641 + t52656 + t14337*t53489 + t53618 + t53625) + t14030*(-1.*t45232*t52089 + t52684 + t52700 - 1.*t40707*t53489 + t53636 + t53653)) - 0.05186*t31811*(t48549*t52980 + t48557*t53122 + t39165*(-1.*t45232*t52190 + t52746 + t52754 - 1.*t34371*t53489 + t53735 + t53746) + t33694*(t45232*t52089 + t52786 + t52825 + t40707*t53489 + t53783 + t53812)))*var2[4] - 0.5*(-0.000245*t40380*t51458 - 0.05186*(t34192*t49532 + t14697*t49804)*t51719 - 0.05186*(t40380*t49864 + t14697*t49932)*t51841 - 0.05186*(t40380*t50052 + t34192*t50068)*t52029 - 0.000245*t44747*t52101 - 2.e-6*t44728*t52130 - 0.000245*t44719*t52257 - 0.000245*t14697*t52339 - 2.e-6*t34192*t52344 - 0.05186*t38509*(t49532*t52130 + t49804*t52257 + t14697*(t44960*t52157 + t44888*t52187 + t52423 + t33253*t52441 + t33534*t52495 + t52514) + t34192*(-1.*t44888*t52273 - 1.*t44960*t52293 - 1.*t14018*t52441 - 1.*t13036*t52495 + t52557 + t52565)) - 0.05186*t33206*(t49864*t52101 + t49932*t52257 + t40380*(t44888*t52273 + t44960*t52293 + t14018*t52441 + t13036*t52495 + t52641 + t52656) + t14697*(-1.*t44960*t52066 - 1.*t44888*t52083 - 1.*t39150*t52441 - 1.*t38871*t52495 + t52684 + t52700)) - 0.05186*t31811*(t50052*t52101 + t50068*t52130 + t40380*(-1.*t44960*t52157 - 1.*t44888*t52187 - 1.*t33253*t52441 - 1.*t33534*t52495 + t52746 + t52754) + t34192*(t44960*t52066 + t44888*t52083 + t39150*t52441 + t38871*t52495 + t52786 + t52825)))*var2[5] - 0.5*(-0.00049*t44747*t51458 - 0.10372*t38509*t51719 - 0.10372*t33206*t51841 - 0.10372*t31811*t52029 - 0.00049*t44719*t52339 - 4.e-6*t44728*t52344)*var2[6] - 0.5*(-0.00024500000000441*t51458 - 1.5558e-8*t51719 - 0.005186015558*t51841 + 1.555781330428e-8*t52029)*var2[8]);
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=0;
  p_output1[12]=0;
  p_output1[13]=0;
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce3_vec7_minitaur.hh"

namespace FrontStance
{

void Ce3_vec7_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
