/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 15:05:16 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1484;
  double t1506;
  double t1537;
  double t1540;
  double t1554;
  double t1567;
  double t1586;
  double t1589;
  double t1593;
  double t1541;
  double t1545;
  double t1547;
  double t1551;
  double t1599;
  double t1600;
  double t1723;
  double t1595;
  double t1596;
  double t1729;
  double t1702;
  double t1709;
  double t1712;
  double t1715;
  double t1716;
  double t1717;
  double t1775;
  double t1776;
  double t1777;
  double t1778;
  double t1804;
  double t1810;
  double t1811;
  double t1812;
  double t1813;
  double t1814;
  double t1816;
  double t1822;
  double t1823;
  double t1819;
  double t1734;
  double t1817;
  double t1866;
  double t1553;
  double t1588;
  double t1597;
  double t1671;
  double t1682;
  double t1724;
  double t1745;
  double t1751;
  double t1752;
  double t1753;
  double t1782;
  double t1786;
  double t1793;
  double t1794;
  double t1799;
  double t1913;
  double t1914;
  double t1915;
  double t1820;
  double t1918;
  double t1919;
  double t1929;
  double t1972;
  double t1973;
  double t1974;
  double t1898;
  double t1902;
  double t1903;
  double t2042;
  double t2043;
  double t2016;
  double t2032;
  double t2053;
  double t2047;
  double t2048;
  double t2049;
  double t2050;
  double t2073;
  double t2077;
  double t2081;
  double t2097;
  double t2098;
  double t2099;
  double t2101;
  double t2103;
  double t2119;
  double t2106;
  double t2143;
  double t2144;
  double t2145;
  double t2146;
  double t2148;
  double t2149;
  double t2154;
  double t2159;
  double t2167;
  double t2168;
  double t1544;
  double t1552;
  double t2234;
  double t2244;
  double t2246;
  double t2041;
  double t2044;
  double t2045;
  double t2046;
  double t2052;
  double t2058;
  double t2062;
  double t2071;
  double t2072;
  double t2089;
  double t2093;
  double t2094;
  double t2095;
  double t2096;
  double t2274;
  double t2284;
  double t2285;
  double t2288;
  double t2289;
  double t2107;
  double t2292;
  double t2293;
  double t2294;
  double t2133;
  double t2355;
  double t2356;
  double t2358;
  double t2820;
  double t3067;
  double t3372;
  double t1911;
  double t1912;
  double t1917;
  double t1967;
  double t1975;
  double t1976;
  double t1977;
  double t1978;
  double t1979;
  double t1980;
  double t1981;
  double t1982;
  double t1983;
  double t1984;
  double t1988;
  double t1992;
  double t1995;
  double t1999;
  double t2001;
  double t2003;
  double t2007;
  double t7090;
  double t7095;
  double t7096;
  double t7099;
  double t7102;
  double t7103;
  double t7109;
  double t7110;
  double t7111;
  double t7112;
  double t1548;
  double t8072;
  double t8074;
  double t8116;
  double t8155;
  double t8157;
  double t8187;
  double t2352;
  double t2353;
  double t2460;
  double t3376;
  double t3384;
  double t3398;
  double t3399;
  double t3402;
  double t3904;
  double t4063;
  double t4078;
  double t4083;
  double t4084;
  double t4164;
  double t4424;
  double t4647;
  double t4649;
  double t4651;
  double t4656;
  double t4662;
  double t7051;
  double t2140;
  double t2141;
  double t2142;
  double t2147;
  double t2162;
  double t2169;
  double t2171;
  double t2172;
  double t2173;
  double t2175;
  double t2176;
  double t2177;
  double t2198;
  double t2200;
  double t2202;
  double t2221;
  double t2222;
  double t2223;
  double t2224;
  double t2225;
  double t2226;
  double t2227;
  double t8266;
  double t8260;
  double t8261;
  double t8262;
  double t8263;
  double t8270;
  double t8271;
  double t8272;
  double t8279;
  double t8280;
  double t8283;
  double t7098;
  double t7107;
  double t7505;
  double t7910;
  double t8035;
  double t8039;
  double t8042;
  double t8044;
  double t8046;
  double t8047;
  double t8048;
  double t8049;
  double t8050;
  double t8051;
  double t8052;
  double t8053;
  double t8054;
  double t8055;
  double t8057;
  double t2286;
  double t2290;
  double t2295;
  double t2315;
  double t2316;
  double t2317;
  double t2318;
  double t2319;
  double t2320;
  double t2321;
  double t2322;
  double t2330;
  double t2334;
  double t2339;
  double t2340;
  double t2341;
  double t2347;
  double t2348;
  double t2349;
  double t2051;
  double t2085;
  double t2102;
  double t2104;
  double t2105;
  double t2108;
  double t2109;
  double t2110;
  double t2111;
  double t2123;
  double t2128;
  double t2129;
  double t2130;
  double t2132;
  double t2134;
  double t2135;
  double t2136;
  double t2137;
  double t2138;
  double t8282;
  double t8654;
  double t8658;
  double t8661;
  double t8662;
  double t8663;
  double t8667;
  double t8668;
  double t8699;
  double t8729;
  double t8734;
  double t8735;
  double t8736;
  double t8760;
  double t8792;
  double t8791;
  double t8822;
  double t8823;
  double t8827;
  double t8828;
  double t8833;
  double t8840;
  double t8841;
  double t8842;
  double t8844;
  double t8845;
  double t8846;
  double t8848;
  double t8851;
  double t8852;
  double t9084;
  double t9088;
  double t9092;
  double t9083;
  double t9096;
  double t9097;
  double t9098;
  double t9100;
  double t9103;
  double t9104;
  double t9106;
  double t9107;
  double t9108;
  double t9109;
  double t9222;
  double t9223;
  double t9224;
  double t9225;
  double t9227;
  double t9228;
  double t9229;
  double t9230;
  double t9233;
  double t9234;
  double t9292;
  double t9293;
  double t9294;
  double t9296;
  double t9299;
  double t9300;
  double t9302;
  double t9304;
  double t9305;
  double t9307;
  double t9331;
  double t9332;
  double t9333;
  double t9334;
  double t9336;
  double t9337;
  double t9338;
  double t9339;
  double t8655;
  double t8656;
  double t8657;
  double t8666;
  double t8731;
  double t8764;
  double t8768;
  double t8774;
  double t8775;
  double t8776;
  double t8777;
  double t8778;
  double t8779;
  double t8780;
  double t8781;
  double t8782;
  double t8783;
  double t8784;
  double t8785;
  double t8786;
  double t8787;
  double t8788;
  double t9360;
  double t9361;
  double t9362;
  double t9371;
  double t9374;
  double t9375;
  double t9377;
  double t9378;
  double t9408;
  double t9409;
  double t9410;
  double t9411;
  double t9435;
  double t9436;
  double t9437;
  double t9438;
  double t9440;
  double t9443;
  double t9445;
  double t9446;
  double t9447;
  double t9448;
  double t9472;
  double t9473;
  double t9476;
  double t9477;
  double t9478;
  double t9480;
  double t9481;
  double t9482;
  double t9291;
  double t9503;
  double t9504;
  double t9505;
  double t9507;
  double t9508;
  double t9509;
  double t9511;
  double t9512;
  double t9513;
  double t9470;
  double t9471;
  double t9475;
  double t9479;
  double t9483;
  double t9484;
  double t9485;
  double t9486;
  double t9487;
  double t9488;
  double t9489;
  double t9490;
  double t9491;
  double t9492;
  double t9493;
  double t9494;
  double t9495;
  double t9496;
  double t9497;
  double t9498;
  double t9499;
  double t8826;
  double t8837;
  double t8843;
  double t8847;
  double t8853;
  double t8854;
  double t8855;
  double t8856;
  double t8857;
  double t8858;
  double t8860;
  double t8861;
  double t8977;
  double t8978;
  double t8979;
  double t8980;
  double t8981;
  double t8982;
  double t9018;
  double t9049;
  double t9081;
  double t9539;
  double t9540;
  double t9541;
  double t9538;
  double t9542;
  double t9543;
  double t9545;
  double t9546;
  double t9548;
  double t9549;
  double t9550;
  double t9572;
  double t9573;
  double t9574;
  double t9577;
  double t9578;
  double t9579;
  double t9295;
  double t9301;
  double t9600;
  double t9602;
  double t9604;
  double t9432;
  double t9433;
  double t9434;
  double t9439;
  double t9444;
  double t9449;
  double t9450;
  double t9451;
  double t9452;
  double t9453;
  double t9454;
  double t9455;
  double t9456;
  double t9457;
  double t9458;
  double t9459;
  double t9460;
  double t9461;
  double t9462;
  double t9466;
  double t9467;
  double t9468;
  double t9207;
  double t9220;
  double t9221;
  double t9226;
  double t9232;
  double t9235;
  double t9263;
  double t9264;
  double t9265;
  double t9266;
  double t9275;
  double t9279;
  double t9280;
  double t9281;
  double t9282;
  double t9283;
  double t9284;
  double t9285;
  double t9286;
  double t9287;
  double t9288;
  double t9289;
  double t9629;
  double t9630;
  double t9631;
  double t9635;
  double t9636;
  double t9637;
  double t9639;
  double t9640;
  double t9641;
  double t9645;
  double t9646;
  double t9647;
  double t9648;
  double t9570;
  double t9571;
  double t9575;
  double t9576;
  double t9580;
  double t9581;
  double t9582;
  double t9584;
  double t9585;
  double t9586;
  double t9587;
  double t9588;
  double t9589;
  double t9590;
  double t9591;
  double t9593;
  double t9594;
  double t9595;
  double t9596;
  double t9597;
  double t9598;
  double t9668;
  double t9669;
  double t9671;
  double t9672;
  double t9673;
  double t9674;
  double t9676;
  double t9678;
  double t9679;
  double t9373;
  double t9407;
  double t9412;
  double t9413;
  double t9414;
  double t9415;
  double t9416;
  double t9417;
  double t9418;
  double t9419;
  double t9422;
  double t9423;
  double t9424;
  double t9425;
  double t9426;
  double t9427;
  double t9428;
  double t9429;
  double t9430;
  double t9099;
  double t9105;
  double t9110;
  double t9114;
  double t9115;
  double t9116;
  double t9117;
  double t9121;
  double t9123;
  double t9124;
  double t9125;
  double t9126;
  double t9128;
  double t9129;
  double t9130;
  double t9131;
  double t9132;
  double t9135;
  double t9136;
  double t9544;
  double t9547;
  double t9551;
  double t9552;
  double t9553;
  double t9554;
  double t9555;
  double t9556;
  double t9557;
  double t9558;
  double t9559;
  double t9560;
  double t9561;
  double t9562;
  double t9563;
  double t9564;
  double t9565;
  double t9566;
  double t9567;
  double t8255;
  double t8256;
  double t8257;
  double t8258;
  double t8265;
  double t8267;
  double t8268;
  double t8269;
  double t8274;
  double t8275;
  double t8276;
  double t8277;
  double t8278;
  double t9706;
  double t9707;
  double t9708;
  double t9709;
  double t8284;
  double t9711;
  double t9712;
  double t9713;
  double t9715;
  double t9716;
  double t8296;
  double t9670;
  double t9675;
  double t9680;
  double t9681;
  double t9682;
  double t9683;
  double t9684;
  double t9685;
  double t9686;
  double t9687;
  double t9688;
  double t9689;
  double t9690;
  double t9691;
  double t9692;
  double t9693;
  double t9694;
  double t9695;
  double t9696;
  double t9722;
  double t9797;
  double t9798;
  double t9799;
  double t9800;
  double t9801;
  double t9802;
  double t9803;
  double t9804;
  double t9805;
  double t9806;
  double t9807;
  double t9808;
  double t9810;
  double t9813;
  double t9814;
  double t9815;
  double t9816;
  double t9818;
  double t9819;
  double t9820;
  double t9821;
  double t9823;
  double t9766;
  double t9770;
  double t9773;
  double t9774;
  double t9775;
  double t9778;
  double t9781;
  double t9782;
  double t9783;
  double t9784;
  double t9785;
  double t9786;
  double t9787;
  double t9788;
  double t9789;
  double t9790;
  double t9791;
  double t9792;
  double t9793;
  double t9794;
  double t9795;
  double t9796;
  double t9824;
  double t9825;
  double t9826;
  double t9837;
  double t9844;
  double t9848;
  double t9849;
  double t9850;
  double t9851;
  double t9852;
  double t9853;
  double t9854;
  double t9855;
  double t9856;
  double t9857;
  double t9858;
  double t9859;
  double t9860;
  double t9861;
  double t9862;
  double t9886;
  double t9896;
  double t9908;
  double t9909;
  double t9910;
  double t9911;
  double t9912;
  double t9913;
  double t9914;
  double t9915;
  double t9916;
  double t9917;
  double t9918;
  double t9920;
  double t9921;
  double t9922;
  double t9923;
  double t9924;
  double t9863;
  double t9864;
  double t9865;
  double t9866;
  double t9868;
  double t9869;
  double t9870;
  double t9871;
  double t9872;
  double t9873;
  double t9874;
  double t9875;
  double t9876;
  double t9877;
  double t9878;
  double t9879;
  double t9880;
  double t9881;
  double t9882;
  double t9883;
  double t9884;
  double t9885;
  double t9937;
  double t9938;
  double t9939;
  double t9941;
  double t9942;
  double t9944;
  double t9945;
  double t9946;
  double t9968;
  double t9969;
  double t9970;
  double t9972;
  double t9975;
  double t9976;
  double t9977;
  double t9998;
  double t9999;
  double t10000;
  double t10001;
  double t10025;
  double t10028;
  double t10029;
  double t10031;
  double t10032;
  double t10033;
  double t10034;
  double t10036;
  double t10037;
  double t10059;
  double t10060;
  double t10061;
  double t10064;
  double t10065;
  double t10066;
  double t10068;
  double t10069;
  double t10071;
  double t9935;
  double t9936;
  double t9940;
  double t9943;
  double t9947;
  double t9948;
  double t9949;
  double t9950;
  double t9951;
  double t9952;
  double t9953;
  double t9954;
  double t9956;
  double t9957;
  double t9958;
  double t9959;
  double t9960;
  double t9961;
  double t9962;
  double t9963;
  double t9964;
  double t10111;
  double t10113;
  double t10115;
  double t10154;
  double t10155;
  double t10156;
  double t10153;
  double t10157;
  double t10158;
  double t10160;
  double t10161;
  double t10163;
  double t10164;
  double t10201;
  double t10202;
  double t10203;
  double t10206;
  double t10207;
  double t10208;
  double t10020;
  double t10021;
  double t10022;
  double t10030;
  double t10035;
  double t10038;
  double t10039;
  double t10040;
  double t10041;
  double t10042;
  double t10043;
  double t10044;
  double t10045;
  double t10046;
  double t10047;
  double t10048;
  double t10049;
  double t10050;
  double t10051;
  double t10052;
  double t10053;
  double t10054;
  double t10234;
  double t10235;
  double t10236;
  double t10238;
  double t10239;
  double t10240;
  double t10242;
  double t10243;
  double t10244;
  double t10245;
  double t10183;
  double t10196;
  double t10204;
  double t10205;
  double t10209;
  double t10210;
  double t10211;
  double t10212;
  double t10213;
  double t10214;
  double t10215;
  double t10216;
  double t10217;
  double t10218;
  double t10219;
  double t10220;
  double t10221;
  double t10222;
  double t10223;
  double t10224;
  double t10225;
  double t10268;
  double t10269;
  double t10271;
  double t10272;
  double t10273;
  double t10275;
  double t10276;
  double t10277;
  double t9974;
  double t9997;
  double t10002;
  double t10003;
  double t10004;
  double t10005;
  double t10006;
  double t10007;
  double t10008;
  double t10009;
  double t10010;
  double t10011;
  double t10012;
  double t10013;
  double t10014;
  double t10015;
  double t10016;
  double t10017;
  double t10018;
  double t10159;
  double t10162;
  double t10165;
  double t10166;
  double t10167;
  double t10168;
  double t10169;
  double t10170;
  double t10171;
  double t10172;
  double t10173;
  double t10174;
  double t10175;
  double t10176;
  double t10177;
  double t10178;
  double t10179;
  double t10180;
  double t10181;
  double t10301;
  double t10302;
  double t10303;
  double t10305;
  double t10306;
  double t10307;
  double t10309;
  double t10310;
  double t10270;
  double t10274;
  double t10278;
  double t10279;
  double t10280;
  double t10281;
  double t10282;
  double t10284;
  double t10285;
  double t10286;
  double t10287;
  double t10288;
  double t10289;
  double t10290;
  double t10291;
  double t10292;
  double t10293;
  double t10294;
  double t10295;
  double t10312;
  t1484 = Cos(var1[15]);
  t1506 = -1.*t1484;
  t1537 = 1. + t1506;
  t1540 = Cos(var1[4]);
  t1554 = Cos(var1[17]);
  t1567 = -1.*t1554;
  t1586 = 1. + t1567;
  t1589 = -3.e-6*t1586;
  t1593 = Sin(var1[17]);
  t1541 = Cos(var1[5]);
  t1545 = Sin(var1[15]);
  t1547 = Sin(var1[4]);
  t1551 = Sin(var1[5]);
  t1599 = 3.e-6*t1593;
  t1600 = t1589 + t1599;
  t1723 = 9.e-13*var1[17];
  t1595 = -3.e-6*t1593;
  t1596 = t1589 + t1595;
  t1729 = -9.e-12*t1586;
  t1702 = -3.e-6*t1537*t1540*t1541;
  t1709 = 3.e-6*t1545*t1547;
  t1712 = -9.e-12*t1537;
  t1715 = 1. + t1712;
  t1716 = t1715*t1540*t1551;
  t1717 = t1702 + t1709 + t1716;
  t1775 = -1.*t1484*t1540*t1541;
  t1776 = -1.*t1545*t1547;
  t1777 = 3.e-6*t1537*t1540*t1551;
  t1778 = t1775 + t1776 + t1777;
  t1804 = t1540*t1541*t1545;
  t1810 = -1.000000000009*t1537;
  t1811 = 1. + t1810;
  t1812 = -1.*t1811*t1547;
  t1813 = 3.e-6*t1540*t1545*t1551;
  t1814 = t1804 + t1812 + t1813;
  t1816 = 3.e-6*t1586;
  t1822 = -1.000000000009*t1586;
  t1823 = 1. + t1822;
  t1819 = 9.e-12*t1586;
  t1734 = -1.*t1593;
  t1817 = t1816 + t1595;
  t1866 = t1816 + t1599;
  t1553 = 3.e-7*var1[17];
  t1588 = -1.62e-17*t1586;
  t1597 = 0.2*t1596;
  t1671 = 0.1*t1600;
  t1682 = t1553 + t1588 + t1597 + t1671;
  t1724 = 0.2000000000018*t1586;
  t1745 = t1729 + t1734;
  t1751 = 0.1*t1745;
  t1752 = -9.e-7*t1600;
  t1753 = t1723 + t1724 + t1751 + t1752;
  t1782 = 0.1000000000009*t1586;
  t1786 = -9.e-7*t1596;
  t1793 = t1729 + t1593;
  t1794 = 0.2*t1793;
  t1799 = t1723 + t1782 + t1786 + t1794;
  t1913 = t1715*t1541*t1547;
  t1914 = 3.e-6*t1537*t1547*t1551;
  t1915 = t1913 + t1914;
  t1820 = t1819 + t1593;
  t1918 = 3.e-6*t1537*t1541*t1547;
  t1919 = t1484*t1547*t1551;
  t1929 = t1918 + t1919;
  t1972 = 3.e-6*t1541*t1545*t1547;
  t1973 = -1.*t1545*t1547*t1551;
  t1974 = t1972 + t1973;
  t1898 = t1819 + t1734;
  t1902 = -1.8e-11*t1586;
  t1903 = 1. + t1902;
  t2042 = 3.e-6*t1554;
  t2043 = t2042 + t1595;
  t2016 = -3.e-6*t1554;
  t2032 = t2016 + t1595;
  t2053 = -9.e-12*t1593;
  t2047 = -3.e-6*t1540*t1545;
  t2048 = -3.e-6*t1537*t1541*t1547;
  t2049 = t1715*t1547*t1551;
  t2050 = t2047 + t2048 + t2049;
  t2073 = t1540*t1545;
  t2077 = -1.*t1484*t1541*t1547;
  t2081 = t2073 + t2077 + t1914;
  t2097 = t1811*t1540;
  t2098 = t1541*t1545*t1547;
  t2099 = 3.e-6*t1545*t1547*t1551;
  t2101 = t2097 + t2098 + t2099;
  t2103 = t2042 + t1599;
  t2119 = t2016 + t1599;
  t2106 = 9.e-12*t1593;
  t2143 = -1.000000000009*t1540*t1545;
  t2144 = t1484*t1541*t1547;
  t2145 = 3.e-6*t1484*t1547*t1551;
  t2146 = t2143 + t2144 + t2145;
  t2148 = -3.e-6*t1484*t1540;
  t2149 = -3.e-6*t1541*t1545*t1547;
  t2154 = -9.e-12*t1545*t1547*t1551;
  t2159 = t2148 + t2149 + t2154;
  t2167 = t1484*t1540;
  t2168 = t2167 + t2098 + t2099;
  t1544 = -0.2000000000018*t1537*t1540*t1541;
  t1552 = -6.000000000054e-7*t1537*t1540*t1551;
  t2234 = t1702 + t1716;
  t2244 = t1775 + t1777;
  t2246 = t1804 + t1813;
  t2041 = 0.2*t2032;
  t2044 = 0.1*t2043;
  t2045 = -1.62e-17*t1593;
  t2046 = 3.e-7 + t2041 + t2044 + t2045;
  t2052 = -9.e-7*t2043;
  t2058 = t1567 + t2053;
  t2062 = 0.1*t2058;
  t2071 = 0.2000000000018*t1593;
  t2072 = 9.e-13 + t2052 + t2062 + t2071;
  t2089 = -9.e-7*t2032;
  t2093 = t1554 + t2053;
  t2094 = 0.2*t2093;
  t2095 = 0.1000000000009*t1593;
  t2096 = 9.e-13 + t2089 + t2094 + t2095;
  t2274 = -1.*t1715*t1540*t1541;
  t2284 = -3.e-6*t1537*t1540*t1551;
  t2285 = t2274 + t2284;
  t2288 = -1.*t1484*t1540*t1551;
  t2289 = t1702 + t2288;
  t2107 = t1567 + t2106;
  t2292 = -3.e-6*t1540*t1541*t1545;
  t2293 = t1540*t1545*t1551;
  t2294 = t2292 + t2293;
  t2133 = t1554 + t2106;
  t2355 = -3.e-6*t1484*t1540*t1541;
  t2356 = t1484*t1540*t1551;
  t2358 = t2355 + t2356;
  t2820 = 9.e-12*t1540*t1541*t1545;
  t3067 = -3.e-6*t1540*t1545*t1551;
  t3372 = t2820 + t3067;
  t1911 = -6.000000000054e-7*t1537*t1541*t1547;
  t1912 = 0.2000000000018*t1537*t1547*t1551;
  t1917 = t1682*t1915;
  t1967 = t1753*t1929;
  t1975 = t1799*t1974;
  t1976 = t1817*t1915;
  t1977 = t1820*t1929;
  t1978 = t1823*t1974;
  t1979 = t1976 + t1977 + t1978;
  t1980 = -0.3*t1979;
  t1981 = t1866*t1915;
  t1982 = t1823*t1929;
  t1983 = t1898*t1974;
  t1984 = t1981 + t1982 + t1983;
  t1988 = 0.2*t1984;
  t1992 = t1903*t1915;
  t1995 = t1817*t1929;
  t1999 = t1866*t1974;
  t2001 = t1992 + t1995 + t1999;
  t2003 = -0.099999*t2001;
  t2007 = t1911 + t1912 + t1917 + t1967 + t1975 + t1980 + t1988 + t2003;
  t7090 = -1.000000000009*t1545*t1547;
  t7095 = -3.e-6*t1484*t1540*t1551;
  t7096 = t1775 + t7090 + t7095;
  t7099 = -1.*t1540*t1541*t1545;
  t7102 = t1484*t1547;
  t7103 = t7099 + t7102 + t3067;
  t7109 = 3.e-6*t1540*t1541*t1545;
  t7110 = -3.e-6*t1484*t1547;
  t7111 = 9.e-12*t1540*t1545*t1551;
  t7112 = t7109 + t7110 + t7111;
  t1548 = 0.2000000000018*t1545*t1547;
  t8072 = t1775 + t1776 + t7095;
  t8074 = 3.e-6*t1484*t1540*t1541;
  t8116 = 9.e-12*t1484*t1540*t1551;
  t8155 = t8074 + t1709 + t8116;
  t8157 = -1.000000000009*t1484*t1547;
  t8187 = t1804 + t8157 + t1813;
  t2352 = 6.000000000054e-7*t1540*t1541*t1545;
  t2353 = -0.2000000000018*t1540*t1545*t1551;
  t2460 = t1799*t2358;
  t3376 = t1682*t3372;
  t3384 = t1753*t2294;
  t3398 = t1898*t2358;
  t3399 = t1866*t3372;
  t3402 = t1823*t2294;
  t3904 = t3398 + t3399 + t3402;
  t4063 = 0.2*t3904;
  t4078 = t1866*t2358;
  t4083 = t1903*t3372;
  t4084 = t1817*t2294;
  t4164 = t4078 + t4083 + t4084;
  t4424 = -0.099999*t4164;
  t4647 = t1823*t2358;
  t4649 = t1817*t3372;
  t4651 = t1820*t2294;
  t4656 = t4647 + t4649 + t4651;
  t4662 = -0.3*t4656;
  t7051 = t2352 + t2353 + t2460 + t3376 + t3384 + t4063 + t4424 + t4662;
  t2140 = -0.2000000000018*t1484*t1540;
  t2141 = -0.2000000000018*t1541*t1545*t1547;
  t2142 = -6.000000000054e-7*t1545*t1547*t1551;
  t2147 = t1799*t2146;
  t2162 = t1682*t2159;
  t2169 = t1753*t2168;
  t2171 = t1898*t2146;
  t2172 = t1866*t2159;
  t2173 = t1823*t2168;
  t2175 = t2171 + t2172 + t2173;
  t2176 = 0.2*t2175;
  t2177 = t1866*t2146;
  t2198 = t1903*t2159;
  t2200 = t1817*t2168;
  t2202 = t2177 + t2198 + t2200;
  t2221 = -0.099999*t2202;
  t2222 = t1823*t2146;
  t2223 = t1817*t2159;
  t2224 = t1820*t2168;
  t2225 = t2222 + t2223 + t2224;
  t2226 = -0.3*t2225;
  t2227 = t2140 + t2141 + t2142 + t2147 + t2162 + t2169 + t2176 + t2221 + t2226;
  t8266 = -9.e-12*t1554;
  t8260 = 3.e-6*t1537*t1540*t1541;
  t8261 = -3.e-6*t1545*t1547;
  t8262 = -1.*t1715*t1540*t1551;
  t8263 = t8260 + t8261 + t8262;
  t8270 = t1484*t1540*t1541;
  t8271 = t1545*t1547;
  t8272 = t8270 + t8271 + t2284;
  t8279 = t1811*t1547;
  t8280 = t7099 + t8279 + t3067;
  t8283 = 9.e-12*t1554;
  t7098 = t2096*t7096;
  t7107 = t2072*t7103;
  t7505 = t2046*t7112;
  t7910 = -1.000000000009*t1593*t7096;
  t8035 = t2133*t7103;
  t8039 = t2119*t7112;
  t8042 = t7910 + t8035 + t8039;
  t8044 = -0.3*t8042;
  t8046 = t2107*t7096;
  t8047 = -1.000000000009*t1593*t7103;
  t8048 = t2103*t7112;
  t8049 = t8046 + t8047 + t8048;
  t8050 = 0.2*t8049;
  t8051 = t2103*t7096;
  t8052 = t2119*t7103;
  t8053 = -1.8e-11*t1593*t7112;
  t8054 = t8051 + t8052 + t8053;
  t8055 = -0.099999*t8054;
  t8057 = t7098 + t7107 + t7505 + t8044 + t8050 + t8055;
  t2286 = t2046*t2285;
  t2290 = t2072*t2289;
  t2295 = t2096*t2294;
  t2315 = t2103*t2285;
  t2316 = -1.000000000009*t1593*t2289;
  t2317 = t2107*t2294;
  t2318 = t2315 + t2316 + t2317;
  t2319 = 0.2*t2318;
  t2320 = -1.8e-11*t1593*t2285;
  t2321 = t2119*t2289;
  t2322 = t2103*t2294;
  t2330 = t2320 + t2321 + t2322;
  t2334 = -0.099999*t2330;
  t2339 = t2119*t2285;
  t2340 = t2133*t2289;
  t2341 = -1.000000000009*t1593*t2294;
  t2347 = t2339 + t2340 + t2341;
  t2348 = -0.3*t2347;
  t2349 = t2286 + t2290 + t2295 + t2319 + t2334 + t2348;
  t2051 = t2046*t2050;
  t2085 = t2072*t2081;
  t2102 = t2096*t2101;
  t2104 = t2103*t2050;
  t2105 = -1.000000000009*t1593*t2081;
  t2108 = t2107*t2101;
  t2109 = t2104 + t2105 + t2108;
  t2110 = 0.2*t2109;
  t2111 = -1.8e-11*t1593*t2050;
  t2123 = t2119*t2081;
  t2128 = t2103*t2101;
  t2129 = t2111 + t2123 + t2128;
  t2130 = -0.099999*t2129;
  t2132 = t2119*t2050;
  t2134 = t2133*t2081;
  t2135 = -1.000000000009*t1593*t2101;
  t2136 = t2132 + t2134 + t2135;
  t2137 = -0.3*t2136;
  t2138 = t2051 + t2085 + t2102 + t2110 + t2130 + t2137;
  t8282 = t2103*t8263;
  t8654 = Cos(var1[3]);
  t8658 = 3.e-6*t1537*t8654*t1540*t1541;
  t8661 = -3.e-6*t8654*t1545*t1547;
  t8662 = -1.*t1715*t8654*t1540*t1551;
  t8663 = t8658 + t8661 + t8662;
  t8667 = t1484*t8654*t1540*t1541;
  t8668 = t8654*t1545*t1547;
  t8699 = -3.e-6*t1537*t8654*t1540*t1551;
  t8729 = t8667 + t8668 + t8699;
  t8734 = -1.*t8654*t1540*t1541*t1545;
  t8735 = t1811*t8654*t1547;
  t8736 = -3.e-6*t8654*t1540*t1545*t1551;
  t8760 = t8734 + t8735 + t8736;
  t8792 = Sin(var1[3]);
  t8791 = -1.*t8654*t1541*t1547;
  t8822 = t8792*t1551;
  t8823 = t8791 + t8822;
  t8827 = -1.*t1541*t8792;
  t8828 = -1.*t8654*t1547*t1551;
  t8833 = t8827 + t8828;
  t8840 = t1715*t8823;
  t8841 = 3.e-6*t1537*t8833;
  t8842 = t8840 + t8841;
  t8844 = 3.e-6*t1537*t8823;
  t8845 = t1484*t8833;
  t8846 = t8844 + t8845;
  t8848 = 3.e-6*t1545*t8823;
  t8851 = -1.*t1545*t8833;
  t8852 = t8848 + t8851;
  t9084 = t8654*t1541*t1547;
  t9088 = -1.*t8792*t1551;
  t9092 = t9084 + t9088;
  t9083 = 3.e-6*t8654*t1540*t1545;
  t9096 = 3.e-6*t1537*t9092;
  t9097 = t1715*t8833;
  t9098 = t9083 + t9096 + t9097;
  t9100 = -1.*t8654*t1540*t1545;
  t9103 = t1484*t9092;
  t9104 = t9100 + t9103 + t8841;
  t9106 = -1.*t1811*t8654*t1540;
  t9107 = -1.*t1545*t9092;
  t9108 = 3.e-6*t1545*t8833;
  t9109 = t9106 + t9107 + t9108;
  t9222 = 1.000000000009*t8654*t1540*t1545;
  t9223 = -1.*t1484*t9092;
  t9224 = 3.e-6*t1484*t8833;
  t9225 = t9222 + t9223 + t9224;
  t9227 = 3.e-6*t1484*t8654*t1540;
  t9228 = 3.e-6*t1545*t9092;
  t9229 = -9.e-12*t1545*t8833;
  t9230 = t9227 + t9228 + t9229;
  t9233 = -1.*t1484*t8654*t1540;
  t9234 = t9233 + t9107 + t9108;
  t9292 = -1.*t1541*t8792*t1547;
  t9293 = -1.*t8654*t1551;
  t9294 = t9292 + t9293;
  t9296 = -1.*t8654*t1541;
  t9299 = t8792*t1547*t1551;
  t9300 = t9296 + t9299;
  t9302 = -3.e-6*t1540*t1545*t8792;
  t9304 = 3.e-6*t1537*t9294;
  t9305 = t1715*t9300;
  t9307 = t9302 + t9304 + t9305;
  t9331 = t1540*t1545*t8792;
  t9332 = t1484*t9294;
  t9333 = 3.e-6*t1537*t9300;
  t9334 = t9331 + t9332 + t9333;
  t9336 = t1811*t1540*t8792;
  t9337 = -1.*t1545*t9294;
  t9338 = 3.e-6*t1545*t9300;
  t9339 = t9336 + t9337 + t9338;
  t8655 = 0.2000000000018*t1537*t8654*t1540*t1541;
  t8656 = -0.2000000000018*t8654*t1545*t1547;
  t8657 = 6.000000000054e-7*t1537*t8654*t1540*t1551;
  t8666 = t1682*t8663;
  t8731 = t1753*t8729;
  t8764 = t1799*t8760;
  t8768 = t1817*t8663;
  t8774 = t1820*t8729;
  t8775 = t1823*t8760;
  t8776 = t8768 + t8774 + t8775;
  t8777 = -0.3*t8776;
  t8778 = t1866*t8663;
  t8779 = t1823*t8729;
  t8780 = t1898*t8760;
  t8781 = t8778 + t8779 + t8780;
  t8782 = 0.2*t8781;
  t8783 = t1903*t8663;
  t8784 = t1817*t8729;
  t8785 = t1866*t8760;
  t8786 = t8783 + t8784 + t8785;
  t8787 = -0.099999*t8786;
  t8788 = t8655 + t8656 + t8657 + t8666 + t8731 + t8764 + t8777 + t8782 + t8787;
  t9360 = 3.e-6*t1537*t1540*t1541*t8792;
  t9361 = -3.e-6*t1545*t8792*t1547;
  t9362 = -1.*t1715*t1540*t8792*t1551;
  t9371 = t9360 + t9361 + t9362;
  t9374 = t1484*t1540*t1541*t8792;
  t9375 = t1545*t8792*t1547;
  t9377 = -3.e-6*t1537*t1540*t8792*t1551;
  t9378 = t9374 + t9375 + t9377;
  t9408 = -1.*t1540*t1541*t1545*t8792;
  t9409 = t1811*t8792*t1547;
  t9410 = -3.e-6*t1540*t1545*t8792*t1551;
  t9411 = t9408 + t9409 + t9410;
  t9435 = -1.*t1484*t1540*t1541*t8792;
  t9436 = -1.000000000009*t1545*t8792*t1547;
  t9437 = -3.e-6*t1484*t1540*t8792*t1551;
  t9438 = t9435 + t9436 + t9437;
  t9440 = t1484*t8792*t1547;
  t9443 = t9408 + t9440 + t9410;
  t9445 = 3.e-6*t1540*t1541*t1545*t8792;
  t9446 = -3.e-6*t1484*t8792*t1547;
  t9447 = 9.e-12*t1540*t1545*t8792*t1551;
  t9448 = t9445 + t9446 + t9447;
  t9472 = -1.*t1715*t1540*t1541*t8792;
  t9473 = t9472 + t9377;
  t9476 = -3.e-6*t1537*t1540*t1541*t8792;
  t9477 = -1.*t1484*t1540*t8792*t1551;
  t9478 = t9476 + t9477;
  t9480 = -3.e-6*t1540*t1541*t1545*t8792;
  t9481 = t1540*t1545*t8792*t1551;
  t9482 = t9480 + t9481;
  t9291 = -0.2000000000018*t1540*t1545*t8792;
  t9503 = -3.e-6*t1537*t1541*t8792*t1547;
  t9504 = t1715*t8792*t1547*t1551;
  t9505 = t9302 + t9503 + t9504;
  t9507 = -1.*t1484*t1541*t8792*t1547;
  t9508 = 3.e-6*t1537*t8792*t1547*t1551;
  t9509 = t9331 + t9507 + t9508;
  t9511 = t1541*t1545*t8792*t1547;
  t9512 = 3.e-6*t1545*t8792*t1547*t1551;
  t9513 = t9336 + t9511 + t9512;
  t9470 = 6.000000000054e-7*t1537*t1540*t1541*t8792;
  t9471 = -0.2000000000018*t1537*t1540*t8792*t1551;
  t9475 = t1682*t9473;
  t9479 = t1753*t9478;
  t9483 = t1799*t9482;
  t9484 = t1817*t9473;
  t9485 = t1820*t9478;
  t9486 = t1823*t9482;
  t9487 = t9484 + t9485 + t9486;
  t9488 = -0.3*t9487;
  t9489 = t1866*t9473;
  t9490 = t1823*t9478;
  t9491 = t1898*t9482;
  t9492 = t9489 + t9490 + t9491;
  t9493 = 0.2*t9492;
  t9494 = t1903*t9473;
  t9495 = t1817*t9478;
  t9496 = t1866*t9482;
  t9497 = t9494 + t9495 + t9496;
  t9498 = -0.099999*t9497;
  t9499 = t9470 + t9471 + t9475 + t9479 + t9483 + t9488 + t9493 + t9498;
  t8826 = -6.000000000054e-7*t1537*t8823;
  t8837 = 0.2000000000018*t1537*t8833;
  t8843 = t1682*t8842;
  t8847 = t1753*t8846;
  t8853 = t1799*t8852;
  t8854 = t1817*t8842;
  t8855 = t1820*t8846;
  t8856 = t1823*t8852;
  t8857 = t8854 + t8855 + t8856;
  t8858 = -0.3*t8857;
  t8860 = t1866*t8842;
  t8861 = t1823*t8846;
  t8977 = t1898*t8852;
  t8978 = t8860 + t8861 + t8977;
  t8979 = 0.2*t8978;
  t8980 = t1903*t8842;
  t8981 = t1817*t8846;
  t8982 = t1866*t8852;
  t9018 = t8980 + t8981 + t8982;
  t9049 = -0.099999*t9018;
  t9081 = t8826 + t8837 + t8843 + t8847 + t8853 + t8858 + t8979 + t9049;
  t9539 = t8654*t1541;
  t9540 = -1.*t8792*t1547*t1551;
  t9541 = t9539 + t9540;
  t9538 = t1715*t9294;
  t9542 = 3.e-6*t1537*t9541;
  t9543 = t9538 + t9542;
  t9545 = t1484*t9541;
  t9546 = t9304 + t9545;
  t9548 = 3.e-6*t1545*t9294;
  t9549 = -1.*t1545*t9541;
  t9550 = t9548 + t9549;
  t9572 = 3.e-6*t1484*t9294;
  t9573 = -1.*t1484*t9541;
  t9574 = t9572 + t9573;
  t9577 = -9.e-12*t1545*t9294;
  t9578 = 3.e-6*t1545*t9541;
  t9579 = t9577 + t9578;
  t9295 = 0.2000000000018*t1537*t9294;
  t9301 = -6.000000000054e-7*t1537*t9300;
  t9600 = t9304 + t9305;
  t9602 = t9332 + t9333;
  t9604 = t9337 + t9338;
  t9432 = 0.2000000000018*t1540*t1541*t1545*t8792;
  t9433 = -0.2000000000018*t1484*t8792*t1547;
  t9434 = 6.000000000054e-7*t1540*t1545*t8792*t1551;
  t9439 = t1799*t9438;
  t9444 = t1753*t9443;
  t9449 = t1682*t9448;
  t9450 = t1866*t9438;
  t9451 = t1817*t9443;
  t9452 = t1903*t9448;
  t9453 = t9450 + t9451 + t9452;
  t9454 = -0.099999*t9453;
  t9455 = t1823*t9438;
  t9456 = t1820*t9443;
  t9457 = t1817*t9448;
  t9458 = t9455 + t9456 + t9457;
  t9459 = -0.3*t9458;
  t9460 = t1898*t9438;
  t9461 = t1823*t9443;
  t9462 = t1866*t9448;
  t9466 = t9460 + t9461 + t9462;
  t9467 = 0.2*t9466;
  t9468 = t9432 + t9433 + t9434 + t9439 + t9444 + t9449 + t9454 + t9459 + t9467;
  t9207 = 0.2000000000018*t1484*t8654*t1540;
  t9220 = 0.2000000000018*t1545*t9092;
  t9221 = -6.000000000054e-7*t1545*t8833;
  t9226 = t1799*t9225;
  t9232 = t1682*t9230;
  t9235 = t1753*t9234;
  t9263 = t1898*t9225;
  t9264 = t1866*t9230;
  t9265 = t1823*t9234;
  t9266 = t9263 + t9264 + t9265;
  t9275 = 0.2*t9266;
  t9279 = t1866*t9225;
  t9280 = t1903*t9230;
  t9281 = t1817*t9234;
  t9282 = t9279 + t9280 + t9281;
  t9283 = -0.099999*t9282;
  t9284 = t1823*t9225;
  t9285 = t1817*t9230;
  t9286 = t1820*t9234;
  t9287 = t9284 + t9285 + t9286;
  t9288 = -0.3*t9287;
  t9289 = t9207 + t9220 + t9221 + t9226 + t9232 + t9235 + t9275 + t9283 + t9288;
  t9629 = t1541*t8792*t1547;
  t9630 = t8654*t1551;
  t9631 = t9629 + t9630;
  t9635 = 3.e-6*t1484*t9631;
  t9636 = -9.e-12*t1484*t9541;
  t9637 = t9302 + t9635 + t9636;
  t9639 = -1.*t1484*t9631;
  t9640 = 3.e-6*t1484*t9541;
  t9641 = t9331 + t9639 + t9640;
  t9645 = 1.000000000009*t1484*t1540*t8792;
  t9646 = t1545*t9631;
  t9647 = -3.e-6*t1545*t9541;
  t9648 = t9645 + t9646 + t9647;
  t9570 = -6.000000000054e-7*t1545*t9294;
  t9571 = 0.2000000000018*t1545*t9541;
  t9575 = t1799*t9574;
  t9576 = t1753*t9550;
  t9580 = t1682*t9579;
  t9581 = t1866*t9574;
  t9582 = t1817*t9550;
  t9584 = t1903*t9579;
  t9585 = t9581 + t9582 + t9584;
  t9586 = -0.099999*t9585;
  t9587 = t1823*t9574;
  t9588 = t1820*t9550;
  t9589 = t1817*t9579;
  t9590 = t9587 + t9588 + t9589;
  t9591 = -0.3*t9590;
  t9593 = t1898*t9574;
  t9594 = t1823*t9550;
  t9595 = t1866*t9579;
  t9596 = t9593 + t9594 + t9595;
  t9597 = 0.2*t9596;
  t9598 = t9570 + t9571 + t9575 + t9576 + t9580 + t9586 + t9591 + t9597;
  t9668 = 1.000000000009*t1540*t1545*t8792;
  t9669 = t9668 + t9639 + t9640;
  t9671 = 3.e-6*t1484*t1540*t8792;
  t9672 = 3.e-6*t1545*t9631;
  t9673 = -9.e-12*t1545*t9541;
  t9674 = t9671 + t9672 + t9673;
  t9676 = -1.*t1484*t1540*t8792;
  t9678 = -1.*t1545*t9631;
  t9679 = t9676 + t9678 + t9578;
  t9373 = t2046*t9371;
  t9407 = t2072*t9378;
  t9412 = t2096*t9411;
  t9413 = t2103*t9371;
  t9414 = -1.000000000009*t1593*t9378;
  t9415 = t2107*t9411;
  t9416 = t9413 + t9414 + t9415;
  t9417 = 0.2*t9416;
  t9418 = -1.8e-11*t1593*t9371;
  t9419 = t2119*t9378;
  t9422 = t2103*t9411;
  t9423 = t9418 + t9419 + t9422;
  t9424 = -0.099999*t9423;
  t9425 = t2119*t9371;
  t9426 = t2133*t9378;
  t9427 = -1.000000000009*t1593*t9411;
  t9428 = t9425 + t9426 + t9427;
  t9429 = -0.3*t9428;
  t9430 = t9373 + t9407 + t9412 + t9417 + t9424 + t9429;
  t9099 = t2046*t9098;
  t9105 = t2072*t9104;
  t9110 = t2096*t9109;
  t9114 = t2103*t9098;
  t9115 = -1.000000000009*t1593*t9104;
  t9116 = t2107*t9109;
  t9117 = t9114 + t9115 + t9116;
  t9121 = 0.2*t9117;
  t9123 = -1.8e-11*t1593*t9098;
  t9124 = t2119*t9104;
  t9125 = t2103*t9109;
  t9126 = t9123 + t9124 + t9125;
  t9128 = -0.099999*t9126;
  t9129 = t2119*t9098;
  t9130 = t2133*t9104;
  t9131 = -1.000000000009*t1593*t9109;
  t9132 = t9129 + t9130 + t9131;
  t9135 = -0.3*t9132;
  t9136 = t9099 + t9105 + t9110 + t9121 + t9128 + t9135;
  t9544 = t2046*t9543;
  t9547 = t2072*t9546;
  t9551 = t2096*t9550;
  t9552 = t2103*t9543;
  t9553 = -1.000000000009*t1593*t9546;
  t9554 = t2107*t9550;
  t9555 = t9552 + t9553 + t9554;
  t9556 = 0.2*t9555;
  t9557 = -1.8e-11*t1593*t9543;
  t9558 = t2119*t9546;
  t9559 = t2103*t9550;
  t9560 = t9557 + t9558 + t9559;
  t9561 = -0.099999*t9560;
  t9562 = t2119*t9543;
  t9563 = t2133*t9546;
  t9564 = -1.000000000009*t1593*t9550;
  t9565 = t9562 + t9563 + t9564;
  t9566 = -0.3*t9565;
  t9567 = t9544 + t9547 + t9551 + t9556 + t9561 + t9566;
  t8255 = -1.62e-17*t1554;
  t8256 = 0.1*t2032;
  t8257 = 0.2*t2119;
  t8258 = t8255 + t8256 + t8257;
  t8265 = 0.2000000000018*t1554;
  t8267 = t8266 + t1593;
  t8268 = 0.1*t8267;
  t8269 = t8265 + t2089 + t8268;
  t8274 = 0.1000000000009*t1554;
  t8275 = t8266 + t1734;
  t8276 = 0.2*t8275;
  t8277 = -9.e-7*t2119;
  t8278 = t8274 + t8276 + t8277;
  t9706 = 3.e-6*t1540*t1545*t8792;
  t9707 = 3.e-6*t1537*t9631;
  t9708 = t1715*t9541;
  t9709 = t9706 + t9707 + t9708;
  t8284 = t8283 + t1734;
  t9711 = -1.*t1540*t1545*t8792;
  t9712 = t1484*t9631;
  t9713 = t9711 + t9712 + t9542;
  t9715 = -1.*t1811*t1540*t8792;
  t9716 = t9715 + t9678 + t9578;
  t8296 = t8283 + t1593;
  t9670 = t2096*t9669;
  t9675 = t2046*t9674;
  t9680 = t2072*t9679;
  t9681 = -1.000000000009*t1593*t9669;
  t9682 = t2119*t9674;
  t9683 = t2133*t9679;
  t9684 = t9681 + t9682 + t9683;
  t9685 = -0.3*t9684;
  t9686 = t2103*t9669;
  t9687 = -1.8e-11*t1593*t9674;
  t9688 = t2119*t9679;
  t9689 = t9686 + t9687 + t9688;
  t9690 = -0.099999*t9689;
  t9691 = t2107*t9669;
  t9692 = t2103*t9674;
  t9693 = -1.000000000009*t1593*t9679;
  t9694 = t9691 + t9692 + t9693;
  t9695 = 0.2*t9694;
  t9696 = t9670 + t9675 + t9680 + t9685 + t9690 + t9695;
  t9722 = t2103*t9709;
  t9797 = 0.2000000000018*t1537*t1540*t1541*t8792;
  t9798 = -0.2000000000018*t1545*t8792*t1547;
  t9799 = 6.000000000054e-7*t1537*t1540*t8792*t1551;
  t9800 = t1682*t9371;
  t9801 = t1753*t9378;
  t9802 = t1799*t9411;
  t9803 = t1817*t9371;
  t9804 = t1820*t9378;
  t9805 = t1823*t9411;
  t9806 = t9803 + t9804 + t9805;
  t9807 = -0.3*t9806;
  t9808 = t1866*t9371;
  t9810 = t1823*t9378;
  t9813 = t1898*t9411;
  t9814 = t9808 + t9810 + t9813;
  t9815 = 0.2*t9814;
  t9816 = t1903*t9371;
  t9818 = t1817*t9378;
  t9819 = t1866*t9411;
  t9820 = t9816 + t9818 + t9819;
  t9821 = -0.099999*t9820;
  t9823 = t9797 + t9798 + t9799 + t9800 + t9801 + t9802 + t9807 + t9815 + t9821;
  t9766 = 0.2000000000018*t8654*t1540*t1545;
  t9770 = 0.2000000000018*t1537*t9092;
  t9773 = -6.000000000054e-7*t1537*t8833;
  t9774 = t1682*t9098;
  t9775 = t1753*t9104;
  t9778 = t1799*t9109;
  t9781 = t1817*t9098;
  t9782 = t1820*t9104;
  t9783 = t1823*t9109;
  t9784 = t9781 + t9782 + t9783;
  t9785 = -0.3*t9784;
  t9786 = t1866*t9098;
  t9787 = t1823*t9104;
  t9788 = t1898*t9109;
  t9789 = t9786 + t9787 + t9788;
  t9790 = 0.2*t9789;
  t9791 = t1903*t9098;
  t9792 = t1817*t9104;
  t9793 = t1866*t9109;
  t9794 = t9791 + t9792 + t9793;
  t9795 = -0.099999*t9794;
  t9796 = t9766 + t9770 + t9773 + t9774 + t9775 + t9778 + t9785 + t9790 + t9795;
  t9824 = -6.000000000054e-7*t1537*t9294;
  t9825 = 0.2000000000018*t1537*t9541;
  t9826 = t1682*t9543;
  t9837 = t1753*t9546;
  t9844 = t1799*t9550;
  t9848 = t1817*t9543;
  t9849 = t1820*t9546;
  t9850 = t9848 + t9849 + t9594;
  t9851 = -0.3*t9850;
  t9852 = t1866*t9543;
  t9853 = t1823*t9546;
  t9854 = t1898*t9550;
  t9855 = t9852 + t9853 + t9854;
  t9856 = 0.2*t9855;
  t9857 = t1903*t9543;
  t9858 = t1817*t9546;
  t9859 = t1866*t9550;
  t9860 = t9857 + t9858 + t9859;
  t9861 = -0.099999*t9860;
  t9862 = t9824 + t9825 + t9826 + t9837 + t9844 + t9851 + t9856 + t9861;
  t9886 = t2046*t9709;
  t9896 = t2072*t9713;
  t9908 = t2096*t9716;
  t9909 = -1.000000000009*t1593*t9713;
  t9910 = t2107*t9716;
  t9911 = t9722 + t9909 + t9910;
  t9912 = 0.2*t9911;
  t9913 = -1.8e-11*t1593*t9709;
  t9914 = t2119*t9713;
  t9915 = t2103*t9716;
  t9916 = t9913 + t9914 + t9915;
  t9917 = -0.099999*t9916;
  t9918 = t2119*t9709;
  t9920 = t2133*t9713;
  t9921 = -1.000000000009*t1593*t9716;
  t9922 = t9918 + t9920 + t9921;
  t9923 = -0.3*t9922;
  t9924 = t9886 + t9896 + t9908 + t9912 + t9917 + t9923;
  t9863 = 0.2000000000018*t1484*t1540*t8792;
  t9864 = 0.2000000000018*t1545*t9631;
  t9865 = -6.000000000054e-7*t1545*t9541;
  t9866 = t1799*t9669;
  t9868 = t1682*t9674;
  t9869 = t1753*t9679;
  t9870 = t1898*t9669;
  t9871 = t1866*t9674;
  t9872 = t1823*t9679;
  t9873 = t9870 + t9871 + t9872;
  t9874 = 0.2*t9873;
  t9875 = t1866*t9669;
  t9876 = t1903*t9674;
  t9877 = t1817*t9679;
  t9878 = t9875 + t9876 + t9877;
  t9879 = -0.099999*t9878;
  t9880 = t1823*t9669;
  t9881 = t1817*t9674;
  t9882 = t1820*t9679;
  t9883 = t9880 + t9881 + t9882;
  t9884 = -0.3*t9883;
  t9885 = t9863 + t9864 + t9865 + t9866 + t9868 + t9869 + t9874 + t9879 + t9884;
  t9937 = t1715*t8654*t1540*t1541;
  t9938 = 3.e-6*t1537*t8654*t1540*t1551;
  t9939 = t9937 + t9938;
  t9941 = t1484*t8654*t1540*t1551;
  t9942 = t8658 + t9941;
  t9944 = 3.e-6*t8654*t1540*t1541*t1545;
  t9945 = -1.*t8654*t1540*t1545*t1551;
  t9946 = t9944 + t9945;
  t9968 = -3.e-6*t1537*t8654*t1540*t1541;
  t9969 = 3.e-6*t8654*t1545*t1547;
  t9970 = t1715*t8654*t1540*t1551;
  t9972 = t9968 + t9969 + t9970;
  t9975 = -1.*t1484*t8654*t1540*t1541;
  t9976 = -1.*t8654*t1545*t1547;
  t9977 = t9975 + t9976 + t9938;
  t9998 = t8654*t1540*t1541*t1545;
  t9999 = -1.*t1811*t8654*t1547;
  t10000 = 3.e-6*t8654*t1540*t1545*t1551;
  t10001 = t9998 + t9999 + t10000;
  t10025 = 1.000000000009*t8654*t1545*t1547;
  t10028 = 3.e-6*t1484*t8654*t1540*t1551;
  t10029 = t8667 + t10025 + t10028;
  t10031 = -3.e-6*t8654*t1540*t1541*t1545;
  t10032 = 3.e-6*t1484*t8654*t1547;
  t10033 = -9.e-12*t8654*t1540*t1545*t1551;
  t10034 = t10031 + t10032 + t10033;
  t10036 = -1.*t1484*t8654*t1547;
  t10037 = t9998 + t10036 + t10000;
  t10059 = 3.e-6*t1537*t8654*t1541*t1547;
  t10060 = -1.*t1715*t8654*t1547*t1551;
  t10061 = t9083 + t10059 + t10060;
  t10064 = t1484*t8654*t1541*t1547;
  t10065 = -3.e-6*t1537*t8654*t1547*t1551;
  t10066 = t9100 + t10064 + t10065;
  t10068 = -1.*t8654*t1541*t1545*t1547;
  t10069 = -3.e-6*t8654*t1545*t1547*t1551;
  t10071 = t9106 + t10068 + t10069;
  t9935 = -6.000000000054e-7*t1537*t8654*t1540*t1541;
  t9936 = 0.2000000000018*t1537*t8654*t1540*t1551;
  t9940 = t1682*t9939;
  t9943 = t1753*t9942;
  t9947 = t1799*t9946;
  t9948 = t1817*t9939;
  t9949 = t1820*t9942;
  t9950 = t1823*t9946;
  t9951 = t9948 + t9949 + t9950;
  t9952 = -0.3*t9951;
  t9953 = t1866*t9939;
  t9954 = t1823*t9942;
  t9956 = t1898*t9946;
  t9957 = t9953 + t9954 + t9956;
  t9958 = 0.2*t9957;
  t9959 = t1903*t9939;
  t9960 = t1817*t9942;
  t9961 = t1866*t9946;
  t9962 = t9959 + t9960 + t9961;
  t9963 = -0.099999*t9962;
  t9964 = t9935 + t9936 + t9940 + t9943 + t9947 + t9952 + t9958 + t9963;
  t10111 = t9096 + t9097;
  t10113 = t9103 + t8841;
  t10115 = t9107 + t9108;
  t10154 = t1541*t8792;
  t10155 = t8654*t1547*t1551;
  t10156 = t10154 + t10155;
  t10153 = t1715*t9092;
  t10157 = 3.e-6*t1537*t10156;
  t10158 = t10153 + t10157;
  t10160 = t1484*t10156;
  t10161 = t9096 + t10160;
  t10163 = -1.*t1545*t10156;
  t10164 = t9228 + t10163;
  t10201 = 3.e-6*t1484*t9092;
  t10202 = -1.*t1484*t10156;
  t10203 = t10201 + t10202;
  t10206 = -9.e-12*t1545*t9092;
  t10207 = 3.e-6*t1545*t10156;
  t10208 = t10206 + t10207;
  t10020 = -0.2000000000018*t8654*t1540*t1541*t1545;
  t10021 = 0.2000000000018*t1484*t8654*t1547;
  t10022 = -6.000000000054e-7*t8654*t1540*t1545*t1551;
  t10030 = t1799*t10029;
  t10035 = t1682*t10034;
  t10038 = t1753*t10037;
  t10039 = t1898*t10029;
  t10040 = t1866*t10034;
  t10041 = t1823*t10037;
  t10042 = t10039 + t10040 + t10041;
  t10043 = 0.2*t10042;
  t10044 = t1866*t10029;
  t10045 = t1903*t10034;
  t10046 = t1817*t10037;
  t10047 = t10044 + t10045 + t10046;
  t10048 = -0.099999*t10047;
  t10049 = t1823*t10029;
  t10050 = t1817*t10034;
  t10051 = t1820*t10037;
  t10052 = t10049 + t10050 + t10051;
  t10053 = -0.3*t10052;
  t10054 = t10020 + t10021 + t10022 + t10030 + t10035 + t10038 + t10043 + t10048 + t10053;
  t10234 = 3.e-6*t1484*t8823;
  t10235 = -9.e-12*t1484*t10156;
  t10236 = t9083 + t10234 + t10235;
  t10238 = -1.*t1484*t8823;
  t10239 = 3.e-6*t1484*t10156;
  t10240 = t9100 + t10238 + t10239;
  t10242 = -1.000000000009*t1484*t8654*t1540;
  t10243 = t1545*t8823;
  t10244 = -3.e-6*t1545*t10156;
  t10245 = t10242 + t10243 + t10244;
  t10183 = -6.000000000054e-7*t1545*t9092;
  t10196 = 0.2000000000018*t1545*t10156;
  t10204 = t1799*t10203;
  t10205 = t1753*t10164;
  t10209 = t1682*t10208;
  t10210 = t1866*t10203;
  t10211 = t1817*t10164;
  t10212 = t1903*t10208;
  t10213 = t10210 + t10211 + t10212;
  t10214 = -0.099999*t10213;
  t10215 = t1823*t10203;
  t10216 = t1820*t10164;
  t10217 = t1817*t10208;
  t10218 = t10215 + t10216 + t10217;
  t10219 = -0.3*t10218;
  t10220 = t1898*t10203;
  t10221 = t1823*t10164;
  t10222 = t1866*t10208;
  t10223 = t10220 + t10221 + t10222;
  t10224 = 0.2*t10223;
  t10225 = t10183 + t10196 + t10204 + t10205 + t10209 + t10214 + t10219 + t10224;
  t10268 = -1.000000000009*t8654*t1540*t1545;
  t10269 = t10268 + t10238 + t10239;
  t10271 = -3.e-6*t1484*t8654*t1540;
  t10272 = -9.e-12*t1545*t10156;
  t10273 = t10271 + t8848 + t10272;
  t10275 = t1484*t8654*t1540;
  t10276 = -1.*t1545*t8823;
  t10277 = t10275 + t10276 + t10207;
  t9974 = t2046*t9972;
  t9997 = t2072*t9977;
  t10002 = t2096*t10001;
  t10003 = t2103*t9972;
  t10004 = -1.000000000009*t1593*t9977;
  t10005 = t2107*t10001;
  t10006 = t10003 + t10004 + t10005;
  t10007 = 0.2*t10006;
  t10008 = -1.8e-11*t1593*t9972;
  t10009 = t2119*t9977;
  t10010 = t2103*t10001;
  t10011 = t10008 + t10009 + t10010;
  t10012 = -0.099999*t10011;
  t10013 = t2119*t9972;
  t10014 = t2133*t9977;
  t10015 = -1.000000000009*t1593*t10001;
  t10016 = t10013 + t10014 + t10015;
  t10017 = -0.3*t10016;
  t10018 = t9974 + t9997 + t10002 + t10007 + t10012 + t10017;
  t10159 = t2046*t10158;
  t10162 = t2072*t10161;
  t10165 = t2096*t10164;
  t10166 = t2103*t10158;
  t10167 = -1.000000000009*t1593*t10161;
  t10168 = t2107*t10164;
  t10169 = t10166 + t10167 + t10168;
  t10170 = 0.2*t10169;
  t10171 = -1.8e-11*t1593*t10158;
  t10172 = t2119*t10161;
  t10173 = t2103*t10164;
  t10174 = t10171 + t10172 + t10173;
  t10175 = -0.099999*t10174;
  t10176 = t2119*t10158;
  t10177 = t2133*t10161;
  t10178 = -1.000000000009*t1593*t10164;
  t10179 = t10176 + t10177 + t10178;
  t10180 = -0.3*t10179;
  t10181 = t10159 + t10162 + t10165 + t10170 + t10175 + t10180;
  t10301 = -3.e-6*t8654*t1540*t1545;
  t10302 = t1715*t10156;
  t10303 = t10301 + t8844 + t10302;
  t10305 = t8654*t1540*t1545;
  t10306 = t1484*t8823;
  t10307 = t10305 + t10306 + t10157;
  t10309 = t1811*t8654*t1540;
  t10310 = t10309 + t10276 + t10207;
  t10270 = t2096*t10269;
  t10274 = t2046*t10273;
  t10278 = t2072*t10277;
  t10279 = -1.000000000009*t1593*t10269;
  t10280 = t2119*t10273;
  t10281 = t2133*t10277;
  t10282 = t10279 + t10280 + t10281;
  t10284 = -0.3*t10282;
  t10285 = t2103*t10269;
  t10286 = -1.8e-11*t1593*t10273;
  t10287 = t2119*t10277;
  t10288 = t10285 + t10286 + t10287;
  t10289 = -0.099999*t10288;
  t10290 = t2107*t10269;
  t10291 = t2103*t10273;
  t10292 = -1.000000000009*t1593*t10277;
  t10293 = t10290 + t10291 + t10292;
  t10294 = 0.2*t10293;
  t10295 = t10270 + t10274 + t10278 + t10284 + t10289 + t10294;
  t10312 = t2103*t10303;
  p_output1[0]=(t1544 + t1548 + t1552 + t1682*t1717 + t1753*t1778 + t1799*t1814 - 0.3*(t1717*t1817 + t1778*t1820 + t1814*t1823) + 0.2*(t1778*t1823 + t1717*t1866 + t1814*t1898) - 0.099999*(t1778*t1817 + t1814*t1866 + t1717*t1903))*var2[4] + t2007*var2[5] + t2227*var2[15] + t2138*var2[17];
  p_output1[1]=t2007*var2[4] + (t1544 + t1552 + t1682*t2234 + t1753*t2244 + t1799*t2246 - 0.3*(t1817*t2234 + t1820*t2244 + t1823*t2246) - 0.099999*(t1903*t2234 + t1817*t2244 + t1866*t2246) + 0.2*(t1866*t2234 + t1823*t2244 + t1898*t2246))*var2[5] + t7051*var2[15] + t2349*var2[17];
  p_output1[2]=t2227*var2[4] + t7051*var2[5] + (0.2000000000018*t1484*t1540*t1541 + t1548 + 6.000000000054e-7*t1484*t1540*t1551 + t1753*t8072 + t1682*t8155 + t1799*t8187 - 0.3*(t1820*t8072 + t1817*t8155 + t1823*t8187) - 0.099999*(t1817*t8072 + t1903*t8155 + t1866*t8187) + 0.2*(t1823*t8072 + t1866*t8155 + t1898*t8187))*var2[15] + t8057*var2[17];
  p_output1[3]=t2138*var2[4] + t2349*var2[5] + t8057*var2[15] + (t8258*t8263 + t8269*t8272 + t8278*t8280 - 0.099999*(-1.8e-11*t1554*t8263 + t2103*t8272 + t2043*t8280) - 0.3*(-1.000000000009*t1554*t8280 + t8282 + t8272*t8284) + 0.2*(t2043*t8263 - 1.000000000009*t1554*t8272 + t8280*t8296))*var2[17];
  p_output1[4]=1.;
  p_output1[5]=-0.2000000000018*t1540*t1545 - 0.2000000000018*t1537*t1541*t1547 - 6.000000000054e-7*t1537*t1547*t1551 + t1682*t2050 + t1753*t2081 + t1799*t2101 - 0.3*(t1817*t2050 + t1820*t2081 + t1823*t2101) - 0.099999*(t1903*t2050 + t1817*t2081 + t1866*t2101) + 0.2*(t1866*t2050 + t1823*t2081 + t1898*t2101);
  p_output1[6]=6.000000000054e-7*t1537*t1540*t1541 - 0.2000000000018*t1537*t1540*t1551 + t1682*t2285 + t1753*t2289 + t1799*t2294 - 0.099999*(t1903*t2285 + t1817*t2289 + t1866*t2294) + 0.2*(t1866*t2285 + t1823*t2289 + t1898*t2294) - 0.3*(t1817*t2285 + t1820*t2289 + t3402);
  p_output1[7]=0.2000000000018*t1540*t1541*t1545 - 0.2000000000018*t1484*t1547 + 6.000000000054e-7*t1540*t1545*t1551 + t1799*t7096 + t1753*t7103 + t1682*t7112 - 0.3*(t1823*t7096 + t1820*t7103 + t1817*t7112) + 0.2*(t1898*t7096 + t1823*t7103 + t1866*t7112) - 0.099999*(t1866*t7096 + t1817*t7103 + t1903*t7112);
  p_output1[8]=t2046*t8263 + t2072*t8272 + t2096*t8280 - 0.3*(t2119*t8263 + t2133*t8272 - 1.000000000009*t1593*t8280) - 0.099999*(-1.8e-11*t1593*t8263 + t2119*t8272 + t2103*t8280) + 0.2*(-1.000000000009*t1593*t8272 + t2107*t8280 + t8282);
  p_output1[9]=(t9291 + t9295 + t9301 + t1682*t9307 + t1753*t9334 + t1799*t9339 - 0.3*(t1817*t9307 + t1820*t9334 + t1823*t9339) - 0.099999*(t1903*t9307 + t1817*t9334 + t1866*t9339) + 0.2*(t1866*t9307 + t1823*t9334 + t1898*t9339))*var2[3] + t8788*var2[4] + t9081*var2[5] + t9289*var2[15] + t9136*var2[17];
  p_output1[10]=t8788*var2[3] + (-0.2000000000018*t1537*t1541*t1547*t8792 - 6.000000000054e-7*t1537*t1547*t1551*t8792 + t9291 + t1682*t9505 + t1753*t9509 + t1799*t9513 - 0.3*(t1817*t9505 + t1820*t9509 + t1823*t9513) - 0.099999*(t1903*t9505 + t1817*t9509 + t1866*t9513) + 0.2*(t1866*t9505 + t1823*t9509 + t1898*t9513))*var2[4] + t9499*var2[5] + t9468*var2[15] + t9430*var2[17];
  p_output1[11]=t9081*var2[3] + t9499*var2[4] + (t9295 + t9301 + t1682*t9600 + t1753*t9602 + t1799*t9604 - 0.3*(t1817*t9600 + t1820*t9602 + t1823*t9604) - 0.099999*(t1903*t9600 + t1817*t9602 + t1866*t9604) + 0.2*(t1866*t9600 + t1823*t9602 + t1898*t9604))*var2[5] + t9598*var2[15] + t9567*var2[17];
  p_output1[12]=t9289*var2[3] + t9468*var2[4] + t9598*var2[5] + (t9291 - 6.000000000054e-7*t1484*t9541 + 0.2000000000018*t1484*t9631 + t1682*t9637 + t1753*t9641 + t1799*t9648 - 0.3*(t1817*t9637 + t1820*t9641 + t1823*t9648) - 0.099999*(t1903*t9637 + t1817*t9641 + t1866*t9648) + 0.2*(t1866*t9637 + t1823*t9641 + t1898*t9648))*var2[15] + t9696*var2[17];
  p_output1[13]=t9136*var2[3] + t9430*var2[4] + t9567*var2[5] + t9696*var2[15] + (t8258*t9709 + t8269*t9713 + t8278*t9716 - 0.099999*(-1.8e-11*t1554*t9709 + t2103*t9713 + t2043*t9716) + 0.2*(t2043*t9709 - 1.000000000009*t1554*t9713 + t8296*t9716) - 0.3*(t8284*t9713 - 1.000000000009*t1554*t9716 + t9722))*var2[17];
  p_output1[14]=1.;
  p_output1[15]=t9796;
  p_output1[16]=t9823;
  p_output1[17]=t9862;
  p_output1[18]=t9885;
  p_output1[19]=t9924;
  p_output1[20]=t9796*var2[3] + t9823*var2[4] + t9862*var2[5] + t9885*var2[15] + t9924*var2[17];
  p_output1[21]=t9823*var2[3] + (t10061*t1682 + t10066*t1753 + t10071*t1799 - 0.3*(t10061*t1817 + t10066*t1820 + t10071*t1823) + 0.2*(t10066*t1823 + t10061*t1866 + t10071*t1898) - 0.099999*(t10066*t1817 + t10071*t1866 + t10061*t1903) + 0.2000000000018*t1537*t1541*t1547*t8654 + 6.000000000054e-7*t1537*t1547*t1551*t8654 + t9766)*var2[4] + t9964*var2[5] + t10054*var2[15] + t10018*var2[17];
  p_output1[22]=t9862*var2[3] + t9964*var2[4] + (t10111*t1682 + t10113*t1753 + t10115*t1799 - 0.3*(t10111*t1817 + t10113*t1820 + t10115*t1823) + 0.2*(t10113*t1823 + t10111*t1866 + t10115*t1898) - 0.099999*(t10113*t1817 + t10115*t1866 + t10111*t1903) + t9770 + t9773)*var2[5] + t10225*var2[15] + t10181*var2[17];
  p_output1[23]=t9885*var2[3] + t10054*var2[4] + t10225*var2[5] + (-6.000000000054e-7*t10156*t1484 + t10236*t1682 + t10240*t1753 + t10245*t1799 - 0.3*(t10236*t1817 + t10240*t1820 + t10245*t1823) + 0.2*(t10240*t1823 + t10236*t1866 + t10245*t1898) - 0.099999*(t10240*t1817 + t10245*t1866 + t10236*t1903) + 0.2000000000018*t1484*t8823 + t9766)*var2[15] + t10295*var2[17];
  p_output1[24]=t9924*var2[3] + t10018*var2[4] + t10181*var2[5] + t10295*var2[15] + (-0.099999*(-1.8e-11*t10303*t1554 + t10310*t2043 + t10307*t2103) + t10303*t8258 + t10307*t8269 + t10310*t8278 - 0.3*(t10312 - 1.000000000009*t10310*t1554 + t10307*t8284) + 0.2*(-1.000000000009*t10307*t1554 + t10303*t2043 + t10310*t8296))*var2[17];
  p_output1[25]=1.;
  p_output1[26]=0.2000000000018*t1540*t1545*t8792 - 6.000000000054e-7*t1537*t9541 + 0.2000000000018*t1537*t9631 + t1682*t9709 + t1753*t9713 + t1799*t9716 - 0.3*(t1817*t9709 + t1820*t9713 + t1823*t9716) - 0.099999*(t1903*t9709 + t1817*t9713 + t1866*t9716) + 0.2*(t1866*t9709 + t1823*t9713 + t1898*t9716);
  p_output1[27]=t10001*t1799 - 0.2000000000018*t1537*t1540*t1541*t8654 + 0.2000000000018*t1545*t1547*t8654 - 6.000000000054e-7*t1537*t1540*t1551*t8654 + t1682*t9972 + t1753*t9977 - 0.099999*(t10001*t1866 + t1903*t9972 + t1817*t9977) - 0.3*(t10001*t1823 + t1817*t9972 + t1820*t9977) + 0.2*(t10001*t1898 + t1866*t9972 + t1823*t9977);
  p_output1[28]=0.2000000000018*t10156*t1537 + t10158*t1682 + t10161*t1753 + t10164*t1799 - 0.3*(t10221 + t10158*t1817 + t10161*t1820) + 0.2*(t10161*t1823 + t10158*t1866 + t10164*t1898) - 0.099999*(t10161*t1817 + t10164*t1866 + t10158*t1903) - 6.000000000054e-7*t1537*t9092;
  p_output1[29]=-6.000000000054e-7*t10156*t1545 + t10273*t1682 + t10277*t1753 + t10269*t1799 - 0.3*(t10273*t1817 + t10277*t1820 + t10269*t1823) + 0.2*(t10277*t1823 + t10273*t1866 + t10269*t1898) - 0.099999*(t10277*t1817 + t10269*t1866 + t10273*t1903) - 0.2000000000018*t1484*t1540*t8654 + 0.2000000000018*t1545*t8823;
  p_output1[30]=t10303*t2046 + t10307*t2072 + t10310*t2096 + 0.2*(t10312 - 1.000000000009*t10307*t1593 + t10310*t2107) - 0.099999*(-1.8e-11*t10303*t1593 + t10310*t2103 + t10307*t2119) - 0.3*(-1.000000000009*t10310*t1593 + t10303*t2119 + t10307*t2133);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 31, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RightFrontFoot_FrontStance.hh"

namespace FrontStance
{

void J_dh_RightFrontFoot_FrontStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
