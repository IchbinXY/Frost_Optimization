/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 22:30:14 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t865;
  double t1294;
  double t1763;
  double t1898;
  double t2014;
  double t2024;
  double t2029;
  double t2149;
  double t2159;
  double t1982;
  double t1999;
  double t2002;
  double t2006;
  double t2204;
  double t2208;
  double t2635;
  double t2161;
  double t2162;
  double t2653;
  double t2412;
  double t2457;
  double t2496;
  double t2606;
  double t2624;
  double t2631;
  double t2699;
  double t2709;
  double t2755;
  double t2756;
  double t3027;
  double t3041;
  double t3053;
  double t3121;
  double t3135;
  double t3138;
  double t3141;
  double t3217;
  double t3220;
  double t3212;
  double t2654;
  double t3182;
  double t3228;
  double t2013;
  double t2035;
  double t2180;
  double t2209;
  double t2211;
  double t2647;
  double t2655;
  double t2661;
  double t2684;
  double t2689;
  double t2765;
  double t2769;
  double t2819;
  double t2982;
  double t3019;
  double t3924;
  double t3930;
  double t3946;
  double t3213;
  double t3961;
  double t3963;
  double t3966;
  double t4561;
  double t5421;
  double t5506;
  double t3389;
  double t3532;
  double t3583;
  double t6240;
  double t6256;
  double t6204;
  double t6208;
  double t6281;
  double t6260;
  double t6261;
  double t6262;
  double t6263;
  double t6296;
  double t6301;
  double t6302;
  double t6359;
  double t6360;
  double t6361;
  double t6362;
  double t6394;
  double t6421;
  double t6405;
  double t6529;
  double t6530;
  double t6531;
  double t6535;
  double t6538;
  double t6539;
  double t6546;
  double t6547;
  double t6573;
  double t6581;
  double t1998;
  double t2010;
  double t6641;
  double t6661;
  double t6673;
  double t6213;
  double t6257;
  double t6258;
  double t6259;
  double t6277;
  double t6282;
  double t6283;
  double t6284;
  double t6289;
  double t6343;
  double t6347;
  double t6351;
  double t6356;
  double t6358;
  double t6752;
  double t6762;
  double t6768;
  double t6775;
  double t6776;
  double t6408;
  double t6778;
  double t6779;
  double t6780;
  double t6493;
  double t6941;
  double t6942;
  double t6943;
  double t6945;
  double t6946;
  double t6948;
  double t3879;
  double t3880;
  double t3960;
  double t3978;
  double t5513;
  double t5515;
  double t5516;
  double t5517;
  double t5519;
  double t5521;
  double t5531;
  double t5535;
  double t5536;
  double t5537;
  double t5538;
  double t5539;
  double t5540;
  double t5544;
  double t5567;
  double t5641;
  double t6178;
  double t6992;
  double t6993;
  double t6994;
  double t6996;
  double t6997;
  double t6998;
  double t7000;
  double t7001;
  double t7002;
  double t7003;
  double t2003;
  double t7046;
  double t7050;
  double t7051;
  double t7052;
  double t7055;
  double t7072;
  double t6936;
  double t6940;
  double t6944;
  double t6949;
  double t6951;
  double t6952;
  double t6954;
  double t6955;
  double t6956;
  double t6959;
  double t6966;
  double t6972;
  double t6977;
  double t6978;
  double t6979;
  double t6983;
  double t6984;
  double t6985;
  double t6986;
  double t6987;
  double t6988;
  double t6518;
  double t6520;
  double t6521;
  double t6537;
  double t6559;
  double t6589;
  double t6590;
  double t6592;
  double t6597;
  double t6598;
  double t6599;
  double t6600;
  double t6601;
  double t6602;
  double t6606;
  double t6607;
  double t6611;
  double t6612;
  double t6618;
  double t6621;
  double t6624;
  double t6628;
  double t7146;
  double t7137;
  double t7138;
  double t7142;
  double t7143;
  double t7152;
  double t7158;
  double t7161;
  double t7214;
  double t7247;
  double t7283;
  double t6995;
  double t6999;
  double t7004;
  double t7005;
  double t7006;
  double t7007;
  double t7008;
  double t7014;
  double t7015;
  double t7016;
  double t7018;
  double t7019;
  double t7020;
  double t7022;
  double t7023;
  double t7025;
  double t7027;
  double t7028;
  double t7029;
  double t6773;
  double t6777;
  double t6781;
  double t6782;
  double t6783;
  double t6784;
  double t6785;
  double t6786;
  double t6787;
  double t6795;
  double t6805;
  double t6811;
  double t6812;
  double t6878;
  double t6886;
  double t6901;
  double t6906;
  double t6922;
  double t6932;
  double t6267;
  double t6333;
  double t6374;
  double t6399;
  double t6401;
  double t6412;
  double t6413;
  double t6414;
  double t6418;
  double t6422;
  double t6456;
  double t6473;
  double t6487;
  double t6491;
  double t6495;
  double t6499;
  double t6501;
  double t6502;
  double t6503;
  double t7279;
  double t7914;
  double t7925;
  double t7926;
  double t7932;
  double t7939;
  double t7943;
  double t7946;
  double t7947;
  double t7948;
  double t7950;
  double t7951;
  double t7955;
  double t7957;
  double t8010;
  double t8009;
  double t8011;
  double t8013;
  double t8016;
  double t8019;
  double t8020;
  double t8031;
  double t8032;
  double t8036;
  double t8047;
  double t8048;
  double t8049;
  double t8052;
  double t8053;
  double t8054;
  double t8080;
  double t8081;
  double t8082;
  double t8079;
  double t8083;
  double t8084;
  double t8085;
  double t8087;
  double t8088;
  double t8089;
  double t8091;
  double t8093;
  double t8094;
  double t8095;
  double t8123;
  double t8124;
  double t8126;
  double t8127;
  double t8129;
  double t8130;
  double t8131;
  double t8132;
  double t8135;
  double t8136;
  double t8159;
  double t8160;
  double t8161;
  double t8164;
  double t8165;
  double t8166;
  double t8168;
  double t8169;
  double t8170;
  double t8171;
  double t8173;
  double t8174;
  double t8176;
  double t8177;
  double t8179;
  double t8181;
  double t8183;
  double t8185;
  double t7916;
  double t7917;
  double t7921;
  double t7941;
  double t7949;
  double t7958;
  double t7959;
  double t7961;
  double t7962;
  double t7964;
  double t7965;
  double t7966;
  double t7967;
  double t7968;
  double t7969;
  double t7970;
  double t7971;
  double t7972;
  double t7973;
  double t7976;
  double t7978;
  double t7981;
  double t8208;
  double t8210;
  double t8213;
  double t8214;
  double t8217;
  double t8220;
  double t8221;
  double t8222;
  double t8224;
  double t8225;
  double t8226;
  double t8227;
  double t8256;
  double t8257;
  double t8259;
  double t8260;
  double t8262;
  double t8263;
  double t8266;
  double t8272;
  double t8274;
  double t8275;
  double t8314;
  double t8315;
  double t8319;
  double t8320;
  double t8321;
  double t8345;
  double t8347;
  double t8348;
  double t8158;
  double t8377;
  double t8378;
  double t8379;
  double t8383;
  double t8386;
  double t8387;
  double t8390;
  double t8391;
  double t8393;
  double t8300;
  double t8313;
  double t8318;
  double t8344;
  double t8349;
  double t8351;
  double t8352;
  double t8353;
  double t8355;
  double t8356;
  double t8358;
  double t8359;
  double t8360;
  double t8361;
  double t8362;
  double t8363;
  double t8364;
  double t8365;
  double t8367;
  double t8368;
  double t8370;
  double t8014;
  double t8029;
  double t8046;
  double t8051;
  double t8056;
  double t8057;
  double t8058;
  double t8060;
  double t8061;
  double t8062;
  double t8064;
  double t8065;
  double t8066;
  double t8068;
  double t8069;
  double t8071;
  double t8072;
  double t8073;
  double t8075;
  double t8076;
  double t8077;
  double t8422;
  double t8423;
  double t8425;
  double t8421;
  double t8426;
  double t8427;
  double t8430;
  double t8431;
  double t8434;
  double t8435;
  double t8436;
  double t8475;
  double t8477;
  double t8496;
  double t8500;
  double t8502;
  double t8503;
  double t8163;
  double t8167;
  double t8523;
  double t8525;
  double t8531;
  double t8251;
  double t8254;
  double t8255;
  double t8261;
  double t8265;
  double t8276;
  double t8277;
  double t8278;
  double t8279;
  double t8280;
  double t8281;
  double t8282;
  double t8283;
  double t8285;
  double t8286;
  double t8288;
  double t8289;
  double t8290;
  double t8291;
  double t8294;
  double t8295;
  double t8296;
  double t8119;
  double t8120;
  double t8121;
  double t8128;
  double t8133;
  double t8137;
  double t8139;
  double t8141;
  double t8142;
  double t8143;
  double t8144;
  double t8145;
  double t8146;
  double t8147;
  double t8148;
  double t8149;
  double t8150;
  double t8151;
  double t8152;
  double t8153;
  double t8154;
  double t8155;
  double t8562;
  double t8563;
  double t8583;
  double t8586;
  double t8587;
  double t8588;
  double t8590;
  double t8592;
  double t8593;
  double t8595;
  double t8596;
  double t8597;
  double t8598;
  double t8468;
  double t8472;
  double t8497;
  double t8499;
  double t8504;
  double t8505;
  double t8506;
  double t8507;
  double t8508;
  double t8509;
  double t8510;
  double t8511;
  double t8512;
  double t8513;
  double t8514;
  double t8515;
  double t8516;
  double t8517;
  double t8518;
  double t8520;
  double t8521;
  double t8633;
  double t8635;
  double t8640;
  double t8660;
  double t8687;
  double t8688;
  double t8692;
  double t8693;
  double t8695;
  double t8215;
  double t8223;
  double t8228;
  double t8229;
  double t8230;
  double t8231;
  double t8232;
  double t8233;
  double t8234;
  double t8235;
  double t8236;
  double t8238;
  double t8239;
  double t8240;
  double t8241;
  double t8243;
  double t8244;
  double t8245;
  double t8246;
  double t8086;
  double t8090;
  double t8097;
  double t8099;
  double t8100;
  double t8102;
  double t8103;
  double t8104;
  double t8105;
  double t8107;
  double t8108;
  double t8109;
  double t8110;
  double t8111;
  double t8112;
  double t8113;
  double t8114;
  double t8115;
  double t8116;
  double t8429;
  double t8433;
  double t8437;
  double t8438;
  double t8439;
  double t8441;
  double t8442;
  double t8443;
  double t8448;
  double t8450;
  double t8451;
  double t8453;
  double t8454;
  double t8455;
  double t8460;
  double t8462;
  double t8463;
  double t8465;
  double t8466;
  double t7132;
  double t7133;
  double t7134;
  double t7135;
  double t7145;
  double t7147;
  double t7149;
  double t7150;
  double t7163;
  double t7165;
  double t7166;
  double t7172;
  double t7181;
  double t8748;
  double t8749;
  double t8751;
  double t8752;
  double t7287;
  double t8755;
  double t8756;
  double t8757;
  double t8760;
  double t8761;
  double t7303;
  double t8639;
  double t8689;
  double t8697;
  double t8698;
  double t8699;
  double t8702;
  double t8715;
  double t8716;
  double t8721;
  double t8722;
  double t8723;
  double t8724;
  double t8725;
  double t8726;
  double t8727;
  double t8730;
  double t8731;
  double t8735;
  double t8739;
  double t8766;
  double t8838;
  double t8839;
  double t8841;
  double t8845;
  double t8846;
  double t8847;
  double t8848;
  double t8849;
  double t8850;
  double t8857;
  double t8859;
  double t8860;
  double t8861;
  double t8862;
  double t8863;
  double t8864;
  double t8865;
  double t8866;
  double t8867;
  double t8868;
  double t8870;
  double t8871;
  double t8799;
  double t8801;
  double t8802;
  double t8805;
  double t8810;
  double t8816;
  double t8817;
  double t8818;
  double t8819;
  double t8821;
  double t8822;
  double t8823;
  double t8825;
  double t8826;
  double t8829;
  double t8830;
  double t8832;
  double t8833;
  double t8834;
  double t8835;
  double t8836;
  double t8837;
  double t8872;
  double t8873;
  double t8874;
  double t8876;
  double t8877;
  double t8878;
  double t8879;
  double t8880;
  double t8881;
  double t8882;
  double t8883;
  double t8884;
  double t8885;
  double t8887;
  double t8888;
  double t8889;
  double t8890;
  double t8894;
  double t8895;
  double t8896;
  double t8942;
  double t8943;
  double t8944;
  double t8945;
  double t8946;
  double t8947;
  double t8948;
  double t8949;
  double t8951;
  double t8952;
  double t8953;
  double t8954;
  double t8958;
  double t8959;
  double t8966;
  double t8967;
  double t8968;
  double t8970;
  double t8898;
  double t8899;
  double t8901;
  double t8903;
  double t8904;
  double t8905;
  double t8924;
  double t8925;
  double t8926;
  double t8927;
  double t8928;
  double t8929;
  double t8930;
  double t8932;
  double t8934;
  double t8935;
  double t8936;
  double t8937;
  double t8938;
  double t8939;
  double t8940;
  double t8941;
  double t9008;
  double t9009;
  double t9010;
  double t9013;
  double t9015;
  double t9017;
  double t9018;
  double t9019;
  double t9049;
  double t9055;
  double t9061;
  double t9169;
  double t9259;
  double t9282;
  double t9285;
  double t9424;
  double t9475;
  double t9507;
  double t9530;
  double t10929;
  double t10979;
  double t11016;
  double t11041;
  double t11057;
  double t11067;
  double t11071;
  double t11241;
  double t11246;
  double t11713;
  double t11784;
  double t11786;
  double t11948;
  double t11973;
  double t12032;
  double t12054;
  double t12057;
  double t12058;
  double t9004;
  double t9007;
  double t9011;
  double t9016;
  double t9020;
  double t9023;
  double t9024;
  double t9025;
  double t9026;
  double t9027;
  double t9031;
  double t9032;
  double t9034;
  double t9036;
  double t9037;
  double t9038;
  double t9039;
  double t9040;
  double t9042;
  double t9043;
  double t9044;
  double t12207;
  double t12273;
  double t12285;
  double t12411;
  double t12412;
  double t12413;
  double t12410;
  double t12427;
  double t12439;
  double t12456;
  double t12459;
  double t12464;
  double t12475;
  double t12677;
  double t12692;
  double t12737;
  double t12742;
  double t12744;
  double t12745;
  double t10804;
  double t10807;
  double t10900;
  double t11038;
  double t11212;
  double t11247;
  double t11248;
  double t11249;
  double t11251;
  double t11252;
  double t11253;
  double t11255;
  double t11257;
  double t11373;
  double t11374;
  double t11375;
  double t11407;
  double t11507;
  double t11588;
  double t11608;
  double t11611;
  double t11613;
  double t13129;
  double t13131;
  double t13132;
  double t13135;
  double t13137;
  double t13139;
  double t13142;
  double t13144;
  double t13145;
  double t13173;
  double t12674;
  double t12676;
  double t12738;
  double t12740;
  double t12768;
  double t12770;
  double t12771;
  double t12773;
  double t12774;
  double t12775;
  double t12776;
  double t12778;
  double t12818;
  double t12851;
  double t12865;
  double t12884;
  double t12886;
  double t12927;
  double t13023;
  double t13029;
  double t13034;
  double t13657;
  double t13658;
  double t13660;
  double t13662;
  double t13663;
  double t13671;
  double t13672;
  double t13676;
  double t9211;
  double t9400;
  double t9589;
  double t9590;
  double t9609;
  double t9610;
  double t9631;
  double t9635;
  double t9657;
  double t9663;
  double t9671;
  double t10151;
  double t10268;
  double t10276;
  double t10279;
  double t10280;
  double t10281;
  double t10312;
  double t10667;
  double t12445;
  double t12460;
  double t12509;
  double t12510;
  double t12522;
  double t12524;
  double t12525;
  double t12526;
  double t12527;
  double t12528;
  double t12532;
  double t12533;
  double t12534;
  double t12561;
  double t12575;
  double t12583;
  double t12649;
  double t12658;
  double t12667;
  double t13843;
  double t13846;
  double t13848;
  double t13861;
  double t13874;
  double t13884;
  double t13889;
  double t13892;
  double t13659;
  double t13664;
  double t13678;
  double t13703;
  double t13706;
  double t13707;
  double t13734;
  double t13736;
  double t13738;
  double t13740;
  double t13742;
  double t13743;
  double t13773;
  double t13774;
  double t13777;
  double t13791;
  double t13802;
  double t13803;
  double t13822;
  double t13900;
  t865 = Cos(var1[15]);
  t1294 = -1.*t865;
  t1763 = 1. + t1294;
  t1898 = Cos(var1[4]);
  t2014 = Cos(var1[17]);
  t2024 = -1.*t2014;
  t2029 = 1. + t2024;
  t2149 = -3.e-6*t2029;
  t2159 = Sin(var1[17]);
  t1982 = Cos(var1[5]);
  t1999 = Sin(var1[15]);
  t2002 = Sin(var1[4]);
  t2006 = Sin(var1[5]);
  t2204 = 3.e-6*t2159;
  t2208 = t2149 + t2204;
  t2635 = 9.e-13*var1[17];
  t2161 = -3.e-6*t2159;
  t2162 = t2149 + t2161;
  t2653 = -9.e-12*t2029;
  t2412 = -3.e-6*t1763*t1898*t1982;
  t2457 = 3.e-6*t1999*t2002;
  t2496 = -9.e-12*t1763;
  t2606 = 1. + t2496;
  t2624 = t2606*t1898*t2006;
  t2631 = t2412 + t2457 + t2624;
  t2699 = -1.*t865*t1898*t1982;
  t2709 = -1.*t1999*t2002;
  t2755 = 3.e-6*t1763*t1898*t2006;
  t2756 = t2699 + t2709 + t2755;
  t3027 = t1898*t1982*t1999;
  t3041 = -1.000000000009*t1763;
  t3053 = 1. + t3041;
  t3121 = -1.*t3053*t2002;
  t3135 = 3.e-6*t1898*t1999*t2006;
  t3138 = t3027 + t3121 + t3135;
  t3141 = 3.e-6*t2029;
  t3217 = -1.000000000009*t2029;
  t3220 = 1. + t3217;
  t3212 = 9.e-12*t2029;
  t2654 = -1.*t2159;
  t3182 = t3141 + t2161;
  t3228 = t3141 + t2204;
  t2013 = 3.e-7*var1[17];
  t2035 = -1.62e-17*t2029;
  t2180 = 0.2*t2162;
  t2209 = 0.1*t2208;
  t2211 = t2013 + t2035 + t2180 + t2209;
  t2647 = 0.2000000000018*t2029;
  t2655 = t2653 + t2654;
  t2661 = 0.1*t2655;
  t2684 = -9.e-7*t2208;
  t2689 = t2635 + t2647 + t2661 + t2684;
  t2765 = 0.1000000000009*t2029;
  t2769 = -9.e-7*t2162;
  t2819 = t2653 + t2159;
  t2982 = 0.2*t2819;
  t3019 = t2635 + t2765 + t2769 + t2982;
  t3924 = t2606*t1982*t2002;
  t3930 = 3.e-6*t1763*t2002*t2006;
  t3946 = t3924 + t3930;
  t3213 = t3212 + t2159;
  t3961 = 3.e-6*t1763*t1982*t2002;
  t3963 = t865*t2002*t2006;
  t3966 = t3961 + t3963;
  t4561 = 3.e-6*t1982*t1999*t2002;
  t5421 = -1.*t1999*t2002*t2006;
  t5506 = t4561 + t5421;
  t3389 = t3212 + t2654;
  t3532 = -1.8e-11*t2029;
  t3583 = 1. + t3532;
  t6240 = 3.e-6*t2014;
  t6256 = t6240 + t2161;
  t6204 = -3.e-6*t2014;
  t6208 = t6204 + t2161;
  t6281 = -9.e-12*t2159;
  t6260 = -3.e-6*t1898*t1999;
  t6261 = -3.e-6*t1763*t1982*t2002;
  t6262 = t2606*t2002*t2006;
  t6263 = t6260 + t6261 + t6262;
  t6296 = t1898*t1999;
  t6301 = -1.*t865*t1982*t2002;
  t6302 = t6296 + t6301 + t3930;
  t6359 = t3053*t1898;
  t6360 = t1982*t1999*t2002;
  t6361 = 3.e-6*t1999*t2002*t2006;
  t6362 = t6359 + t6360 + t6361;
  t6394 = t6240 + t2204;
  t6421 = t6204 + t2204;
  t6405 = 9.e-12*t2159;
  t6529 = -1.000000000009*t1898*t1999;
  t6530 = t865*t1982*t2002;
  t6531 = 3.e-6*t865*t2002*t2006;
  t6535 = t6529 + t6530 + t6531;
  t6538 = -3.e-6*t865*t1898;
  t6539 = -3.e-6*t1982*t1999*t2002;
  t6546 = -9.e-12*t1999*t2002*t2006;
  t6547 = t6538 + t6539 + t6546;
  t6573 = t865*t1898;
  t6581 = t6573 + t6360 + t6361;
  t1998 = -0.2000000000018*t1763*t1898*t1982;
  t2010 = -6.000000000054e-7*t1763*t1898*t2006;
  t6641 = t2412 + t2624;
  t6661 = t2699 + t2755;
  t6673 = t3027 + t3135;
  t6213 = 0.2*t6208;
  t6257 = 0.1*t6256;
  t6258 = -1.62e-17*t2159;
  t6259 = 3.e-7 + t6213 + t6257 + t6258;
  t6277 = -9.e-7*t6256;
  t6282 = t2024 + t6281;
  t6283 = 0.1*t6282;
  t6284 = 0.2000000000018*t2159;
  t6289 = 9.e-13 + t6277 + t6283 + t6284;
  t6343 = -9.e-7*t6208;
  t6347 = t2014 + t6281;
  t6351 = 0.2*t6347;
  t6356 = 0.1000000000009*t2159;
  t6358 = 9.e-13 + t6343 + t6351 + t6356;
  t6752 = -1.*t2606*t1898*t1982;
  t6762 = -3.e-6*t1763*t1898*t2006;
  t6768 = t6752 + t6762;
  t6775 = -1.*t865*t1898*t2006;
  t6776 = t2412 + t6775;
  t6408 = t2024 + t6405;
  t6778 = -3.e-6*t1898*t1982*t1999;
  t6779 = t1898*t1999*t2006;
  t6780 = t6778 + t6779;
  t6493 = t2014 + t6405;
  t6941 = -3.e-6*t865*t1898*t1982;
  t6942 = t865*t1898*t2006;
  t6943 = t6941 + t6942;
  t6945 = 9.e-12*t1898*t1982*t1999;
  t6946 = -3.e-6*t1898*t1999*t2006;
  t6948 = t6945 + t6946;
  t3879 = -6.000000000054e-7*t1763*t1982*t2002;
  t3880 = 0.2000000000018*t1763*t2002*t2006;
  t3960 = t2211*t3946;
  t3978 = t2689*t3966;
  t5513 = t3019*t5506;
  t5515 = t3182*t3946;
  t5516 = t3213*t3966;
  t5517 = t3220*t5506;
  t5519 = t5515 + t5516 + t5517;
  t5521 = -0.3*t5519;
  t5531 = t3228*t3946;
  t5535 = t3220*t3966;
  t5536 = t3389*t5506;
  t5537 = t5531 + t5535 + t5536;
  t5538 = 0.2*t5537;
  t5539 = t3583*t3946;
  t5540 = t3182*t3966;
  t5544 = t3228*t5506;
  t5567 = t5539 + t5540 + t5544;
  t5641 = -0.099999*t5567;
  t6178 = t3879 + t3880 + t3960 + t3978 + t5513 + t5521 + t5538 + t5641;
  t6992 = -1.000000000009*t1999*t2002;
  t6993 = -3.e-6*t865*t1898*t2006;
  t6994 = t2699 + t6992 + t6993;
  t6996 = -1.*t1898*t1982*t1999;
  t6997 = t865*t2002;
  t6998 = t6996 + t6997 + t6946;
  t7000 = 3.e-6*t1898*t1982*t1999;
  t7001 = -3.e-6*t865*t2002;
  t7002 = 9.e-12*t1898*t1999*t2006;
  t7003 = t7000 + t7001 + t7002;
  t2003 = 0.2000000000018*t1999*t2002;
  t7046 = t2699 + t2709 + t6993;
  t7050 = 3.e-6*t865*t1898*t1982;
  t7051 = 9.e-12*t865*t1898*t2006;
  t7052 = t7050 + t2457 + t7051;
  t7055 = -1.000000000009*t865*t2002;
  t7072 = t3027 + t7055 + t3135;
  t6936 = 6.000000000054e-7*t1898*t1982*t1999;
  t6940 = -0.2000000000018*t1898*t1999*t2006;
  t6944 = t3019*t6943;
  t6949 = t2211*t6948;
  t6951 = t2689*t6780;
  t6952 = t3389*t6943;
  t6954 = t3228*t6948;
  t6955 = t3220*t6780;
  t6956 = t6952 + t6954 + t6955;
  t6959 = 0.2*t6956;
  t6966 = t3228*t6943;
  t6972 = t3583*t6948;
  t6977 = t3182*t6780;
  t6978 = t6966 + t6972 + t6977;
  t6979 = -0.099999*t6978;
  t6983 = t3220*t6943;
  t6984 = t3182*t6948;
  t6985 = t3213*t6780;
  t6986 = t6983 + t6984 + t6985;
  t6987 = -0.3*t6986;
  t6988 = t6936 + t6940 + t6944 + t6949 + t6951 + t6959 + t6979 + t6987;
  t6518 = -0.2000000000018*t865*t1898;
  t6520 = -0.2000000000018*t1982*t1999*t2002;
  t6521 = -6.000000000054e-7*t1999*t2002*t2006;
  t6537 = t3019*t6535;
  t6559 = t2211*t6547;
  t6589 = t2689*t6581;
  t6590 = t3389*t6535;
  t6592 = t3228*t6547;
  t6597 = t3220*t6581;
  t6598 = t6590 + t6592 + t6597;
  t6599 = 0.2*t6598;
  t6600 = t3228*t6535;
  t6601 = t3583*t6547;
  t6602 = t3182*t6581;
  t6606 = t6600 + t6601 + t6602;
  t6607 = -0.099999*t6606;
  t6611 = t3220*t6535;
  t6612 = t3182*t6547;
  t6618 = t3213*t6581;
  t6621 = t6611 + t6612 + t6618;
  t6624 = -0.3*t6621;
  t6628 = t6518 + t6520 + t6521 + t6537 + t6559 + t6589 + t6599 + t6607 + t6624;
  t7146 = -9.e-12*t2014;
  t7137 = 3.e-6*t1763*t1898*t1982;
  t7138 = -3.e-6*t1999*t2002;
  t7142 = -1.*t2606*t1898*t2006;
  t7143 = t7137 + t7138 + t7142;
  t7152 = t865*t1898*t1982;
  t7158 = t1999*t2002;
  t7161 = t7152 + t7158 + t6762;
  t7214 = t3053*t2002;
  t7247 = t6996 + t7214 + t6946;
  t7283 = 9.e-12*t2014;
  t6995 = t6358*t6994;
  t6999 = t6289*t6998;
  t7004 = t6259*t7003;
  t7005 = -1.000000000009*t2159*t6994;
  t7006 = t6493*t6998;
  t7007 = t6421*t7003;
  t7008 = t7005 + t7006 + t7007;
  t7014 = -0.3*t7008;
  t7015 = t6408*t6994;
  t7016 = -1.000000000009*t2159*t6998;
  t7018 = t6394*t7003;
  t7019 = t7015 + t7016 + t7018;
  t7020 = 0.2*t7019;
  t7022 = t6394*t6994;
  t7023 = t6421*t6998;
  t7025 = -1.8e-11*t2159*t7003;
  t7027 = t7022 + t7023 + t7025;
  t7028 = -0.099999*t7027;
  t7029 = t6995 + t6999 + t7004 + t7014 + t7020 + t7028;
  t6773 = t6259*t6768;
  t6777 = t6289*t6776;
  t6781 = t6358*t6780;
  t6782 = t6394*t6768;
  t6783 = -1.000000000009*t2159*t6776;
  t6784 = t6408*t6780;
  t6785 = t6782 + t6783 + t6784;
  t6786 = 0.2*t6785;
  t6787 = -1.8e-11*t2159*t6768;
  t6795 = t6421*t6776;
  t6805 = t6394*t6780;
  t6811 = t6787 + t6795 + t6805;
  t6812 = -0.099999*t6811;
  t6878 = t6421*t6768;
  t6886 = t6493*t6776;
  t6901 = -1.000000000009*t2159*t6780;
  t6906 = t6878 + t6886 + t6901;
  t6922 = -0.3*t6906;
  t6932 = t6773 + t6777 + t6781 + t6786 + t6812 + t6922;
  t6267 = t6259*t6263;
  t6333 = t6289*t6302;
  t6374 = t6358*t6362;
  t6399 = t6394*t6263;
  t6401 = -1.000000000009*t2159*t6302;
  t6412 = t6408*t6362;
  t6413 = t6399 + t6401 + t6412;
  t6414 = 0.2*t6413;
  t6418 = -1.8e-11*t2159*t6263;
  t6422 = t6421*t6302;
  t6456 = t6394*t6362;
  t6473 = t6418 + t6422 + t6456;
  t6487 = -0.099999*t6473;
  t6491 = t6421*t6263;
  t6495 = t6493*t6302;
  t6499 = -1.000000000009*t2159*t6362;
  t6501 = t6491 + t6495 + t6499;
  t6502 = -0.3*t6501;
  t6503 = t6267 + t6333 + t6374 + t6414 + t6487 + t6502;
  t7279 = t6394*t7143;
  t7914 = Cos(var1[3]);
  t7925 = 3.e-6*t1763*t7914*t1898*t1982;
  t7926 = -3.e-6*t7914*t1999*t2002;
  t7932 = -1.*t2606*t7914*t1898*t2006;
  t7939 = t7925 + t7926 + t7932;
  t7943 = t865*t7914*t1898*t1982;
  t7946 = t7914*t1999*t2002;
  t7947 = -3.e-6*t1763*t7914*t1898*t2006;
  t7948 = t7943 + t7946 + t7947;
  t7950 = -1.*t7914*t1898*t1982*t1999;
  t7951 = t3053*t7914*t2002;
  t7955 = -3.e-6*t7914*t1898*t1999*t2006;
  t7957 = t7950 + t7951 + t7955;
  t8010 = Sin(var1[3]);
  t8009 = -1.*t7914*t1982*t2002;
  t8011 = t8010*t2006;
  t8013 = t8009 + t8011;
  t8016 = -1.*t1982*t8010;
  t8019 = -1.*t7914*t2002*t2006;
  t8020 = t8016 + t8019;
  t8031 = t2606*t8013;
  t8032 = 3.e-6*t1763*t8020;
  t8036 = t8031 + t8032;
  t8047 = 3.e-6*t1763*t8013;
  t8048 = t865*t8020;
  t8049 = t8047 + t8048;
  t8052 = 3.e-6*t1999*t8013;
  t8053 = -1.*t1999*t8020;
  t8054 = t8052 + t8053;
  t8080 = t7914*t1982*t2002;
  t8081 = -1.*t8010*t2006;
  t8082 = t8080 + t8081;
  t8079 = 3.e-6*t7914*t1898*t1999;
  t8083 = 3.e-6*t1763*t8082;
  t8084 = t2606*t8020;
  t8085 = t8079 + t8083 + t8084;
  t8087 = -1.*t7914*t1898*t1999;
  t8088 = t865*t8082;
  t8089 = t8087 + t8088 + t8032;
  t8091 = -1.*t3053*t7914*t1898;
  t8093 = -1.*t1999*t8082;
  t8094 = 3.e-6*t1999*t8020;
  t8095 = t8091 + t8093 + t8094;
  t8123 = 1.000000000009*t7914*t1898*t1999;
  t8124 = -1.*t865*t8082;
  t8126 = 3.e-6*t865*t8020;
  t8127 = t8123 + t8124 + t8126;
  t8129 = 3.e-6*t865*t7914*t1898;
  t8130 = 3.e-6*t1999*t8082;
  t8131 = -9.e-12*t1999*t8020;
  t8132 = t8129 + t8130 + t8131;
  t8135 = -1.*t865*t7914*t1898;
  t8136 = t8135 + t8093 + t8094;
  t8159 = -1.*t1982*t8010*t2002;
  t8160 = -1.*t7914*t2006;
  t8161 = t8159 + t8160;
  t8164 = -1.*t7914*t1982;
  t8165 = t8010*t2002*t2006;
  t8166 = t8164 + t8165;
  t8168 = -3.e-6*t1898*t1999*t8010;
  t8169 = 3.e-6*t1763*t8161;
  t8170 = t2606*t8166;
  t8171 = t8168 + t8169 + t8170;
  t8173 = t1898*t1999*t8010;
  t8174 = t865*t8161;
  t8176 = 3.e-6*t1763*t8166;
  t8177 = t8173 + t8174 + t8176;
  t8179 = t3053*t1898*t8010;
  t8181 = -1.*t1999*t8161;
  t8183 = 3.e-6*t1999*t8166;
  t8185 = t8179 + t8181 + t8183;
  t7916 = 0.2000000000018*t1763*t7914*t1898*t1982;
  t7917 = -0.2000000000018*t7914*t1999*t2002;
  t7921 = 6.000000000054e-7*t1763*t7914*t1898*t2006;
  t7941 = t2211*t7939;
  t7949 = t2689*t7948;
  t7958 = t3019*t7957;
  t7959 = t3182*t7939;
  t7961 = t3213*t7948;
  t7962 = t3220*t7957;
  t7964 = t7959 + t7961 + t7962;
  t7965 = -0.3*t7964;
  t7966 = t3228*t7939;
  t7967 = t3220*t7948;
  t7968 = t3389*t7957;
  t7969 = t7966 + t7967 + t7968;
  t7970 = 0.2*t7969;
  t7971 = t3583*t7939;
  t7972 = t3182*t7948;
  t7973 = t3228*t7957;
  t7976 = t7971 + t7972 + t7973;
  t7978 = -0.099999*t7976;
  t7981 = t7916 + t7917 + t7921 + t7941 + t7949 + t7958 + t7965 + t7970 + t7978;
  t8208 = 3.e-6*t1763*t1898*t1982*t8010;
  t8210 = -3.e-6*t1999*t8010*t2002;
  t8213 = -1.*t2606*t1898*t8010*t2006;
  t8214 = t8208 + t8210 + t8213;
  t8217 = t865*t1898*t1982*t8010;
  t8220 = t1999*t8010*t2002;
  t8221 = -3.e-6*t1763*t1898*t8010*t2006;
  t8222 = t8217 + t8220 + t8221;
  t8224 = -1.*t1898*t1982*t1999*t8010;
  t8225 = t3053*t8010*t2002;
  t8226 = -3.e-6*t1898*t1999*t8010*t2006;
  t8227 = t8224 + t8225 + t8226;
  t8256 = -1.*t865*t1898*t1982*t8010;
  t8257 = -1.000000000009*t1999*t8010*t2002;
  t8259 = -3.e-6*t865*t1898*t8010*t2006;
  t8260 = t8256 + t8257 + t8259;
  t8262 = t865*t8010*t2002;
  t8263 = t8224 + t8262 + t8226;
  t8266 = 3.e-6*t1898*t1982*t1999*t8010;
  t8272 = -3.e-6*t865*t8010*t2002;
  t8274 = 9.e-12*t1898*t1999*t8010*t2006;
  t8275 = t8266 + t8272 + t8274;
  t8314 = -1.*t2606*t1898*t1982*t8010;
  t8315 = t8314 + t8221;
  t8319 = -3.e-6*t1763*t1898*t1982*t8010;
  t8320 = -1.*t865*t1898*t8010*t2006;
  t8321 = t8319 + t8320;
  t8345 = -3.e-6*t1898*t1982*t1999*t8010;
  t8347 = t1898*t1999*t8010*t2006;
  t8348 = t8345 + t8347;
  t8158 = -0.2000000000018*t1898*t1999*t8010;
  t8377 = -3.e-6*t1763*t1982*t8010*t2002;
  t8378 = t2606*t8010*t2002*t2006;
  t8379 = t8168 + t8377 + t8378;
  t8383 = -1.*t865*t1982*t8010*t2002;
  t8386 = 3.e-6*t1763*t8010*t2002*t2006;
  t8387 = t8173 + t8383 + t8386;
  t8390 = t1982*t1999*t8010*t2002;
  t8391 = 3.e-6*t1999*t8010*t2002*t2006;
  t8393 = t8179 + t8390 + t8391;
  t8300 = 6.000000000054e-7*t1763*t1898*t1982*t8010;
  t8313 = -0.2000000000018*t1763*t1898*t8010*t2006;
  t8318 = t2211*t8315;
  t8344 = t2689*t8321;
  t8349 = t3019*t8348;
  t8351 = t3182*t8315;
  t8352 = t3213*t8321;
  t8353 = t3220*t8348;
  t8355 = t8351 + t8352 + t8353;
  t8356 = -0.3*t8355;
  t8358 = t3228*t8315;
  t8359 = t3220*t8321;
  t8360 = t3389*t8348;
  t8361 = t8358 + t8359 + t8360;
  t8362 = 0.2*t8361;
  t8363 = t3583*t8315;
  t8364 = t3182*t8321;
  t8365 = t3228*t8348;
  t8367 = t8363 + t8364 + t8365;
  t8368 = -0.099999*t8367;
  t8370 = t8300 + t8313 + t8318 + t8344 + t8349 + t8356 + t8362 + t8368;
  t8014 = -6.000000000054e-7*t1763*t8013;
  t8029 = 0.2000000000018*t1763*t8020;
  t8046 = t2211*t8036;
  t8051 = t2689*t8049;
  t8056 = t3019*t8054;
  t8057 = t3182*t8036;
  t8058 = t3213*t8049;
  t8060 = t3220*t8054;
  t8061 = t8057 + t8058 + t8060;
  t8062 = -0.3*t8061;
  t8064 = t3228*t8036;
  t8065 = t3220*t8049;
  t8066 = t3389*t8054;
  t8068 = t8064 + t8065 + t8066;
  t8069 = 0.2*t8068;
  t8071 = t3583*t8036;
  t8072 = t3182*t8049;
  t8073 = t3228*t8054;
  t8075 = t8071 + t8072 + t8073;
  t8076 = -0.099999*t8075;
  t8077 = t8014 + t8029 + t8046 + t8051 + t8056 + t8062 + t8069 + t8076;
  t8422 = t7914*t1982;
  t8423 = -1.*t8010*t2002*t2006;
  t8425 = t8422 + t8423;
  t8421 = t2606*t8161;
  t8426 = 3.e-6*t1763*t8425;
  t8427 = t8421 + t8426;
  t8430 = t865*t8425;
  t8431 = t8169 + t8430;
  t8434 = 3.e-6*t1999*t8161;
  t8435 = -1.*t1999*t8425;
  t8436 = t8434 + t8435;
  t8475 = 3.e-6*t865*t8161;
  t8477 = -1.*t865*t8425;
  t8496 = t8475 + t8477;
  t8500 = -9.e-12*t1999*t8161;
  t8502 = 3.e-6*t1999*t8425;
  t8503 = t8500 + t8502;
  t8163 = 0.2000000000018*t1763*t8161;
  t8167 = -6.000000000054e-7*t1763*t8166;
  t8523 = t8169 + t8170;
  t8525 = t8174 + t8176;
  t8531 = t8181 + t8183;
  t8251 = 0.2000000000018*t1898*t1982*t1999*t8010;
  t8254 = -0.2000000000018*t865*t8010*t2002;
  t8255 = 6.000000000054e-7*t1898*t1999*t8010*t2006;
  t8261 = t3019*t8260;
  t8265 = t2689*t8263;
  t8276 = t2211*t8275;
  t8277 = t3228*t8260;
  t8278 = t3182*t8263;
  t8279 = t3583*t8275;
  t8280 = t8277 + t8278 + t8279;
  t8281 = -0.099999*t8280;
  t8282 = t3220*t8260;
  t8283 = t3213*t8263;
  t8285 = t3182*t8275;
  t8286 = t8282 + t8283 + t8285;
  t8288 = -0.3*t8286;
  t8289 = t3389*t8260;
  t8290 = t3220*t8263;
  t8291 = t3228*t8275;
  t8294 = t8289 + t8290 + t8291;
  t8295 = 0.2*t8294;
  t8296 = t8251 + t8254 + t8255 + t8261 + t8265 + t8276 + t8281 + t8288 + t8295;
  t8119 = 0.2000000000018*t865*t7914*t1898;
  t8120 = 0.2000000000018*t1999*t8082;
  t8121 = -6.000000000054e-7*t1999*t8020;
  t8128 = t3019*t8127;
  t8133 = t2211*t8132;
  t8137 = t2689*t8136;
  t8139 = t3389*t8127;
  t8141 = t3228*t8132;
  t8142 = t3220*t8136;
  t8143 = t8139 + t8141 + t8142;
  t8144 = 0.2*t8143;
  t8145 = t3228*t8127;
  t8146 = t3583*t8132;
  t8147 = t3182*t8136;
  t8148 = t8145 + t8146 + t8147;
  t8149 = -0.099999*t8148;
  t8150 = t3220*t8127;
  t8151 = t3182*t8132;
  t8152 = t3213*t8136;
  t8153 = t8150 + t8151 + t8152;
  t8154 = -0.3*t8153;
  t8155 = t8119 + t8120 + t8121 + t8128 + t8133 + t8137 + t8144 + t8149 + t8154;
  t8562 = t1982*t8010*t2002;
  t8563 = t7914*t2006;
  t8583 = t8562 + t8563;
  t8586 = 3.e-6*t865*t8583;
  t8587 = -9.e-12*t865*t8425;
  t8588 = t8168 + t8586 + t8587;
  t8590 = -1.*t865*t8583;
  t8592 = 3.e-6*t865*t8425;
  t8593 = t8173 + t8590 + t8592;
  t8595 = 1.000000000009*t865*t1898*t8010;
  t8596 = t1999*t8583;
  t8597 = -3.e-6*t1999*t8425;
  t8598 = t8595 + t8596 + t8597;
  t8468 = -6.000000000054e-7*t1999*t8161;
  t8472 = 0.2000000000018*t1999*t8425;
  t8497 = t3019*t8496;
  t8499 = t2689*t8436;
  t8504 = t2211*t8503;
  t8505 = t3228*t8496;
  t8506 = t3182*t8436;
  t8507 = t3583*t8503;
  t8508 = t8505 + t8506 + t8507;
  t8509 = -0.099999*t8508;
  t8510 = t3220*t8496;
  t8511 = t3213*t8436;
  t8512 = t3182*t8503;
  t8513 = t8510 + t8511 + t8512;
  t8514 = -0.3*t8513;
  t8515 = t3389*t8496;
  t8516 = t3220*t8436;
  t8517 = t3228*t8503;
  t8518 = t8515 + t8516 + t8517;
  t8520 = 0.2*t8518;
  t8521 = t8468 + t8472 + t8497 + t8499 + t8504 + t8509 + t8514 + t8520;
  t8633 = 1.000000000009*t1898*t1999*t8010;
  t8635 = t8633 + t8590 + t8592;
  t8640 = 3.e-6*t865*t1898*t8010;
  t8660 = 3.e-6*t1999*t8583;
  t8687 = -9.e-12*t1999*t8425;
  t8688 = t8640 + t8660 + t8687;
  t8692 = -1.*t865*t1898*t8010;
  t8693 = -1.*t1999*t8583;
  t8695 = t8692 + t8693 + t8502;
  t8215 = t6259*t8214;
  t8223 = t6289*t8222;
  t8228 = t6358*t8227;
  t8229 = t6394*t8214;
  t8230 = -1.000000000009*t2159*t8222;
  t8231 = t6408*t8227;
  t8232 = t8229 + t8230 + t8231;
  t8233 = 0.2*t8232;
  t8234 = -1.8e-11*t2159*t8214;
  t8235 = t6421*t8222;
  t8236 = t6394*t8227;
  t8238 = t8234 + t8235 + t8236;
  t8239 = -0.099999*t8238;
  t8240 = t6421*t8214;
  t8241 = t6493*t8222;
  t8243 = -1.000000000009*t2159*t8227;
  t8244 = t8240 + t8241 + t8243;
  t8245 = -0.3*t8244;
  t8246 = t8215 + t8223 + t8228 + t8233 + t8239 + t8245;
  t8086 = t6259*t8085;
  t8090 = t6289*t8089;
  t8097 = t6358*t8095;
  t8099 = t6394*t8085;
  t8100 = -1.000000000009*t2159*t8089;
  t8102 = t6408*t8095;
  t8103 = t8099 + t8100 + t8102;
  t8104 = 0.2*t8103;
  t8105 = -1.8e-11*t2159*t8085;
  t8107 = t6421*t8089;
  t8108 = t6394*t8095;
  t8109 = t8105 + t8107 + t8108;
  t8110 = -0.099999*t8109;
  t8111 = t6421*t8085;
  t8112 = t6493*t8089;
  t8113 = -1.000000000009*t2159*t8095;
  t8114 = t8111 + t8112 + t8113;
  t8115 = -0.3*t8114;
  t8116 = t8086 + t8090 + t8097 + t8104 + t8110 + t8115;
  t8429 = t6259*t8427;
  t8433 = t6289*t8431;
  t8437 = t6358*t8436;
  t8438 = t6394*t8427;
  t8439 = -1.000000000009*t2159*t8431;
  t8441 = t6408*t8436;
  t8442 = t8438 + t8439 + t8441;
  t8443 = 0.2*t8442;
  t8448 = -1.8e-11*t2159*t8427;
  t8450 = t6421*t8431;
  t8451 = t6394*t8436;
  t8453 = t8448 + t8450 + t8451;
  t8454 = -0.099999*t8453;
  t8455 = t6421*t8427;
  t8460 = t6493*t8431;
  t8462 = -1.000000000009*t2159*t8436;
  t8463 = t8455 + t8460 + t8462;
  t8465 = -0.3*t8463;
  t8466 = t8429 + t8433 + t8437 + t8443 + t8454 + t8465;
  t7132 = -1.62e-17*t2014;
  t7133 = 0.1*t6208;
  t7134 = 0.2*t6421;
  t7135 = t7132 + t7133 + t7134;
  t7145 = 0.2000000000018*t2014;
  t7147 = t7146 + t2159;
  t7149 = 0.1*t7147;
  t7150 = t7145 + t6343 + t7149;
  t7163 = 0.1000000000009*t2014;
  t7165 = t7146 + t2654;
  t7166 = 0.2*t7165;
  t7172 = -9.e-7*t6421;
  t7181 = t7163 + t7166 + t7172;
  t8748 = 3.e-6*t1898*t1999*t8010;
  t8749 = 3.e-6*t1763*t8583;
  t8751 = t2606*t8425;
  t8752 = t8748 + t8749 + t8751;
  t7287 = t7283 + t2654;
  t8755 = -1.*t1898*t1999*t8010;
  t8756 = t865*t8583;
  t8757 = t8755 + t8756 + t8426;
  t8760 = -1.*t3053*t1898*t8010;
  t8761 = t8760 + t8693 + t8502;
  t7303 = t7283 + t2159;
  t8639 = t6358*t8635;
  t8689 = t6259*t8688;
  t8697 = t6289*t8695;
  t8698 = -1.000000000009*t2159*t8635;
  t8699 = t6421*t8688;
  t8702 = t6493*t8695;
  t8715 = t8698 + t8699 + t8702;
  t8716 = -0.3*t8715;
  t8721 = t6394*t8635;
  t8722 = -1.8e-11*t2159*t8688;
  t8723 = t6421*t8695;
  t8724 = t8721 + t8722 + t8723;
  t8725 = -0.099999*t8724;
  t8726 = t6408*t8635;
  t8727 = t6394*t8688;
  t8730 = -1.000000000009*t2159*t8695;
  t8731 = t8726 + t8727 + t8730;
  t8735 = 0.2*t8731;
  t8739 = t8639 + t8689 + t8697 + t8716 + t8725 + t8735;
  t8766 = t6394*t8752;
  t8838 = 0.2000000000018*t1763*t1898*t1982*t8010;
  t8839 = -0.2000000000018*t1999*t8010*t2002;
  t8841 = 6.000000000054e-7*t1763*t1898*t8010*t2006;
  t8845 = t2211*t8214;
  t8846 = t2689*t8222;
  t8847 = t3019*t8227;
  t8848 = t3182*t8214;
  t8849 = t3213*t8222;
  t8850 = t3220*t8227;
  t8857 = t8848 + t8849 + t8850;
  t8859 = -0.3*t8857;
  t8860 = t3228*t8214;
  t8861 = t3220*t8222;
  t8862 = t3389*t8227;
  t8863 = t8860 + t8861 + t8862;
  t8864 = 0.2*t8863;
  t8865 = t3583*t8214;
  t8866 = t3182*t8222;
  t8867 = t3228*t8227;
  t8868 = t8865 + t8866 + t8867;
  t8870 = -0.099999*t8868;
  t8871 = t8838 + t8839 + t8841 + t8845 + t8846 + t8847 + t8859 + t8864 + t8870;
  t8799 = 0.2000000000018*t7914*t1898*t1999;
  t8801 = 0.2000000000018*t1763*t8082;
  t8802 = -6.000000000054e-7*t1763*t8020;
  t8805 = t2211*t8085;
  t8810 = t2689*t8089;
  t8816 = t3019*t8095;
  t8817 = t3182*t8085;
  t8818 = t3213*t8089;
  t8819 = t3220*t8095;
  t8821 = t8817 + t8818 + t8819;
  t8822 = -0.3*t8821;
  t8823 = t3228*t8085;
  t8825 = t3220*t8089;
  t8826 = t3389*t8095;
  t8829 = t8823 + t8825 + t8826;
  t8830 = 0.2*t8829;
  t8832 = t3583*t8085;
  t8833 = t3182*t8089;
  t8834 = t3228*t8095;
  t8835 = t8832 + t8833 + t8834;
  t8836 = -0.099999*t8835;
  t8837 = t8799 + t8801 + t8802 + t8805 + t8810 + t8816 + t8822 + t8830 + t8836;
  t8872 = -6.000000000054e-7*t1763*t8161;
  t8873 = 0.2000000000018*t1763*t8425;
  t8874 = t2211*t8427;
  t8876 = t2689*t8431;
  t8877 = t3019*t8436;
  t8878 = t3182*t8427;
  t8879 = t3213*t8431;
  t8880 = t8878 + t8879 + t8516;
  t8881 = -0.3*t8880;
  t8882 = t3228*t8427;
  t8883 = t3220*t8431;
  t8884 = t3389*t8436;
  t8885 = t8882 + t8883 + t8884;
  t8887 = 0.2*t8885;
  t8888 = t3583*t8427;
  t8889 = t3182*t8431;
  t8890 = t3228*t8436;
  t8894 = t8888 + t8889 + t8890;
  t8895 = -0.099999*t8894;
  t8896 = t8872 + t8873 + t8874 + t8876 + t8877 + t8881 + t8887 + t8895;
  t8942 = t6259*t8752;
  t8943 = t6289*t8757;
  t8944 = t6358*t8761;
  t8945 = -1.000000000009*t2159*t8757;
  t8946 = t6408*t8761;
  t8947 = t8766 + t8945 + t8946;
  t8948 = 0.2*t8947;
  t8949 = -1.8e-11*t2159*t8752;
  t8951 = t6421*t8757;
  t8952 = t6394*t8761;
  t8953 = t8949 + t8951 + t8952;
  t8954 = -0.099999*t8953;
  t8958 = t6421*t8752;
  t8959 = t6493*t8757;
  t8966 = -1.000000000009*t2159*t8761;
  t8967 = t8958 + t8959 + t8966;
  t8968 = -0.3*t8967;
  t8970 = t8942 + t8943 + t8944 + t8948 + t8954 + t8968;
  t8898 = 0.2000000000018*t865*t1898*t8010;
  t8899 = 0.2000000000018*t1999*t8583;
  t8901 = -6.000000000054e-7*t1999*t8425;
  t8903 = t3019*t8635;
  t8904 = t2211*t8688;
  t8905 = t2689*t8695;
  t8924 = t3389*t8635;
  t8925 = t3228*t8688;
  t8926 = t3220*t8695;
  t8927 = t8924 + t8925 + t8926;
  t8928 = 0.2*t8927;
  t8929 = t3228*t8635;
  t8930 = t3583*t8688;
  t8932 = t3182*t8695;
  t8934 = t8929 + t8930 + t8932;
  t8935 = -0.099999*t8934;
  t8936 = t3220*t8635;
  t8937 = t3182*t8688;
  t8938 = t3213*t8695;
  t8939 = t8936 + t8937 + t8938;
  t8940 = -0.3*t8939;
  t8941 = t8898 + t8899 + t8901 + t8903 + t8904 + t8905 + t8928 + t8935 + t8940;
  t9008 = t2606*t7914*t1898*t1982;
  t9009 = 3.e-6*t1763*t7914*t1898*t2006;
  t9010 = t9008 + t9009;
  t9013 = t865*t7914*t1898*t2006;
  t9015 = t7925 + t9013;
  t9017 = 3.e-6*t7914*t1898*t1982*t1999;
  t9018 = -1.*t7914*t1898*t1999*t2006;
  t9019 = t9017 + t9018;
  t9049 = -3.e-6*t1763*t7914*t1898*t1982;
  t9055 = 3.e-6*t7914*t1999*t2002;
  t9061 = t2606*t7914*t1898*t2006;
  t9169 = t9049 + t9055 + t9061;
  t9259 = -1.*t865*t7914*t1898*t1982;
  t9282 = -1.*t7914*t1999*t2002;
  t9285 = t9259 + t9282 + t9009;
  t9424 = t7914*t1898*t1982*t1999;
  t9475 = -1.*t3053*t7914*t2002;
  t9507 = 3.e-6*t7914*t1898*t1999*t2006;
  t9530 = t9424 + t9475 + t9507;
  t10929 = 1.000000000009*t7914*t1999*t2002;
  t10979 = 3.e-6*t865*t7914*t1898*t2006;
  t11016 = t7943 + t10929 + t10979;
  t11041 = -3.e-6*t7914*t1898*t1982*t1999;
  t11057 = 3.e-6*t865*t7914*t2002;
  t11067 = -9.e-12*t7914*t1898*t1999*t2006;
  t11071 = t11041 + t11057 + t11067;
  t11241 = -1.*t865*t7914*t2002;
  t11246 = t9424 + t11241 + t9507;
  t11713 = 3.e-6*t1763*t7914*t1982*t2002;
  t11784 = -1.*t2606*t7914*t2002*t2006;
  t11786 = t8079 + t11713 + t11784;
  t11948 = t865*t7914*t1982*t2002;
  t11973 = -3.e-6*t1763*t7914*t2002*t2006;
  t12032 = t8087 + t11948 + t11973;
  t12054 = -1.*t7914*t1982*t1999*t2002;
  t12057 = -3.e-6*t7914*t1999*t2002*t2006;
  t12058 = t8091 + t12054 + t12057;
  t9004 = -6.000000000054e-7*t1763*t7914*t1898*t1982;
  t9007 = 0.2000000000018*t1763*t7914*t1898*t2006;
  t9011 = t2211*t9010;
  t9016 = t2689*t9015;
  t9020 = t3019*t9019;
  t9023 = t3182*t9010;
  t9024 = t3213*t9015;
  t9025 = t3220*t9019;
  t9026 = t9023 + t9024 + t9025;
  t9027 = -0.3*t9026;
  t9031 = t3228*t9010;
  t9032 = t3220*t9015;
  t9034 = t3389*t9019;
  t9036 = t9031 + t9032 + t9034;
  t9037 = 0.2*t9036;
  t9038 = t3583*t9010;
  t9039 = t3182*t9015;
  t9040 = t3228*t9019;
  t9042 = t9038 + t9039 + t9040;
  t9043 = -0.099999*t9042;
  t9044 = t9004 + t9007 + t9011 + t9016 + t9020 + t9027 + t9037 + t9043;
  t12207 = t8083 + t8084;
  t12273 = t8088 + t8032;
  t12285 = t8093 + t8094;
  t12411 = t1982*t8010;
  t12412 = t7914*t2002*t2006;
  t12413 = t12411 + t12412;
  t12410 = t2606*t8082;
  t12427 = 3.e-6*t1763*t12413;
  t12439 = t12410 + t12427;
  t12456 = t865*t12413;
  t12459 = t8083 + t12456;
  t12464 = -1.*t1999*t12413;
  t12475 = t8130 + t12464;
  t12677 = 3.e-6*t865*t8082;
  t12692 = -1.*t865*t12413;
  t12737 = t12677 + t12692;
  t12742 = -9.e-12*t1999*t8082;
  t12744 = 3.e-6*t1999*t12413;
  t12745 = t12742 + t12744;
  t10804 = -0.2000000000018*t7914*t1898*t1982*t1999;
  t10807 = 0.2000000000018*t865*t7914*t2002;
  t10900 = -6.000000000054e-7*t7914*t1898*t1999*t2006;
  t11038 = t3019*t11016;
  t11212 = t2211*t11071;
  t11247 = t2689*t11246;
  t11248 = t3389*t11016;
  t11249 = t3228*t11071;
  t11251 = t3220*t11246;
  t11252 = t11248 + t11249 + t11251;
  t11253 = 0.2*t11252;
  t11255 = t3228*t11016;
  t11257 = t3583*t11071;
  t11373 = t3182*t11246;
  t11374 = t11255 + t11257 + t11373;
  t11375 = -0.099999*t11374;
  t11407 = t3220*t11016;
  t11507 = t3182*t11071;
  t11588 = t3213*t11246;
  t11608 = t11407 + t11507 + t11588;
  t11611 = -0.3*t11608;
  t11613 = t10804 + t10807 + t10900 + t11038 + t11212 + t11247 + t11253 + t11375 + t11611;
  t13129 = 3.e-6*t865*t8013;
  t13131 = -9.e-12*t865*t12413;
  t13132 = t8079 + t13129 + t13131;
  t13135 = -1.*t865*t8013;
  t13137 = 3.e-6*t865*t12413;
  t13139 = t8087 + t13135 + t13137;
  t13142 = -1.000000000009*t865*t7914*t1898;
  t13144 = t1999*t8013;
  t13145 = -3.e-6*t1999*t12413;
  t13173 = t13142 + t13144 + t13145;
  t12674 = -6.000000000054e-7*t1999*t8082;
  t12676 = 0.2000000000018*t1999*t12413;
  t12738 = t3019*t12737;
  t12740 = t2689*t12475;
  t12768 = t2211*t12745;
  t12770 = t3228*t12737;
  t12771 = t3182*t12475;
  t12773 = t3583*t12745;
  t12774 = t12770 + t12771 + t12773;
  t12775 = -0.099999*t12774;
  t12776 = t3220*t12737;
  t12778 = t3213*t12475;
  t12818 = t3182*t12745;
  t12851 = t12776 + t12778 + t12818;
  t12865 = -0.3*t12851;
  t12884 = t3389*t12737;
  t12886 = t3220*t12475;
  t12927 = t3228*t12745;
  t13023 = t12884 + t12886 + t12927;
  t13029 = 0.2*t13023;
  t13034 = t12674 + t12676 + t12738 + t12740 + t12768 + t12775 + t12865 + t13029;
  t13657 = -1.000000000009*t7914*t1898*t1999;
  t13658 = t13657 + t13135 + t13137;
  t13660 = -3.e-6*t865*t7914*t1898;
  t13662 = -9.e-12*t1999*t12413;
  t13663 = t13660 + t8052 + t13662;
  t13671 = t865*t7914*t1898;
  t13672 = -1.*t1999*t8013;
  t13676 = t13671 + t13672 + t12744;
  t9211 = t6259*t9169;
  t9400 = t6289*t9285;
  t9589 = t6358*t9530;
  t9590 = t6394*t9169;
  t9609 = -1.000000000009*t2159*t9285;
  t9610 = t6408*t9530;
  t9631 = t9590 + t9609 + t9610;
  t9635 = 0.2*t9631;
  t9657 = -1.8e-11*t2159*t9169;
  t9663 = t6421*t9285;
  t9671 = t6394*t9530;
  t10151 = t9657 + t9663 + t9671;
  t10268 = -0.099999*t10151;
  t10276 = t6421*t9169;
  t10279 = t6493*t9285;
  t10280 = -1.000000000009*t2159*t9530;
  t10281 = t10276 + t10279 + t10280;
  t10312 = -0.3*t10281;
  t10667 = t9211 + t9400 + t9589 + t9635 + t10268 + t10312;
  t12445 = t6259*t12439;
  t12460 = t6289*t12459;
  t12509 = t6358*t12475;
  t12510 = t6394*t12439;
  t12522 = -1.000000000009*t2159*t12459;
  t12524 = t6408*t12475;
  t12525 = t12510 + t12522 + t12524;
  t12526 = 0.2*t12525;
  t12527 = -1.8e-11*t2159*t12439;
  t12528 = t6421*t12459;
  t12532 = t6394*t12475;
  t12533 = t12527 + t12528 + t12532;
  t12534 = -0.099999*t12533;
  t12561 = t6421*t12439;
  t12575 = t6493*t12459;
  t12583 = -1.000000000009*t2159*t12475;
  t12649 = t12561 + t12575 + t12583;
  t12658 = -0.3*t12649;
  t12667 = t12445 + t12460 + t12509 + t12526 + t12534 + t12658;
  t13843 = -3.e-6*t7914*t1898*t1999;
  t13846 = t2606*t12413;
  t13848 = t13843 + t8047 + t13846;
  t13861 = t7914*t1898*t1999;
  t13874 = t865*t8013;
  t13884 = t13861 + t13874 + t12427;
  t13889 = t3053*t7914*t1898;
  t13892 = t13889 + t13672 + t12744;
  t13659 = t6358*t13658;
  t13664 = t6259*t13663;
  t13678 = t6289*t13676;
  t13703 = -1.000000000009*t2159*t13658;
  t13706 = t6421*t13663;
  t13707 = t6493*t13676;
  t13734 = t13703 + t13706 + t13707;
  t13736 = -0.3*t13734;
  t13738 = t6394*t13658;
  t13740 = -1.8e-11*t2159*t13663;
  t13742 = t6421*t13676;
  t13743 = t13738 + t13740 + t13742;
  t13773 = -0.099999*t13743;
  t13774 = t6408*t13658;
  t13777 = t6394*t13663;
  t13791 = -1.000000000009*t2159*t13676;
  t13802 = t13774 + t13777 + t13791;
  t13803 = 0.2*t13802;
  t13822 = t13659 + t13664 + t13678 + t13736 + t13773 + t13803;
  t13900 = t6394*t13848;
  p_output1[0]=(t1998 + t2003 + t2010 + t2211*t2631 + t2689*t2756 + t3019*t3138 - 0.3*(t2631*t3182 + t2756*t3213 + t3138*t3220) + 0.2*(t2756*t3220 + t2631*t3228 + t3138*t3389) - 0.099999*(t2756*t3182 + t3138*t3228 + t2631*t3583))*var2[4] + t6178*var2[5] + t6628*var2[15] + t6503*var2[17];
  p_output1[1]=t6178*var2[4] + (t1998 + t2010 + t2211*t6641 + t2689*t6661 + t3019*t6673 - 0.3*(t3182*t6641 + t3213*t6661 + t3220*t6673) - 0.099999*(t3583*t6641 + t3182*t6661 + t3228*t6673) + 0.2*(t3228*t6641 + t3220*t6661 + t3389*t6673))*var2[5] + t6988*var2[15] + t6932*var2[17];
  p_output1[2]=t6628*var2[4] + t6988*var2[5] + (t2003 + t2689*t7046 + t2211*t7052 + t3019*t7072 - 0.3*(t3213*t7046 + t3182*t7052 + t3220*t7072) - 0.099999*(t3182*t7046 + t3583*t7052 + t3228*t7072) + 0.2*(t3220*t7046 + t3228*t7052 + t3389*t7072) + 0.2000000000018*t1898*t1982*t865 + 6.000000000054e-7*t1898*t2006*t865)*var2[15] + t7029*var2[17];
  p_output1[3]=t6503*var2[4] + t6932*var2[5] + t7029*var2[15] + (t7135*t7143 + t7150*t7161 + t7181*t7247 - 0.099999*(-1.8e-11*t2014*t7143 + t6394*t7161 + t6256*t7247) - 0.3*(-1.000000000009*t2014*t7247 + t7279 + t7161*t7287) + 0.2*(t6256*t7143 - 1.000000000009*t2014*t7161 + t7247*t7303))*var2[17];
  p_output1[4]=1.;
  p_output1[5]=-0.2000000000018*t1898*t1999 - 0.2000000000018*t1763*t1982*t2002 - 6.000000000054e-7*t1763*t2002*t2006 + t2211*t6263 + t2689*t6302 + t3019*t6362 - 0.3*(t3182*t6263 + t3213*t6302 + t3220*t6362) - 0.099999*(t3583*t6263 + t3182*t6302 + t3228*t6362) + 0.2*(t3228*t6263 + t3220*t6302 + t3389*t6362);
  p_output1[6]=6.000000000054e-7*t1763*t1898*t1982 - 0.2000000000018*t1763*t1898*t2006 + t2211*t6768 + t2689*t6776 + t3019*t6780 - 0.099999*(t3583*t6768 + t3182*t6776 + t3228*t6780) + 0.2*(t3228*t6768 + t3220*t6776 + t3389*t6780) - 0.3*(t3182*t6768 + t3213*t6776 + t6955);
  p_output1[7]=0.2000000000018*t1898*t1982*t1999 + 6.000000000054e-7*t1898*t1999*t2006 + t3019*t6994 + t2689*t6998 + t2211*t7003 - 0.3*(t3220*t6994 + t3213*t6998 + t3182*t7003) + 0.2*(t3389*t6994 + t3220*t6998 + t3228*t7003) - 0.099999*(t3228*t6994 + t3182*t6998 + t3583*t7003) - 0.2000000000018*t2002*t865;
  p_output1[8]=t6259*t7143 + t6289*t7161 + t6358*t7247 - 0.3*(t6421*t7143 + t6493*t7161 - 1.000000000009*t2159*t7247) - 0.099999*(-1.8e-11*t2159*t7143 + t6421*t7161 + t6394*t7247) + 0.2*(-1.000000000009*t2159*t7161 + t6408*t7247 + t7279);
  p_output1[9]=(t8158 + t8163 + t8167 + t2211*t8171 + t2689*t8177 + t3019*t8185 - 0.3*(t3182*t8171 + t3213*t8177 + t3220*t8185) - 0.099999*(t3583*t8171 + t3182*t8177 + t3228*t8185) + 0.2*(t3228*t8171 + t3220*t8177 + t3389*t8185))*var2[3] + t7981*var2[4] + t8077*var2[5] + t8155*var2[15] + t8116*var2[17];
  p_output1[10]=t7981*var2[3] + (-0.2000000000018*t1763*t1982*t2002*t8010 - 6.000000000054e-7*t1763*t2002*t2006*t8010 + t8158 + t2211*t8379 + t2689*t8387 + t3019*t8393 - 0.3*(t3182*t8379 + t3213*t8387 + t3220*t8393) - 0.099999*(t3583*t8379 + t3182*t8387 + t3228*t8393) + 0.2*(t3228*t8379 + t3220*t8387 + t3389*t8393))*var2[4] + t8370*var2[5] + t8296*var2[15] + t8246*var2[17];
  p_output1[11]=t8077*var2[3] + t8370*var2[4] + (t8163 + t8167 + t2211*t8523 + t2689*t8525 + t3019*t8531 - 0.3*(t3182*t8523 + t3213*t8525 + t3220*t8531) - 0.099999*(t3583*t8523 + t3182*t8525 + t3228*t8531) + 0.2*(t3228*t8523 + t3220*t8525 + t3389*t8531))*var2[5] + t8521*var2[15] + t8466*var2[17];
  p_output1[12]=t8155*var2[3] + t8296*var2[4] + t8521*var2[5] + (t8158 + t2211*t8588 + t2689*t8593 + t3019*t8598 - 0.3*(t3182*t8588 + t3213*t8593 + t3220*t8598) - 0.099999*(t3583*t8588 + t3182*t8593 + t3228*t8598) + 0.2*(t3228*t8588 + t3220*t8593 + t3389*t8598) - 6.000000000054e-7*t8425*t865 + 0.2000000000018*t8583*t865)*var2[15] + t8739*var2[17];
  p_output1[13]=t8116*var2[3] + t8246*var2[4] + t8466*var2[5] + t8739*var2[15] + (t7135*t8752 + t7150*t8757 + t7181*t8761 - 0.099999*(-1.8e-11*t2014*t8752 + t6394*t8757 + t6256*t8761) + 0.2*(t6256*t8752 - 1.000000000009*t2014*t8757 + t7303*t8761) - 0.3*(t7287*t8757 - 1.000000000009*t2014*t8761 + t8766))*var2[17];
  p_output1[14]=1.;
  p_output1[15]=t8837;
  p_output1[16]=t8871;
  p_output1[17]=t8896;
  p_output1[18]=t8941;
  p_output1[19]=t8970;
  p_output1[20]=t8837*var2[3] + t8871*var2[4] + t8896*var2[5] + t8941*var2[15] + t8970*var2[17];
  p_output1[21]=t8871*var2[3] + (t11786*t2211 + t12032*t2689 + t12058*t3019 - 0.3*(t11786*t3182 + t12032*t3213 + t12058*t3220) + 0.2*(t12032*t3220 + t11786*t3228 + t12058*t3389) - 0.099999*(t12032*t3182 + t12058*t3228 + t11786*t3583) + 0.2000000000018*t1763*t1982*t2002*t7914 + 6.000000000054e-7*t1763*t2002*t2006*t7914 + t8799)*var2[4] + t9044*var2[5] + t11613*var2[15] + t10667*var2[17];
  p_output1[22]=t8896*var2[3] + t9044*var2[4] + (t12207*t2211 + t12273*t2689 + t12285*t3019 - 0.3*(t12207*t3182 + t12273*t3213 + t12285*t3220) + 0.2*(t12273*t3220 + t12207*t3228 + t12285*t3389) - 0.099999*(t12273*t3182 + t12285*t3228 + t12207*t3583) + t8801 + t8802)*var2[5] + t13034*var2[15] + t12667*var2[17];
  p_output1[23]=t8941*var2[3] + t11613*var2[4] + t13034*var2[5] + (t13132*t2211 + t13139*t2689 + t13173*t3019 - 0.3*(t13132*t3182 + t13139*t3213 + t13173*t3220) + 0.2*(t13139*t3220 + t13132*t3228 + t13173*t3389) - 0.099999*(t13139*t3182 + t13173*t3228 + t13132*t3583) - 6.000000000054e-7*t12413*t865 + 0.2000000000018*t8013*t865 + t8799)*var2[15] + t13822*var2[17];
  p_output1[24]=t8970*var2[3] + t10667*var2[4] + t12667*var2[5] + t13822*var2[15] + (-0.099999*(-1.8e-11*t13848*t2014 + t13892*t6256 + t13884*t6394) + t13848*t7135 + t13884*t7150 + t13892*t7181 - 0.3*(t13900 - 1.000000000009*t13892*t2014 + t13884*t7287) + 0.2*(-1.000000000009*t13884*t2014 + t13848*t6256 + t13892*t7303))*var2[17];
  p_output1[25]=1.;
  p_output1[26]=0.2000000000018*t1898*t1999*t8010 - 6.000000000054e-7*t1763*t8425 + 0.2000000000018*t1763*t8583 + t2211*t8752 + t2689*t8757 + t3019*t8761 - 0.3*(t3182*t8752 + t3213*t8757 + t3220*t8761) - 0.099999*(t3583*t8752 + t3182*t8757 + t3228*t8761) + 0.2*(t3228*t8752 + t3220*t8757 + t3389*t8761);
  p_output1[27]=-0.2000000000018*t1763*t1898*t1982*t7914 + 0.2000000000018*t1999*t2002*t7914 - 6.000000000054e-7*t1763*t1898*t2006*t7914 + t2211*t9169 + t2689*t9285 + t3019*t9530 - 0.3*(t3182*t9169 + t3213*t9285 + t3220*t9530) - 0.099999*(t3583*t9169 + t3182*t9285 + t3228*t9530) + 0.2*(t3228*t9169 + t3220*t9285 + t3389*t9530);
  p_output1[28]=0.2000000000018*t12413*t1763 + t12439*t2211 + t12459*t2689 + t12475*t3019 - 0.3*(t12886 + t12439*t3182 + t12459*t3213) + 0.2*(t12459*t3220 + t12439*t3228 + t12475*t3389) - 0.099999*(t12459*t3182 + t12475*t3228 + t12439*t3583) - 6.000000000054e-7*t1763*t8082;
  p_output1[29]=-6.000000000054e-7*t12413*t1999 + t13663*t2211 + t13676*t2689 + t13658*t3019 - 0.3*(t13663*t3182 + t13676*t3213 + t13658*t3220) + 0.2*(t13676*t3220 + t13663*t3228 + t13658*t3389) - 0.099999*(t13676*t3182 + t13658*t3228 + t13663*t3583) + 0.2000000000018*t1999*t8013 - 0.2000000000018*t1898*t7914*t865;
  p_output1[30]=t13848*t6259 + t13884*t6289 + t13892*t6358 + 0.2*(t13900 - 1.000000000009*t13884*t2159 + t13892*t6408) - 0.099999*(-1.8e-11*t13848*t2159 + t13892*t6394 + t13884*t6421) - 0.3*(-1.000000000009*t13892*t2159 + t13848*t6421 + t13884*t6493);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 31, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_dh_RightFrontFoot_FrontStance.hh"

namespace FrontStance
{

void J_dh_RightFrontFoot_FrontStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
