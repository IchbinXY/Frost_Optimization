/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 01:37:07 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t1242;
  double t413;
  double t1414;
  double t1487;
  double t1771;
  double t1908;
  double t1846;
  double t1917;
  double t1950;
  double t1951;
  double t1953;
  double t1955;
  double t1962;
  double t414;
  double t610;
  double t1864;
  double t1918;
  double t1920;
  double t1941;
  double t1943;
  double t1944;
  double t2030;
  double t2056;
  double t2176;
  double t1986;
  double t2011;
  double t2179;
  double t2136;
  double t2142;
  double t2144;
  double t2145;
  double t2146;
  double t2147;
  double t2206;
  double t2207;
  double t2229;
  double t2289;
  double t2659;
  double t2960;
  double t2971;
  double t3215;
  double t3235;
  double t3288;
  double t3402;
  double t3772;
  double t3793;
  double t3677;
  double t2181;
  double t3434;
  double t3864;
  double t1491;
  double t1626;
  double t1673;
  double t1732;
  double t1949;
  double t1954;
  double t2025;
  double t2064;
  double t2132;
  double t4368;
  double t4387;
  double t4423;
  double t4445;
  double t4446;
  double t4453;
  double t2177;
  double t2183;
  double t2184;
  double t2185;
  double t2187;
  double t2326;
  double t2387;
  double t2401;
  double t2407;
  double t2472;
  double t4458;
  double t4459;
  double t4461;
  double t4462;
  double t3687;
  double t4473;
  double t4490;
  double t4508;
  double t4519;
  double t4596;
  double t4616;
  double t4670;
  double t4733;
  double t3933;
  double t4033;
  double t4059;
  double t5129;
  double t5136;
  double t5141;
  double t5147;
  double t5156;
  double t5203;
  double t5216;
  double t5225;
  double t5278;
  double t5279;
  double t5281;
  double t5286;
  double t5568;
  double t5571;
  double t5582;
  double t5586;
  double t5591;
  double t5592;
  double t5593;
  double t5596;
  double t5601;
  double t5603;
  double t5604;
  double t5607;
  double t6029;
  double t6031;
  double t6035;
  double t6099;
  double t6101;
  double t6105;
  double t6106;
  double t6108;
  double t6111;
  double t6113;
  double t6154;
  double t6369;
  double t6380;
  double t6407;
  double t6428;
  double t6447;
  double t6472;
  double t6871;
  double t6875;
  double t7073;
  double t7074;
  double t7106;
  double t7723;
  double t7724;
  double t7725;
  double t7726;
  double t7733;
  double t7741;
  double t7776;
  double t7781;
  double t7794;
  double t7796;
  double t12492;
  double t12540;
  double t12542;
  double t12579;
  double t12581;
  double t12585;
  double t12591;
  double t12626;
  double t12655;
  double t12685;
  double t12780;
  double t12784;
  double t12799;
  double t12805;
  double t12807;
  double t13104;
  double t13111;
  double t13098;
  double t13102;
  double t13196;
  double t13756;
  double t14213;
  double t14023;
  double t13103;
  double t13122;
  double t13161;
  double t13162;
  double t13170;
  double t13214;
  double t13245;
  double t13277;
  double t13555;
  double t13630;
  double t13635;
  double t13640;
  double t13643;
  double t13709;
  double t14393;
  double t14419;
  double t14421;
  double t14422;
  double t14424;
  double t14425;
  double t14426;
  double t14131;
  double t14429;
  double t14430;
  double t14261;
  double t990;
  double t1922;
  double t1945;
  double t2175;
  double t2315;
  double t3400;
  double t3660;
  double t3709;
  double t3800;
  double t3803;
  double t3806;
  double t3865;
  double t3896;
  double t3938;
  double t3947;
  double t4013;
  double t4105;
  double t4106;
  double t4148;
  double t4149;
  double t4182;
  double t4210;
  double t5040;
  double t5072;
  double t5078;
  double t5155;
  double t5274;
  double t5288;
  double t5304;
  double t5323;
  double t5336;
  double t5341;
  double t5342;
  double t5348;
  double t5349;
  double t5354;
  double t5356;
  double t5358;
  double t5360;
  double t5363;
  double t5373;
  double t5378;
  double t5382;
  double t5467;
  double t5558;
  double t5560;
  double t5561;
  double t5562;
  double t5590;
  double t5598;
  double t5608;
  double t5686;
  double t5688;
  double t5750;
  double t5787;
  double t5808;
  double t5844;
  double t5909;
  double t5995;
  double t5998;
  double t6009;
  double t6016;
  double t6017;
  double t6020;
  double t6021;
  double t6023;
  double t6025;
  double t6027;
  double t6028;
  double t14656;
  double t14658;
  double t14659;
  double t14660;
  double t14662;
  double t14664;
  double t14666;
  double t14669;
  double t14671;
  double t14672;
  double t14673;
  double t14675;
  double t14736;
  double t14737;
  double t14738;
  double t14741;
  double t14742;
  double t14744;
  double t14746;
  double t14747;
  double t14748;
  double t4365;
  double t14817;
  double t14818;
  double t14820;
  double t14825;
  double t14832;
  double t14833;
  double t14835;
  double t14836;
  double t14839;
  double t14901;
  double t14908;
  double t14913;
  double t14925;
  double t14935;
  double t14943;
  double t14948;
  double t14952;
  double t14995;
  double t14997;
  double t14999;
  double t15000;
  double t15002;
  double t15006;
  double t15008;
  double t15010;
  double t15054;
  double t15056;
  double t15070;
  double t15075;
  double t15076;
  double t15077;
  double t15081;
  double t15082;
  double t15084;
  double t15125;
  double t15127;
  double t15129;
  double t15133;
  double t15135;
  double t15136;
  double t15137;
  double t15139;
  double t15140;
  double t15141;
  double t15142;
  double t15174;
  double t15175;
  double t15176;
  double t15177;
  double t15181;
  double t15182;
  double t15186;
  double t15189;
  double t15193;
  double t15194;
  double t15239;
  double t15241;
  double t15242;
  double t15243;
  double t15245;
  double t15247;
  double t15248;
  double t15249;
  double t15252;
  double t15253;
  double t15254;
  double t15255;
  double t15285;
  double t15286;
  double t15287;
  double t15288;
  double t15290;
  double t15291;
  double t15292;
  double t15295;
  double t15297;
  double t15355;
  double t15357;
  double t15358;
  double t15360;
  double t15363;
  double t15364;
  double t15366;
  double t15368;
  double t15370;
  double t6091;
  double t6097;
  double t6102;
  double t6109;
  double t6155;
  double t6171;
  double t6173;
  double t6183;
  double t6203;
  double t6219;
  double t6266;
  double t6285;
  double t6291;
  double t6292;
  double t6299;
  double t6332;
  double t6339;
  double t6348;
  double t6349;
  double t6363;
  double t6364;
  double t6367;
  double t6368;
  double t6423;
  double t6719;
  double t6876;
  double t7111;
  double t7156;
  double t7178;
  double t7208;
  double t7280;
  double t7302;
  double t7318;
  double t7388;
  double t7396;
  double t7398;
  double t7494;
  double t7500;
  double t7509;
  double t7514;
  double t7517;
  double t7518;
  double t7528;
  double t7532;
  double t7566;
  double t14888;
  double t14900;
  double t14920;
  double t14942;
  double t14957;
  double t14958;
  double t14960;
  double t14962;
  double t14966;
  double t14970;
  double t14971;
  double t14972;
  double t14974;
  double t14975;
  double t14978;
  double t14979;
  double t14983;
  double t14984;
  double t14985;
  double t14987;
  double t14989;
  double t14991;
  double t14993;
  double t14994;
  double t14998;
  double t15003;
  double t15011;
  double t15013;
  double t15015;
  double t15016;
  double t15017;
  double t15019;
  double t15021;
  double t15023;
  double t15026;
  double t15029;
  double t15032;
  double t15033;
  double t15035;
  double t15036;
  double t15041;
  double t15043;
  double t15045;
  double t15046;
  double t15047;
  double t15051;
  double t15073;
  double t15078;
  double t15085;
  double t15087;
  double t15088;
  double t15090;
  double t15091;
  double t15092;
  double t15094;
  double t15096;
  double t15097;
  double t15100;
  double t15101;
  double t15102;
  double t15103;
  double t15104;
  double t15110;
  double t15111;
  double t15112;
  double t15119;
  double t15120;
  double t14653;
  double t14655;
  double t15561;
  double t15564;
  double t15568;
  double t15592;
  double t15595;
  double t15604;
  double t4430;
  double t4456;
  double t15657;
  double t15659;
  double t15662;
  double t15763;
  double t15769;
  double t15771;
  double t15774;
  double t15776;
  double t15777;
  double t15779;
  double t15782;
  double t15785;
  double t15846;
  double t15855;
  double t15856;
  double t15858;
  double t15860;
  double t15861;
  double t15863;
  double t15868;
  double t15870;
  double t15871;
  double t15877;
  double t15937;
  double t15938;
  double t15941;
  double t15953;
  double t15954;
  double t15992;
  double t15993;
  double t15995;
  double t15997;
  double t15998;
  double t16038;
  double t16039;
  double t16040;
  double t16043;
  double t16044;
  double t7657;
  double t7663;
  double t7703;
  double t7728;
  double t7791;
  double t9005;
  double t9035;
  double t9045;
  double t10647;
  double t11340;
  double t11972;
  double t12090;
  double t12140;
  double t12143;
  double t12147;
  double t12275;
  double t12333;
  double t12346;
  double t12372;
  double t12375;
  double t12385;
  double t12414;
  double t12462;
  double t12478;
  double t12543;
  double t12557;
  double t12608;
  double t12783;
  double t12819;
  double t12823;
  double t12833;
  double t12843;
  double t12844;
  double t12855;
  double t12859;
  double t12870;
  double t12895;
  double t12896;
  double t12897;
  double t12958;
  double t12977;
  double t13009;
  double t13026;
  double t13069;
  double t13091;
  double t13095;
  double t13097;
  double t15121;
  double t15122;
  double t15123;
  double t15131;
  double t15138;
  double t15143;
  double t15144;
  double t15145;
  double t15146;
  double t15147;
  double t15149;
  double t15150;
  double t15151;
  double t15154;
  double t15155;
  double t15157;
  double t15158;
  double t15160;
  double t15163;
  double t15165;
  double t15167;
  double t15168;
  double t15170;
  double t15171;
  double t15172;
  double t15173;
  double t15178;
  double t15184;
  double t15199;
  double t15200;
  double t15203;
  double t15204;
  double t15211;
  double t15212;
  double t15213;
  double t15217;
  double t15220;
  double t15222;
  double t15225;
  double t15226;
  double t15227;
  double t15228;
  double t15231;
  double t15232;
  double t15233;
  double t15234;
  double t15235;
  double t15236;
  double t15237;
  double t15244;
  double t15251;
  double t15257;
  double t15259;
  double t15264;
  double t15265;
  double t15267;
  double t15268;
  double t15269;
  double t15270;
  double t15271;
  double t15272;
  double t15273;
  double t15274;
  double t15277;
  double t15278;
  double t15279;
  double t15280;
  double t15281;
  double t15282;
  double t15284;
  double t15760;
  double t15761;
  double t15772;
  double t15778;
  double t15788;
  double t15789;
  double t15793;
  double t15794;
  double t15795;
  double t15796;
  double t15797;
  double t15798;
  double t15801;
  double t15802;
  double t15804;
  double t15805;
  double t15807;
  double t15823;
  double t15828;
  double t15831;
  double t15832;
  double t15833;
  double t15835;
  double t15857;
  double t15862;
  double t15869;
  double t15889;
  double t15890;
  double t15891;
  double t15894;
  double t15895;
  double t15896;
  double t15897;
  double t15899;
  double t15901;
  double t15902;
  double t15903;
  double t15907;
  double t15908;
  double t15909;
  double t15910;
  double t15915;
  double t15916;
  double t15917;
  double t15919;
  double t15933;
  double t15950;
  double t15951;
  double t15955;
  double t15956;
  double t15960;
  double t15961;
  double t15962;
  double t15963;
  double t15970;
  double t15976;
  double t15977;
  double t15982;
  double t15983;
  double t15984;
  double t15985;
  double t15986;
  double t15987;
  double t15988;
  double t15989;
  double t15990;
  double t15991;
  double t14654;
  double t16465;
  double t16467;
  double t16471;
  double t16474;
  double t16483;
  double t16488;
  double t16495;
  double t16751;
  double t16754;
  double t16758;
  double t16762;
  double t16763;
  double t16764;
  double t16794;
  double t16795;
  double t16797;
  double t16798;
  double t16904;
  double t16905;
  double t16910;
  double t16914;
  double t16919;
  double t16920;
  double t16921;
  double t16926;
  double t17104;
  double t17105;
  double t17107;
  double t17108;
  double t17109;
  double t17115;
  double t17117;
  double t17119;
  double t17125;
  double t17158;
  double t17159;
  double t17165;
  double t17168;
  double t17169;
  double t17172;
  double t17174;
  double t17175;
  double t13169;
  double t13628;
  double t13710;
  double t13952;
  double t13984;
  double t14135;
  double t14149;
  double t14150;
  double t14208;
  double t14217;
  double t14230;
  double t14232;
  double t14258;
  double t14259;
  double t14262;
  double t14346;
  double t14358;
  double t14361;
  double t14369;
  double t14390;
  double t14423;
  double t14427;
  double t14431;
  double t14432;
  double t14433;
  double t14434;
  double t14435;
  double t14441;
  double t14442;
  double t14444;
  double t14445;
  double t14452;
  double t14454;
  double t14455;
  double t14456;
  double t14459;
  double t14461;
  double t14483;
  double t14491;
  double t14495;
  double t14498;
  double t15289;
  double t15294;
  double t15299;
  double t15300;
  double t15308;
  double t15309;
  double t15310;
  double t15311;
  double t15312;
  double t15313;
  double t15314;
  double t15315;
  double t15316;
  double t15317;
  double t15319;
  double t15320;
  double t15325;
  double t15326;
  double t15327;
  double t15328;
  double t15332;
  double t15333;
  double t15335;
  double t15336;
  double t15338;
  double t15339;
  double t15340;
  double t15341;
  double t15343;
  double t15344;
  double t15345;
  double t15346;
  double t15347;
  double t15348;
  double t15349;
  double t15350;
  double t15351;
  double t15352;
  double t15353;
  double t15354;
  double t15361;
  double t15367;
  double t15371;
  double t15372;
  double t15373;
  double t15376;
  double t15377;
  double t15386;
  double t15387;
  double t15388;
  double t15389;
  double t15391;
  double t15392;
  double t15393;
  double t15397;
  double t15402;
  double t15403;
  double t15405;
  double t15412;
  double t15413;
  double t15417;
  double t15996;
  double t15999;
  double t16000;
  double t16001;
  double t16002;
  double t16003;
  double t16004;
  double t16005;
  double t16006;
  double t16007;
  double t16008;
  double t16011;
  double t16012;
  double t16013;
  double t16015;
  double t16017;
  double t16022;
  double t16023;
  double t16029;
  double t16037;
  double t16042;
  double t16045;
  double t16046;
  double t16047;
  double t16048;
  double t16073;
  double t16087;
  double t16093;
  double t16094;
  double t16096;
  double t16098;
  double t16100;
  double t16103;
  double t16109;
  double t16112;
  double t16114;
  double t16146;
  double t16148;
  double t16149;
  double t16164;
  double t16166;
  double t16168;
  double t16171;
  double t16172;
  double t16174;
  double t16179;
  double t16180;
  double t16187;
  double t16189;
  double t16193;
  double t16194;
  double t16197;
  double t16198;
  double t16201;
  double t16275;
  double t16276;
  double t16278;
  double t16281;
  double t16282;
  double t16284;
  double t16288;
  double t17106;
  double t17113;
  double t17126;
  double t17127;
  double t17129;
  double t17130;
  double t17133;
  double t17135;
  double t17136;
  double t17139;
  double t17141;
  double t17143;
  double t17146;
  double t17147;
  double t17148;
  double t17151;
  double t17152;
  double t17154;
  double t17155;
  double t17156;
  double t17164;
  double t17171;
  double t17176;
  double t17177;
  double t17178;
  double t17180;
  double t17182;
  double t17187;
  double t17188;
  double t17192;
  double t17193;
  double t17224;
  double t17226;
  double t17227;
  double t17228;
  double t17231;
  double t17232;
  double t17233;
  double t17234;
  double t17235;
  double t17236;
  double t17238;
  double t17240;
  double t17242;
  double t17243;
  double t17244;
  double t17246;
  double t17247;
  double t17248;
  double t17249;
  double t17250;
  double t17252;
  double t17254;
  double t17255;
  double t17256;
  double t17257;
  double t17258;
  double t17259;
  double t17261;
  double t17262;
  double t17263;
  double t17359;
  double t17351;
  double t17352;
  double t17353;
  double t17356;
  double t17367;
  double t17374;
  double t17375;
  double t17382;
  double t17383;
  double t17387;
  double t17346;
  double t17348;
  double t17349;
  double t17350;
  double t17358;
  double t17361;
  double t17363;
  double t17365;
  double t17377;
  double t17378;
  double t17379;
  double t17380;
  double t17381;
  double t17441;
  double t17442;
  double t17443;
  double t17388;
  double t17466;
  double t17467;
  double t17469;
  double t17471;
  double t17472;
  double t17433;
  t1242 = Cos(var1[19]);
  t413 = Cos(var1[3]);
  t1414 = -1.*t1242;
  t1487 = 1. + t1414;
  t1771 = Cos(var1[5]);
  t1908 = Sin(var1[3]);
  t1846 = Sin(var1[4]);
  t1917 = Sin(var1[5]);
  t1950 = Cos(var1[21]);
  t1951 = -1.*t1950;
  t1953 = 1. + t1951;
  t1955 = -3.e-6*t1953;
  t1962 = Sin(var1[21]);
  t414 = Cos(var1[4]);
  t610 = Sin(var1[19]);
  t1864 = t413*t1771*t1846;
  t1918 = -1.*t1908*t1917;
  t1920 = t1864 + t1918;
  t1941 = -1.*t1771*t1908;
  t1943 = -1.*t413*t1846*t1917;
  t1944 = t1941 + t1943;
  t2030 = 3.e-6*t1962;
  t2056 = t1955 + t2030;
  t2176 = 3.e-13*var1[21];
  t1986 = -3.e-6*t1962;
  t2011 = t1955 + t1986;
  t2179 = -9.e-12*t1953;
  t2136 = 3.e-6*t413*t414*t610;
  t2142 = 3.e-6*t1487*t1920;
  t2144 = -9.e-12*t1487;
  t2145 = 1. + t2144;
  t2146 = t2145*t1944;
  t2147 = t2136 + t2142 + t2146;
  t2206 = -1.*t413*t414*t610;
  t2207 = t1242*t1920;
  t2229 = 3.e-6*t1487*t1944;
  t2289 = t2206 + t2207 + t2229;
  t2659 = -1.000000000009*t1487;
  t2960 = 1. + t2659;
  t2971 = -1.*t2960*t413*t414;
  t3215 = -1.*t610*t1920;
  t3235 = 3.e-6*t610*t1944;
  t3288 = t2971 + t3215 + t3235;
  t3402 = 3.e-6*t1953;
  t3772 = -1.000000000009*t1953;
  t3793 = 1. + t3772;
  t3677 = 9.e-12*t1953;
  t2181 = -1.*t1962;
  t3434 = t3402 + t1986;
  t3864 = t3402 + t2030;
  t1491 = -1.8e-12*t1487;
  t1626 = -1. + t1242;
  t1673 = 0.2*t1626;
  t1732 = t1491 + t1673;
  t1949 = 1.e-7*var1[21];
  t1954 = 5.4e-18*t1953;
  t2025 = -0.200000000003*t2011;
  t2064 = 0.100000000003*t2056;
  t2132 = t1949 + t1954 + t2025 + t2064;
  t4368 = -1.*t1771*t1908*t1846;
  t4387 = -1.*t413*t1917;
  t4423 = t4368 + t4387;
  t4445 = -1.*t413*t1771;
  t4446 = t1908*t1846*t1917;
  t4453 = t4445 + t4446;
  t2177 = -0.2000000000048*t1953;
  t2183 = t2179 + t2181;
  t2184 = 0.100000000003*t2183;
  t2185 = 3.e-7*t2056;
  t2187 = t2176 + t2177 + t2184 + t2185;
  t2326 = 0.1000000000039*t1953;
  t2387 = 3.e-7*t2011;
  t2401 = t2179 + t1962;
  t2407 = -0.200000000003*t2401;
  t2472 = t2176 + t2326 + t2387 + t2407;
  t4458 = -3.e-6*t414*t610*t1908;
  t4459 = 3.e-6*t1487*t4423;
  t4461 = t2145*t4453;
  t4462 = t4458 + t4459 + t4461;
  t3687 = t3677 + t1962;
  t4473 = t414*t610*t1908;
  t4490 = t1242*t4423;
  t4508 = 3.e-6*t1487*t4453;
  t4519 = t4473 + t4490 + t4508;
  t4596 = t2960*t414*t1908;
  t4616 = -1.*t610*t4423;
  t4670 = 3.e-6*t610*t4453;
  t4733 = t4596 + t4616 + t4670;
  t3933 = t3677 + t2181;
  t4033 = -1.8e-11*t1953;
  t4059 = 1. + t4033;
  t5129 = 3.e-6*t1487*t413*t414*t1771;
  t5136 = -3.e-6*t413*t610*t1846;
  t5141 = -1.*t2145*t413*t414*t1917;
  t5147 = t5129 + t5136 + t5141;
  t5156 = t1242*t413*t414*t1771;
  t5203 = t413*t610*t1846;
  t5216 = -3.e-6*t1487*t413*t414*t1917;
  t5225 = t5156 + t5203 + t5216;
  t5278 = -1.*t413*t414*t1771*t610;
  t5279 = t2960*t413*t1846;
  t5281 = -3.e-6*t413*t414*t610*t1917;
  t5286 = t5278 + t5279 + t5281;
  t5568 = 3.e-6*t1487*t414*t1771*t1908;
  t5571 = -3.e-6*t610*t1908*t1846;
  t5582 = -1.*t2145*t414*t1908*t1917;
  t5586 = t5568 + t5571 + t5582;
  t5591 = t1242*t414*t1771*t1908;
  t5592 = t610*t1908*t1846;
  t5593 = -3.e-6*t1487*t414*t1908*t1917;
  t5596 = t5591 + t5592 + t5593;
  t5601 = -1.*t414*t1771*t610*t1908;
  t5603 = t2960*t1908*t1846;
  t5604 = -3.e-6*t414*t610*t1908*t1917;
  t5607 = t5601 + t5603 + t5604;
  t6029 = -1.*t413*t1771*t1846;
  t6031 = t1908*t1917;
  t6035 = t6029 + t6031;
  t6099 = t2145*t6035;
  t6101 = t6099 + t2229;
  t6105 = 3.e-6*t1487*t6035;
  t6106 = t1242*t1944;
  t6108 = t6105 + t6106;
  t6111 = 3.e-6*t610*t6035;
  t6113 = -1.*t610*t1944;
  t6154 = t6111 + t6113;
  t6369 = t413*t1771;
  t6380 = -1.*t1908*t1846*t1917;
  t6407 = t6369 + t6380;
  t6428 = t2145*t4423;
  t6447 = 3.e-6*t1487*t6407;
  t6472 = t6428 + t6447;
  t6871 = t1242*t6407;
  t6875 = t4459 + t6871;
  t7073 = 3.e-6*t610*t4423;
  t7074 = -1.*t610*t6407;
  t7106 = t7073 + t7074;
  t7723 = 1.000000000009*t413*t414*t610;
  t7724 = -1.*t1242*t1920;
  t7725 = 3.e-6*t1242*t1944;
  t7726 = t7723 + t7724 + t7725;
  t7733 = 3.e-6*t1242*t413*t414;
  t7741 = 3.e-6*t610*t1920;
  t7776 = -9.e-12*t610*t1944;
  t7781 = t7733 + t7741 + t7776;
  t7794 = -1.*t1242*t413*t414;
  t7796 = t7794 + t3215 + t3235;
  t12492 = t1771*t1908*t1846;
  t12540 = t413*t1917;
  t12542 = t12492 + t12540;
  t12579 = 1.000000000009*t414*t610*t1908;
  t12581 = -1.*t1242*t12542;
  t12585 = 3.e-6*t1242*t6407;
  t12591 = t12579 + t12581 + t12585;
  t12626 = 3.e-6*t1242*t414*t1908;
  t12655 = 3.e-6*t610*t12542;
  t12685 = -9.e-12*t610*t6407;
  t12780 = t12626 + t12655 + t12685;
  t12784 = -1.*t1242*t414*t1908;
  t12799 = -1.*t610*t12542;
  t12805 = 3.e-6*t610*t6407;
  t12807 = t12784 + t12799 + t12805;
  t13104 = 3.e-6*t1950;
  t13111 = t13104 + t1986;
  t13098 = -3.e-6*t1950;
  t13102 = t13098 + t1986;
  t13196 = -9.e-12*t1962;
  t13756 = t13104 + t2030;
  t14213 = t13098 + t2030;
  t14023 = 9.e-12*t1962;
  t13103 = -0.200000000003*t13102;
  t13122 = 0.100000000003*t13111;
  t13161 = 5.4e-18*t1962;
  t13162 = 1.e-7 + t13103 + t13122 + t13161;
  t13170 = 3.e-7*t13111;
  t13214 = t1951 + t13196;
  t13245 = 0.100000000003*t13214;
  t13277 = -0.2000000000048*t1962;
  t13555 = 3.e-13 + t13170 + t13245 + t13277;
  t13630 = 3.e-7*t13102;
  t13635 = t1950 + t13196;
  t13640 = -0.200000000003*t13635;
  t13643 = 0.1000000000039*t1962;
  t13709 = 3.e-13 + t13630 + t13640 + t13643;
  t14393 = 3.e-6*t414*t610*t1908;
  t14419 = 3.e-6*t1487*t12542;
  t14421 = t2145*t6407;
  t14422 = t14393 + t14419 + t14421;
  t14424 = -1.*t414*t610*t1908;
  t14425 = t1242*t12542;
  t14426 = t14424 + t14425 + t6447;
  t14131 = t1951 + t14023;
  t14429 = -1.*t2960*t414*t1908;
  t14430 = t14429 + t12799 + t12805;
  t14261 = t1950 + t14023;
  t990 = -0.2000000000018*t413*t414*t610;
  t1922 = t1732*t1920;
  t1945 = 6.000000000054e-7*t1487*t1944;
  t2175 = t2132*t2147;
  t2315 = t2187*t2289;
  t3400 = t2472*t3288;
  t3660 = t3434*t2147;
  t3709 = t3687*t2289;
  t3800 = t3793*t3288;
  t3803 = t3660 + t3709 + t3800;
  t3806 = -0.3*t3803;
  t3865 = -1.*t3864*t2147;
  t3896 = -1.*t3793*t2289;
  t3938 = -1.*t3933*t3288;
  t3947 = t3865 + t3896 + t3938;
  t4013 = 0.2*t3947;
  t4105 = t4059*t2147;
  t4106 = t3434*t2289;
  t4148 = t3864*t3288;
  t4149 = t4105 + t4106 + t4148;
  t4182 = -0.099999*t4149;
  t4210 = t990 + t1922 + t1945 + t2175 + t2315 + t3400 + t3806 + t4013 + t4182;
  t5040 = t1732*t413*t414*t1771;
  t5072 = 0.2000000000018*t413*t610*t1846;
  t5078 = -6.000000000054e-7*t1487*t413*t414*t1917;
  t5155 = t2132*t5147;
  t5274 = t2187*t5225;
  t5288 = t2472*t5286;
  t5304 = t3434*t5147;
  t5323 = t3687*t5225;
  t5336 = t3793*t5286;
  t5341 = t5304 + t5323 + t5336;
  t5342 = -0.3*t5341;
  t5348 = -1.*t3864*t5147;
  t5349 = -1.*t3793*t5225;
  t5354 = -1.*t3933*t5286;
  t5356 = t5348 + t5349 + t5354;
  t5358 = 0.2*t5356;
  t5360 = t4059*t5147;
  t5363 = t3434*t5225;
  t5373 = t3864*t5286;
  t5378 = t5360 + t5363 + t5373;
  t5382 = -0.099999*t5378;
  t5467 = t5040 + t5072 + t5078 + t5155 + t5274 + t5288 + t5342 + t5358 + t5382;
  t5558 = var2[1]*t5467;
  t5560 = t1732*t414*t1771*t1908;
  t5561 = 0.2000000000018*t610*t1908*t1846;
  t5562 = -6.000000000054e-7*t1487*t414*t1908*t1917;
  t5590 = t2132*t5586;
  t5598 = t2187*t5596;
  t5608 = t2472*t5607;
  t5686 = t3434*t5586;
  t5688 = t3687*t5596;
  t5750 = t3793*t5607;
  t5787 = t5686 + t5688 + t5750;
  t5808 = -0.3*t5787;
  t5844 = -1.*t3864*t5586;
  t5909 = -1.*t3793*t5596;
  t5995 = -1.*t3933*t5607;
  t5998 = t5844 + t5909 + t5995;
  t6009 = 0.2*t5998;
  t6016 = t4059*t5586;
  t6017 = t3434*t5596;
  t6020 = t3864*t5607;
  t6021 = t6016 + t6017 + t6020;
  t6023 = -0.099999*t6021;
  t6025 = t5560 + t5561 + t5562 + t5590 + t5598 + t5608 + t5808 + t6009 + t6023;
  t6027 = var2[2]*t6025;
  t6028 = t5558 + t6027;
  t14656 = -3.e-6*t1487*t414*t1771;
  t14658 = 3.e-6*t610*t1846;
  t14659 = t2145*t414*t1917;
  t14660 = t14656 + t14658 + t14659;
  t14662 = -1.*t1242*t414*t1771;
  t14664 = -1.*t610*t1846;
  t14666 = 3.e-6*t1487*t414*t1917;
  t14669 = t14662 + t14664 + t14666;
  t14671 = t414*t1771*t610;
  t14672 = -1.*t2960*t1846;
  t14673 = 3.e-6*t414*t610*t1917;
  t14675 = t14671 + t14672 + t14673;
  t14736 = 3.e-6*t1487*t413*t1771*t1846;
  t14737 = -1.*t2145*t413*t1846*t1917;
  t14738 = t2136 + t14736 + t14737;
  t14741 = t1242*t413*t1771*t1846;
  t14742 = -3.e-6*t1487*t413*t1846*t1917;
  t14744 = t2206 + t14741 + t14742;
  t14746 = -1.*t413*t1771*t610*t1846;
  t14747 = -3.e-6*t413*t610*t1846*t1917;
  t14748 = t2971 + t14746 + t14747;
  t4365 = 0.2000000000018*t414*t610*t1908;
  t14817 = -3.e-6*t1487*t1771*t1908*t1846;
  t14818 = t2145*t1908*t1846*t1917;
  t14820 = t4458 + t14817 + t14818;
  t14825 = -1.*t1242*t1771*t1908*t1846;
  t14832 = 3.e-6*t1487*t1908*t1846*t1917;
  t14833 = t4473 + t14825 + t14832;
  t14835 = t1771*t610*t1908*t1846;
  t14836 = 3.e-6*t610*t1908*t1846*t1917;
  t14839 = t4596 + t14835 + t14836;
  t14901 = t2145*t413*t414*t1771;
  t14908 = 3.e-6*t1487*t413*t414*t1917;
  t14913 = t14901 + t14908;
  t14925 = t1242*t413*t414*t1917;
  t14935 = t5129 + t14925;
  t14943 = 3.e-6*t413*t414*t1771*t610;
  t14948 = -1.*t413*t414*t610*t1917;
  t14952 = t14943 + t14948;
  t14995 = -1.*t2145*t414*t1771*t1908;
  t14997 = t14995 + t5593;
  t14999 = -3.e-6*t1487*t414*t1771*t1908;
  t15000 = -1.*t1242*t414*t1908*t1917;
  t15002 = t14999 + t15000;
  t15006 = -3.e-6*t414*t1771*t610*t1908;
  t15008 = t414*t610*t1908*t1917;
  t15010 = t15006 + t15008;
  t15054 = t2145*t1771*t1846;
  t15056 = 3.e-6*t1487*t1846*t1917;
  t15070 = t15054 + t15056;
  t15075 = 3.e-6*t1487*t1771*t1846;
  t15076 = t1242*t1846*t1917;
  t15077 = t15075 + t15076;
  t15081 = 3.e-6*t1771*t610*t1846;
  t15082 = -1.*t610*t1846*t1917;
  t15084 = t15081 + t15082;
  t15125 = 1.000000000009*t413*t610*t1846;
  t15127 = 3.e-6*t1242*t413*t414*t1917;
  t15129 = t5156 + t15125 + t15127;
  t15133 = -3.e-6*t413*t414*t1771*t610;
  t15135 = 3.e-6*t1242*t413*t1846;
  t15136 = -9.e-12*t413*t414*t610*t1917;
  t15137 = t15133 + t15135 + t15136;
  t15139 = t413*t414*t1771*t610;
  t15140 = -1.*t1242*t413*t1846;
  t15141 = 3.e-6*t413*t414*t610*t1917;
  t15142 = t15139 + t15140 + t15141;
  t15174 = -1.*t1242*t414*t1771*t1908;
  t15175 = -1.000000000009*t610*t1908*t1846;
  t15176 = -3.e-6*t1242*t414*t1908*t1917;
  t15177 = t15174 + t15175 + t15176;
  t15181 = t1242*t1908*t1846;
  t15182 = t5601 + t15181 + t5604;
  t15186 = 3.e-6*t414*t1771*t610*t1908;
  t15189 = -3.e-6*t1242*t1908*t1846;
  t15193 = 9.e-12*t414*t610*t1908*t1917;
  t15194 = t15186 + t15189 + t15193;
  t15239 = -1.000000000009*t414*t610;
  t15241 = t1242*t1771*t1846;
  t15242 = 3.e-6*t1242*t1846*t1917;
  t15243 = t15239 + t15241 + t15242;
  t15245 = -3.e-6*t1242*t414;
  t15247 = -3.e-6*t1771*t610*t1846;
  t15248 = -9.e-12*t610*t1846*t1917;
  t15249 = t15245 + t15247 + t15248;
  t15252 = t1242*t414;
  t15253 = t1771*t610*t1846;
  t15254 = 3.e-6*t610*t1846*t1917;
  t15255 = t15252 + t15253 + t15254;
  t15285 = -3.e-6*t1487*t413*t414*t1771;
  t15286 = 3.e-6*t413*t610*t1846;
  t15287 = t2145*t413*t414*t1917;
  t15288 = t15285 + t15286 + t15287;
  t15290 = -1.*t1242*t413*t414*t1771;
  t15291 = -1.*t413*t610*t1846;
  t15292 = t15290 + t15291 + t14908;
  t15295 = -1.*t2960*t413*t1846;
  t15297 = t15139 + t15295 + t15141;
  t15355 = -3.e-6*t414*t610;
  t15357 = -3.e-6*t1487*t1771*t1846;
  t15358 = t2145*t1846*t1917;
  t15360 = t15355 + t15357 + t15358;
  t15363 = t414*t610;
  t15364 = -1.*t1242*t1771*t1846;
  t15366 = t15363 + t15364 + t15056;
  t15368 = t2960*t414;
  t15370 = t15368 + t15253 + t15254;
  t6091 = 6.000000000054e-7*t1487*t6035;
  t6097 = t1732*t1944;
  t6102 = t2132*t6101;
  t6109 = t2187*t6108;
  t6155 = t2472*t6154;
  t6171 = t3434*t6101;
  t6173 = t3687*t6108;
  t6183 = t3793*t6154;
  t6203 = t6171 + t6173 + t6183;
  t6219 = -0.3*t6203;
  t6266 = -1.*t3864*t6101;
  t6285 = -1.*t3793*t6108;
  t6291 = -1.*t3933*t6154;
  t6292 = t6266 + t6285 + t6291;
  t6299 = 0.2*t6292;
  t6332 = t4059*t6101;
  t6339 = t3434*t6108;
  t6348 = t3864*t6154;
  t6349 = t6332 + t6339 + t6348;
  t6363 = -0.099999*t6349;
  t6364 = t6091 + t6097 + t6102 + t6109 + t6155 + t6219 + t6299 + t6363;
  t6367 = var2[1]*t6364;
  t6368 = 6.000000000054e-7*t1487*t4423;
  t6423 = t1732*t6407;
  t6719 = t2132*t6472;
  t6876 = t2187*t6875;
  t7111 = t2472*t7106;
  t7156 = t3434*t6472;
  t7178 = t3687*t6875;
  t7208 = t3793*t7106;
  t7280 = t7156 + t7178 + t7208;
  t7302 = -0.3*t7280;
  t7318 = -1.*t3864*t6472;
  t7388 = -1.*t3793*t6875;
  t7396 = -1.*t3933*t7106;
  t7398 = t7318 + t7388 + t7396;
  t7494 = 0.2*t7398;
  t7500 = t4059*t6472;
  t7509 = t3434*t6875;
  t7514 = t3864*t7106;
  t7517 = t7500 + t7509 + t7514;
  t7518 = -0.099999*t7517;
  t7528 = t6368 + t6423 + t6719 + t6876 + t7111 + t7302 + t7494 + t7518;
  t7532 = var2[2]*t7528;
  t7566 = t6367 + t7532;
  t14888 = 6.000000000054e-7*t1487*t413*t414*t1771;
  t14900 = t1732*t413*t414*t1917;
  t14920 = t2132*t14913;
  t14942 = t2187*t14935;
  t14957 = t2472*t14952;
  t14958 = t3434*t14913;
  t14960 = t3687*t14935;
  t14962 = t3793*t14952;
  t14966 = t14958 + t14960 + t14962;
  t14970 = -0.3*t14966;
  t14971 = -1.*t3864*t14913;
  t14972 = -1.*t3793*t14935;
  t14974 = -1.*t3933*t14952;
  t14975 = t14971 + t14972 + t14974;
  t14978 = 0.2*t14975;
  t14979 = t4059*t14913;
  t14983 = t3434*t14935;
  t14984 = t3864*t14952;
  t14985 = t14979 + t14983 + t14984;
  t14987 = -0.099999*t14985;
  t14989 = t14888 + t14900 + t14920 + t14942 + t14957 + t14970 + t14978 + t14987;
  t14991 = var2[2]*t14989;
  t14993 = -6.000000000054e-7*t1487*t414*t1771*t1908;
  t14994 = -1.*t1732*t414*t1908*t1917;
  t14998 = t2132*t14997;
  t15003 = t2187*t15002;
  t15011 = t2472*t15010;
  t15013 = t3434*t14997;
  t15015 = t3687*t15002;
  t15016 = t3793*t15010;
  t15017 = t15013 + t15015 + t15016;
  t15019 = -0.3*t15017;
  t15021 = -1.*t3864*t14997;
  t15023 = -1.*t3793*t15002;
  t15026 = -1.*t3933*t15010;
  t15029 = t15021 + t15023 + t15026;
  t15032 = 0.2*t15029;
  t15033 = t4059*t14997;
  t15035 = t3434*t15002;
  t15036 = t3864*t15010;
  t15041 = t15033 + t15035 + t15036;
  t15043 = -0.099999*t15041;
  t15045 = t14993 + t14994 + t14998 + t15003 + t15011 + t15019 + t15032 + t15043;
  t15046 = var2[1]*t15045;
  t15047 = 6.000000000054e-7*t1487*t1771*t1846;
  t15051 = t1732*t1846*t1917;
  t15073 = t2132*t15070;
  t15078 = t2187*t15077;
  t15085 = t2472*t15084;
  t15087 = t3434*t15070;
  t15088 = t3687*t15077;
  t15090 = t3793*t15084;
  t15091 = t15087 + t15088 + t15090;
  t15092 = -0.3*t15091;
  t15094 = -1.*t3864*t15070;
  t15096 = -1.*t3793*t15077;
  t15097 = -1.*t3933*t15084;
  t15100 = t15094 + t15096 + t15097;
  t15101 = 0.2*t15100;
  t15102 = t4059*t15070;
  t15103 = t3434*t15077;
  t15104 = t3864*t15084;
  t15110 = t15102 + t15103 + t15104;
  t15111 = -0.099999*t15110;
  t15112 = t15047 + t15051 + t15073 + t15078 + t15085 + t15092 + t15101 + t15111;
  t15119 = var2[0]*t15112;
  t15120 = t14991 + t15046 + t15119;
  t14653 = -1.*t1732*t414*t1771;
  t14655 = 6.000000000054e-7*t1487*t414*t1917;
  t15561 = t14656 + t14659;
  t15564 = t14662 + t14666;
  t15568 = t14671 + t14673;
  t15592 = t2142 + t2146;
  t15595 = t2207 + t2229;
  t15604 = t3215 + t3235;
  t4430 = t1732*t4423;
  t4456 = 6.000000000054e-7*t1487*t4453;
  t15657 = t4459 + t4461;
  t15659 = t4490 + t4508;
  t15662 = t4616 + t4670;
  t15763 = -3.e-6*t1242*t414*t1771;
  t15769 = t1242*t414*t1917;
  t15771 = t15763 + t15769;
  t15774 = 9.e-12*t414*t1771*t610;
  t15776 = -3.e-6*t414*t610*t1917;
  t15777 = t15774 + t15776;
  t15779 = -3.e-6*t414*t1771*t610;
  t15782 = t414*t610*t1917;
  t15785 = t15779 + t15782;
  t15846 = t1771*t1908;
  t15855 = t413*t1846*t1917;
  t15856 = t15846 + t15855;
  t15858 = 3.e-6*t1242*t1920;
  t15860 = -1.*t1242*t15856;
  t15861 = t15858 + t15860;
  t15863 = -1.*t610*t15856;
  t15868 = t7741 + t15863;
  t15870 = -9.e-12*t610*t1920;
  t15871 = 3.e-6*t610*t15856;
  t15877 = t15870 + t15871;
  t15937 = 3.e-6*t1242*t4423;
  t15938 = -1.*t1242*t6407;
  t15941 = t15937 + t15938;
  t15953 = -9.e-12*t610*t4423;
  t15954 = t15953 + t12805;
  t15992 = -1.*t2145*t414*t1771;
  t15993 = -3.e-6*t1487*t414*t1917;
  t15995 = t15992 + t15993;
  t15997 = -1.*t1242*t414*t1917;
  t15998 = t14656 + t15997;
  t16038 = t2145*t1920;
  t16039 = 3.e-6*t1487*t15856;
  t16040 = t16038 + t16039;
  t16043 = t1242*t15856;
  t16044 = t2142 + t16043;
  t7657 = -0.2000000000018*t1242*t413*t414;
  t7663 = -0.2000000000018*t610*t1920;
  t7703 = 6.000000000054e-7*t610*t1944;
  t7728 = t2472*t7726;
  t7791 = t2132*t7781;
  t9005 = t2187*t7796;
  t9035 = -1.*t3933*t7726;
  t9045 = -1.*t3864*t7781;
  t10647 = -1.*t3793*t7796;
  t11340 = t9035 + t9045 + t10647;
  t11972 = 0.2*t11340;
  t12090 = t3864*t7726;
  t12140 = t4059*t7781;
  t12143 = t3434*t7796;
  t12147 = t12090 + t12140 + t12143;
  t12275 = -0.099999*t12147;
  t12333 = t3793*t7726;
  t12346 = t3434*t7781;
  t12372 = t3687*t7796;
  t12375 = t12333 + t12346 + t12372;
  t12385 = -0.3*t12375;
  t12414 = t7657 + t7663 + t7703 + t7728 + t7791 + t9005 + t11972 + t12275 + t12385;
  t12462 = var2[1]*t12414;
  t12478 = -0.2000000000018*t1242*t414*t1908;
  t12543 = -0.2000000000018*t610*t12542;
  t12557 = 6.000000000054e-7*t610*t6407;
  t12608 = t2472*t12591;
  t12783 = t2132*t12780;
  t12819 = t2187*t12807;
  t12823 = -1.*t3933*t12591;
  t12833 = -1.*t3864*t12780;
  t12843 = -1.*t3793*t12807;
  t12844 = t12823 + t12833 + t12843;
  t12855 = 0.2*t12844;
  t12859 = t3864*t12591;
  t12870 = t4059*t12780;
  t12895 = t3434*t12807;
  t12896 = t12859 + t12870 + t12895;
  t12897 = -0.099999*t12896;
  t12958 = t3793*t12591;
  t12977 = t3434*t12780;
  t13009 = t3687*t12807;
  t13026 = t12958 + t12977 + t13009;
  t13069 = -0.3*t13026;
  t13091 = t12478 + t12543 + t12557 + t12608 + t12783 + t12819 + t12855 + t12897 + t13069;
  t13095 = var2[2]*t13091;
  t13097 = t12462 + t13095;
  t15121 = 0.2000000000018*t413*t414*t1771*t610;
  t15122 = -0.2000000000018*t1242*t413*t1846;
  t15123 = 6.000000000054e-7*t413*t414*t610*t1917;
  t15131 = t2472*t15129;
  t15138 = t2132*t15137;
  t15143 = t2187*t15142;
  t15144 = -1.*t3933*t15129;
  t15145 = -1.*t3864*t15137;
  t15146 = -1.*t3793*t15142;
  t15147 = t15144 + t15145 + t15146;
  t15149 = 0.2*t15147;
  t15150 = t3864*t15129;
  t15151 = t4059*t15137;
  t15154 = t3434*t15142;
  t15155 = t15150 + t15151 + t15154;
  t15157 = -0.099999*t15155;
  t15158 = t3793*t15129;
  t15160 = t3434*t15137;
  t15163 = t3687*t15142;
  t15165 = t15158 + t15160 + t15163;
  t15167 = -0.3*t15165;
  t15168 = t15121 + t15122 + t15123 + t15131 + t15138 + t15143 + t15149 + t15157 + t15167;
  t15170 = var2[2]*t15168;
  t15171 = -0.2000000000018*t414*t1771*t610*t1908;
  t15172 = 0.2000000000018*t1242*t1908*t1846;
  t15173 = -6.000000000054e-7*t414*t610*t1908*t1917;
  t15178 = t2472*t15177;
  t15184 = t2187*t15182;
  t15199 = t2132*t15194;
  t15200 = t3864*t15177;
  t15203 = t3434*t15182;
  t15204 = t4059*t15194;
  t15211 = t15200 + t15203 + t15204;
  t15212 = -0.099999*t15211;
  t15213 = t3793*t15177;
  t15217 = t3687*t15182;
  t15220 = t3434*t15194;
  t15222 = t15213 + t15217 + t15220;
  t15225 = -0.3*t15222;
  t15226 = -1.*t3933*t15177;
  t15227 = -1.*t3793*t15182;
  t15228 = -1.*t3864*t15194;
  t15231 = t15226 + t15227 + t15228;
  t15232 = 0.2*t15231;
  t15233 = t15171 + t15172 + t15173 + t15178 + t15184 + t15199 + t15212 + t15225 + t15232;
  t15234 = var2[1]*t15233;
  t15235 = 0.2000000000018*t1242*t414;
  t15236 = 0.2000000000018*t1771*t610*t1846;
  t15237 = 6.000000000054e-7*t610*t1846*t1917;
  t15244 = t2472*t15243;
  t15251 = t2132*t15249;
  t15257 = t2187*t15255;
  t15259 = -1.*t3933*t15243;
  t15264 = -1.*t3864*t15249;
  t15265 = -1.*t3793*t15255;
  t15267 = t15259 + t15264 + t15265;
  t15268 = 0.2*t15267;
  t15269 = t3864*t15243;
  t15270 = t4059*t15249;
  t15271 = t3434*t15255;
  t15272 = t15269 + t15270 + t15271;
  t15273 = -0.099999*t15272;
  t15274 = t3793*t15243;
  t15277 = t3434*t15249;
  t15278 = t3687*t15255;
  t15279 = t15274 + t15277 + t15278;
  t15280 = -0.3*t15279;
  t15281 = t15235 + t15236 + t15237 + t15244 + t15251 + t15257 + t15268 + t15273 + t15280;
  t15282 = var2[0]*t15281;
  t15284 = t15170 + t15234 + t15282;
  t15760 = -6.000000000054e-7*t414*t1771*t610;
  t15761 = 0.2000000000018*t414*t610*t1917;
  t15772 = t2472*t15771;
  t15778 = t2132*t15777;
  t15788 = t2187*t15785;
  t15789 = -1.*t3933*t15771;
  t15793 = -1.*t3864*t15777;
  t15794 = -1.*t3793*t15785;
  t15795 = t15789 + t15793 + t15794;
  t15796 = 0.2*t15795;
  t15797 = t3864*t15771;
  t15798 = t4059*t15777;
  t15801 = t3434*t15785;
  t15802 = t15797 + t15798 + t15801;
  t15804 = -0.099999*t15802;
  t15805 = t3793*t15771;
  t15807 = t3434*t15777;
  t15823 = t3687*t15785;
  t15828 = t15805 + t15807 + t15823;
  t15831 = -0.3*t15828;
  t15832 = t15760 + t15761 + t15772 + t15778 + t15788 + t15796 + t15804 + t15831;
  t15833 = var2[0]*t15832;
  t15835 = 6.000000000054e-7*t610*t1920;
  t15857 = -0.2000000000018*t610*t15856;
  t15862 = t2472*t15861;
  t15869 = t2187*t15868;
  t15889 = t2132*t15877;
  t15890 = t3864*t15861;
  t15891 = t3434*t15868;
  t15894 = t4059*t15877;
  t15895 = t15890 + t15891 + t15894;
  t15896 = -0.099999*t15895;
  t15897 = t3793*t15861;
  t15899 = t3687*t15868;
  t15901 = t3434*t15877;
  t15902 = t15897 + t15899 + t15901;
  t15903 = -0.3*t15902;
  t15907 = -1.*t3933*t15861;
  t15908 = -1.*t3793*t15868;
  t15909 = -1.*t3864*t15877;
  t15910 = t15907 + t15908 + t15909;
  t15915 = 0.2*t15910;
  t15916 = t15835 + t15857 + t15862 + t15869 + t15889 + t15896 + t15903 + t15915;
  t15917 = var2[2]*t15916;
  t15919 = 6.000000000054e-7*t610*t4423;
  t15933 = -0.2000000000018*t610*t6407;
  t15950 = t2472*t15941;
  t15951 = t2187*t7106;
  t15955 = t2132*t15954;
  t15956 = t3864*t15941;
  t15960 = t3434*t7106;
  t15961 = t4059*t15954;
  t15962 = t15956 + t15960 + t15961;
  t15963 = -0.099999*t15962;
  t15970 = t3793*t15941;
  t15976 = t3687*t7106;
  t15977 = t3434*t15954;
  t15982 = t15970 + t15976 + t15977;
  t15983 = -0.3*t15982;
  t15984 = -1.*t3933*t15941;
  t15985 = -1.*t3793*t7106;
  t15986 = -1.*t3864*t15954;
  t15987 = t15984 + t15985 + t15986;
  t15988 = 0.2*t15987;
  t15989 = t15919 + t15933 + t15950 + t15951 + t15955 + t15963 + t15983 + t15988;
  t15990 = var2[1]*t15989;
  t15991 = t15833 + t15917 + t15990;
  t14654 = -0.2000000000018*t610*t1846;
  t16465 = -3.e-6*t1242*t414*t1917;
  t16467 = t14662 + t14664 + t16465;
  t16471 = 3.e-6*t1242*t414*t1771;
  t16474 = 9.e-12*t1242*t414*t1917;
  t16483 = t16471 + t14658 + t16474;
  t16488 = -1.000000000009*t1242*t1846;
  t16495 = t14671 + t16488 + t14673;
  t16751 = 3.e-6*t1242*t6035;
  t16754 = -9.e-12*t1242*t15856;
  t16758 = t2136 + t16751 + t16754;
  t16762 = -1.*t1242*t6035;
  t16763 = 3.e-6*t1242*t15856;
  t16764 = t2206 + t16762 + t16763;
  t16794 = -1.000000000009*t1242*t413*t414;
  t16795 = t610*t6035;
  t16797 = -3.e-6*t610*t15856;
  t16798 = t16794 + t16795 + t16797;
  t16904 = 3.e-6*t1242*t12542;
  t16905 = -9.e-12*t1242*t6407;
  t16910 = t4458 + t16904 + t16905;
  t16914 = t4473 + t12581 + t12585;
  t16919 = 1.000000000009*t1242*t414*t1908;
  t16920 = t610*t12542;
  t16921 = -3.e-6*t610*t6407;
  t16926 = t16919 + t16920 + t16921;
  t17104 = -1.000000000009*t610*t1846;
  t17105 = t14662 + t17104 + t16465;
  t17107 = -1.*t414*t1771*t610;
  t17108 = t1242*t1846;
  t17109 = t17107 + t17108 + t15776;
  t17115 = 3.e-6*t414*t1771*t610;
  t17117 = -3.e-6*t1242*t1846;
  t17119 = 9.e-12*t414*t610*t1917;
  t17125 = t17115 + t17117 + t17119;
  t17158 = -1.000000000009*t413*t414*t610;
  t17159 = t17158 + t16762 + t16763;
  t17165 = -3.e-6*t1242*t413*t414;
  t17168 = -9.e-12*t610*t15856;
  t17169 = t17165 + t6111 + t17168;
  t17172 = t1242*t413*t414;
  t17174 = -1.*t610*t6035;
  t17175 = t17172 + t17174 + t15871;
  t13169 = t13162*t2147;
  t13628 = t13555*t2289;
  t13710 = t13709*t3288;
  t13952 = -1.*t13756*t2147;
  t13984 = 1.000000000009*t1962*t2289;
  t14135 = -1.*t14131*t3288;
  t14149 = t13952 + t13984 + t14135;
  t14150 = 0.2*t14149;
  t14208 = -1.8e-11*t1962*t2147;
  t14217 = t14213*t2289;
  t14230 = t13756*t3288;
  t14232 = t14208 + t14217 + t14230;
  t14258 = -0.099999*t14232;
  t14259 = t14213*t2147;
  t14262 = t14261*t2289;
  t14346 = -1.000000000009*t1962*t3288;
  t14358 = t14259 + t14262 + t14346;
  t14361 = -0.3*t14358;
  t14369 = t13169 + t13628 + t13710 + t14150 + t14258 + t14361;
  t14390 = var2[1]*t14369;
  t14423 = t13162*t14422;
  t14427 = t13555*t14426;
  t14431 = t13709*t14430;
  t14432 = -1.*t13756*t14422;
  t14433 = 1.000000000009*t1962*t14426;
  t14434 = -1.*t14131*t14430;
  t14435 = t14432 + t14433 + t14434;
  t14441 = 0.2*t14435;
  t14442 = -1.8e-11*t1962*t14422;
  t14444 = t14213*t14426;
  t14445 = t13756*t14430;
  t14452 = t14442 + t14444 + t14445;
  t14454 = -0.099999*t14452;
  t14455 = t14213*t14422;
  t14456 = t14261*t14426;
  t14459 = -1.000000000009*t1962*t14430;
  t14461 = t14455 + t14456 + t14459;
  t14483 = -0.3*t14461;
  t14491 = t14423 + t14427 + t14431 + t14441 + t14454 + t14483;
  t14495 = var2[2]*t14491;
  t14498 = t14390 + t14495;
  t15289 = t13162*t15288;
  t15294 = t13555*t15292;
  t15299 = t13709*t15297;
  t15300 = -1.*t13756*t15288;
  t15308 = 1.000000000009*t1962*t15292;
  t15309 = -1.*t14131*t15297;
  t15310 = t15300 + t15308 + t15309;
  t15311 = 0.2*t15310;
  t15312 = -1.8e-11*t1962*t15288;
  t15313 = t14213*t15292;
  t15314 = t13756*t15297;
  t15315 = t15312 + t15313 + t15314;
  t15316 = -0.099999*t15315;
  t15317 = t14213*t15288;
  t15319 = t14261*t15292;
  t15320 = -1.000000000009*t1962*t15297;
  t15325 = t15317 + t15319 + t15320;
  t15326 = -0.3*t15325;
  t15327 = t15289 + t15294 + t15299 + t15311 + t15316 + t15326;
  t15328 = var2[2]*t15327;
  t15332 = t13162*t5586;
  t15333 = t13555*t5596;
  t15335 = t13709*t5607;
  t15336 = -1.*t13756*t5586;
  t15338 = 1.000000000009*t1962*t5596;
  t15339 = -1.*t14131*t5607;
  t15340 = t15336 + t15338 + t15339;
  t15341 = 0.2*t15340;
  t15343 = -1.8e-11*t1962*t5586;
  t15344 = t14213*t5596;
  t15345 = t13756*t5607;
  t15346 = t15343 + t15344 + t15345;
  t15347 = -0.099999*t15346;
  t15348 = t14213*t5586;
  t15349 = t14261*t5596;
  t15350 = -1.000000000009*t1962*t5607;
  t15351 = t15348 + t15349 + t15350;
  t15352 = -0.3*t15351;
  t15353 = t15332 + t15333 + t15335 + t15341 + t15347 + t15352;
  t15354 = var2[1]*t15353;
  t15361 = t13162*t15360;
  t15367 = t13555*t15366;
  t15371 = t13709*t15370;
  t15372 = -1.*t13756*t15360;
  t15373 = 1.000000000009*t1962*t15366;
  t15376 = -1.*t14131*t15370;
  t15377 = t15372 + t15373 + t15376;
  t15386 = 0.2*t15377;
  t15387 = -1.8e-11*t1962*t15360;
  t15388 = t14213*t15366;
  t15389 = t13756*t15370;
  t15391 = t15387 + t15388 + t15389;
  t15392 = -0.099999*t15391;
  t15393 = t14213*t15360;
  t15397 = t14261*t15366;
  t15402 = -1.000000000009*t1962*t15370;
  t15403 = t15393 + t15397 + t15402;
  t15405 = -0.3*t15403;
  t15412 = t15361 + t15367 + t15371 + t15386 + t15392 + t15405;
  t15413 = var2[0]*t15412;
  t15417 = t15328 + t15354 + t15413;
  t15996 = t13162*t15995;
  t15999 = t13555*t15998;
  t16000 = t13709*t15785;
  t16001 = -1.*t13756*t15995;
  t16002 = 1.000000000009*t1962*t15998;
  t16003 = -1.*t14131*t15785;
  t16004 = t16001 + t16002 + t16003;
  t16005 = 0.2*t16004;
  t16006 = -1.8e-11*t1962*t15995;
  t16007 = t14213*t15998;
  t16008 = t13756*t15785;
  t16011 = t16006 + t16007 + t16008;
  t16012 = -0.099999*t16011;
  t16013 = t14213*t15995;
  t16015 = t14261*t15998;
  t16017 = -1.000000000009*t1962*t15785;
  t16022 = t16013 + t16015 + t16017;
  t16023 = -0.3*t16022;
  t16029 = t15996 + t15999 + t16000 + t16005 + t16012 + t16023;
  t16037 = var2[0]*t16029;
  t16042 = t13162*t16040;
  t16045 = t13555*t16044;
  t16046 = t13709*t15868;
  t16047 = -1.*t13756*t16040;
  t16048 = 1.000000000009*t1962*t16044;
  t16073 = -1.*t14131*t15868;
  t16087 = t16047 + t16048 + t16073;
  t16093 = 0.2*t16087;
  t16094 = -1.8e-11*t1962*t16040;
  t16096 = t14213*t16044;
  t16098 = t13756*t15868;
  t16100 = t16094 + t16096 + t16098;
  t16103 = -0.099999*t16100;
  t16109 = t14213*t16040;
  t16112 = t14261*t16044;
  t16114 = -1.000000000009*t1962*t15868;
  t16146 = t16109 + t16112 + t16114;
  t16148 = -0.3*t16146;
  t16149 = t16042 + t16045 + t16046 + t16093 + t16103 + t16148;
  t16164 = var2[2]*t16149;
  t16166 = t13162*t6472;
  t16168 = t13555*t6875;
  t16171 = t13709*t7106;
  t16172 = -1.*t13756*t6472;
  t16174 = 1.000000000009*t1962*t6875;
  t16179 = -1.*t14131*t7106;
  t16180 = t16172 + t16174 + t16179;
  t16187 = 0.2*t16180;
  t16189 = -1.8e-11*t1962*t6472;
  t16193 = t14213*t6875;
  t16194 = t13756*t7106;
  t16197 = t16189 + t16193 + t16194;
  t16198 = -0.099999*t16197;
  t16201 = t14213*t6472;
  t16275 = t14261*t6875;
  t16276 = -1.000000000009*t1962*t7106;
  t16278 = t16201 + t16275 + t16276;
  t16281 = -0.3*t16278;
  t16282 = t16166 + t16168 + t16171 + t16187 + t16198 + t16281;
  t16284 = var2[1]*t16282;
  t16288 = t16037 + t16164 + t16284;
  t17106 = t13709*t17105;
  t17113 = t13555*t17109;
  t17126 = t13162*t17125;
  t17127 = -1.000000000009*t1962*t17105;
  t17129 = t14261*t17109;
  t17130 = t14213*t17125;
  t17133 = t17127 + t17129 + t17130;
  t17135 = -0.3*t17133;
  t17136 = -1.*t14131*t17105;
  t17139 = 1.000000000009*t1962*t17109;
  t17141 = -1.*t13756*t17125;
  t17143 = t17136 + t17139 + t17141;
  t17146 = 0.2*t17143;
  t17147 = t13756*t17105;
  t17148 = t14213*t17109;
  t17151 = -1.8e-11*t1962*t17125;
  t17152 = t17147 + t17148 + t17151;
  t17154 = -0.099999*t17152;
  t17155 = t17106 + t17113 + t17126 + t17135 + t17146 + t17154;
  t17156 = var2[0]*t17155;
  t17164 = t13709*t17159;
  t17171 = t13162*t17169;
  t17176 = t13555*t17175;
  t17177 = -1.000000000009*t1962*t17159;
  t17178 = t14213*t17169;
  t17180 = t14261*t17175;
  t17182 = t17177 + t17178 + t17180;
  t17187 = -0.3*t17182;
  t17188 = t13756*t17159;
  t17192 = -1.8e-11*t1962*t17169;
  t17193 = t14213*t17175;
  t17224 = t17188 + t17192 + t17193;
  t17226 = -0.099999*t17224;
  t17227 = -1.*t14131*t17159;
  t17228 = -1.*t13756*t17169;
  t17231 = 1.000000000009*t1962*t17175;
  t17232 = t17227 + t17228 + t17231;
  t17233 = 0.2*t17232;
  t17234 = t17164 + t17171 + t17176 + t17187 + t17226 + t17233;
  t17235 = var2[2]*t17234;
  t17236 = t13709*t12591;
  t17238 = t13162*t12780;
  t17240 = t13555*t12807;
  t17242 = -1.000000000009*t1962*t12591;
  t17243 = t14213*t12780;
  t17244 = t14261*t12807;
  t17246 = t17242 + t17243 + t17244;
  t17247 = -0.3*t17246;
  t17248 = t13756*t12591;
  t17249 = -1.8e-11*t1962*t12780;
  t17250 = t14213*t12807;
  t17252 = t17248 + t17249 + t17250;
  t17254 = -0.099999*t17252;
  t17255 = -1.*t14131*t12591;
  t17256 = -1.*t13756*t12780;
  t17257 = 1.000000000009*t1962*t12807;
  t17258 = t17255 + t17256 + t17257;
  t17259 = 0.2*t17258;
  t17261 = t17236 + t17238 + t17240 + t17247 + t17254 + t17259;
  t17262 = var2[1]*t17261;
  t17263 = t17156 + t17235 + t17262;
  t17359 = -9.e-12*t1950;
  t17351 = 3.e-6*t1487*t414*t1771;
  t17352 = -3.e-6*t610*t1846;
  t17353 = -1.*t2145*t414*t1917;
  t17356 = t17351 + t17352 + t17353;
  t17367 = t1242*t414*t1771;
  t17374 = t610*t1846;
  t17375 = t17367 + t17374 + t15993;
  t17382 = t2960*t1846;
  t17383 = t17107 + t17382 + t15776;
  t17387 = 9.e-12*t1950;
  t17346 = 5.4e-18*t1950;
  t17348 = 0.100000000003*t13102;
  t17349 = -0.200000000003*t14213;
  t17350 = t17346 + t17348 + t17349;
  t17358 = -0.2000000000048*t1950;
  t17361 = t17359 + t1962;
  t17363 = 0.100000000003*t17361;
  t17365 = t17358 + t13630 + t17363;
  t17377 = 0.1000000000039*t1950;
  t17378 = t17359 + t2181;
  t17379 = -0.200000000003*t17378;
  t17380 = 3.e-7*t14213;
  t17381 = t17377 + t17379 + t17380;
  t17441 = -3.e-6*t413*t414*t610;
  t17442 = t2145*t15856;
  t17443 = t17441 + t6105 + t17442;
  t17388 = t17387 + t2181;
  t17466 = t413*t414*t610;
  t17467 = t1242*t6035;
  t17469 = t17466 + t17467 + t16039;
  t17471 = t2960*t413*t414;
  t17472 = t17471 + t17174 + t15871;
  t17433 = t17387 + t1962;
  p_output1[0]=1.;
  p_output1[1]=1.;
  p_output1[2]=1.;
  p_output1[3]=(t4365 + t4430 + t4456 + t2132*t4462 + t2187*t4519 + t2472*t4733 - 0.3*(t3434*t4462 + t3687*t4519 + t3793*t4733) - 0.099999*(t4059*t4462 + t3434*t4519 + t3864*t4733) + 0.2*(-1.*t3864*t4462 - 1.*t3793*t4519 - 1.*t3933*t4733))*var2[1] + t4210*var2[2];
  p_output1[4]=t6028;
  p_output1[5]=t7566;
  p_output1[6]=t13097;
  p_output1[7]=t14498;
  p_output1[8]=t4210;
  p_output1[9]=t12542*t1732 + t14422*t2132 + t14426*t2187 + t14430*t2472 - 0.3*(t14422*t3434 + t14426*t3687 + t14430*t3793) + 0.2*(-1.*t14426*t3793 - 1.*t14422*t3864 - 1.*t14430*t3933) - 0.099999*(t14426*t3434 + t14430*t3864 + t14422*t4059) - 0.2000000000018*t1908*t414*t610 + 6.000000000054e-7*t1487*t6407;
  p_output1[10]=t6028;
  p_output1[11]=(t14653 + t14654 + t14655 + t14660*t2132 + t14669*t2187 + t14675*t2472 - 0.3*(t14660*t3434 + t14669*t3687 + t14675*t3793) + 0.2*(-1.*t14669*t3793 - 1.*t14660*t3864 - 1.*t14675*t3933) - 0.099999*(t14669*t3434 + t14675*t3864 + t14660*t4059))*var2[0] + (-1.*t1732*t1771*t1846*t1908 + 6.000000000054e-7*t1487*t1846*t1908*t1917 + t14820*t2132 + t14833*t2187 + t14839*t2472 - 0.3*(t14820*t3434 + t14833*t3687 + t14839*t3793) + 0.2*(-1.*t14833*t3793 - 1.*t14820*t3864 - 1.*t14839*t3933) - 0.099999*(t14833*t3434 + t14839*t3864 + t14820*t4059) + t4365)*var2[1] + (t14738*t2132 + t14744*t2187 + t14748*t2472 - 0.3*(t14738*t3434 + t14744*t3687 + t14748*t3793) + 0.2*(-1.*t14744*t3793 - 1.*t14738*t3864 - 1.*t14748*t3933) - 0.099999*(t14744*t3434 + t14748*t3864 + t14738*t4059) + t1732*t1771*t1846*t413 - 6.000000000054e-7*t1487*t1846*t1917*t413 + t990)*var2[2];
  p_output1[12]=t15120;
  p_output1[13]=t15284;
  p_output1[14]=t15417;
  p_output1[15]=-1.*t1732*t1771*t1846 + 6.000000000054e-7*t1487*t1846*t1917 + t15360*t2132 + t15366*t2187 + t15370*t2472 - 0.3*(t15360*t3434 + t15366*t3687 + t15370*t3793) + 0.2*(-1.*t15366*t3793 - 1.*t15360*t3864 - 1.*t15370*t3933) - 0.099999*(t15366*t3434 + t15370*t3864 + t15360*t4059) + 0.2000000000018*t414*t610;
  p_output1[16]=t6025;
  p_output1[17]=t15288*t2132 + t15292*t2187 + t15297*t2472 - 0.3*(t15288*t3434 + t15292*t3687 + t15297*t3793) + 0.2*(-1.*t15292*t3793 - 1.*t15288*t3864 - 1.*t15297*t3933) - 0.099999*(t15292*t3434 + t15297*t3864 + t15288*t4059) - 1.*t1732*t1771*t413*t414 + 6.000000000054e-7*t1487*t1917*t413*t414 - 0.2000000000018*t1846*t413*t610;
  p_output1[18]=t7566;
  p_output1[19]=t15120;
  p_output1[20]=(t14653 + t14655 + t15561*t2132 + t15564*t2187 + t15568*t2472 - 0.3*(t15561*t3434 + t15564*t3687 + t15568*t3793) + 0.2*(-1.*t15564*t3793 - 1.*t15561*t3864 - 1.*t15568*t3933) - 0.099999*(t15564*t3434 + t15568*t3864 + t15561*t4059))*var2[0] + (t15657*t2132 + t15659*t2187 + t15662*t2472 - 0.3*(t15657*t3434 + t15659*t3687 + t15662*t3793) + 0.2*(-1.*t15659*t3793 - 1.*t15657*t3864 - 1.*t15662*t3933) - 0.099999*(t15659*t3434 + t15662*t3864 + t15657*t4059) + t4430 + t4456)*var2[1] + (t1922 + t1945 + t15592*t2132 + t15595*t2187 + t15604*t2472 - 0.3*(t15592*t3434 + t15595*t3687 + t15604*t3793) + 0.2*(-1.*t15595*t3793 - 1.*t15592*t3864 - 1.*t15604*t3933) - 0.099999*(t15595*t3434 + t15604*t3864 + t15592*t4059))*var2[2];
  p_output1[21]=t15991;
  p_output1[22]=t16288;
  p_output1[23]=t15995*t2132 + t15998*t2187 + t15785*t2472 - 0.3*(t15995*t3434 + t15998*t3687 + t15785*t3793) + 0.2*(-1.*t15998*t3793 - 1.*t15995*t3864 - 1.*t15785*t3933) - 0.099999*(t15998*t3434 + t15785*t3864 + t15995*t4059) - 6.000000000054e-7*t1487*t1771*t414 - 1.*t1732*t1917*t414;
  p_output1[24]=t7528;
  p_output1[25]=t15856*t1732 + 6.000000000054e-7*t1487*t1920 + t16040*t2132 + t16044*t2187 + t15868*t2472 - 0.3*(t16040*t3434 + t16044*t3687 + t15868*t3793) + 0.2*(-1.*t16044*t3793 - 1.*t16040*t3864 - 1.*t15868*t3933) - 0.099999*(t16044*t3434 + t15868*t3864 + t16040*t4059);
  p_output1[26]=t13097;
  p_output1[27]=t15284;
  p_output1[28]=t15991;
  p_output1[29]=(t14654 + t16483*t2132 + t16467*t2187 + t16495*t2472 - 0.3*(t16483*t3434 + t16467*t3687 + t16495*t3793) + 0.2*(-1.*t16467*t3793 - 1.*t16483*t3864 - 1.*t16495*t3933) - 0.099999*(t16467*t3434 + t16495*t3864 + t16483*t4059) - 0.2000000000018*t1242*t1771*t414 - 6.000000000054e-7*t1242*t1917*t414)*var2[0] + (-0.2000000000018*t1242*t12542 + t16910*t2132 + t16914*t2187 + t16926*t2472 - 0.3*(t16910*t3434 + t16914*t3687 + t16926*t3793) + 0.2*(-1.*t16914*t3793 - 1.*t16910*t3864 - 1.*t16926*t3933) - 0.099999*(t16914*t3434 + t16926*t3864 + t16910*t4059) + t4365 + 6.000000000054e-7*t1242*t6407)*var2[1] + (6.000000000054e-7*t1242*t15856 + t16758*t2132 + t16764*t2187 + t16798*t2472 - 0.3*(t16758*t3434 + t16764*t3687 + t16798*t3793) + 0.2*(-1.*t16764*t3793 - 1.*t16758*t3864 - 1.*t16798*t3933) - 0.099999*(t16764*t3434 + t16798*t3864 + t16758*t4059) - 0.2000000000018*t1242*t6035 + t990)*var2[2];
  p_output1[30]=t17263;
  p_output1[31]=0.2000000000018*t1242*t1846 + t17125*t2132 + t17109*t2187 + t17105*t2472 - 0.3*(t17125*t3434 + t17109*t3687 + t17105*t3793) + 0.2*(-1.*t17109*t3793 - 1.*t17125*t3864 - 1.*t17105*t3933) - 0.099999*(t17109*t3434 + t17105*t3864 + t17125*t4059) - 0.2000000000018*t1771*t414*t610 - 6.000000000054e-7*t1917*t414*t610;
  p_output1[32]=t13091;
  p_output1[33]=t17169*t2132 + t17175*t2187 + t17159*t2472 - 0.3*(t17169*t3434 + t17175*t3687 + t17159*t3793) + 0.2*(-1.*t17175*t3793 - 1.*t17169*t3864 - 1.*t17159*t3933) - 0.099999*(t17175*t3434 + t17159*t3864 + t17169*t4059) + 0.2000000000018*t1242*t413*t414 + 6.000000000054e-7*t15856*t610 - 0.2000000000018*t6035*t610;
  p_output1[34]=t14498;
  p_output1[35]=t15417;
  p_output1[36]=t16288;
  p_output1[37]=t17263;
  p_output1[38]=(t17350*t17356 + t17365*t17375 + t17381*t17383 - 0.099999*(t13756*t17375 + t13111*t17383 - 1.8e-11*t17356*t1950) + 0.2*(-1.*t13111*t17356 - 1.*t17383*t17433 + 1.000000000009*t17375*t1950) - 0.3*(t13756*t17356 + t17375*t17388 - 1.000000000009*t17383*t1950))*var2[0] + (t14422*t17350 + t14426*t17365 + t14430*t17381 - 0.099999*(t13756*t14426 + t13111*t14430 - 1.8e-11*t14422*t1950) + 0.2*(-1.*t13111*t14422 - 1.*t14430*t17433 + 1.000000000009*t14426*t1950) - 0.3*(t13756*t14422 + t14426*t17388 - 1.000000000009*t14430*t1950))*var2[1] + (t17350*t17443 + t17365*t17469 + t17381*t17472 - 0.099999*(t13756*t17469 + t13111*t17472 - 1.8e-11*t17443*t1950) + 0.2*(-1.*t13111*t17443 - 1.*t17433*t17472 + 1.000000000009*t17469*t1950) - 0.3*(t13756*t17443 + t17388*t17469 - 1.000000000009*t17472*t1950))*var2[2];
  p_output1[39]=t13162*t17356 + t13555*t17375 + t13709*t17383 - 0.099999*(t14213*t17375 + t13756*t17383 - 1.8e-11*t17356*t1962) + 0.2*(-1.*t13756*t17356 - 1.*t14131*t17383 + 1.000000000009*t17375*t1962) - 0.3*(t14213*t17356 + t14261*t17375 - 1.000000000009*t17383*t1962);
  p_output1[40]=t14491;
  p_output1[41]=t13162*t17443 + t13555*t17469 + t13709*t17472 - 0.099999*(t14213*t17469 + t13756*t17472 - 1.8e-11*t17443*t1962) + 0.2*(-1.*t13756*t17443 - 1.*t14131*t17472 + 1.000000000009*t17469*t1962) - 0.3*(t14213*t17443 + t14261*t17469 - 1.000000000009*t17472*t1962);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 42, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fRightBackFoot_vec_BackStance.hh"

namespace BackStance
{

void J_fRightBackFoot_vec_BackStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
