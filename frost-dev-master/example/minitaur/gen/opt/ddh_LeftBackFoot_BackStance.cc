/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 22:42:49 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t252;
  double t299;
  double t357;
  double t513;
  double t3014;
  double t3209;
  double t3307;
  double t3671;
  double t3730;
  double t871;
  double t1055;
  double t1205;
  double t1902;
  double t3789;
  double t3791;
  double t4414;
  double t3771;
  double t3783;
  double t4422;
  double t3838;
  double t3871;
  double t3872;
  double t4001;
  double t4215;
  double t4332;
  double t4993;
  double t5080;
  double t5149;
  double t5166;
  double t5422;
  double t5436;
  double t5439;
  double t5441;
  double t5448;
  double t5466;
  double t5673;
  double t8357;
  double t8613;
  double t5824;
  double t4450;
  double t5690;
  double t14949;
  double t17121;
  double t17122;
  double t17082;
  double t17083;
  double t19377;
  double t19954;
  double t20480;
  double t20117;
  double t17087;
  double t17123;
  double t17160;
  double t17161;
  double t17218;
  double t19336;
  double t19565;
  double t19621;
  double t19637;
  double t19682;
  double t19697;
  double t19758;
  double t19797;
  double t19810;
  double t19862;
  double t19913;
  double t19935;
  double t20042;
  double t20057;
  double t20244;
  double t20313;
  double t20342;
  double t20424;
  double t20447;
  double t20677;
  double t20758;
  double t21002;
  double t21039;
  double t21079;
  double t21263;
  double t21383;
  double t24245;
  double t27624;
  double t27633;
  double t28040;
  double t5313;
  double t5315;
  double t5375;
  double t5377;
  double t5381;
  double t4418;
  double t4539;
  double t4696;
  double t4743;
  double t4758;
  double t2236;
  double t3576;
  double t3784;
  double t3808;
  double t3823;
  double t29465;
  double t29484;
  double t29486;
  double t29498;
  double t29506;
  double t29508;
  double t15482;
  double t15697;
  double t29518;
  double t29526;
  double t29527;
  double t29528;
  double t6051;
  double t15063;
  double t29443;
  double t29445;
  double t29457;
  double t29503;
  double t29511;
  double t29536;
  double t29538;
  double t29541;
  double t29542;
  double t29569;
  double t29573;
  double t29584;
  double t29632;
  double t29651;
  double t29946;
  double t29989;
  double t30030;
  double t30146;
  double t30229;
  double t30231;
  double t30237;
  double t30470;
  double t390;
  double t440;
  double t460;
  double t489;
  double t30513;
  double t30527;
  double t30548;
  double t30549;
  double t30556;
  double t30581;
  double t30583;
  double t30614;
  double t30481;
  double t30494;
  double t30543;
  double t30562;
  double t30619;
  double t30625;
  double t30629;
  double t30635;
  double t30648;
  double t30649;
  double t30654;
  double t30669;
  double t30671;
  double t30678;
  double t30681;
  double t30686;
  double t30687;
  double t30760;
  double t30766;
  double t30783;
  double t30808;
  double t30837;
  double t30844;
  double t30864;
  double t30870;
  double t30872;
  double t30873;
  double t30880;
  double t30882;
  double t30884;
  double t30885;
  double t30895;
  double t30903;
  double t30829;
  double t30833;
  double t30835;
  double t30871;
  double t30883;
  double t30904;
  double t30905;
  double t30907;
  double t30908;
  double t30919;
  double t30920;
  double t30922;
  double t30925;
  double t30934;
  double t30937;
  double t30938;
  double t30940;
  double t30941;
  double t30942;
  double t30950;
  double t30952;
  double t30953;
  double t30984;
  double t31005;
  double t31014;
  double t31018;
  double t31055;
  double t31060;
  double t31065;
  double t31251;
  double t31257;
  double t31261;
  double t31274;
  double t31275;
  double t31987;
  double t31990;
  double t32015;
  double t32025;
  double t32036;
  double t32061;
  double t32063;
  double t32085;
  double t32588;
  double t32963;
  double t31152;
  double t31153;
  double t31159;
  double t31164;
  double t31168;
  double t31171;
  double t31172;
  double t31181;
  double t31184;
  double t31185;
  double t31187;
  double t31191;
  double t31192;
  double t31200;
  double t31202;
  double t31203;
  double t31214;
  double t31216;
  double t31217;
  double t30975;
  double t30977;
  double t33316;
  double t33319;
  double t33326;
  double t33329;
  double t33335;
  double t33336;
  double t31980;
  double t31982;
  double t31991;
  double t32057;
  double t32115;
  double t32117;
  double t32118;
  double t32121;
  double t32124;
  double t32125;
  double t32127;
  double t32132;
  double t32266;
  double t32372;
  double t32481;
  double t32484;
  double t32492;
  double t32497;
  double t32541;
  double t32563;
  double t32564;
  double t33164;
  double t33172;
  double t33175;
  double t33176;
  double t33180;
  double t33182;
  double t33184;
  double t33255;
  double t33256;
  double t33258;
  double t33259;
  double t33261;
  double t33270;
  double t33277;
  double t33291;
  double t33292;
  double t33294;
  double t33299;
  double t33305;
  double t35060;
  double t35089;
  double t35091;
  double t35284;
  double t35336;
  double t35392;
  double t35398;
  double t35403;
  double t35440;
  double t35446;
  double t33049;
  double t33055;
  double t33059;
  double t33076;
  double t33080;
  double t33103;
  double t33106;
  double t33123;
  double t33130;
  double t33141;
  double t33144;
  double t33148;
  double t33151;
  double t33153;
  double t33155;
  double t33157;
  double t33158;
  double t33159;
  double t33160;
  double t33315;
  double t35844;
  double t35855;
  double t36074;
  double t36205;
  double t36208;
  double t36213;
  double t31234;
  double t31236;
  double t31273;
  double t31278;
  double t31280;
  double t31291;
  double t31293;
  double t31296;
  double t31297;
  double t31299;
  double t31300;
  double t31301;
  double t31310;
  double t31318;
  double t31322;
  double t31349;
  double t31450;
  double t31681;
  double t31800;
  double t31870;
  double t31926;
  double t34735;
  double t34738;
  double t34757;
  double t35331;
  double t35419;
  double t35451;
  double t35461;
  double t35463;
  double t35468;
  double t35524;
  double t35597;
  double t35657;
  double t35666;
  double t35669;
  double t35672;
  double t35675;
  double t35712;
  double t35748;
  double t35756;
  double t35809;
  double t35820;
  double t35823;
  double t36343;
  double t36488;
  double t36484;
  double t36500;
  double t36511;
  double t36531;
  double t36567;
  double t36600;
  double t36693;
  double t36697;
  double t36698;
  double t36709;
  double t36723;
  double t36730;
  double t36733;
  double t36735;
  double t36755;
  double t36760;
  double t36762;
  double t36768;
  double t36680;
  double t36685;
  double t36687;
  double t36711;
  double t36753;
  double t36770;
  double t36777;
  double t36779;
  double t36782;
  double t36783;
  double t36784;
  double t36790;
  double t36791;
  double t36792;
  double t36794;
  double t36795;
  double t36797;
  double t36799;
  double t36801;
  double t36803;
  double t36810;
  double t36814;
  double t36605;
  double t36608;
  double t36620;
  double t36624;
  double t36638;
  double t36644;
  double t36664;
  double t36665;
  double t36670;
  double t36672;
  double t36675;
  double t36677;
  double t36884;
  double t36886;
  double t36887;
  double t36893;
  double t36897;
  double t36914;
  double t36934;
  double t36935;
  double t36939;
  double t36949;
  double t36978;
  double t36988;
  double t36995;
  double t37003;
  double t37014;
  double t37019;
  double t37036;
  double t37037;
  double t36878;
  double t36889;
  double t36920;
  double t36972;
  double t37008;
  double t37057;
  double t37059;
  double t37064;
  double t37089;
  double t37091;
  double t37092;
  double t37113;
  double t37118;
  double t37124;
  double t37129;
  double t37137;
  double t37143;
  double t37144;
  double t37145;
  double t37147;
  double t37151;
  double t37160;
  double t37170;
  double t37176;
  double t37178;
  double t37191;
  double t37198;
  double t37235;
  double t37240;
  double t37241;
  double t37257;
  double t37259;
  double t37260;
  double t37186;
  double t37187;
  double t37208;
  double t37249;
  double t37263;
  double t37264;
  double t37265;
  double t37269;
  double t37271;
  double t37273;
  double t37284;
  double t37297;
  double t37299;
  double t37301;
  double t37304;
  double t37309;
  double t37311;
  double t37312;
  double t37314;
  double t37316;
  double t37318;
  double t37332;
  double t37337;
  double t37338;
  double t37342;
  double t37343;
  double t37346;
  double t37349;
  double t37359;
  double t37360;
  double t37363;
  double t37371;
  double t37372;
  double t37374;
  double t37378;
  double t37385;
  double t37386;
  double t37390;
  double t37393;
  double t37394;
  double t37418;
  double t37421;
  double t37423;
  double t37440;
  double t37450;
  double t37451;
  double t37456;
  double t37457;
  double t37460;
  double t37462;
  double t37403;
  double t37404;
  double t37408;
  double t37449;
  double t37458;
  double t37466;
  double t37476;
  double t37483;
  double t37485;
  double t37491;
  double t37495;
  double t37498;
  double t37504;
  double t37507;
  double t37508;
  double t37517;
  double t37518;
  double t37519;
  double t37520;
  double t37521;
  double t37522;
  double t37523;
  double t37534;
  double t37536;
  double t37539;
  double t37541;
  double t37546;
  double t37553;
  double t37557;
  double t37582;
  double t37588;
  double t37601;
  double t37602;
  double t37604;
  double t37886;
  double t37888;
  double t37897;
  double t37904;
  double t37911;
  double t37913;
  double t37932;
  double t37940;
  double t37944;
  double t37964;
  double t38045;
  double t38046;
  double t38059;
  double t38060;
  double t38072;
  double t38086;
  double t38088;
  double t38093;
  double t38175;
  double t38181;
  double t38187;
  double t38193;
  double t38206;
  double t38207;
  double t38208;
  double t38211;
  double t38217;
  double t38220;
  double t38223;
  double t38224;
  double t37723;
  double t37742;
  double t37744;
  double t37748;
  double t37769;
  double t37777;
  double t37781;
  double t37798;
  double t37800;
  double t37817;
  double t37819;
  double t37821;
  double t37842;
  double t37843;
  double t37844;
  double t37846;
  double t37848;
  double t37856;
  double t37858;
  double t32571;
  double t32577;
  double t32578;
  double t32580;
  double t32585;
  double t32594;
  double t32604;
  double t32608;
  double t32614;
  double t32615;
  double t32620;
  double t32630;
  double t32634;
  double t32968;
  double t33025;
  double t37874;
  double t37877;
  double t37884;
  double t37905;
  double t37918;
  double t37967;
  double t37976;
  double t37978;
  double t37980;
  double t37983;
  double t37984;
  double t37999;
  double t38004;
  double t38006;
  double t38007;
  double t38009;
  double t38010;
  double t38012;
  double t38015;
  double t38016;
  double t38018;
  double t38029;
  double t38787;
  double t38789;
  double t38790;
  double t38792;
  double t38797;
  double t38799;
  double t38802;
  double t38803;
  double t38814;
  double t38822;
  double t38167;
  double t39007;
  double t39036;
  double t39038;
  double t39043;
  double t39046;
  double t39048;
  double t39049;
  double t39070;
  double t39137;
  double t39161;
  double t39169;
  double t39183;
  double t39184;
  double t38596;
  double t38599;
  double t38650;
  double t38661;
  double t38685;
  double t38689;
  double t38720;
  double t38730;
  double t38734;
  double t38735;
  double t38741;
  double t38742;
  double t38744;
  double t38746;
  double t38757;
  double t38760;
  double t38761;
  double t38762;
  double t38763;
  double t38037;
  double t38041;
  double t38052;
  double t38075;
  double t38097;
  double t38104;
  double t38107;
  double t38112;
  double t38113;
  double t38120;
  double t38123;
  double t38127;
  double t38128;
  double t38129;
  double t38138;
  double t38139;
  double t38152;
  double t38159;
  double t38162;
  double t38164;
  double t38165;
  double t39335;
  double t39336;
  double t39363;
  double t39379;
  double t39382;
  double t39398;
  double t39399;
  double t39409;
  double t39433;
  double t39439;
  double t39442;
  double t38388;
  double t38389;
  double t38393;
  double t38403;
  double t38406;
  double t38407;
  double t38417;
  double t38418;
  double t38420;
  double t38434;
  double t38435;
  double t38436;
  double t38448;
  double t38458;
  double t38471;
  double t38474;
  double t38477;
  double t38478;
  double t38488;
  double t39131;
  double t39136;
  double t39176;
  double t39180;
  double t39209;
  double t39221;
  double t39223;
  double t39254;
  double t39259;
  double t39260;
  double t39272;
  double t39277;
  double t39285;
  double t39289;
  double t39300;
  double t39303;
  double t39306;
  double t39307;
  double t39310;
  double t39315;
  double t39316;
  double t39598;
  double t39854;
  double t39957;
  double t40136;
  double t40162;
  double t40202;
  double t40210;
  double t40217;
  double t40222;
  double t40224;
  double t40225;
  double t37528;
  double t37529;
  double t37530;
  double t37544;
  double t37583;
  double t37614;
  double t37623;
  double t37637;
  double t37647;
  double t37649;
  double t37656;
  double t37662;
  double t37666;
  double t37670;
  double t37675;
  double t37681;
  double t37683;
  double t37698;
  double t37700;
  double t37714;
  double t37715;
  double t37719;
  double t39364;
  double t39368;
  double t39387;
  double t39430;
  double t39487;
  double t39489;
  double t39491;
  double t39494;
  double t39515;
  double t39517;
  double t39529;
  double t39531;
  double t39533;
  double t39537;
  double t39538;
  double t39543;
  double t39544;
  double t39545;
  double t39547;
  double t39571;
  double t39579;
  double t38288;
  double t38295;
  double t38296;
  double t38298;
  double t38299;
  double t38301;
  double t38303;
  double t38308;
  double t38310;
  double t38313;
  double t38317;
  double t38318;
  double t38319;
  double t38320;
  double t38322;
  double t38334;
  double t38366;
  double t38370;
  double t38371;
  double t38781;
  double t38783;
  double t38786;
  double t38794;
  double t38813;
  double t38830;
  double t38834;
  double t38838;
  double t38839;
  double t38850;
  double t38855;
  double t38888;
  double t38890;
  double t38897;
  double t38907;
  double t38910;
  double t38919;
  double t38920;
  double t38921;
  double t38922;
  double t38952;
  double t38956;
  double t39595;
  double t40132;
  double t40461;
  double t40468;
  double t40476;
  double t40696;
  double t40699;
  double t40700;
  double t40945;
  double t40949;
  double t40952;
  double t40956;
  double t40960;
  double t40989;
  double t40992;
  double t40993;
  double t41134;
  double t41164;
  double t41228;
  double t41238;
  double t40924;
  double t40933;
  double t40944;
  double t40957;
  double t41005;
  double t41242;
  double t41245;
  double t41249;
  double t41253;
  double t41254;
  double t41257;
  double t41258;
  double t41259;
  double t41279;
  double t41280;
  double t41365;
  double t41366;
  double t41367;
  double t41369;
  double t41371;
  double t41372;
  double t41373;
  double t40710;
  double t40805;
  double t40811;
  double t40830;
  double t40836;
  double t40837;
  double t40870;
  double t40900;
  double t40909;
  double t40910;
  double t40920;
  double t41592;
  double t41594;
  double t41601;
  double t41602;
  double t41629;
  double t41630;
  double t41490;
  double t41588;
  double t41595;
  double t41628;
  double t41631;
  double t41632;
  double t41663;
  double t41664;
  double t41665;
  double t41671;
  double t41675;
  double t41696;
  double t41699;
  double t41700;
  double t41701;
  double t41702;
  double t41707;
  double t41708;
  double t41709;
  double t41710;
  double t41711;
  double t41735;
  double t41737;
  double t41738;
  double t41751;
  double t41755;
  double t41759;
  double t41760;
  double t41769;
  double t41770;
  double t41782;
  double t41784;
  double t41789;
  double t41790;
  double t41801;
  double t41802;
  double t41823;
  double t41825;
  double t41826;
  double t41828;
  double t41854;
  double t41855;
  double t41856;
  double t41863;
  double t41866;
  double t41870;
  double t41874;
  double t41888;
  double t41908;
  double t41841;
  double t41848;
  double t41853;
  double t41864;
  double t41887;
  double t41912;
  double t41914;
  double t41941;
  double t41957;
  double t41959;
  double t41965;
  double t41966;
  double t41967;
  double t41968;
  double t41970;
  double t41971;
  double t41972;
  double t41977;
  double t41978;
  double t41979;
  double t41992;
  double t41993;
  double t41998;
  double t41999;
  double t42001;
  double t42007;
  double t42010;
  double t42017;
  double t42023;
  double t42183;
  double t42184;
  double t42185;
  double t42189;
  double t42190;
  double t42197;
  double t42201;
  double t42206;
  double t42220;
  double t42468;
  double t42473;
  double t42483;
  double t42490;
  double t42495;
  double t42499;
  double t42501;
  double t42511;
  double t42512;
  double t36412;
  double t36517;
  double t36601;
  double t36628;
  double t36667;
  double t36679;
  double t36829;
  double t36832;
  double t36833;
  double t36839;
  double t36845;
  double t36852;
  double t36854;
  double t36861;
  double t36862;
  double t36863;
  double t36865;
  double t36867;
  double t36874;
  double t36875;
  double t36877;
  double t42583;
  double t41996;
  double t41997;
  double t42000;
  double t42008;
  double t42025;
  double t42032;
  double t42033;
  double t42038;
  double t42040;
  double t42041;
  double t42054;
  double t42055;
  double t42057;
  double t42065;
  double t42066;
  double t42072;
  double t42092;
  double t42111;
  double t42113;
  double t42114;
  double t42119;
  double t42640;
  double t42651;
  double t42660;
  double t42927;
  double t42933;
  double t42941;
  double t42959;
  double t42971;
  double t42132;
  double t42134;
  double t42135;
  double t42137;
  double t42138;
  double t42144;
  double t42145;
  double t42146;
  double t42151;
  double t42156;
  double t42157;
  double t42158;
  double t42159;
  double t42161;
  double t42162;
  double t42166;
  double t42169;
  double t42171;
  double t42173;
  double t42743;
  double t42744;
  double t42748;
  double t42751;
  double t42754;
  double t42758;
  double t42759;
  double t42764;
  double t42806;
  double t42828;
  double t42858;
  double t42865;
  double t42868;
  double t42872;
  double t42874;
  double t42880;
  double t42882;
  double t42894;
  double t42900;
  double t36827;
  double t37166;
  double t37326;
  double t37400;
  double t37526;
  double t42177;
  double t42179;
  double t42180;
  double t42187;
  double t42205;
  double t42229;
  double t42235;
  double t42236;
  double t42238;
  double t42266;
  double t42311;
  double t42361;
  double t42398;
  double t42410;
  double t42412;
  double t42415;
  double t42417;
  double t42432;
  double t42434;
  double t42443;
  double t42444;
  double t42453;
  double t43865;
  double t43866;
  double t43868;
  double t43886;
  double t43904;
  double t43906;
  double t43912;
  double t43914;
  double t42915;
  double t42918;
  double t42950;
  double t42956;
  double t42974;
  double t42976;
  double t42984;
  double t42985;
  double t42987;
  double t43020;
  double t43030;
  double t43032;
  double t43055;
  double t43056;
  double t43118;
  double t43144;
  double t43157;
  double t43175;
  double t43177;
  double t43180;
  double t43184;
  double t43699;
  double t43707;
  double t43709;
  double t43716;
  double t43720;
  double t43733;
  double t43758;
  double t43759;
  double t43774;
  double t43775;
  double t43776;
  double t43777;
  double t43779;
  double t43783;
  double t43787;
  double t43791;
  double t43797;
  double t43799;
  double t43801;
  t252 = Cos(var1[10]);
  t299 = -1.*t252;
  t357 = 1. + t299;
  t513 = Cos(var1[4]);
  t3014 = Cos(var1[12]);
  t3209 = -1.*t3014;
  t3307 = 1. + t3209;
  t3671 = -3.e-6*t3307;
  t3730 = Sin(var1[12]);
  t871 = Cos(var1[5]);
  t1055 = Sin(var1[10]);
  t1205 = Sin(var1[4]);
  t1902 = Sin(var1[5]);
  t3789 = 3.e-6*t3730;
  t3791 = t3671 + t3789;
  t4414 = 3.e-13*var1[12];
  t3771 = -3.e-6*t3730;
  t3783 = t3671 + t3771;
  t4422 = -9.e-12*t3307;
  t3838 = 3.e-6*t357*t513*t871;
  t3871 = -3.e-6*t1055*t1205;
  t3872 = -9.e-12*t357;
  t4001 = 1. + t3872;
  t4215 = -1.*t4001*t513*t1902;
  t4332 = t3838 + t3871 + t4215;
  t4993 = t252*t513*t871;
  t5080 = t1055*t1205;
  t5149 = -3.e-6*t357*t513*t1902;
  t5166 = t4993 + t5080 + t5149;
  t5422 = -1.*t513*t871*t1055;
  t5436 = -1.000000000009*t357;
  t5439 = 1. + t5436;
  t5441 = t5439*t1205;
  t5448 = -3.e-6*t513*t1055*t1902;
  t5466 = t5422 + t5441 + t5448;
  t5673 = 3.e-6*t3307;
  t8357 = -1.000000000009*t3307;
  t8613 = 1. + t8357;
  t5824 = 9.e-12*t3307;
  t4450 = -1.*t3730;
  t5690 = t5673 + t3771;
  t14949 = t5673 + t3789;
  t17121 = 3.e-6*t3014;
  t17122 = t17121 + t3771;
  t17082 = -3.e-6*t3014;
  t17083 = t17082 + t3771;
  t19377 = -9.e-12*t3730;
  t19954 = t17121 + t3789;
  t20480 = t17082 + t3789;
  t20117 = 9.e-12*t3730;
  t17087 = -0.200000000003*t17083;
  t17123 = 0.100000000003*t17122;
  t17160 = 5.4e-18*t3730;
  t17161 = 1.e-7 + t17087 + t17123 + t17160;
  t17218 = t17161*t4332;
  t19336 = 3.e-7*t17122;
  t19565 = t3209 + t19377;
  t19621 = 0.100000000003*t19565;
  t19637 = -0.2000000000048*t3730;
  t19682 = 3.e-13 + t19336 + t19621 + t19637;
  t19697 = t19682*t5166;
  t19758 = 3.e-7*t17083;
  t19797 = t3014 + t19377;
  t19810 = -0.200000000003*t19797;
  t19862 = 0.1000000000039*t3730;
  t19913 = 3.e-13 + t19758 + t19810 + t19862;
  t19935 = t19913*t5466;
  t20042 = -1.*t19954*t4332;
  t20057 = 1.000000000009*t3730*t5166;
  t20244 = t3209 + t20117;
  t20313 = -1.*t20244*t5466;
  t20342 = t20042 + t20057 + t20313;
  t20424 = 0.2*t20342;
  t20447 = -1.8e-11*t3730*t4332;
  t20677 = t20480*t5166;
  t20758 = t19954*t5466;
  t21002 = t20447 + t20677 + t20758;
  t21039 = 0.100001*t21002;
  t21079 = t20480*t4332;
  t21263 = t3014 + t20117;
  t21383 = t21263*t5166;
  t24245 = -1.000000000009*t3730*t5466;
  t27624 = t21079 + t21383 + t24245;
  t27633 = -0.3*t27624;
  t28040 = t17218 + t19697 + t19935 + t20424 + t21039 + t27633;
  t5313 = 0.1000000000039*t3307;
  t5315 = 3.e-7*t3783;
  t5375 = t4422 + t3730;
  t5377 = -0.200000000003*t5375;
  t5381 = t4414 + t5313 + t5315 + t5377;
  t4418 = -0.2000000000048*t3307;
  t4539 = t4422 + t4450;
  t4696 = 0.100000000003*t4539;
  t4743 = 3.e-7*t3791;
  t4758 = t4414 + t4418 + t4696 + t4743;
  t2236 = 1.e-7*var1[12];
  t3576 = 5.4e-18*t3307;
  t3784 = -0.200000000003*t3783;
  t3808 = 0.100000000003*t3791;
  t3823 = t2236 + t3576 + t3784 + t3808;
  t29465 = -1.*t252*t513*t871;
  t29484 = -1.000000000009*t1055*t1205;
  t29486 = -3.e-6*t252*t513*t1902;
  t29498 = t29465 + t29484 + t29486;
  t29506 = t252*t1205;
  t29508 = t5422 + t29506 + t5448;
  t15482 = -1.8e-11*t3307;
  t15697 = 1. + t15482;
  t29518 = 3.e-6*t513*t871*t1055;
  t29526 = -3.e-6*t252*t1205;
  t29527 = 9.e-12*t513*t1055*t1902;
  t29528 = t29518 + t29526 + t29527;
  t6051 = t5824 + t3730;
  t15063 = t5824 + t4450;
  t29443 = -0.2000000000018*t513*t871*t1055;
  t29445 = 0.2000000000018*t252*t1205;
  t29457 = -6.000000000054e-7*t513*t1055*t1902;
  t29503 = t5381*t29498;
  t29511 = t4758*t29508;
  t29536 = t3823*t29528;
  t29538 = t14949*t29498;
  t29541 = t5690*t29508;
  t29542 = t15697*t29528;
  t29569 = t29538 + t29541 + t29542;
  t29573 = 0.100001*t29569;
  t29584 = t8613*t29498;
  t29632 = t6051*t29508;
  t29651 = t5690*t29528;
  t29946 = t29584 + t29632 + t29651;
  t29989 = -0.3*t29946;
  t30030 = -1.*t15063*t29498;
  t30146 = -1.*t8613*t29508;
  t30229 = -1.*t14949*t29528;
  t30231 = t30030 + t30146 + t30229;
  t30237 = 0.2*t30231;
  t30470 = t29443 + t29445 + t29457 + t29503 + t29511 + t29536 + t29573 + t29989 + t30237;
  t390 = -1.8e-12*t357;
  t440 = -1. + t252;
  t460 = 0.2*t440;
  t489 = t390 + t460;
  t30513 = -1.*t4001*t513*t871;
  t30527 = t30513 + t5149;
  t30548 = -3.e-6*t357*t513*t871;
  t30549 = -1.*t252*t513*t1902;
  t30556 = t30548 + t30549;
  t30581 = -3.e-6*t513*t871*t1055;
  t30583 = t513*t1055*t1902;
  t30614 = t30581 + t30583;
  t30481 = -6.000000000054e-7*t357*t513*t871;
  t30494 = -1.*t489*t513*t1902;
  t30543 = t3823*t30527;
  t30562 = t4758*t30556;
  t30619 = t5381*t30614;
  t30625 = t5690*t30527;
  t30629 = t6051*t30556;
  t30635 = t8613*t30614;
  t30648 = t30625 + t30629 + t30635;
  t30649 = -0.3*t30648;
  t30654 = -1.*t14949*t30527;
  t30669 = -1.*t8613*t30556;
  t30671 = -1.*t15063*t30614;
  t30678 = t30654 + t30669 + t30671;
  t30681 = 0.2*t30678;
  t30686 = t15697*t30527;
  t30687 = t5690*t30556;
  t30760 = t14949*t30614;
  t30766 = t30686 + t30687 + t30760;
  t30783 = 0.100001*t30766;
  t30808 = t30481 + t30494 + t30543 + t30562 + t30619 + t30649 + t30681 + t30783;
  t30837 = -3.e-6*t513*t1055;
  t30844 = -3.e-6*t357*t871*t1205;
  t30864 = t4001*t1205*t1902;
  t30870 = t30837 + t30844 + t30864;
  t30872 = t513*t1055;
  t30873 = -1.*t252*t871*t1205;
  t30880 = 3.e-6*t357*t1205*t1902;
  t30882 = t30872 + t30873 + t30880;
  t30884 = t5439*t513;
  t30885 = t871*t1055*t1205;
  t30895 = 3.e-6*t1055*t1205*t1902;
  t30903 = t30884 + t30885 + t30895;
  t30829 = 0.2000000000018*t513*t1055;
  t30833 = -1.*t489*t871*t1205;
  t30835 = 6.000000000054e-7*t357*t1205*t1902;
  t30871 = t3823*t30870;
  t30883 = t4758*t30882;
  t30904 = t5381*t30903;
  t30905 = t5690*t30870;
  t30907 = t6051*t30882;
  t30908 = t8613*t30903;
  t30919 = t30905 + t30907 + t30908;
  t30920 = -0.3*t30919;
  t30922 = -1.*t14949*t30870;
  t30925 = -1.*t8613*t30882;
  t30934 = -1.*t15063*t30903;
  t30937 = t30922 + t30925 + t30934;
  t30938 = 0.2*t30937;
  t30940 = t15697*t30870;
  t30941 = t5690*t30882;
  t30942 = t14949*t30903;
  t30950 = t30940 + t30941 + t30942;
  t30952 = 0.100001*t30950;
  t30953 = t30829 + t30833 + t30835 + t30871 + t30883 + t30904 + t30920 + t30938 + t30952;
  t30984 = t4001*t513*t1902;
  t31005 = t30548 + t30984;
  t31014 = 3.e-6*t357*t513*t1902;
  t31018 = t29465 + t31014;
  t31055 = t513*t871*t1055;
  t31060 = 3.e-6*t513*t1055*t1902;
  t31065 = t31055 + t31060;
  t31251 = -3.e-6*t252*t513*t871;
  t31257 = t252*t513*t1902;
  t31261 = t31251 + t31257;
  t31274 = 9.e-12*t513*t871*t1055;
  t31275 = t31274 + t5448;
  t31987 = t4001*t871*t1205;
  t31990 = t31987 + t30880;
  t32015 = 3.e-6*t357*t871*t1205;
  t32025 = t252*t1205*t1902;
  t32036 = t32015 + t32025;
  t32061 = 3.e-6*t871*t1055*t1205;
  t32063 = -1.*t1055*t1205*t1902;
  t32085 = t32061 + t32063;
  t32588 = -9.e-12*t3014;
  t32963 = 9.e-12*t3014;
  t31152 = t17161*t30527;
  t31153 = t19682*t30556;
  t31159 = t19913*t30614;
  t31164 = -1.*t19954*t30527;
  t31168 = 1.000000000009*t3730*t30556;
  t31171 = -1.*t20244*t30614;
  t31172 = t31164 + t31168 + t31171;
  t31181 = 0.2*t31172;
  t31184 = -1.8e-11*t3730*t30527;
  t31185 = t20480*t30556;
  t31187 = t19954*t30614;
  t31191 = t31184 + t31185 + t31187;
  t31192 = 0.100001*t31191;
  t31200 = t20480*t30527;
  t31202 = t21263*t30556;
  t31203 = -1.000000000009*t3730*t30614;
  t31214 = t31200 + t31202 + t31203;
  t31216 = -0.3*t31214;
  t31217 = t31152 + t31153 + t31159 + t31181 + t31192 + t31216;
  t30975 = -1.*t489*t513*t871;
  t30977 = 6.000000000054e-7*t357*t513*t1902;
  t33316 = 3.e-6*t1055*t1205;
  t33319 = t30548 + t33316 + t30984;
  t33326 = -1.*t1055*t1205;
  t33329 = t29465 + t33326 + t31014;
  t33335 = -1.*t5439*t1205;
  t33336 = t31055 + t33335 + t31060;
  t31980 = 6.000000000054e-7*t357*t871*t1205;
  t31982 = t489*t1205*t1902;
  t31991 = t3823*t31990;
  t32057 = t4758*t32036;
  t32115 = t5381*t32085;
  t32117 = t5690*t31990;
  t32118 = t6051*t32036;
  t32121 = t8613*t32085;
  t32124 = t32117 + t32118 + t32121;
  t32125 = -0.3*t32124;
  t32127 = -1.*t14949*t31990;
  t32132 = -1.*t8613*t32036;
  t32266 = -1.*t15063*t32085;
  t32372 = t32127 + t32132 + t32266;
  t32481 = 0.2*t32372;
  t32484 = t15697*t31990;
  t32492 = t5690*t32036;
  t32497 = t14949*t32085;
  t32541 = t32484 + t32492 + t32497;
  t32563 = 0.100001*t32541;
  t32564 = t31980 + t31982 + t31991 + t32057 + t32115 + t32125 + t32481 + t32563;
  t33164 = t17161*t30870;
  t33172 = t19682*t30882;
  t33175 = t19913*t30903;
  t33176 = -1.*t19954*t30870;
  t33180 = 1.000000000009*t3730*t30882;
  t33182 = -1.*t20244*t30903;
  t33184 = t33176 + t33180 + t33182;
  t33255 = 0.2*t33184;
  t33256 = -1.8e-11*t3730*t30870;
  t33258 = t20480*t30882;
  t33259 = t19954*t30903;
  t33261 = t33256 + t33258 + t33259;
  t33270 = 0.100001*t33261;
  t33277 = t20480*t30870;
  t33291 = t21263*t30882;
  t33292 = -1.000000000009*t3730*t30903;
  t33294 = t33277 + t33291 + t33292;
  t33299 = -0.3*t33294;
  t33305 = t33164 + t33172 + t33175 + t33255 + t33270 + t33299;
  t35060 = -1.000000000009*t513*t1055;
  t35089 = t252*t871*t1205;
  t35091 = 3.e-6*t252*t1205*t1902;
  t35284 = t35060 + t35089 + t35091;
  t35336 = -3.e-6*t252*t513;
  t35392 = -3.e-6*t871*t1055*t1205;
  t35398 = -9.e-12*t1055*t1205*t1902;
  t35403 = t35336 + t35392 + t35398;
  t35440 = t252*t513;
  t35446 = t35440 + t30885 + t30895;
  t33049 = t19913*t29498;
  t33055 = t19682*t29508;
  t33059 = t17161*t29528;
  t33076 = -1.000000000009*t3730*t29498;
  t33080 = t21263*t29508;
  t33103 = t20480*t29528;
  t33106 = t33076 + t33080 + t33103;
  t33123 = -0.3*t33106;
  t33130 = -1.*t20244*t29498;
  t33141 = 1.000000000009*t3730*t29508;
  t33144 = -1.*t19954*t29528;
  t33148 = t33130 + t33141 + t33144;
  t33151 = 0.2*t33148;
  t33153 = t19954*t29498;
  t33155 = t20480*t29508;
  t33157 = -1.8e-11*t3730*t29528;
  t33158 = t33153 + t33155 + t33157;
  t33159 = 0.100001*t33158;
  t33160 = t33049 + t33055 + t33059 + t33123 + t33151 + t33159;
  t33315 = -0.2000000000018*t1055*t1205;
  t35844 = t29465 + t33326 + t29486;
  t35855 = 3.e-6*t252*t513*t871;
  t36074 = 9.e-12*t252*t513*t1902;
  t36205 = t35855 + t33316 + t36074;
  t36208 = -1.000000000009*t252*t1205;
  t36213 = t31055 + t36208 + t31060;
  t31234 = -6.000000000054e-7*t513*t871*t1055;
  t31236 = 0.2000000000018*t513*t1055*t1902;
  t31273 = t5381*t31261;
  t31278 = t3823*t31275;
  t31280 = t4758*t30614;
  t31291 = -1.*t15063*t31261;
  t31293 = -1.*t14949*t31275;
  t31296 = -1.*t8613*t30614;
  t31297 = t31291 + t31293 + t31296;
  t31299 = 0.2*t31297;
  t31300 = t14949*t31261;
  t31301 = t15697*t31275;
  t31310 = t5690*t30614;
  t31318 = t31300 + t31301 + t31310;
  t31322 = 0.100001*t31318;
  t31349 = t8613*t31261;
  t31450 = t5690*t31275;
  t31681 = t6051*t30614;
  t31800 = t31349 + t31450 + t31681;
  t31870 = -0.3*t31800;
  t31926 = t31234 + t31236 + t31273 + t31278 + t31280 + t31299 + t31322 + t31870;
  t34735 = 0.2000000000018*t252*t513;
  t34738 = 0.2000000000018*t871*t1055*t1205;
  t34757 = 6.000000000054e-7*t1055*t1205*t1902;
  t35331 = t5381*t35284;
  t35419 = t3823*t35403;
  t35451 = t4758*t35446;
  t35461 = -1.*t15063*t35284;
  t35463 = -1.*t14949*t35403;
  t35468 = -1.*t8613*t35446;
  t35524 = t35461 + t35463 + t35468;
  t35597 = 0.2*t35524;
  t35657 = t14949*t35284;
  t35666 = t15697*t35403;
  t35669 = t5690*t35446;
  t35672 = t35657 + t35666 + t35669;
  t35675 = 0.100001*t35672;
  t35712 = t8613*t35284;
  t35748 = t5690*t35403;
  t35756 = t6051*t35446;
  t35809 = t35712 + t35748 + t35756;
  t35820 = -0.3*t35809;
  t35823 = t34735 + t34738 + t34757 + t35331 + t35419 + t35451 + t35597 + t35675 + t35820;
  t36343 = Sin(var1[3]);
  t36488 = Cos(var1[3]);
  t36484 = t871*t36343*t1205;
  t36500 = t36488*t1902;
  t36511 = t36484 + t36500;
  t36531 = t36488*t871;
  t36567 = -1.*t36343*t1205*t1902;
  t36600 = t36531 + t36567;
  t36693 = 3.e-6*t357*t513*t871*t36343;
  t36697 = -3.e-6*t1055*t36343*t1205;
  t36698 = -1.*t4001*t513*t36343*t1902;
  t36709 = t36693 + t36697 + t36698;
  t36723 = t252*t513*t871*t36343;
  t36730 = t1055*t36343*t1205;
  t36733 = -3.e-6*t357*t513*t36343*t1902;
  t36735 = t36723 + t36730 + t36733;
  t36755 = -1.*t513*t871*t1055*t36343;
  t36760 = t5439*t36343*t1205;
  t36762 = -3.e-6*t513*t1055*t36343*t1902;
  t36768 = t36755 + t36760 + t36762;
  t36680 = t489*t513*t871*t36343;
  t36685 = 0.2000000000018*t1055*t36343*t1205;
  t36687 = -6.000000000054e-7*t357*t513*t36343*t1902;
  t36711 = t3823*t36709;
  t36753 = t4758*t36735;
  t36770 = t5381*t36768;
  t36777 = t5690*t36709;
  t36779 = t6051*t36735;
  t36782 = t8613*t36768;
  t36783 = t36777 + t36779 + t36782;
  t36784 = -0.3*t36783;
  t36790 = -1.*t14949*t36709;
  t36791 = -1.*t8613*t36735;
  t36792 = -1.*t15063*t36768;
  t36794 = t36790 + t36791 + t36792;
  t36795 = 0.2*t36794;
  t36797 = t15697*t36709;
  t36799 = t5690*t36735;
  t36801 = t14949*t36768;
  t36803 = t36797 + t36799 + t36801;
  t36810 = 0.100001*t36803;
  t36814 = t36680 + t36685 + t36687 + t36711 + t36753 + t36770 + t36784 + t36795 + t36810;
  t36605 = 3.e-6*t513*t1055*t36343;
  t36608 = 3.e-6*t357*t36511;
  t36620 = t4001*t36600;
  t36624 = t36605 + t36608 + t36620;
  t36638 = -1.*t513*t1055*t36343;
  t36644 = t252*t36511;
  t36664 = 3.e-6*t357*t36600;
  t36665 = t36638 + t36644 + t36664;
  t36670 = -1.*t5439*t513*t36343;
  t36672 = -1.*t1055*t36511;
  t36675 = 3.e-6*t1055*t36600;
  t36677 = t36670 + t36672 + t36675;
  t36884 = t36488*t871*t1205;
  t36886 = -1.*t36343*t1902;
  t36887 = t36884 + t36886;
  t36893 = -1.*t871*t36343;
  t36897 = -1.*t36488*t1205*t1902;
  t36914 = t36893 + t36897;
  t36934 = 3.e-6*t36488*t513*t1055;
  t36935 = 3.e-6*t357*t36887;
  t36939 = t4001*t36914;
  t36949 = t36934 + t36935 + t36939;
  t36978 = -1.*t36488*t513*t1055;
  t36988 = t252*t36887;
  t36995 = 3.e-6*t357*t36914;
  t37003 = t36978 + t36988 + t36995;
  t37014 = -1.*t5439*t36488*t513;
  t37019 = -1.*t1055*t36887;
  t37036 = 3.e-6*t1055*t36914;
  t37037 = t37014 + t37019 + t37036;
  t36878 = -0.2000000000018*t36488*t513*t1055;
  t36889 = t489*t36887;
  t36920 = 6.000000000054e-7*t357*t36914;
  t36972 = t3823*t36949;
  t37008 = t4758*t37003;
  t37057 = t5381*t37037;
  t37059 = t5690*t36949;
  t37064 = t6051*t37003;
  t37089 = t8613*t37037;
  t37091 = t37059 + t37064 + t37089;
  t37092 = -0.3*t37091;
  t37113 = -1.*t14949*t36949;
  t37118 = -1.*t8613*t37003;
  t37124 = -1.*t15063*t37037;
  t37129 = t37113 + t37118 + t37124;
  t37137 = 0.2*t37129;
  t37143 = t15697*t36949;
  t37144 = t5690*t37003;
  t37145 = t14949*t37037;
  t37147 = t37143 + t37144 + t37145;
  t37151 = 0.100001*t37147;
  t37160 = t36878 + t36889 + t36920 + t36972 + t37008 + t37057 + t37092 + t37137 + t37151;
  t37170 = -1.*t871*t36343*t1205;
  t37176 = -1.*t36488*t1902;
  t37178 = t37170 + t37176;
  t37191 = t4001*t37178;
  t37198 = t37191 + t36664;
  t37235 = 3.e-6*t357*t37178;
  t37240 = t252*t36600;
  t37241 = t37235 + t37240;
  t37257 = 3.e-6*t1055*t37178;
  t37259 = -1.*t1055*t36600;
  t37260 = t37257 + t37259;
  t37186 = 6.000000000054e-7*t357*t37178;
  t37187 = t489*t36600;
  t37208 = t3823*t37198;
  t37249 = t4758*t37241;
  t37263 = t5381*t37260;
  t37264 = t5690*t37198;
  t37265 = t6051*t37241;
  t37269 = t8613*t37260;
  t37271 = t37264 + t37265 + t37269;
  t37273 = -0.3*t37271;
  t37284 = -1.*t14949*t37198;
  t37297 = -1.*t8613*t37241;
  t37299 = -1.*t15063*t37260;
  t37301 = t37284 + t37297 + t37299;
  t37304 = 0.2*t37301;
  t37309 = t15697*t37198;
  t37311 = t5690*t37241;
  t37312 = t14949*t37260;
  t37314 = t37309 + t37311 + t37312;
  t37316 = 0.100001*t37314;
  t37318 = t37186 + t37187 + t37208 + t37249 + t37263 + t37273 + t37304 + t37316;
  t37332 = t17161*t36624;
  t37337 = t19682*t36665;
  t37338 = t19913*t36677;
  t37342 = -1.*t19954*t36624;
  t37343 = 1.000000000009*t3730*t36665;
  t37346 = -1.*t20244*t36677;
  t37349 = t37342 + t37343 + t37346;
  t37359 = 0.2*t37349;
  t37360 = -1.8e-11*t3730*t36624;
  t37363 = t20480*t36665;
  t37371 = t19954*t36677;
  t37372 = t37360 + t37363 + t37371;
  t37374 = 0.100001*t37372;
  t37378 = t20480*t36624;
  t37385 = t21263*t36665;
  t37386 = -1.000000000009*t3730*t36677;
  t37390 = t37378 + t37385 + t37386;
  t37393 = -0.3*t37390;
  t37394 = t37332 + t37337 + t37338 + t37359 + t37374 + t37393;
  t37418 = 1.000000000009*t513*t1055*t36343;
  t37421 = -1.*t252*t36511;
  t37423 = 3.e-6*t252*t36600;
  t37440 = t37418 + t37421 + t37423;
  t37450 = 3.e-6*t252*t513*t36343;
  t37451 = 3.e-6*t1055*t36511;
  t37456 = -9.e-12*t1055*t36600;
  t37457 = t37450 + t37451 + t37456;
  t37460 = -1.*t252*t513*t36343;
  t37462 = t37460 + t36672 + t36675;
  t37403 = -0.2000000000018*t252*t513*t36343;
  t37404 = -0.2000000000018*t1055*t36511;
  t37408 = 6.000000000054e-7*t1055*t36600;
  t37449 = t5381*t37440;
  t37458 = t3823*t37457;
  t37466 = t4758*t37462;
  t37476 = -1.*t15063*t37440;
  t37483 = -1.*t14949*t37457;
  t37485 = -1.*t8613*t37462;
  t37491 = t37476 + t37483 + t37485;
  t37495 = 0.2*t37491;
  t37498 = t14949*t37440;
  t37504 = t15697*t37457;
  t37507 = t5690*t37462;
  t37508 = t37498 + t37504 + t37507;
  t37517 = 0.100001*t37508;
  t37518 = t8613*t37440;
  t37519 = t5690*t37457;
  t37520 = t6051*t37462;
  t37521 = t37518 + t37519 + t37520;
  t37522 = -0.3*t37521;
  t37523 = t37403 + t37404 + t37408 + t37449 + t37458 + t37466 + t37495 + t37517 + t37522;
  t37534 = 3.e-6*t357*t36488*t513*t871;
  t37536 = -3.e-6*t36488*t1055*t1205;
  t37539 = -1.*t4001*t36488*t513*t1902;
  t37541 = t37534 + t37536 + t37539;
  t37546 = t252*t36488*t513*t871;
  t37553 = t36488*t1055*t1205;
  t37557 = -3.e-6*t357*t36488*t513*t1902;
  t37582 = t37546 + t37553 + t37557;
  t37588 = -1.*t36488*t513*t871*t1055;
  t37601 = t5439*t36488*t1205;
  t37602 = -3.e-6*t36488*t513*t1055*t1902;
  t37604 = t37588 + t37601 + t37602;
  t37886 = -1.*t252*t513*t871*t36343;
  t37888 = -1.000000000009*t1055*t36343*t1205;
  t37897 = -3.e-6*t252*t513*t36343*t1902;
  t37904 = t37886 + t37888 + t37897;
  t37911 = t252*t36343*t1205;
  t37913 = t36755 + t37911 + t36762;
  t37932 = 3.e-6*t513*t871*t1055*t36343;
  t37940 = -3.e-6*t252*t36343*t1205;
  t37944 = 9.e-12*t513*t1055*t36343*t1902;
  t37964 = t37932 + t37940 + t37944;
  t38045 = -1.*t4001*t513*t871*t36343;
  t38046 = t38045 + t36733;
  t38059 = -3.e-6*t357*t513*t871*t36343;
  t38060 = -1.*t252*t513*t36343*t1902;
  t38072 = t38059 + t38060;
  t38086 = -3.e-6*t513*t871*t1055*t36343;
  t38088 = t513*t1055*t36343*t1902;
  t38093 = t38086 + t38088;
  t38175 = -3.e-6*t513*t1055*t36343;
  t38181 = -3.e-6*t357*t871*t36343*t1205;
  t38187 = t4001*t36343*t1205*t1902;
  t38193 = t38175 + t38181 + t38187;
  t38206 = t513*t1055*t36343;
  t38207 = -1.*t252*t871*t36343*t1205;
  t38208 = 3.e-6*t357*t36343*t1205*t1902;
  t38211 = t38206 + t38207 + t38208;
  t38217 = t5439*t513*t36343;
  t38220 = t871*t1055*t36343*t1205;
  t38223 = 3.e-6*t1055*t36343*t1205*t1902;
  t38224 = t38217 + t38220 + t38223;
  t37723 = t17161*t36709;
  t37742 = t19682*t36735;
  t37744 = t19913*t36768;
  t37748 = -1.*t19954*t36709;
  t37769 = 1.000000000009*t3730*t36735;
  t37777 = -1.*t20244*t36768;
  t37781 = t37748 + t37769 + t37777;
  t37798 = 0.2*t37781;
  t37800 = -1.8e-11*t3730*t36709;
  t37817 = t20480*t36735;
  t37819 = t19954*t36768;
  t37821 = t37800 + t37817 + t37819;
  t37842 = 0.100001*t37821;
  t37843 = t20480*t36709;
  t37844 = t21263*t36735;
  t37846 = -1.000000000009*t3730*t36768;
  t37848 = t37843 + t37844 + t37846;
  t37856 = -0.3*t37848;
  t37858 = t37723 + t37742 + t37744 + t37798 + t37842 + t37856;
  t32571 = 5.4e-18*t3014;
  t32577 = 0.100000000003*t17083;
  t32578 = -0.200000000003*t20480;
  t32580 = t32571 + t32577 + t32578;
  t32585 = -0.2000000000048*t3014;
  t32594 = t32588 + t3730;
  t32604 = 0.100000000003*t32594;
  t32608 = t32585 + t19758 + t32604;
  t32614 = 0.1000000000039*t3014;
  t32615 = t32588 + t4450;
  t32620 = -0.200000000003*t32615;
  t32630 = 3.e-7*t20480;
  t32634 = t32614 + t32620 + t32630;
  t32968 = t32963 + t4450;
  t33025 = t32963 + t3730;
  t37874 = -0.2000000000018*t513*t871*t1055*t36343;
  t37877 = 0.2000000000018*t252*t36343*t1205;
  t37884 = -6.000000000054e-7*t513*t1055*t36343*t1902;
  t37905 = t5381*t37904;
  t37918 = t4758*t37913;
  t37967 = t3823*t37964;
  t37976 = t14949*t37904;
  t37978 = t5690*t37913;
  t37980 = t15697*t37964;
  t37983 = t37976 + t37978 + t37980;
  t37984 = 0.100001*t37983;
  t37999 = t8613*t37904;
  t38004 = t6051*t37913;
  t38006 = t5690*t37964;
  t38007 = t37999 + t38004 + t38006;
  t38009 = -0.3*t38007;
  t38010 = -1.*t15063*t37904;
  t38012 = -1.*t8613*t37913;
  t38015 = -1.*t14949*t37964;
  t38016 = t38010 + t38012 + t38015;
  t38018 = 0.2*t38016;
  t38029 = t37874 + t37877 + t37884 + t37905 + t37918 + t37967 + t37984 + t38009 + t38018;
  t38787 = 1.000000000009*t36488*t513*t1055;
  t38789 = -1.*t252*t36887;
  t38790 = 3.e-6*t252*t36914;
  t38792 = t38787 + t38789 + t38790;
  t38797 = 3.e-6*t252*t36488*t513;
  t38799 = 3.e-6*t1055*t36887;
  t38802 = -9.e-12*t1055*t36914;
  t38803 = t38797 + t38799 + t38802;
  t38814 = -1.*t252*t36488*t513;
  t38822 = t38814 + t37019 + t37036;
  t38167 = 0.2000000000018*t513*t1055*t36343;
  t39007 = 3.e-6*t252*t36511;
  t39036 = -9.e-12*t252*t36600;
  t39038 = t38175 + t39007 + t39036;
  t39043 = t38206 + t37421 + t37423;
  t39046 = 1.000000000009*t252*t513*t36343;
  t39048 = t1055*t36511;
  t39049 = -3.e-6*t1055*t36600;
  t39070 = t39046 + t39048 + t39049;
  t39137 = 3.e-6*t252*t37178;
  t39161 = -1.*t252*t36600;
  t39169 = t39137 + t39161;
  t39183 = -9.e-12*t1055*t37178;
  t39184 = t39183 + t36675;
  t38596 = t19913*t37440;
  t38599 = t17161*t37457;
  t38650 = t19682*t37462;
  t38661 = -1.000000000009*t3730*t37440;
  t38685 = t20480*t37457;
  t38689 = t21263*t37462;
  t38720 = t38661 + t38685 + t38689;
  t38730 = -0.3*t38720;
  t38734 = t19954*t37440;
  t38735 = -1.8e-11*t3730*t37457;
  t38741 = t20480*t37462;
  t38742 = t38734 + t38735 + t38741;
  t38744 = 0.100001*t38742;
  t38746 = -1.*t20244*t37440;
  t38757 = -1.*t19954*t37457;
  t38760 = 1.000000000009*t3730*t37462;
  t38761 = t38746 + t38757 + t38760;
  t38762 = 0.2*t38761;
  t38763 = t38596 + t38599 + t38650 + t38730 + t38744 + t38762;
  t38037 = -6.000000000054e-7*t357*t513*t871*t36343;
  t38041 = -1.*t489*t513*t36343*t1902;
  t38052 = t3823*t38046;
  t38075 = t4758*t38072;
  t38097 = t5381*t38093;
  t38104 = t5690*t38046;
  t38107 = t6051*t38072;
  t38112 = t8613*t38093;
  t38113 = t38104 + t38107 + t38112;
  t38120 = -0.3*t38113;
  t38123 = -1.*t14949*t38046;
  t38127 = -1.*t8613*t38072;
  t38128 = -1.*t15063*t38093;
  t38129 = t38123 + t38127 + t38128;
  t38138 = 0.2*t38129;
  t38139 = t15697*t38046;
  t38152 = t5690*t38072;
  t38159 = t14949*t38093;
  t38162 = t38139 + t38152 + t38159;
  t38164 = 0.100001*t38162;
  t38165 = t38037 + t38041 + t38052 + t38075 + t38097 + t38120 + t38138 + t38164;
  t39335 = -1.*t36488*t871*t1205;
  t39336 = t36343*t1902;
  t39363 = t39335 + t39336;
  t39379 = t4001*t39363;
  t39382 = t39379 + t36995;
  t39398 = 3.e-6*t357*t39363;
  t39399 = t252*t36914;
  t39409 = t39398 + t39399;
  t39433 = 3.e-6*t1055*t39363;
  t39439 = -1.*t1055*t36914;
  t39442 = t39433 + t39439;
  t38388 = t17161*t37198;
  t38389 = t19682*t37241;
  t38393 = t19913*t37260;
  t38403 = -1.*t19954*t37198;
  t38406 = 1.000000000009*t3730*t37241;
  t38407 = -1.*t20244*t37260;
  t38417 = t38403 + t38406 + t38407;
  t38418 = 0.2*t38417;
  t38420 = -1.8e-11*t3730*t37198;
  t38434 = t20480*t37241;
  t38435 = t19954*t37260;
  t38436 = t38420 + t38434 + t38435;
  t38448 = 0.100001*t38436;
  t38458 = t20480*t37198;
  t38471 = t21263*t37241;
  t38474 = -1.000000000009*t3730*t37260;
  t38477 = t38458 + t38471 + t38474;
  t38478 = -0.3*t38477;
  t38488 = t38388 + t38389 + t38393 + t38418 + t38448 + t38478;
  t39131 = 6.000000000054e-7*t1055*t37178;
  t39136 = -0.2000000000018*t1055*t36600;
  t39176 = t5381*t39169;
  t39180 = t4758*t37260;
  t39209 = t3823*t39184;
  t39221 = t14949*t39169;
  t39223 = t5690*t37260;
  t39254 = t15697*t39184;
  t39259 = t39221 + t39223 + t39254;
  t39260 = 0.100001*t39259;
  t39272 = t8613*t39169;
  t39277 = t6051*t37260;
  t39285 = t5690*t39184;
  t39289 = t39272 + t39277 + t39285;
  t39300 = -0.3*t39289;
  t39303 = -1.*t15063*t39169;
  t39306 = -1.*t8613*t37260;
  t39307 = -1.*t14949*t39184;
  t39310 = t39303 + t39306 + t39307;
  t39315 = 0.2*t39310;
  t39316 = t39131 + t39136 + t39176 + t39180 + t39209 + t39260 + t39300 + t39315;
  t39598 = -1.*t36488*t871;
  t39854 = t36343*t1205*t1902;
  t39957 = t39598 + t39854;
  t40136 = t4001*t39957;
  t40162 = t37235 + t40136;
  t40202 = t252*t37178;
  t40210 = 3.e-6*t357*t39957;
  t40217 = t40202 + t40210;
  t40222 = -1.*t1055*t37178;
  t40224 = 3.e-6*t1055*t39957;
  t40225 = t40222 + t40224;
  t37528 = t489*t36488*t513*t871;
  t37529 = 0.2000000000018*t36488*t1055*t1205;
  t37530 = -6.000000000054e-7*t357*t36488*t513*t1902;
  t37544 = t3823*t37541;
  t37583 = t4758*t37582;
  t37614 = t5381*t37604;
  t37623 = t5690*t37541;
  t37637 = t6051*t37582;
  t37647 = t8613*t37604;
  t37649 = t37623 + t37637 + t37647;
  t37656 = -0.3*t37649;
  t37662 = -1.*t14949*t37541;
  t37666 = -1.*t8613*t37582;
  t37670 = -1.*t15063*t37604;
  t37675 = t37662 + t37666 + t37670;
  t37681 = 0.2*t37675;
  t37683 = t15697*t37541;
  t37698 = t5690*t37582;
  t37700 = t14949*t37604;
  t37714 = t37683 + t37698 + t37700;
  t37715 = 0.100001*t37714;
  t37719 = t37528 + t37529 + t37530 + t37544 + t37583 + t37614 + t37656 + t37681 + t37715;
  t39364 = 6.000000000054e-7*t357*t39363;
  t39368 = t489*t36914;
  t39387 = t3823*t39382;
  t39430 = t4758*t39409;
  t39487 = t5381*t39442;
  t39489 = t5690*t39382;
  t39491 = t6051*t39409;
  t39494 = t8613*t39442;
  t39515 = t39489 + t39491 + t39494;
  t39517 = -0.3*t39515;
  t39529 = -1.*t14949*t39382;
  t39531 = -1.*t8613*t39409;
  t39533 = -1.*t15063*t39442;
  t39537 = t39529 + t39531 + t39533;
  t39538 = 0.2*t39537;
  t39543 = t15697*t39382;
  t39544 = t5690*t39409;
  t39545 = t14949*t39442;
  t39547 = t39543 + t39544 + t39545;
  t39571 = 0.100001*t39547;
  t39579 = t39364 + t39368 + t39387 + t39430 + t39487 + t39517 + t39538 + t39571;
  t38288 = t17161*t36949;
  t38295 = t19682*t37003;
  t38296 = t19913*t37037;
  t38298 = -1.*t19954*t36949;
  t38299 = 1.000000000009*t3730*t37003;
  t38301 = -1.*t20244*t37037;
  t38303 = t38298 + t38299 + t38301;
  t38308 = 0.2*t38303;
  t38310 = -1.8e-11*t3730*t36949;
  t38313 = t20480*t37003;
  t38317 = t19954*t37037;
  t38318 = t38310 + t38313 + t38317;
  t38319 = 0.100001*t38318;
  t38320 = t20480*t36949;
  t38322 = t21263*t37003;
  t38334 = -1.000000000009*t3730*t37037;
  t38366 = t38320 + t38322 + t38334;
  t38370 = -0.3*t38366;
  t38371 = t38288 + t38295 + t38296 + t38308 + t38319 + t38370;
  t38781 = -0.2000000000018*t252*t36488*t513;
  t38783 = -0.2000000000018*t1055*t36887;
  t38786 = 6.000000000054e-7*t1055*t36914;
  t38794 = t5381*t38792;
  t38813 = t3823*t38803;
  t38830 = t4758*t38822;
  t38834 = -1.*t15063*t38792;
  t38838 = -1.*t14949*t38803;
  t38839 = -1.*t8613*t38822;
  t38850 = t38834 + t38838 + t38839;
  t38855 = 0.2*t38850;
  t38888 = t14949*t38792;
  t38890 = t15697*t38803;
  t38897 = t5690*t38822;
  t38907 = t38888 + t38890 + t38897;
  t38910 = 0.100001*t38907;
  t38919 = t8613*t38792;
  t38920 = t5690*t38803;
  t38921 = t6051*t38822;
  t38922 = t38919 + t38920 + t38921;
  t38952 = -0.3*t38922;
  t38956 = t38781 + t38783 + t38786 + t38794 + t38813 + t38830 + t38855 + t38910 + t38952;
  t39595 = t489*t37178;
  t40132 = 6.000000000054e-7*t357*t39957;
  t40461 = t38175 + t37235 + t40136;
  t40468 = t38206 + t40202 + t40210;
  t40476 = t38217 + t40222 + t40224;
  t40696 = t871*t36343;
  t40699 = t36488*t1205*t1902;
  t40700 = t40696 + t40699;
  t40945 = -3.e-6*t357*t36488*t513*t871;
  t40949 = 3.e-6*t36488*t1055*t1205;
  t40952 = t4001*t36488*t513*t1902;
  t40956 = t40945 + t40949 + t40952;
  t40960 = -1.*t252*t36488*t513*t871;
  t40989 = -1.*t36488*t1055*t1205;
  t40992 = 3.e-6*t357*t36488*t513*t1902;
  t40993 = t40960 + t40989 + t40992;
  t41134 = t36488*t513*t871*t1055;
  t41164 = -1.*t5439*t36488*t1205;
  t41228 = 3.e-6*t36488*t513*t1055*t1902;
  t41238 = t41134 + t41164 + t41228;
  t40924 = -1.*t489*t36488*t513*t871;
  t40933 = -0.2000000000018*t36488*t1055*t1205;
  t40944 = 6.000000000054e-7*t357*t36488*t513*t1902;
  t40957 = t3823*t40956;
  t41005 = t4758*t40993;
  t41242 = t5381*t41238;
  t41245 = t5690*t40956;
  t41249 = t6051*t40993;
  t41253 = t8613*t41238;
  t41254 = t41245 + t41249 + t41253;
  t41257 = -0.3*t41254;
  t41258 = -1.*t14949*t40956;
  t41259 = -1.*t8613*t40993;
  t41279 = -1.*t15063*t41238;
  t41280 = t41258 + t41259 + t41279;
  t41365 = 0.2*t41280;
  t41366 = t15697*t40956;
  t41367 = t5690*t40993;
  t41369 = t14949*t41238;
  t41371 = t41366 + t41367 + t41369;
  t41372 = 0.100001*t41371;
  t41373 = t40924 + t40933 + t40944 + t40957 + t41005 + t41242 + t41257 + t41365 + t41372;
  t40710 = -3.e-6*t36488*t513*t1055;
  t40805 = t4001*t40700;
  t40811 = t40710 + t39398 + t40805;
  t40830 = t36488*t513*t1055;
  t40836 = t252*t39363;
  t40837 = 3.e-6*t357*t40700;
  t40870 = t40830 + t40836 + t40837;
  t40900 = t5439*t36488*t513;
  t40909 = -1.*t1055*t39363;
  t40910 = 3.e-6*t1055*t40700;
  t40920 = t40900 + t40909 + t40910;
  t41592 = t4001*t36887;
  t41594 = t41592 + t40837;
  t41601 = t252*t40700;
  t41602 = t36935 + t41601;
  t41629 = -1.*t1055*t40700;
  t41630 = t38799 + t41629;
  t41490 = 6.000000000054e-7*t357*t36887;
  t41588 = t489*t40700;
  t41595 = t3823*t41594;
  t41628 = t4758*t41602;
  t41631 = t5381*t41630;
  t41632 = t5690*t41594;
  t41663 = t6051*t41602;
  t41664 = t8613*t41630;
  t41665 = t41632 + t41663 + t41664;
  t41671 = -0.3*t41665;
  t41675 = -1.*t14949*t41594;
  t41696 = -1.*t8613*t41602;
  t41699 = -1.*t15063*t41630;
  t41700 = t41675 + t41696 + t41699;
  t41701 = 0.2*t41700;
  t41702 = t15697*t41594;
  t41707 = t5690*t41602;
  t41708 = t14949*t41630;
  t41709 = t41702 + t41707 + t41708;
  t41710 = 0.100001*t41709;
  t41711 = t41490 + t41588 + t41595 + t41628 + t41631 + t41671 + t41701 + t41710;
  t41735 = t17161*t40811;
  t41737 = t19682*t40870;
  t41738 = t19913*t40920;
  t41751 = -1.*t19954*t40811;
  t41755 = 1.000000000009*t3730*t40870;
  t41759 = -1.*t20244*t40920;
  t41760 = t41751 + t41755 + t41759;
  t41769 = 0.2*t41760;
  t41770 = -1.8e-11*t3730*t40811;
  t41782 = t20480*t40870;
  t41784 = t19954*t40920;
  t41789 = t41770 + t41782 + t41784;
  t41790 = 0.100001*t41789;
  t41801 = t20480*t40811;
  t41802 = t21263*t40870;
  t41823 = -1.000000000009*t3730*t40920;
  t41825 = t41801 + t41802 + t41823;
  t41826 = -0.3*t41825;
  t41828 = t41735 + t41737 + t41738 + t41769 + t41790 + t41826;
  t41854 = -1.000000000009*t36488*t513*t1055;
  t41855 = -1.*t252*t39363;
  t41856 = 3.e-6*t252*t40700;
  t41863 = t41854 + t41855 + t41856;
  t41866 = -3.e-6*t252*t36488*t513;
  t41870 = -9.e-12*t1055*t40700;
  t41874 = t41866 + t39433 + t41870;
  t41888 = t252*t36488*t513;
  t41908 = t41888 + t40909 + t40910;
  t41841 = 0.2000000000018*t252*t36488*t513;
  t41848 = -0.2000000000018*t1055*t39363;
  t41853 = 6.000000000054e-7*t1055*t40700;
  t41864 = t5381*t41863;
  t41887 = t3823*t41874;
  t41912 = t4758*t41908;
  t41914 = -1.*t15063*t41863;
  t41941 = -1.*t14949*t41874;
  t41957 = -1.*t8613*t41908;
  t41959 = t41914 + t41941 + t41957;
  t41965 = 0.2*t41959;
  t41966 = t14949*t41863;
  t41967 = t15697*t41874;
  t41968 = t5690*t41908;
  t41970 = t41966 + t41967 + t41968;
  t41971 = 0.100001*t41970;
  t41972 = t8613*t41863;
  t41977 = t5690*t41874;
  t41978 = t6051*t41908;
  t41979 = t41972 + t41977 + t41978;
  t41992 = -0.3*t41979;
  t41993 = t41841 + t41848 + t41853 + t41864 + t41887 + t41912 + t41965 + t41971 + t41992;
  t41998 = t4001*t36488*t513*t871;
  t41999 = t41998 + t40992;
  t42001 = t252*t36488*t513*t1902;
  t42007 = t37534 + t42001;
  t42010 = 3.e-6*t36488*t513*t871*t1055;
  t42017 = -1.*t36488*t513*t1055*t1902;
  t42023 = t42010 + t42017;
  t42183 = 1.000000000009*t36488*t1055*t1205;
  t42184 = 3.e-6*t252*t36488*t513*t1902;
  t42185 = t37546 + t42183 + t42184;
  t42189 = -3.e-6*t36488*t513*t871*t1055;
  t42190 = 3.e-6*t252*t36488*t1205;
  t42197 = -9.e-12*t36488*t513*t1055*t1902;
  t42201 = t42189 + t42190 + t42197;
  t42206 = -1.*t252*t36488*t1205;
  t42220 = t41134 + t42206 + t41228;
  t42468 = 3.e-6*t357*t36488*t871*t1205;
  t42473 = -1.*t4001*t36488*t1205*t1902;
  t42483 = t36934 + t42468 + t42473;
  t42490 = t252*t36488*t871*t1205;
  t42495 = -3.e-6*t357*t36488*t1205*t1902;
  t42499 = t36978 + t42490 + t42495;
  t42501 = -1.*t36488*t871*t1055*t1205;
  t42511 = -3.e-6*t36488*t1055*t1205*t1902;
  t42512 = t37014 + t42501 + t42511;
  t36412 = -0.2000000000018*t513*t1055*t36343;
  t36517 = t489*t36511;
  t36601 = 6.000000000054e-7*t357*t36600;
  t36628 = t3823*t36624;
  t36667 = t4758*t36665;
  t36679 = t5381*t36677;
  t36829 = t5690*t36624;
  t36832 = t6051*t36665;
  t36833 = t8613*t36677;
  t36839 = t36829 + t36832 + t36833;
  t36845 = -0.3*t36839;
  t36852 = -1.*t14949*t36624;
  t36854 = -1.*t8613*t36665;
  t36861 = -1.*t15063*t36677;
  t36862 = t36852 + t36854 + t36861;
  t36863 = 0.2*t36862;
  t36865 = t15697*t36624;
  t36867 = t5690*t36665;
  t36874 = t14949*t36677;
  t36875 = t36865 + t36867 + t36874;
  t36877 = 0.100001*t36875;
  t42583 = t36412 + t36517 + t36601 + t36628 + t36667 + t36679 + t36845 + t36863 + t36877;
  t41996 = 6.000000000054e-7*t357*t36488*t513*t871;
  t41997 = t489*t36488*t513*t1902;
  t42000 = t3823*t41999;
  t42008 = t4758*t42007;
  t42025 = t5381*t42023;
  t42032 = t5690*t41999;
  t42033 = t6051*t42007;
  t42038 = t8613*t42023;
  t42040 = t42032 + t42033 + t42038;
  t42041 = -0.3*t42040;
  t42054 = -1.*t14949*t41999;
  t42055 = -1.*t8613*t42007;
  t42057 = -1.*t15063*t42023;
  t42065 = t42054 + t42055 + t42057;
  t42066 = 0.2*t42065;
  t42072 = t15697*t41999;
  t42092 = t5690*t42007;
  t42111 = t14949*t42023;
  t42113 = t42072 + t42092 + t42111;
  t42114 = 0.100001*t42113;
  t42119 = t41996 + t41997 + t42000 + t42008 + t42025 + t42041 + t42066 + t42114;
  t42640 = t36935 + t36939;
  t42651 = t36988 + t36995;
  t42660 = t37019 + t37036;
  t42927 = 3.e-6*t252*t36887;
  t42933 = -1.*t252*t40700;
  t42941 = t42927 + t42933;
  t42959 = -9.e-12*t1055*t36887;
  t42971 = t42959 + t40910;
  t42132 = t17161*t40956;
  t42134 = t19682*t40993;
  t42135 = t19913*t41238;
  t42137 = -1.*t19954*t40956;
  t42138 = 1.000000000009*t3730*t40993;
  t42144 = -1.*t20244*t41238;
  t42145 = t42137 + t42138 + t42144;
  t42146 = 0.2*t42145;
  t42151 = -1.8e-11*t3730*t40956;
  t42156 = t20480*t40993;
  t42157 = t19954*t41238;
  t42158 = t42151 + t42156 + t42157;
  t42159 = 0.100001*t42158;
  t42161 = t20480*t40956;
  t42162 = t21263*t40993;
  t42166 = -1.000000000009*t3730*t41238;
  t42169 = t42161 + t42162 + t42166;
  t42171 = -0.3*t42169;
  t42173 = t42132 + t42134 + t42135 + t42146 + t42159 + t42171;
  t42743 = t17161*t41594;
  t42744 = t19682*t41602;
  t42748 = t19913*t41630;
  t42751 = -1.*t19954*t41594;
  t42754 = 1.000000000009*t3730*t41602;
  t42758 = -1.*t20244*t41630;
  t42759 = t42751 + t42754 + t42758;
  t42764 = 0.2*t42759;
  t42806 = -1.8e-11*t3730*t41594;
  t42828 = t20480*t41602;
  t42858 = t19954*t41630;
  t42865 = t42806 + t42828 + t42858;
  t42868 = 0.100001*t42865;
  t42872 = t20480*t41594;
  t42874 = t21263*t41602;
  t42880 = -1.000000000009*t3730*t41630;
  t42882 = t42872 + t42874 + t42880;
  t42894 = -0.3*t42882;
  t42900 = t42743 + t42744 + t42748 + t42764 + t42868 + t42894;
  t36827 = var2[4]*t36814;
  t37166 = var2[3]*t37160;
  t37326 = var2[5]*t37318;
  t37400 = var2[12]*t37394;
  t37526 = var2[10]*t37523;
  t42177 = 0.2000000000018*t36488*t513*t871*t1055;
  t42179 = -0.2000000000018*t252*t36488*t1205;
  t42180 = 6.000000000054e-7*t36488*t513*t1055*t1902;
  t42187 = t5381*t42185;
  t42205 = t3823*t42201;
  t42229 = t4758*t42220;
  t42235 = -1.*t15063*t42185;
  t42236 = -1.*t14949*t42201;
  t42238 = -1.*t8613*t42220;
  t42266 = t42235 + t42236 + t42238;
  t42311 = 0.2*t42266;
  t42361 = t14949*t42185;
  t42398 = t15697*t42201;
  t42410 = t5690*t42220;
  t42412 = t42361 + t42398 + t42410;
  t42415 = 0.100001*t42412;
  t42417 = t8613*t42185;
  t42432 = t5690*t42201;
  t42434 = t6051*t42220;
  t42443 = t42417 + t42432 + t42434;
  t42444 = -0.3*t42443;
  t42453 = t42177 + t42179 + t42180 + t42187 + t42205 + t42229 + t42311 + t42415 + t42444;
  t43865 = 3.e-6*t252*t39363;
  t43866 = -9.e-12*t252*t40700;
  t43868 = t36934 + t43865 + t43866;
  t43886 = t36978 + t41855 + t41856;
  t43904 = -1.000000000009*t252*t36488*t513;
  t43906 = t1055*t39363;
  t43912 = -3.e-6*t1055*t40700;
  t43914 = t43904 + t43906 + t43912;
  t42915 = 6.000000000054e-7*t1055*t36887;
  t42918 = -0.2000000000018*t1055*t40700;
  t42950 = t5381*t42941;
  t42956 = t4758*t41630;
  t42974 = t3823*t42971;
  t42976 = t14949*t42941;
  t42984 = t5690*t41630;
  t42985 = t15697*t42971;
  t42987 = t42976 + t42984 + t42985;
  t43020 = 0.100001*t42987;
  t43030 = t8613*t42941;
  t43032 = t6051*t41630;
  t43055 = t5690*t42971;
  t43056 = t43030 + t43032 + t43055;
  t43118 = -0.3*t43056;
  t43144 = -1.*t15063*t42941;
  t43157 = -1.*t8613*t41630;
  t43175 = -1.*t14949*t42971;
  t43177 = t43144 + t43157 + t43175;
  t43180 = 0.2*t43177;
  t43184 = t42915 + t42918 + t42950 + t42956 + t42974 + t43020 + t43118 + t43180;
  t43699 = t19913*t41863;
  t43707 = t17161*t41874;
  t43709 = t19682*t41908;
  t43716 = -1.000000000009*t3730*t41863;
  t43720 = t20480*t41874;
  t43733 = t21263*t41908;
  t43758 = t43716 + t43720 + t43733;
  t43759 = -0.3*t43758;
  t43774 = t19954*t41863;
  t43775 = -1.8e-11*t3730*t41874;
  t43776 = t20480*t41908;
  t43777 = t43774 + t43775 + t43776;
  t43779 = 0.100001*t43777;
  t43783 = -1.*t20244*t41863;
  t43787 = -1.*t19954*t41874;
  t43791 = 1.000000000009*t3730*t41908;
  t43797 = t43783 + t43787 + t43791;
  t43799 = 0.2*t43797;
  t43801 = t43699 + t43707 + t43709 + t43759 + t43779 + t43799;
  p_output1[0]=0.2000000000018*t1055*t1205 + t3823*t4332 - 6.000000000054e-7*t1902*t357*t513 + t4758*t5166 + t5381*t5466 + 0.100001*(t15697*t4332 + t14949*t5466 + t5166*t5690) + 0.2*(-1.*t14949*t4332 - 1.*t15063*t5466 - 1.*t5166*t8613) - 0.3*(t4332*t5690 + t5166*t6051 + t5466*t8613) + t489*t513*t871 + var1[0] + var2[0] + t30953*var2[4] + t30808*var2[5] + t30470*var2[10] + t28040*var2[12] + var2[5]*(t32564*var2[4] + (t30975 + t30977 + t31005*t3823 + t31018*t4758 + t31065*t5381 + 0.100001*(t15697*t31005 + t14949*t31065 + t31018*t5690) + 0.2*(-1.*t14949*t31005 - 1.*t15063*t31065 - 1.*t31018*t8613) - 0.3*(t31005*t5690 + t31018*t6051 + t31065*t8613))*var2[5] + t31926*var2[10] + t31217*var2[12]) + var2[10]*(t35823*var2[4] + t31926*var2[5] + (t33315 + t36205*t3823 + t35844*t4758 - 6.000000000054e-7*t1902*t252*t513 + t36213*t5381 + 0.100001*(t15697*t36205 + t14949*t36213 + t35844*t5690) + 0.2*(-1.*t14949*t36205 - 1.*t15063*t36213 - 1.*t35844*t8613) - 0.3*(t36205*t5690 + t35844*t6051 + t36213*t8613) - 0.2000000000018*t252*t513*t871)*var2[10] + t33160*var2[12]) + var2[4]*((t30975 + t30977 + t33315 + t33319*t3823 + t33329*t4758 + t33336*t5381 + 0.100001*(t15697*t33319 + t14949*t33336 + t33329*t5690) + 0.2*(-1.*t14949*t33319 - 1.*t15063*t33336 - 1.*t33329*t8613) - 0.3*(t33319*t5690 + t33329*t6051 + t33336*t8613))*var2[4] + t32564*var2[5] + t35823*var2[10] + t33305*var2[12]) + var2[12]*(t33305*var2[4] + t31217*var2[5] + t33160*var2[10] + (t32580*t4332 + t32608*t5166 + t32634*t5466 + 0.100001*(-1.8e-11*t3014*t4332 + t19954*t5166 + t17122*t5466) - 0.3*(t19954*t4332 + t32968*t5166 - 1.000000000009*t3014*t5466) + 0.2*(-1.*t17122*t4332 + 1.000000000009*t3014*t5166 - 1.*t33025*t5466))*var2[12]) + var3[0] + t30953*var3[4] + t30808*var3[5] + t30470*var3[10] + t28040*var3[12] - 1.*var4[0];
  p_output1[1]=t36412 + t36517 + t36601 + t36628 + t36667 + t36679 + t36827 + t36845 + t36863 + t36877 + t37166 + t37326 + t37400 + t37526 + var1[1] + var2[1] + var2[12]*(t38371*var2[3] + t37858*var2[4] + t38488*var2[5] + t38763*var2[10] + (t32580*t36624 + t32608*t36665 + t32634*t36677 + 0.100001*(-1.8e-11*t3014*t36624 + t19954*t36665 + t17122*t36677) - 0.3*(t19954*t36624 + t32968*t36665 - 1.000000000009*t3014*t36677) + 0.2*(-1.*t17122*t36624 + 1.000000000009*t3014*t36665 - 1.*t33025*t36677))*var2[12]) + var2[4]*(t37719*var2[3] + (6.000000000054e-7*t1205*t1902*t357*t36343 + t38167 + t38193*t3823 + t38211*t4758 + t38224*t5381 + 0.100001*(t15697*t38193 + t14949*t38224 + t38211*t5690) + 0.2*(-1.*t14949*t38193 - 1.*t15063*t38224 - 1.*t38211*t8613) - 0.3*(t38193*t5690 + t38211*t6051 + t38224*t8613) - 1.*t1205*t36343*t489*t871)*var2[4] + t38165*var2[5] + t38029*var2[10] + t37858*var2[12]) + var2[3]*((t38167 + t39595 + t40132 + t3823*t40461 + t40468*t4758 + t40476*t5381 + 0.100001*(t15697*t40461 + t14949*t40476 + t40468*t5690) + 0.2*(-1.*t14949*t40461 - 1.*t15063*t40476 - 1.*t40468*t8613) - 0.3*(t40461*t5690 + t40468*t6051 + t40476*t8613))*var2[3] + t37719*var2[4] + t39579*var2[5] + t38956*var2[10] + t38371*var2[12]) + var2[5]*(t39579*var2[3] + t38165*var2[4] + (t39595 + t40132 + t3823*t40162 + t40217*t4758 + t40225*t5381 + 0.100001*(t15697*t40162 + t14949*t40225 + t40217*t5690) + 0.2*(-1.*t14949*t40162 - 1.*t15063*t40225 - 1.*t40217*t8613) - 0.3*(t40162*t5690 + t40217*t6051 + t40225*t8613))*var2[5] + t39316*var2[10] + t38488*var2[12]) + var2[10]*(t38956*var2[3] + t38029*var2[4] + t39316*var2[5] + (-0.2000000000018*t252*t36511 + 6.000000000054e-7*t252*t36600 + t38167 + t3823*t39038 + t39043*t4758 + t39070*t5381 + 0.100001*(t15697*t39038 + t14949*t39070 + t39043*t5690) + 0.2*(-1.*t14949*t39038 - 1.*t15063*t39070 - 1.*t39043*t8613) - 0.3*(t39038*t5690 + t39043*t6051 + t39070*t8613))*var2[10] + t38763*var2[12]) + var3[1] + t37160*var3[3] + t36814*var3[4] + t37318*var3[5] + t37523*var3[10] + t37394*var3[12] - 1.*var4[1];
  p_output1[2]=6.000000000054e-7*t357*t40700 + t3823*t40811 + t40870*t4758 + t39363*t489 + 0.2000000000018*t1055*t36488*t513 + t40920*t5381 + 0.100001*(t15697*t40811 + t14949*t40920 + t40870*t5690) + 0.2*(-1.*t14949*t40811 - 1.*t15063*t40920 - 1.*t40870*t8613) - 0.3*(t40811*t5690 + t40870*t6051 + t40920*t8613) + var1[2] + var2[2] + (t36827 + t37166 + t37326 + t37400 + t37526)*var2[3] + t42583*var2[3] + t41373*var2[4] + t41711*var2[5] + t41993*var2[10] + t41828*var2[12] + var2[12]*(t37394*var2[3] + t42173*var2[4] + t42900*var2[5] + t43801*var2[10] + (t32580*t40811 + t32608*t40870 + t32634*t40920 + 0.100001*(-1.8e-11*t3014*t40811 + t19954*t40870 + t17122*t40920) - 0.3*(t19954*t40811 + t32968*t40870 - 1.000000000009*t3014*t40920) + 0.2*(-1.*t17122*t40811 + 1.000000000009*t3014*t40870 - 1.*t33025*t40920))*var2[12]) + var2[4]*(t36814*var2[3] + (-6.000000000054e-7*t1205*t1902*t357*t36488 + t36878 + t3823*t42483 + t42499*t4758 + t42512*t5381 + 0.100001*(t15697*t42483 + t14949*t42512 + t42499*t5690) + 0.2*(-1.*t14949*t42483 - 1.*t15063*t42512 - 1.*t42499*t8613) - 0.3*(t42483*t5690 + t42499*t6051 + t42512*t8613) + t1205*t36488*t489*t871)*var2[4] + t42119*var2[5] + t42453*var2[10] + t42173*var2[12]) + var2[5]*(t37318*var2[3] + t42119*var2[4] + (t36889 + t36920 + t3823*t42640 + t42651*t4758 + t42660*t5381 + 0.100001*(t15697*t42640 + t14949*t42660 + t42651*t5690) + 0.2*(-1.*t14949*t42640 - 1.*t15063*t42660 - 1.*t42651*t8613) - 0.3*(t42640*t5690 + t42651*t6051 + t42660*t8613))*var2[5] + t43184*var2[10] + t42900*var2[12]) + var2[10]*(t37523*var2[3] + t42453*var2[4] + t43184*var2[5] + (t36878 - 0.2000000000018*t252*t39363 + 6.000000000054e-7*t252*t40700 + t3823*t43868 + t43886*t4758 + t43914*t5381 + 0.100001*(t15697*t43868 + t14949*t43914 + t43886*t5690) + 0.2*(-1.*t14949*t43868 - 1.*t15063*t43914 - 1.*t43886*t8613) - 0.3*(t43868*t5690 + t43886*t6051 + t43914*t8613))*var2[10] + t43801*var2[12]) + var3[2] + t42583*var3[3] + t41373*var3[4] + t41711*var3[5] + t41993*var3[10] + t41828*var3[12] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_LeftBackFoot_BackStance.hh"

namespace BackStance
{

void ddh_LeftBackFoot_BackStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
