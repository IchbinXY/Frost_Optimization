/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 23:10:45 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t2333;
  double t6365;
  double t15714;
  double t19515;
  double t23642;
  double t24942;
  double t26922;
  double t28558;
  double t2075;
  double t33206;
  double t47074;
  double t47075;
  double t47121;
  double t33219;
  double t50149;
  double t50164;
  double t51031;
  double t51081;
  double t51082;
  double t51083;
  double t51207;
  double t51293;
  double t51339;
  double t51340;
  double t51363;
  double t51608;
  double t51748;
  double t51749;
  double t51758;
  double t51088;
  double t51103;
  double t51107;
  double t51114;
  double t51117;
  double t51123;
  double t29958;
  double t41649;
  double t44597;
  double t51125;
  double t51385;
  double t51763;
  double t47107;
  double t47146;
  double t47174;
  double t47200;
  double t47201;
  double t48318;
  double t48495;
  double t48689;
  double t48723;
  double t51937;
  double t51947;
  double t51948;
  double t50169;
  double t50216;
  double t50217;
  double t50288;
  double t50339;
  double t50345;
  double t50506;
  double t50518;
  double t50521;
  double t50546;
  double t50577;
  double t50698;
  double t52749;
  double t52754;
  double t52759;
  double t52766;
  double t52557;
  double t52573;
  double t52580;
  double t52593;
  double t52662;
  double t51981;
  double t51988;
  double t51992;
  double t51996;
  double t52056;
  double t52786;
  double t52807;
  double t52809;
  double t52695;
  double t52732;
  double t52747;
  double t53185;
  double t53187;
  double t53204;
  double t53235;
  double t52748;
  double t52770;
  double t52776;
  double t52782;
  double t52825;
  double t52826;
  double t53288;
  double t53289;
  double t53305;
  double t53281;
  double t52980;
  double t52997;
  double t52999;
  double t53037;
  double t53077;
  double t53081;
  double t53095;
  double t53114;
  double t53117;
  double t53135;
  double t53158;
  double t53160;
  double t53163;
  double t53167;
  double t52495;
  double t52528;
  double t52539;
  double t53914;
  double t53922;
  double t53924;
  double t53431;
  double t53440;
  double t53446;
  double t53448;
  double t53449;
  double t53561;
  double t53565;
  double t53566;
  double t53588;
  double t53595;
  double t53603;
  double t53757;
  double t53794;
  double t53795;
  double t53805;
  double t53812;
  double t53819;
  double t54048;
  double t54060;
  double t54065;
  double t54100;
  double t54103;
  double t54104;
  double t54121;
  double t54132;
  double t54947;
  double t54958;
  double t54962;
  double t54222;
  double t54225;
  double t54240;
  double t54254;
  double t54255;
  double t54261;
  double t54352;
  double t54353;
  double t54370;
  double t54423;
  double t54461;
  double t54466;
  double t54536;
  double t54539;
  double t54541;
  double t54656;
  double t54667;
  double t54671;
  double t54692;
  double t54723;
  double t54732;
  double t54797;
  double t54800;
  double t54801;
  double t54828;
  double t54832;
  double t54837;
  double t54853;
  double t54854;
  double t54859;
  double t54882;
  double t54900;
  double t54905;
  double t53227;
  double t55175;
  double t55176;
  double t55178;
  double t55185;
  double t55186;
  double t55187;
  double t55250;
  double t55194;
  double t55275;
  double t55197;
  double t53208;
  double t55267;
  double t55292;
  double t53232;
  double t53233;
  double t53250;
  double t53254;
  double t55320;
  double t55322;
  double t55224;
  double t55225;
  double t55234;
  double t55179;
  double t55188;
  double t55191;
  double t55361;
  double t55369;
  double t55372;
  double t53625;
  double t55423;
  double t55427;
  double t55428;
  double t55467;
  double t55468;
  double t55469;
  double t53643;
  double t53680;
  double t55508;
  double t55511;
  double t55513;
  double t55618;
  double t55621;
  double t55630;
  double t53456;
  double t53508;
  double t53520;
  double t55761;
  double t55769;
  double t55772;
  double t55808;
  double t55826;
  double t55827;
  double t53285;
  double t53308;
  double t53361;
  double t53372;
  double t55862;
  double t55863;
  double t55864;
  double t55911;
  double t55913;
  double t55914;
  double t55954;
  double t55973;
  double t55992;
  double t56000;
  double t56004;
  double t56010;
  double t56043;
  double t56060;
  double t56064;
  double t56027;
  double t56031;
  double t56033;
  double t55283;
  double t56018;
  double t56019;
  double t55314;
  double t56136;
  double t56138;
  double t55332;
  double t56102;
  double t56103;
  double t56112;
  double t55993;
  double t56011;
  double t56013;
  double t55391;
  double t55420;
  double t55466;
  double t55519;
  double t55573;
  double t56319;
  double t56320;
  double t56322;
  double t56331;
  double t56373;
  double t56384;
  double t56404;
  double t56409;
  double t56418;
  double t56436;
  double t56441;
  double t56445;
  double t56522;
  double t56524;
  double t56525;
  double t56534;
  double t56539;
  double t56542;
  double t55713;
  double t55715;
  double t55789;
  double t55798;
  double t56650;
  double t56653;
  double t56661;
  double t56716;
  double t56728;
  double t56731;
  double t55854;
  double t55857;
  double t55868;
  double t55886;
  double t56759;
  double t56763;
  double t56764;
  double t56796;
  double t56809;
  double t56811;
  double t55035;
  double t55037;
  double t55038;
  double t55046;
  double t55048;
  double t55049;
  double t55040;
  double t55042;
  double t55043;
  double t50774;
  double t50787;
  double t50788;
  double t50825;
  double t51926;
  double t51935;
  double t51955;
  double t51958;
  double t51959;
  double t54996;
  double t55009;
  double t55012;
  double t52340;
  double t52343;
  double t52345;
  double t52374;
  double t52408;
  double t51973;
  double t51974;
  double t51998;
  double t52260;
  double t52315;
  double t52326;
  double t52778;
  double t52834;
  double t52836;
  double t55016;
  double t55018;
  double t55023;
  double t53141;
  double t53168;
  double t53172;
  double t53006;
  double t53109;
  double t53110;
  double t53206;
  double t53209;
  double t53217;
  double t53223;
  double t53229;
  double t53230;
  double t53242;
  double t53246;
  double t53262;
  double t53277;
  double t53278;
  double t53287;
  double t53320;
  double t53330;
  double t53333;
  double t53354;
  double t53356;
  double t53369;
  double t53374;
  double t53392;
  double t53426;
  double t53429;
  double t55060;
  double t55062;
  double t55063;
  double t53466;
  double t53476;
  double t53479;
  double t53493;
  double t53502;
  double t53511;
  double t53529;
  double t53541;
  double t53555;
  double t53556;
  double t55134;
  double t55138;
  double t55139;
  double t53613;
  double t53635;
  double t53636;
  double t53641;
  double t53662;
  double t53701;
  double t53712;
  double t53732;
  double t53737;
  double t53740;
  double t55142;
  double t55149;
  double t55150;
  double t54974;
  double t54992;
  double t55015;
  double t55034;
  double t55039;
  double t55044;
  double t55050;
  double t55071;
  double t55141;
  double t55151;
  double t55166;
  double t54243;
  double t54246;
  double t54251;
  double t54266;
  double t54267;
  double t54273;
  double t54688;
  double t54757;
  double t54784;
  double t54373;
  double t54393;
  double t54399;
  double t54827;
  double t54840;
  double t54843;
  double t54467;
  double t54524;
  double t54529;
  double t54871;
  double t54916;
  double t54917;
  double t54567;
  double t54612;
  double t54643;
  double t55192;
  double t55203;
  double t55206;
  double t55208;
  double t55240;
  double t55248;
  double t55253;
  double t55296;
  double t55297;
  double t55306;
  double t56951;
  double t56953;
  double t56970;
  double t55311;
  double t55312;
  double t55316;
  double t55317;
  double t55318;
  double t55319;
  double t55325;
  double t55329;
  double t55331;
  double t55337;
  double t55342;
  double t55347;
  double t55351;
  double t55375;
  double t55383;
  double t55384;
  double t55386;
  double t55389;
  double t55390;
  double t55393;
  double t55396;
  double t55397;
  double t55414;
  double t55416;
  double t55486;
  double t55503;
  double t55506;
  double t55515;
  double t55518;
  double t55552;
  double t55602;
  double t55609;
  double t55636;
  double t55637;
  double t55672;
  double t55692;
  double t55700;
  double t55703;
  double t55710;
  double t55716;
  double t55718;
  double t55740;
  double t55786;
  double t55794;
  double t55797;
  double t55803;
  double t55807;
  double t55828;
  double t55838;
  double t55847;
  double t55849;
  double t55850;
  double t55852;
  double t55856;
  double t55859;
  double t55861;
  double t55867;
  double t55875;
  double t55880;
  double t55904;
  double t55907;
  double t55920;
  double t55927;
  double t55930;
  double t55931;
  double t55937;
  double t56015;
  double t56020;
  double t56021;
  double t56022;
  double t56026;
  double t56041;
  double t56069;
  double t56073;
  double t56093;
  double t56113;
  double t56114;
  double t56124;
  double t56141;
  double t56142;
  double t56143;
  double t56145;
  double t56146;
  double t56147;
  double t56148;
  double t56149;
  double t56150;
  double t56151;
  double t56152;
  double t56156;
  double t56157;
  double t56165;
  double t56174;
  double t56196;
  double t56218;
  double t56219;
  double t56221;
  double t56222;
  double t56225;
  double t56226;
  double t56228;
  double t56238;
  double t56248;
  double t56250;
  double t56285;
  double t56286;
  double t56288;
  double t56290;
  double t56291;
  double t56292;
  double t56293;
  double t56302;
  double t56309;
  double t56312;
  double t56315;
  double t56316;
  double t56317;
  double t56330;
  double t56395;
  double t56429;
  double t56480;
  double t56497;
  double t56498;
  double t56503;
  double t56507;
  double t56509;
  double t56510;
  double t56516;
  double t56519;
  double t56532;
  double t56544;
  double t56551;
  double t56554;
  double t56566;
  double t56570;
  double t56596;
  double t56601;
  double t56617;
  double t56623;
  double t56625;
  double t56626;
  double t56682;
  double t56683;
  double t56685;
  double t56693;
  double t56703;
  double t56704;
  double t56706;
  double t56732;
  double t56733;
  double t56737;
  double t56740;
  double t56742;
  double t56749;
  double t56750;
  double t56751;
  double t56753;
  double t56754;
  double t56755;
  double t56765;
  double t56768;
  double t56773;
  double t56776;
  double t56777;
  double t56788;
  double t56792;
  double t56814;
  double t56820;
  double t56834;
  double t56845;
  double t56850;
  double t54171;
  double t54220;
  double t54253;
  double t54349;
  double t54409;
  double t54531;
  double t54652;
  double t54790;
  double t54848;
  double t54925;
  double t54927;
  double t57026;
  double t57029;
  double t57031;
  double t57033;
  double t57034;
  double t57035;
  double t57045;
  double t57048;
  double t57056;
  double t57060;
  double t57065;
  double t57253;
  double t57254;
  double t57258;
  double t56025;
  double t56144;
  double t56224;
  double t56270;
  double t56318;
  double t56553;
  double t56593;
  double t56736;
  double t56747;
  double t56826;
  double t56855;
  double t56856;
  double t57140;
  double t57141;
  double t57142;
  double t57143;
  double t57144;
  double t57148;
  double t57150;
  double t57152;
  double t57158;
  double t57185;
  double t57193;
  double t57206;
  double t57401;
  double t57404;
  double t57413;
  double t57415;
  double t57417;
  double t57418;
  double t57419;
  double t57423;
  double t57424;
  double t57427;
  double t57430;
  double t57431;
  double t57552;
  double t57553;
  double t57554;
  double t57684;
  double t57685;
  double t57689;
  double t57557;
  double t57582;
  double t57583;
  double t55222;
  double t55310;
  double t55350;
  double t55385;
  double t55409;
  double t55642;
  double t55701;
  double t55846;
  double t55851;
  double t55929;
  double t55938;
  double t55941;
  double t57092;
  double t57113;
  double t57122;
  double t57123;
  double t57124;
  double t57125;
  double t57128;
  double t57131;
  double t57132;
  double t57135;
  double t57137;
  double t57138;
  double t57356;
  double t57357;
  double t57358;
  double t57359;
  double t57361;
  double t57368;
  double t57377;
  double t57383;
  double t57391;
  double t57392;
  double t57393;
  double t57394;
  double t57671;
  double t57673;
  double t57674;
  double t57675;
  double t57676;
  double t57678;
  double t57679;
  double t57680;
  double t57682;
  double t57692;
  double t57695;
  double t57698;
  double t57699;
  double t57700;
  double t57701;
  double t57703;
  double t57704;
  double t57705;
  double t57706;
  double t57707;
  double t57708;
  double t57709;
  double t57786;
  double t52468;
  double t52554;
  double t52848;
  double t53111;
  double t53175;
  double t53284;
  double t53452;
  double t53605;
  double t53833;
  double t53856;
  double t57248;
  double t57249;
  double t57250;
  double t57251;
  double t57252;
  double t57259;
  double t57260;
  double t57265;
  double t57267;
  double t57276;
  double t56923;
  double t56926;
  double t56927;
  double t56928;
  double t56937;
  double t56975;
  double t56995;
  double t56996;
  double t56997;
  double t56998;
  double t57785;
  double t57787;
  double t57793;
  double t57799;
  double t57802;
  double t57809;
  double t57810;
  double t57812;
  double t57816;
  double t57818;
  double t57819;
  double t57820;
  double t57821;
  double t57825;
  double t57827;
  double t57829;
  double t57830;
  double t57834;
  double t57840;
  double t57841;
  double t57842;
  double t57844;
  double t57845;
  double t57529;
  double t57534;
  double t57536;
  double t57541;
  double t57542;
  double t57543;
  double t57546;
  double t57548;
  double t57549;
  double t57550;
  double t57551;
  double t57556;
  double t57585;
  double t57588;
  double t57589;
  double t57595;
  double t57609;
  double t57636;
  double t57639;
  double t57642;
  double t57643;
  double t57645;
  double t57920;
  double t57922;
  double t57923;
  double t57924;
  double t57925;
  double t57926;
  double t57927;
  double t57929;
  double t50766;
  double t51972;
  double t52328;
  double t52436;
  double t52446;
  double t56899;
  double t56902;
  double t56918;
  double t56919;
  double t56920;
  double t57241;
  double t57242;
  double t57243;
  double t57244;
  double t57245;
  double t57753;
  double t57756;
  double t57774;
  double t57776;
  double t57777;
  double t57778;
  double t57780;
  double t57783;
  double t57473;
  double t57475;
  double t57480;
  double t57495;
  double t57499;
  double t57502;
  double t57503;
  double t57519;
  double t57910;
  double t57913;
  double t57914;
  double t57915;
  double t57916;
  double t46637;
  double t49029;
  double t50523;
  double t50542;
  double t56879;
  double t56884;
  double t56886;
  double t56888;
  double t57236;
  double t57237;
  double t57238;
  double t57239;
  double t57742;
  double t57743;
  double t57744;
  double t57746;
  double t57748;
  double t57440;
  double t57441;
  double t57442;
  double t57468;
  double t57471;
  t2333 = Cos(var1[13]);
  t6365 = -1.*t2333;
  t15714 = 1. + t6365;
  t19515 = 3.e-6*t15714;
  t23642 = 3.e-6*t2333;
  t24942 = t19515 + t23642;
  t26922 = Cos(var1[4]);
  t28558 = Cos(var1[5]);
  t2075 = Cos(var1[11]);
  t33206 = Sin(var1[11]);
  t47074 = 9.e-12*t15714;
  t47075 = t47074 + t6365;
  t47121 = Sin(var1[13]);
  t33219 = Sin(var1[4]);
  t50149 = -1.000000000009*t15714;
  t50164 = 1. + t50149;
  t51031 = -9.e-12*t15714;
  t51081 = 1. + t51031;
  t51082 = -3.e-6*t51081;
  t51083 = t51082 + t19515;
  t51207 = 4.e-7*var1[13];
  t51293 = 0.1*t51081;
  t51339 = 3.000000000027e-7*t15714;
  t51340 = 9.e-18*t47121;
  t51363 = t51207 + t51293 + t51339 + t51340;
  t51608 = -1.2e-12*var1[13];
  t51748 = 0.0999997000009*t15714;
  t51749 = 3.e-12*t47121;
  t51758 = t51608 + t51748 + t51749;
  t51088 = 1.000000000009*t15714;
  t51103 = -1. + t51088;
  t51107 = 0.2*t51103;
  t51114 = -0.2000000000048*t15714;
  t51117 = 0.0999997000009*t47121;
  t51123 = t51107 + t51114 + t51117;
  t29958 = t2075*t24942*t26922*t28558;
  t41649 = -1.*t24942*t33206*t33219;
  t44597 = t29958 + t41649;
  t51125 = t50164*t51123;
  t51385 = 3.e-6*t51363*t47121;
  t51763 = t51758*t47121;
  t47107 = t2075*t47075;
  t47146 = -1.000000000009*t33206*t47121;
  t47174 = t47107 + t47146;
  t47200 = t26922*t28558*t47174;
  t47201 = -1.*t47075*t33206;
  t48318 = -1.000000000009*t2075*t47121;
  t48495 = t47201 + t48318;
  t48689 = t48495*t33219;
  t48723 = t47200 + t48689;
  t51937 = -1.*t51083*t51363;
  t51947 = -1.*t47075*t51758;
  t51948 = -1.000000000009*t51123*t47121;
  t50169 = -1.*t50164*t33206;
  t50216 = t2075*t47121;
  t50217 = t50169 + t50216;
  t50288 = t26922*t28558*t50217;
  t50339 = -1.*t2075*t50164;
  t50345 = -1.*t33206*t47121;
  t50506 = t50339 + t50345;
  t50518 = t50506*t33219;
  t50521 = t50288 + t50518;
  t50546 = -1.*t26922*t28558*t33206;
  t50577 = -1.*t2075*t33219;
  t50698 = t50546 + t50577;
  t52749 = -0.2*t33206;
  t52754 = t2075*t51758;
  t52759 = -1.*t33206*t51123;
  t52766 = t52749 + t52754 + t52759;
  t52557 = -1. + t2075;
  t52573 = 0.2*t52557;
  t52580 = t33206*t51758;
  t52593 = t2075*t51123;
  t52662 = t52573 + t52580 + t52593;
  t51981 = -4.e-7*var1[13];
  t51988 = -1. + t47074;
  t51992 = 0.1*t51988;
  t51996 = -3.000000000027e-7*t15714;
  t52056 = -9.e-18*t47121;
  t52786 = t2075*t50164;
  t52807 = t33206*t47121;
  t52809 = t52786 + t52807;
  t52695 = t47075*t33206;
  t52732 = 1.000000000009*t2075*t47121;
  t52747 = t52695 + t52732;
  t53185 = -0.2*t2075;
  t53187 = 0.05*t33206;
  t53204 = t52573 + t53185 + t53187;
  t53235 = -1.*t53204*t33206;
  t52748 = -1.*t52662*t52747;
  t52770 = -1.*t52766*t47174;
  t52776 = t51937 + t52748 + t52770;
  t52782 = t52766*t50217;
  t52825 = t52662*t52809;
  t52826 = t51385 + t52782 + t52825;
  t53288 = -1.*t33206*t51758;
  t53289 = -1.*t2075*t51123;
  t53305 = t53185 + t53288 + t53289;
  t53281 = Sin(var1[5]);
  t52980 = t24942*t33206*t52662;
  t52997 = t2075*t24942*t52766;
  t52999 = t51981 + t51992 + t51996 + t52980 + t52997 + t52056;
  t53037 = -3.e-6*t51363*t47121;
  t53077 = -1.*t52766*t50217;
  t53081 = -1.*t52662*t52809;
  t53095 = t53037 + t53077 + t53081;
  t53114 = -1.*t24942*t33206*t52662;
  t53117 = -1.*t2075*t24942*t52766;
  t53135 = t51207 + t51293 + t51339 + t53114 + t53117 + t51340;
  t53158 = t51083*t51363;
  t53160 = t52662*t52747;
  t53163 = t52766*t47174;
  t53167 = t53158 + t53160 + t53163;
  t52495 = t26922*t28558*t33206;
  t52528 = t2075*t33219;
  t52539 = t52495 + t52528;
  t53914 = t2075*t26922*t28558;
  t53922 = -1.*t33206*t33219;
  t53924 = t53914 + t53922;
  t53431 = t2075*t24942*t33219;
  t53440 = t24942*t28558*t33206;
  t53446 = t53440 + t53281;
  t53448 = t26922*t53446;
  t53449 = t53431 + t53448;
  t53561 = t47174*t33219;
  t53565 = t28558*t52747;
  t53566 = -1.*t51083*t53281;
  t53588 = t53565 + t53566;
  t53595 = t26922*t53588;
  t53603 = t53561 + t53595;
  t53757 = t50217*t33219;
  t53794 = t28558*t52809;
  t53795 = -3.e-6*t47121*t53281;
  t53805 = t53794 + t53795;
  t53812 = t26922*t53805;
  t53819 = t53757 + t53812;
  t54048 = Cos(var1[3]);
  t54060 = -1.*t26922*t33206;
  t54065 = -1.*t2075*t28558*t33219;
  t54100 = t54060 + t54065;
  t54103 = t54048*t54100;
  t54104 = Sin(var1[3]);
  t54121 = t2075*t54104*t53281;
  t54132 = t54103 + t54121;
  t54947 = -1.*t54104*t54100;
  t54958 = t2075*t54048*t53281;
  t54962 = t54947 + t54958;
  t54222 = -1.*t2075*t26922;
  t54225 = t28558*t33206*t33219;
  t54240 = t54222 + t54225;
  t54254 = t2075*t26922;
  t54255 = -1.*t28558*t33206*t33219;
  t54261 = t54254 + t54255;
  t54352 = -1.*t24942*t26922*t33206;
  t54353 = -1.*t2075*t24942*t28558*t33219;
  t54370 = t54352 + t54353;
  t54423 = t26922*t48495;
  t54461 = -1.*t28558*t47174*t33219;
  t54466 = t54423 + t54461;
  t54536 = t26922*t50506;
  t54539 = -1.*t28558*t50217*t33219;
  t54541 = t54536 + t54539;
  t54656 = -1.*t28558;
  t54667 = t24942*t33206*t53281;
  t54671 = t54656 + t54667;
  t54692 = t2075*t24942*t26922;
  t54723 = -1.*t33219*t53446;
  t54732 = t54692 + t54723;
  t54797 = t51083*t28558;
  t54800 = t52747*t53281;
  t54801 = t54797 + t54800;
  t54828 = t26922*t47174;
  t54832 = -1.*t33219*t53588;
  t54837 = t54828 + t54832;
  t54853 = 3.e-6*t28558*t47121;
  t54854 = t52809*t53281;
  t54859 = t54853 + t54854;
  t54882 = t26922*t50217;
  t54900 = -1.*t33219*t53805;
  t54905 = t54882 + t54900;
  t53227 = 0.05*t2075*t33206;
  t55175 = t28558*t53204;
  t55176 = -0.1*t53281;
  t55178 = t55175 + t55176;
  t55185 = 0.1*t28558;
  t55186 = t53204*t53281;
  t55187 = t55185 + t55186;
  t55250 = Power(t28558,2);
  t55194 = -1.*t2075*t28558*t55178;
  t55275 = Power(t53281,2);
  t55197 = -1.*t2075*t53281*t55187;
  t53208 = -0.05*t2075*t33206;
  t55267 = t2075*t28558*t55178;
  t55292 = t2075*t53281*t55187;
  t53232 = Power(t2075,2);
  t53233 = -0.05*t53232;
  t53250 = Power(t33206,2);
  t53254 = 0.05*t53250;
  t55320 = -1.*t28558*t33206*t55178;
  t55322 = -1.*t33206*t53281*t55187;
  t55224 = t55178*t53281;
  t55225 = -1.*t28558*t55187;
  t55234 = t55224 + t55225;
  t55179 = -1.*t55178*t53281;
  t55188 = t28558*t55187;
  t55191 = t55179 + t55188;
  t55361 = 0.05*t53232;
  t55369 = t28558*t33206*t55178;
  t55372 = t33206*t53281*t55187;
  t53625 = -1.*t2075*t24942*t53305;
  t55423 = t28558*t51363;
  t55427 = t52662*t53281;
  t55428 = t55423 + t55427;
  t55467 = t28558*t52662;
  t55468 = -1.*t51363*t53281;
  t55469 = t55467 + t55468;
  t53643 = t52766*t48495;
  t53680 = t53305*t47174;
  t55508 = -1.*t54671*t55428;
  t55511 = -1.*t53446*t55469;
  t55513 = t53117 + t55508 + t55511;
  t55618 = t53588*t55469;
  t55621 = t55428*t54801;
  t55630 = t53163 + t55618 + t55621;
  t53456 = t2075*t24942*t53305;
  t53508 = -1.*t53305*t50217;
  t53520 = -1.*t52766*t50506;
  t55761 = t54671*t55428;
  t55769 = t53446*t55469;
  t55772 = t52997 + t55761 + t55769;
  t55808 = -1.*t55469*t53805;
  t55826 = -1.*t55428*t54859;
  t55827 = t53077 + t55808 + t55826;
  t53285 = -1.*t52766*t48495;
  t53308 = -1.*t53305*t47174;
  t53361 = t53305*t50217;
  t53372 = t52766*t50506;
  t55862 = -1.*t53588*t55469;
  t55863 = -1.*t55428*t54801;
  t55864 = t52770 + t55862 + t55863;
  t55911 = t55469*t53805;
  t55913 = t55428*t54859;
  t55914 = t52782 + t55911 + t55913;
  t55954 = 0.05*t2075*t33219;
  t55973 = t26922*t55178;
  t55992 = t55954 + t55973;
  t56000 = 0.05*t2075*t26922;
  t56004 = -1.*t33219*t55178;
  t56010 = t56000 + t56004;
  t56043 = 0.05*t2075*t26922*t28558;
  t56060 = -0.05*t33206*t33219;
  t56064 = t56043 + t56060;
  t56027 = -0.05*t26922*t33206;
  t56031 = -0.05*t2075*t28558*t33219;
  t56033 = t56027 + t56031;
  t55283 = 0.05*t2075*t33206*t55275;
  t56018 = -1.*t53924*t55992;
  t56019 = -1.*t54100*t56010;
  t55314 = -0.05*t2075*t33206*t55275;
  t56136 = t53924*t55992;
  t56138 = t54100*t56010;
  t55332 = 0.05*t53232*t55275;
  t56102 = t26922*t55992*t53281;
  t56103 = -1.*t33219*t56010*t53281;
  t56112 = t56102 + t56103 + t55225;
  t55993 = -1.*t26922*t55992*t53281;
  t56011 = t33219*t56010*t53281;
  t56013 = t55993 + t56011 + t55188;
  t55391 = -0.05*t53232*t55275;
  t55420 = -1.*t52766*t53281*t54671;
  t55466 = -1.*t2075*t24942*t53281*t55428;
  t55519 = t47174*t53281*t55428;
  t55573 = t52766*t53281*t54801;
  t56319 = t26922*t28558*t52766;
  t56320 = t53305*t33219;
  t56322 = t56319 + t56320;
  t56331 = t26922*t53305;
  t56373 = -1.*t28558*t52766*t33219;
  t56384 = t56331 + t56373;
  t56404 = t52766*t33219;
  t56409 = t26922*t55469;
  t56418 = t56404 + t56409;
  t56436 = t26922*t52766;
  t56441 = -1.*t33219*t55469;
  t56445 = t56436 + t56441;
  t56522 = -1.*t53449*t56418;
  t56524 = -1.*t54732*t56445;
  t56525 = t55508 + t56522 + t56524;
  t56534 = t53603*t56418;
  t56539 = t54837*t56445;
  t56542 = t55621 + t56534 + t56539;
  t55713 = t52766*t53281*t54671;
  t55715 = t2075*t24942*t53281*t55428;
  t55789 = -1.*t50217*t53281*t55428;
  t55798 = -1.*t52766*t53281*t54859;
  t56650 = t53449*t56418;
  t56653 = t54732*t56445;
  t56661 = t55761 + t56650 + t56653;
  t56716 = -1.*t56418*t53819;
  t56728 = -1.*t56445*t54905;
  t56731 = t55826 + t56716 + t56728;
  t55854 = -1.*t47174*t53281*t55428;
  t55857 = -1.*t52766*t53281*t54801;
  t55868 = t50217*t53281*t55428;
  t55886 = t52766*t53281*t54859;
  t56759 = -1.*t53603*t56418;
  t56763 = -1.*t54837*t56445;
  t56764 = t55863 + t56759 + t56763;
  t56796 = t56418*t53819;
  t56809 = t56445*t54905;
  t56811 = t55913 + t56796 + t56809;
  t55035 = -1.*t54104*t54370;
  t55037 = t2075*t24942*t54048*t53281;
  t55038 = t55035 + t55037;
  t55046 = -1.*t54104*t54541;
  t55048 = t54048*t50217*t53281;
  t55049 = t55046 + t55048;
  t55040 = -1.*t54104*t54466;
  t55042 = t54048*t47174*t53281;
  t55043 = t55040 + t55042;
  t50774 = -3.e-6*t15714;
  t50787 = -3.e-6*t2333;
  t50788 = t50774 + t50787;
  t50825 = 0.2*t50788;
  t51926 = t51125 + t51385 + t51763;
  t51935 = t51083*t51926;
  t51955 = t51937 + t51947 + t51948;
  t51958 = 3.e-6*t47121*t51955;
  t51959 = t50825 + t51935 + t51958;
  t54996 = -1.*t54104*t54240;
  t55009 = -1.*t54048*t33206*t53281;
  t55012 = t54996 + t55009;
  t52340 = -1.*t24942*t51758;
  t52343 = t51207 + t51293 + t51339 + t52340 + t51340;
  t52345 = t51083*t52343;
  t52374 = -0.2*t47121;
  t52408 = t51937 + t52345 + t51947 + t52374 + t51948;
  t51973 = t51031 + t2333;
  t51974 = 0.2*t51973;
  t51998 = t24942*t51758;
  t52260 = t51981 + t51992 + t51996 + t51998 + t52056;
  t52315 = 3.e-6*t52260*t47121;
  t52326 = t51974 + t51125 + t52315 + t51385 + t51763;
  t52778 = t50217*t52776;
  t52834 = t47174*t52826;
  t52836 = t52778 + t52834;
  t55016 = -1.*t54104*t54261;
  t55018 = t54048*t33206*t53281;
  t55023 = t55016 + t55018;
  t53141 = t53135*t47174;
  t53168 = t2075*t24942*t53167;
  t53172 = t53141 + t53168;
  t53006 = t52999*t50217;
  t53109 = t2075*t24942*t53095;
  t53110 = t53006 + t53109;
  t53206 = t2075*t53204;
  t53209 = t53206 + t53208;
  t53217 = -1.*t33206*t53209;
  t53223 = -1.*t2075*t53204;
  t53229 = t53223 + t53227;
  t53230 = -1.*t33206*t53229;
  t53242 = t53233 + t53235;
  t53246 = -1.*t2075*t53242;
  t53262 = t53235 + t53254;
  t53277 = t2075*t53262;
  t53278 = t53217 + t53230 + t53246 + t53277;
  t53287 = -1.*t52766*t52747;
  t53320 = -1.*t52662*t47174;
  t53330 = t53285 + t53287 + t53308 + t53320;
  t53333 = t50217*t53330;
  t53354 = t50506*t52776;
  t53356 = t48495*t52826;
  t53369 = t52662*t50217;
  t53374 = t52766*t52809;
  t53392 = t53361 + t53369 + t53372 + t53374;
  t53426 = t47174*t53392;
  t53429 = t53333 + t53354 + t53356 + t53426;
  t55060 = t54048*t54671;
  t55062 = -1.*t54104*t54732;
  t55063 = t55060 + t55062;
  t53466 = t2075*t24942*t52662;
  t53476 = t53456 + t53466;
  t53479 = t53476*t50217;
  t53493 = t52999*t50506;
  t53502 = -1.*t24942*t33206*t53095;
  t53511 = -1.*t52662*t50217;
  t53529 = -1.*t52766*t52809;
  t53541 = t53508 + t53511 + t53520 + t53529;
  t53555 = t2075*t24942*t53541;
  t53556 = t53479 + t53493 + t53502 + t53555;
  t55134 = t54048*t54801;
  t55138 = -1.*t54104*t54837;
  t55139 = t55134 + t55138;
  t53613 = t53135*t48495;
  t53635 = -1.*t2075*t24942*t52662;
  t53636 = t53625 + t53635;
  t53641 = t53636*t47174;
  t53662 = t52766*t52747;
  t53701 = t52662*t47174;
  t53712 = t53643 + t53662 + t53680 + t53701;
  t53732 = t2075*t24942*t53712;
  t53737 = -1.*t24942*t33206*t53167;
  t53740 = t53613 + t53641 + t53732 + t53737;
  t55142 = t54048*t54859;
  t55149 = -1.*t54104*t54905;
  t55150 = t55142 + t55149;
  t54974 = 0.026*t50698*t54962;
  t54992 = 0.026*t52539*t54962;
  t55015 = 0.026*t53924*t55012;
  t55034 = 0.026*t53924*t55023;
  t55039 = 0.043*t55038*t53449;
  t55044 = 0.043*t55043*t53603;
  t55050 = 0.043*t55049*t53819;
  t55071 = 0.043*t44597*t55063;
  t55141 = 0.043*t48723*t55139;
  t55151 = 0.043*t50521*t55150;
  t55166 = t54974 + t54992 + t55015 + t55034 + t55039 + t55044 + t55050 + t55071 + t55141 + t55151;
  t54243 = t54048*t54240;
  t54246 = -1.*t33206*t54104*t53281;
  t54251 = t54243 + t54246;
  t54266 = t54048*t54261;
  t54267 = t33206*t54104*t53281;
  t54273 = t54266 + t54267;
  t54688 = t54104*t54671;
  t54757 = t54048*t54732;
  t54784 = t54688 + t54757;
  t54373 = t54048*t54370;
  t54393 = t2075*t24942*t54104*t53281;
  t54399 = t54373 + t54393;
  t54827 = t54104*t54801;
  t54840 = t54048*t54837;
  t54843 = t54827 + t54840;
  t54467 = t54048*t54466;
  t54524 = t47174*t54104*t53281;
  t54529 = t54467 + t54524;
  t54871 = t54104*t54859;
  t54916 = t54048*t54905;
  t54917 = t54871 + t54916;
  t54567 = t54048*t54541;
  t54612 = t50217*t54104*t53281;
  t54643 = t54567 + t54612;
  t55192 = t2075*t53281*t55191;
  t55203 = t53227 + t55194 + t55197;
  t55206 = t28558*t55203;
  t55208 = t55192 + t55206;
  t55240 = t2075*t53281*t55234;
  t55248 = -0.1*t2075*t33206;
  t55253 = 0.05*t2075*t55250*t33206;
  t55296 = t55248 + t55253 + t55267 + t55283 + t55292;
  t55297 = t28558*t55296;
  t55306 = t55240 + t55297;
  t56951 = t54048*t28558;
  t56953 = -1.*t54104*t33219*t53281;
  t56970 = t56951 + t56953;
  t55311 = 0.1*t2075*t33206;
  t55312 = -0.05*t2075*t55250*t33206;
  t55316 = t55311 + t55312 + t55194 + t55314 + t55197;
  t55317 = t2075*t53281*t55316;
  t55318 = t53208 + t55267 + t55292;
  t55319 = t2075*t53281*t55318;
  t55325 = t53233 + t55320 + t55322;
  t55329 = -1.*t33206*t53281*t55325;
  t55331 = 0.05*t53232*t55250;
  t55337 = t53233 + t55331 + t53254 + t55320 + t55332 + t55322;
  t55342 = t33206*t53281*t55337;
  t55347 = t55317 + t55319 + t55329 + t55342;
  t55351 = t33206*t53281*t55234;
  t55375 = t55361 + t55369 + t55372;
  t55383 = t28558*t55375;
  t55384 = t55351 + t55383;
  t55386 = -1.*t33206*t53281*t55191;
  t55389 = -0.05*t53232*t55250;
  t55390 = -0.05*t53250;
  t55393 = t55361 + t55389 + t55390 + t55369 + t55391 + t55372;
  t55396 = t28558*t55393;
  t55397 = t55386 + t55396;
  t55414 = t24942*t33206*t52766;
  t55416 = -1.*t28558*t52766*t53446;
  t55486 = -1.*t2075*t24942*t28558*t55469;
  t55503 = t53625 + t55414 + t55416 + t55420 + t55466 + t55486;
  t55506 = t54801*t55503;
  t55515 = t47174*t53281*t55513;
  t55518 = t28558*t52766*t53588;
  t55552 = t28558*t47174*t55469;
  t55602 = t53643 + t53680 + t55518 + t55519 + t55552 + t55573;
  t55609 = t54671*t55602;
  t55636 = t2075*t24942*t53281*t55630;
  t55637 = t55506 + t55515 + t55609 + t55636;
  t55672 = t54801*t55513;
  t55692 = t54671*t55630;
  t55700 = t55672 + t55692;
  t55703 = -1.*t24942*t33206*t52766;
  t55710 = t28558*t52766*t53446;
  t55716 = t2075*t24942*t28558*t55469;
  t55718 = t53456 + t55703 + t55710 + t55713 + t55715 + t55716;
  t55740 = t54859*t55718;
  t55786 = t50217*t53281*t55772;
  t55794 = -1.*t28558*t50217*t55469;
  t55797 = -1.*t28558*t52766*t53805;
  t55803 = t53508 + t53520 + t55789 + t55794 + t55797 + t55798;
  t55807 = t54671*t55803;
  t55828 = t2075*t24942*t53281*t55827;
  t55838 = t55740 + t55786 + t55807 + t55828;
  t55847 = t54859*t55772;
  t55849 = t54671*t55827;
  t55850 = t55847 + t55849;
  t55852 = -1.*t28558*t52766*t53588;
  t55856 = -1.*t28558*t47174*t55469;
  t55859 = t53285 + t53308 + t55852 + t55854 + t55856 + t55857;
  t55861 = t54859*t55859;
  t55867 = t50217*t53281*t55864;
  t55875 = t28558*t50217*t55469;
  t55880 = t28558*t52766*t53805;
  t55904 = t53361 + t53372 + t55868 + t55875 + t55880 + t55886;
  t55907 = t54801*t55904;
  t55920 = t47174*t53281*t55914;
  t55927 = t55861 + t55867 + t55907 + t55920;
  t55930 = t54859*t55864;
  t55931 = t54801*t55914;
  t55937 = t55930 + t55931;
  t56015 = t53924*t56013;
  t56020 = t56018 + t56019 + t55197;
  t56021 = -1.*t26922*t53281*t56020;
  t56022 = t56015 + t56021;
  t56026 = -0.05*t2075*t28558*t53281;
  t56041 = -1.*t33219*t56033*t53281;
  t56069 = t26922*t56064*t53281;
  t56073 = t56026 + t56041 + t56069;
  t56093 = t52539*t56073;
  t56113 = t53924*t56112;
  t56114 = t52539*t56064;
  t56124 = t56033*t54261;
  t56141 = t56114 + t56124 + t56136 + t56138 + t55283 + t55292;
  t56142 = -1.*t26922*t53281*t56141;
  t56143 = t56093 + t56113 + t56142;
  t56145 = -1.*t52539*t56064;
  t56146 = -1.*t56033*t54261;
  t56147 = t56145 + t56146 + t56018 + t56019 + t55314 + t55197;
  t56148 = t53924*t56147;
  t56149 = t56136 + t56138 + t55292;
  t56150 = t53924*t56149;
  t56151 = -1.*t52539*t55992;
  t56152 = -1.*t54261*t56010;
  t56156 = t56151 + t56152 + t55322;
  t56157 = t50698*t56156;
  t56165 = t54100*t56033;
  t56174 = t53924*t56064;
  t56196 = t50698*t55992;
  t56218 = t54240*t56010;
  t56219 = t56165 + t56174 + t56196 + t56218 + t55332 + t55322;
  t56221 = t52539*t56219;
  t56222 = t56148 + t56150 + t56157 + t56221;
  t56225 = t52539*t56112;
  t56226 = t52539*t55992;
  t56228 = t54261*t56010;
  t56238 = t56226 + t56228 + t55372;
  t56248 = -1.*t26922*t53281*t56238;
  t56250 = t56225 + t56248;
  t56285 = 0.05*t2075*t28558*t53281;
  t56286 = t33219*t56033*t53281;
  t56288 = -1.*t26922*t56064*t53281;
  t56290 = t56285 + t56286 + t56288;
  t56291 = t53924*t56290;
  t56292 = t50698*t56013;
  t56293 = -1.*t54100*t56033;
  t56302 = -1.*t53924*t56064;
  t56309 = -1.*t50698*t55992;
  t56312 = -1.*t54240*t56010;
  t56315 = t56293 + t56302 + t56309 + t56312 + t55391 + t55372;
  t56316 = -1.*t26922*t53281*t56315;
  t56317 = t56291 + t56292 + t56316;
  t56330 = -1.*t56322*t53449;
  t56395 = -1.*t56384*t54732;
  t56429 = -1.*t44597*t56418;
  t56480 = -1.*t54370*t56445;
  t56497 = t55420 + t55466 + t56330 + t56395 + t56429 + t56480;
  t56498 = t53603*t56497;
  t56503 = t56322*t53603;
  t56507 = t56384*t54837;
  t56509 = t48723*t56418;
  t56510 = t54466*t56445;
  t56516 = t55519 + t55573 + t56503 + t56507 + t56509 + t56510;
  t56519 = t53449*t56516;
  t56532 = t48723*t56525;
  t56544 = t44597*t56542;
  t56551 = t56498 + t56519 + t56532 + t56544;
  t56554 = t53603*t56525;
  t56566 = t53449*t56542;
  t56570 = t56554 + t56566;
  t56596 = t56322*t53449;
  t56601 = t56384*t54732;
  t56617 = t44597*t56418;
  t56623 = t54370*t56445;
  t56625 = t55713 + t55715 + t56596 + t56601 + t56617 + t56623;
  t56626 = t53819*t56625;
  t56682 = t50521*t56661;
  t56683 = -1.*t50521*t56418;
  t56685 = -1.*t54541*t56445;
  t56693 = -1.*t56322*t53819;
  t56703 = -1.*t56384*t54905;
  t56704 = t55789 + t55798 + t56683 + t56685 + t56693 + t56703;
  t56706 = t53449*t56704;
  t56732 = t44597*t56731;
  t56733 = t56626 + t56682 + t56706 + t56732;
  t56737 = t53819*t56661;
  t56740 = t53449*t56731;
  t56742 = t56737 + t56740;
  t56749 = -1.*t56322*t53603;
  t56750 = -1.*t56384*t54837;
  t56751 = -1.*t48723*t56418;
  t56753 = -1.*t54466*t56445;
  t56754 = t55854 + t55857 + t56749 + t56750 + t56751 + t56753;
  t56755 = t53819*t56754;
  t56765 = t50521*t56764;
  t56768 = t50521*t56418;
  t56773 = t54541*t56445;
  t56776 = t56322*t53819;
  t56777 = t56384*t54905;
  t56788 = t55868 + t55886 + t56768 + t56773 + t56776 + t56777;
  t56792 = t53603*t56788;
  t56814 = t48723*t56811;
  t56820 = t56755 + t56765 + t56792 + t56814;
  t56834 = t53819*t56764;
  t56845 = t53603*t56811;
  t56850 = t56834 + t56845;
  t54171 = 0.026*t50698*t54132;
  t54220 = 0.026*t52539*t54132;
  t54253 = 0.026*t53924*t54251;
  t54349 = 0.026*t53924*t54273;
  t54409 = 0.043*t54399*t53449;
  t54531 = 0.043*t54529*t53603;
  t54652 = 0.043*t54643*t53819;
  t54790 = 0.043*t44597*t54784;
  t54848 = 0.043*t48723*t54843;
  t54925 = 0.043*t50521*t54917;
  t54927 = t54171 + t54220 + t54253 + t54349 + t54409 + t54531 + t54652 + t54790 + t54848 + t54925;
  t57026 = 0.026*t55012*t54132;
  t57029 = 0.026*t55023*t54132;
  t57031 = 0.026*t54962*t54251;
  t57033 = 0.026*t54962*t54273;
  t57034 = 0.043*t55038*t54784;
  t57035 = 0.043*t54399*t55063;
  t57045 = 0.043*t55043*t54843;
  t57048 = 0.043*t54529*t55139;
  t57056 = 0.043*t55049*t54917;
  t57060 = 0.043*t54643*t55150;
  t57065 = t57026 + t57029 + t57031 + t57033 + t57034 + t57035 + t57045 + t57048 + t57056 + t57060;
  t57253 = t28558*t54104;
  t57254 = t54048*t33219*t53281;
  t57258 = t57253 + t57254;
  t56025 = 0.026*t53924*t56022;
  t56144 = 0.026*t53924*t56143;
  t56224 = -0.026*t26922*t53281*t56222;
  t56270 = 0.026*t50698*t56250;
  t56318 = 0.026*t52539*t56317;
  t56553 = 0.043*t53819*t56551;
  t56593 = 0.043*t50521*t56570;
  t56736 = 0.043*t53603*t56733;
  t56747 = 0.043*t48723*t56742;
  t56826 = 0.043*t53449*t56820;
  t56855 = 0.043*t44597*t56850;
  t56856 = t56025 + t56144 + t56224 + t56270 + t56318 + t56553 + t56593 + t56736 + t56747 + t56826 + t56855;
  t57140 = 0.026*t54962*t56022;
  t57141 = 0.026*t54962*t56143;
  t57142 = 0.026*t56970*t56222;
  t57143 = 0.026*t55012*t56250;
  t57144 = 0.026*t55023*t56317;
  t57148 = 0.043*t55150*t56551;
  t57150 = 0.043*t55049*t56570;
  t57152 = 0.043*t55139*t56733;
  t57158 = 0.043*t55043*t56742;
  t57185 = 0.043*t55063*t56820;
  t57193 = 0.043*t55038*t56850;
  t57206 = t57140 + t57141 + t57142 + t57143 + t57144 + t57148 + t57150 + t57152 + t57158 + t57185 + t57193;
  t57401 = 0.026*t54132*t56022;
  t57404 = 0.026*t54132*t56143;
  t57413 = 0.026*t57258*t56222;
  t57415 = 0.026*t54251*t56250;
  t57417 = 0.026*t54273*t56317;
  t57418 = 0.043*t54917*t56551;
  t57419 = 0.043*t54643*t56570;
  t57423 = 0.043*t54843*t56733;
  t57424 = 0.043*t54529*t56742;
  t57427 = 0.043*t54784*t56820;
  t57430 = 0.043*t54399*t56850;
  t57431 = t57401 + t57404 + t57413 + t57415 + t57417 + t57418 + t57419 + t57423 + t57424 + t57427 + t57430;
  t57552 = t52539*t56149;
  t57553 = t53924*t56156;
  t57554 = t57552 + t57553;
  t57684 = t33206*t53281*t55318;
  t57685 = t2075*t53281*t55325;
  t57689 = t57684 + t57685;
  t57557 = t2075*t53209;
  t57582 = -1.*t33206*t53242;
  t57583 = t57557 + t57582;
  t55222 = 0.026*t53924*t55208;
  t55310 = 0.026*t53924*t55306;
  t55350 = -0.026*t26922*t53281*t55347;
  t55385 = 0.026*t50698*t55384;
  t55409 = 0.026*t52539*t55397;
  t55642 = 0.043*t53819*t55637;
  t55701 = 0.043*t50521*t55700;
  t55846 = 0.043*t53603*t55838;
  t55851 = 0.043*t48723*t55850;
  t55929 = 0.043*t53449*t55927;
  t55938 = 0.043*t44597*t55937;
  t55941 = t55222 + t55310 + t55350 + t55385 + t55409 + t55642 + t55701 + t55846 + t55851 + t55929 + t55938;
  t57092 = 0.026*t54962*t55208;
  t57113 = 0.026*t54962*t55306;
  t57122 = 0.026*t56970*t55347;
  t57123 = 0.026*t55012*t55384;
  t57124 = 0.026*t55023*t55397;
  t57125 = 0.043*t55150*t55637;
  t57128 = 0.043*t55049*t55700;
  t57131 = 0.043*t55139*t55838;
  t57132 = 0.043*t55043*t55850;
  t57135 = 0.043*t55063*t55927;
  t57137 = 0.043*t55038*t55937;
  t57138 = t57092 + t57113 + t57122 + t57123 + t57124 + t57125 + t57128 + t57131 + t57132 + t57135 + t57137;
  t57356 = 0.026*t54132*t55208;
  t57357 = 0.026*t54132*t55306;
  t57358 = 0.026*t57258*t55347;
  t57359 = 0.026*t54251*t55384;
  t57361 = 0.026*t54273*t55397;
  t57368 = 0.043*t54917*t55637;
  t57377 = 0.043*t54643*t55700;
  t57383 = 0.043*t54843*t55838;
  t57391 = 0.043*t54529*t55850;
  t57392 = 0.043*t54784*t55927;
  t57393 = 0.043*t54399*t55937;
  t57394 = t57356 + t57357 + t57358 + t57359 + t57361 + t57368 + t57377 + t57383 + t57391 + t57392 + t57393;
  t57671 = 0.000014*t2075*t50698*t53281;
  t57673 = 0.000056*t2075*t52539*t53281;
  t57674 = 0.000042*t33206*t53924*t53281;
  t57675 = 0.000271*t44597*t54671;
  t57676 = 0.000271*t48723*t54801;
  t57678 = 2.e-6*t50521*t54859;
  t57679 = 0.000271*t2075*t24942*t53281*t53449;
  t57680 = 0.000271*t47174*t53281*t53603;
  t57682 = 2.e-6*t50217*t53281*t53819;
  t57692 = 0.026*t57689*t56222;
  t57695 = 0.026*t57554*t55347;
  t57698 = 0.026*t55306*t56250;
  t57699 = 0.026*t56143*t55384;
  t57700 = 0.026*t55208*t56317;
  t57701 = 0.026*t56022*t55397;
  t57703 = 0.043*t55700*t56551;
  t57704 = 0.043*t55637*t56570;
  t57705 = 0.043*t55850*t56733;
  t57706 = 0.043*t55838*t56742;
  t57707 = 0.043*t55937*t56820;
  t57708 = 0.043*t55927*t56850;
  t57709 = t57671 + t57673 + t57674 + t57675 + t57676 + t57678 + t57679 + t57680 + t57682 + t57692 + t57695 + t57698 + t57699 + t57700 + t57701 + t57703 + t57704 + t57705 + t57706 + t57707 + t57708;
  t57786 = Power(t24942,2);
  t52468 = -0.0026*t2075*t50698;
  t52554 = -0.0026*t2075*t52539;
  t52848 = 0.043*t52836*t44597;
  t53111 = 0.043*t53110*t48723;
  t53175 = 0.043*t53172*t50521;
  t53284 = -0.026*t26922*t53278*t53281;
  t53452 = 0.043*t53429*t53449;
  t53605 = 0.043*t53556*t53603;
  t53833 = 0.043*t53740*t53819;
  t53856 = t52468 + t52554 + t52848 + t53111 + t53175 + t53284 + t53452 + t53605 + t53833;
  t57248 = 0.043*t52836*t54399;
  t57249 = -0.0026*t2075*t54251;
  t57250 = -0.0026*t2075*t54273;
  t57251 = 0.043*t53172*t54643;
  t57252 = 0.043*t53110*t54529;
  t57259 = 0.026*t53278*t57258;
  t57260 = 0.043*t53429*t54784;
  t57265 = 0.043*t53556*t54843;
  t57267 = 0.043*t53740*t54917;
  t57276 = t57248 + t57249 + t57250 + t57251 + t57252 + t57259 + t57260 + t57265 + t57267;
  t56923 = 0.043*t52836*t55038;
  t56926 = -0.0026*t2075*t55012;
  t56927 = -0.0026*t2075*t55023;
  t56928 = 0.043*t53172*t55049;
  t56937 = 0.043*t53110*t55043;
  t56975 = 0.026*t53278*t56970;
  t56995 = 0.043*t53429*t55063;
  t56996 = 0.043*t53556*t55139;
  t56997 = 0.043*t53740*t55150;
  t56998 = t56923 + t56926 + t56927 + t56928 + t56937 + t56975 + t56995 + t56996 + t56997;
  t57785 = 0.000042*t53232*t53281;
  t57787 = 0.000271*t53232*t57786*t53281;
  t57793 = -0.000042*t53250*t53281;
  t57799 = Power(t50217,2);
  t57802 = 2.e-6*t57799*t53281;
  t57809 = Power(t47174,2);
  t57810 = 0.000271*t57809*t53281;
  t57812 = -0.000271*t24942*t33206*t54671;
  t57816 = 0.000271*t48495*t54801;
  t57818 = 2.e-6*t50506*t54859;
  t57819 = -0.0026*t2075*t55208;
  t57820 = -0.0026*t2075*t55306;
  t57821 = 0.026*t53278*t57689;
  t57825 = 0.026*t57583*t55347;
  t57827 = 0.0026*t33206*t55384;
  t57829 = -0.0026*t33206*t55397;
  t57830 = 0.043*t53172*t55637;
  t57834 = 0.043*t53740*t55700;
  t57840 = 0.043*t53110*t55838;
  t57841 = 0.043*t53556*t55850;
  t57842 = 0.043*t52836*t55927;
  t57844 = 0.043*t53429*t55937;
  t57845 = t57785 + t57787 + t57793 + t57802 + t57810 + t57812 + t57816 + t57818 + t57819 + t57820 + t57821 + t57825 + t57827 + t57829 + t57830 + t57834 + t57840 + t57841 + t57842 + t57844;
  t57529 = -0.000014*t33206*t50698;
  t57534 = -0.000056*t33206*t52539;
  t57536 = 0.000042*t2075*t53924;
  t57541 = 0.000271*t2075*t24942*t44597;
  t57542 = 0.000271*t47174*t48723;
  t57543 = 2.e-6*t50217*t50521;
  t57546 = -0.000271*t24942*t33206*t53449;
  t57548 = 0.000271*t48495*t53603;
  t57549 = 2.e-6*t50506*t53819;
  t57550 = -0.0026*t2075*t56022;
  t57551 = -0.0026*t2075*t56143;
  t57556 = 0.026*t53278*t57554;
  t57585 = 0.026*t57583*t56222;
  t57588 = 0.0026*t33206*t56250;
  t57589 = -0.0026*t33206*t56317;
  t57595 = 0.043*t53172*t56551;
  t57609 = 0.043*t53740*t56570;
  t57636 = 0.043*t53110*t56733;
  t57639 = 0.043*t53556*t56742;
  t57642 = 0.043*t52836*t56820;
  t57643 = 0.043*t53429*t56850;
  t57645 = t57529 + t57534 + t57536 + t57541 + t57542 + t57543 + t57546 + t57548 + t57549 + t57550 + t57551 + t57556 + t57585 + t57588 + t57589 + t57595 + t57609 + t57636 + t57639 + t57642 + t57643;
  t57920 = 0.00013*t33206;
  t57922 = 0.000271*t24942*t33206;
  t57923 = 0.000271*t51083*t48495;
  t57924 = 6.e-12*t47121*t50506;
  t57925 = 0.043*t52408*t53740;
  t57926 = 0.043*t52326*t53556;
  t57927 = 0.043*t51959*t53429;
  t57929 = t57920 + t57922 + t57923 + t57924 + t57925 + t57926 + t57927;
  t50766 = 0.0013*t50698;
  t51972 = 0.043*t51959*t44597;
  t52328 = 0.043*t52326*t48723;
  t52436 = 0.043*t52408*t50521;
  t52446 = t50766 + t51972 + t52328 + t52436;
  t56899 = 0.043*t51959*t55038;
  t56902 = 0.0013*t55012;
  t56918 = 0.043*t52408*t55049;
  t56919 = 0.043*t52326*t55043;
  t56920 = t56899 + t56902 + t56918 + t56919;
  t57241 = 0.043*t51959*t54399;
  t57242 = 0.0013*t54251;
  t57243 = 0.043*t52408*t54643;
  t57244 = 0.043*t52326*t54529;
  t57245 = t57241 + t57242 + t57243 + t57244;
  t57753 = -0.000271*t2075*t24942*t53281;
  t57756 = 6.e-12*t47121*t50217*t53281;
  t57774 = 0.000271*t51083*t47174*t53281;
  t57776 = 0.0013*t55306;
  t57777 = 0.043*t52408*t55637;
  t57778 = 0.043*t52326*t55838;
  t57780 = 0.043*t51959*t55927;
  t57783 = t57753 + t57756 + t57774 + t57776 + t57777 + t57778 + t57780;
  t57473 = -0.000271*t44597;
  t57475 = 0.000271*t51083*t48723;
  t57480 = 6.e-12*t47121*t50521;
  t57495 = 0.0013*t56143;
  t57499 = 0.043*t52408*t56551;
  t57502 = 0.043*t52326*t56733;
  t57503 = 0.043*t51959*t56820;
  t57519 = t57473 + t57475 + t57480 + t57495 + t57499 + t57502 + t57503;
  t57910 = -0.000271000000002439*t24942*t33206;
  t57913 = 0.0042999871*t53740;
  t57914 = -5.16e-14*t53556;
  t57915 = -1.72e-8*t53429;
  t57916 = t57910 + t57913 + t57914 + t57915;
  t46637 = -1.72e-8*t44597;
  t49029 = -5.16e-14*t48723;
  t50523 = 0.0042999871*t50521;
  t50542 = t46637 + t49029 + t50523;
  t56879 = -1.72e-8*t55038;
  t56884 = 0.0042999871*t55049;
  t56886 = -5.16e-14*t55043;
  t56888 = t56879 + t56884 + t56886;
  t57236 = -1.72e-8*t54399;
  t57237 = 0.0042999871*t54643;
  t57238 = -5.16e-14*t54529;
  t57239 = t57236 + t57237 + t57238;
  t57742 = 0.000271000000002439*t2075*t24942*t53281;
  t57743 = 0.0042999871*t55637;
  t57744 = -5.16e-14*t55838;
  t57746 = -1.72e-8*t55927;
  t57748 = t57742 + t57743 + t57744 + t57746;
  t57440 = 0.000271000000002439*t44597;
  t57441 = 0.0042999871*t56551;
  t57442 = -5.16e-14*t56733;
  t57468 = -1.72e-8*t56820;
  t57471 = t57440 + t57441 + t57442 + t57468;
  p_output1[0]=var2[11]*(-0.5*(0.086*t44597*t53449 + 0.086*t48723*t53603 + 0.086*t50521*t53819 + 0.052*t50698*t53924 + 0.052*t52539*t53924)*var2[0] - 0.5*t55166*var2[1] - 0.5*t54927*var2[2] - 0.5*t56856*var2[3] - 0.5*t55941*var2[4] - 0.5*t53856*var2[5] - 0.5*t52446*var2[11] - 0.5*t50542*var2[13]);
  p_output1[1]=var2[11]*(-0.5*t55166*var2[0] - 0.5*(0.052*t54962*t55012 + 0.052*t54962*t55023 + 0.086*t55038*t55063 + 0.086*t55043*t55139 + 0.086*t55049*t55150)*var2[1] - 0.5*t57065*var2[2] - 0.5*t57206*var2[3] - 0.5*t57138*var2[4] - 0.5*t56998*var2[5] - 0.5*t56920*var2[11] - 0.5*t56888*var2[13]);
  p_output1[2]=var2[11]*(-0.5*t54927*var2[0] - 0.5*t57065*var2[1] - 0.5*(0.052*t54132*t54251 + 0.052*t54132*t54273 + 0.086*t54399*t54784 + 0.086*t54529*t54843 + 0.086*t54643*t54917)*var2[2] - 0.5*t57431*var2[3] - 0.5*t57394*var2[4] - 0.5*t57276*var2[5] - 0.5*t57245*var2[11] - 0.5*t57239*var2[13]);
  p_output1[3]=var2[11]*(-0.5*t56856*var2[0] - 0.5*t57206*var2[1] - 0.5*t57431*var2[2] - 0.5*(0.000542*t44597*t53449 + 0.000542*t48723*t53603 + 4.e-6*t50521*t53819 + 0.000028*t50698*t53924 + 0.000112*t52539*t53924 + 0.052*t56143*t56250 + 0.052*t56022*t56317 + 0.086*t56551*t56570 + 0.086*t56733*t56742 + 0.086*t56820*t56850 + 0.052*t56222*t57554)*var2[3] - 0.5*t57709*var2[4] - 0.5*t57645*var2[5] - 0.5*t57519*var2[11] - 0.5*t57471*var2[13]);
  p_output1[4]=var2[11]*(-0.5*t55941*var2[0] - 0.5*t57138*var2[1] - 0.5*t57394*var2[2] - 0.5*t57709*var2[3] - 0.5*(0.000542*t2075*t24942*t53281*t54671 + 0.000542*t47174*t53281*t54801 + 4.e-6*t50217*t53281*t54859 + 0.000084*t2075*t33206*t55275 + 0.052*t55306*t55384 + 0.052*t55208*t55397 + 0.086*t55637*t55700 + 0.086*t55838*t55850 + 0.086*t55927*t55937 + 0.052*t55347*t57689)*var2[4] - 0.5*t57845*var2[5] - 0.5*t57783*var2[11] - 0.5*t57748*var2[13]);
  p_output1[5]=var2[11]*(-0.5*t53856*var2[0] - 0.5*t56998*var2[1] - 0.5*t57276*var2[2] - 0.5*t57645*var2[3] - 0.5*t57845*var2[4] - 0.5*(-0.000084*t2075*t33206 + 0.000542*t47174*t48495 + 4.e-6*t50217*t50506 + 0.086*t52836*t53429 + 0.086*t53110*t53556 + 0.086*t53172*t53740 + 0.052*t53278*t57583 - 0.000542*t2075*t33206*t57786)*var2[5] - 0.5*t57929*var2[11] - 0.5*t57916*var2[13]);
  p_output1[6]=0;
  p_output1[7]=0;
  p_output1[8]=0;
  p_output1[9]=0;
  p_output1[10]=0;
  p_output1[11]=(-0.5*t52446*var2[0] - 0.5*t56920*var2[1] - 0.5*t57245*var2[2] - 0.5*t57519*var2[3] - 0.5*t57783*var2[4] - 0.5*t57929*var2[5])*var2[11];
  p_output1[12]=0;
  p_output1[13]=(-0.5*t50542*var2[0] - 0.5*t56888*var2[1] - 0.5*t57239*var2[2] - 0.5*t57471*var2[3] - 0.5*t57748*var2[4] - 0.5*t57916*var2[5])*var2[11];
  p_output1[14]=0;
  p_output1[15]=0;
  p_output1[16]=0;
  p_output1[17]=0;
  p_output1[18]=0;
  p_output1[19]=0;
  p_output1[20]=0;
  p_output1[21]=0;
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 22, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "Ce2_vec12_minitaur.hh"

namespace FrontStance
{

void Ce2_vec12_minitaur_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
