/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 01:36:51 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2)
{
  double t30;
  double t302;
  double t309;
  double t6580;
  double t14000;
  double t3830;
  double t12146;
  double t14548;
  double t12970;
  double t14678;
  double t17116;
  double t20400;
  double t20479;
  double t21092;
  double t21166;
  double t21971;
  double t23686;
  double t23895;
  double t24554;
  double t25561;
  double t28636;
  double t30932;
  double t31076;
  double t22260;
  double t22376;
  double t22885;
  double t22974;
  double t25611;
  double t32682;
  double t32689;
  double t32702;
  double t32708;
  double t32808;
  double t32825;
  double t41655;
  double t34305;
  double t36705;
  double t36739;
  double t38141;
  double t38673;
  double t38692;
  double t38841;
  double t41678;
  double t22980;
  double t34336;
  double t24597;
  double t36538;
  double t36575;
  double t42819;
  double t38931;
  double t48936;
  double t48961;
  double t49374;
  double t49976;
  double t50106;
  double t50672;
  double t24562;
  double t27000;
  double t27660;
  double t31333;
  double t32403;
  double t32831;
  double t33181;
  double t34369;
  double t36481;
  double t36494;
  double t51071;
  double t51152;
  double t51417;
  double t51423;
  double t39128;
  double t51539;
  double t51574;
  double t51658;
  double t51660;
  double t42768;
  double t42774;
  double t51993;
  double t52143;
  double t52186;
  double t52379;
  double t44598;
  double t45462;
  double t45642;
  double t46811;
  double t47329;
  double t48451;
  double t58066;
  double t58067;
  double t58133;
  double t58134;
  double t60243;
  double t60595;
  double t61542;
  double t62252;
  double t62412;
  double t62487;
  double t63741;
  double t64392;
  double t74919;
  double t75528;
  double t75534;
  double t77626;
  double t79121;
  double t79714;
  double t79788;
  double t79934;
  double t80949;
  double t81185;
  double t82911;
  double t82912;
  double t90274;
  double t90426;
  double t90452;
  double t91222;
  double t91223;
  double t91389;
  double t91494;
  double t91727;
  double t93270;
  double t93599;
  double t93674;
  double t96032;
  double t96258;
  double t97438;
  double t98079;
  double t98087;
  double t98402;
  double t98446;
  double t98559;
  double t99703;
  double t99820;
  double t100088;
  double t104292;
  double t104300;
  double t104301;
  double t104375;
  double t104279;
  double t104289;
  double t107710;
  double t108081;
  double t108273;
  double t108847;
  double t127907;
  double t127911;
  double t127923;
  double t127946;
  double t127957;
  double t127966;
  double t127973;
  double t127938;
  double t127940;
  double t127943;
  double t127944;
  double t127984;
  double t127985;
  double t127986;
  double t127990;
  double t128040;
  double t128041;
  double t128044;
  double t128045;
  double t128055;
  double t128092;
  double t128089;
  double t128097;
  double t128042;
  double t128046;
  double t128047;
  double t128048;
  double t128052;
  double t128056;
  double t128057;
  double t128058;
  double t128059;
  double t128061;
  double t128077;
  double t128082;
  double t128086;
  double t128087;
  double t130274;
  double t130275;
  double t128090;
  double t130055;
  double t130069;
  double t130081;
  double t130272;
  double t130277;
  double t130278;
  double t130280;
  double t128104;
  double t20191;
  double t21165;
  double t21996;
  double t32679;
  double t36532;
  double t36627;
  double t39159;
  double t41692;
  double t41775;
  double t42761;
  double t42814;
  double t42833;
  double t42835;
  double t43447;
  double t43908;
  double t47727;
  double t48153;
  double t48347;
  double t48577;
  double t48612;
  double t48835;
  double t48837;
  double t57443;
  double t57686;
  double t58059;
  double t60132;
  double t62268;
  double t62269;
  double t64447;
  double t64805;
  double t65349;
  double t65497;
  double t65862;
  double t67639;
  double t68955;
  double t68989;
  double t69241;
  double t69245;
  double t69286;
  double t69291;
  double t69295;
  double t69297;
  double t69353;
  double t69383;
  double t69938;
  double t70593;
  double t71308;
  double t74313;
  double t78956;
  double t79975;
  double t79976;
  double t84142;
  double t84330;
  double t84551;
  double t84714;
  double t85748;
  double t86231;
  double t86289;
  double t86388;
  double t87579;
  double t88318;
  double t88432;
  double t88439;
  double t88580;
  double t88900;
  double t89353;
  double t89466;
  double t89508;
  double t89869;
  double t130327;
  double t130328;
  double t130329;
  double t130331;
  double t130332;
  double t130333;
  double t130336;
  double t130337;
  double t130338;
  double t50933;
  double t130361;
  double t130362;
  double t130363;
  double t130365;
  double t130366;
  double t130367;
  double t130370;
  double t130372;
  double t130374;
  double t130555;
  double t130564;
  double t130570;
  double t130571;
  double t130573;
  double t130574;
  double t130575;
  double t130576;
  double t130580;
  double t130581;
  double t130582;
  double t130583;
  double t130604;
  double t130605;
  double t130607;
  double t130608;
  double t130609;
  double t130612;
  double t130615;
  double t130619;
  double t130641;
  double t130645;
  double t130649;
  double t130655;
  double t130656;
  double t130659;
  double t130660;
  double t130661;
  double t130692;
  double t130693;
  double t130694;
  double t130696;
  double t130697;
  double t130698;
  double t130702;
  double t130703;
  double t130704;
  double t131075;
  double t131076;
  double t131077;
  double t131078;
  double t131070;
  double t131071;
  double t131072;
  double t131073;
  double t131082;
  double t131083;
  double t131085;
  double t131138;
  double t131139;
  double t131140;
  double t131142;
  double t131135;
  double t131136;
  double t131146;
  double t131151;
  double t131153;
  double t131156;
  double t131188;
  double t131189;
  double t131190;
  double t131191;
  double t131183;
  double t131184;
  double t131185;
  double t131186;
  double t131195;
  double t131196;
  double t131197;
  double t131198;
  double t131221;
  double t131222;
  double t131216;
  double t131217;
  double t131218;
  double t131219;
  double t131224;
  double t131225;
  double t131226;
  double t131273;
  double t131274;
  double t131275;
  double t131270;
  double t131271;
  double t131265;
  double t131266;
  double t131267;
  double t131268;
  double t90588;
  double t90950;
  double t91458;
  double t91840;
  double t92328;
  double t93688;
  double t93813;
  double t93898;
  double t94332;
  double t94997;
  double t95155;
  double t95859;
  double t95865;
  double t95873;
  double t95914;
  double t95920;
  double t95964;
  double t95975;
  double t95998;
  double t96015;
  double t96016;
  double t96029;
  double t96030;
  double t97677;
  double t98302;
  double t98564;
  double t99089;
  double t100333;
  double t100404;
  double t100424;
  double t100489;
  double t100636;
  double t100742;
  double t100748;
  double t100750;
  double t100751;
  double t100753;
  double t100754;
  double t100756;
  double t100757;
  double t100878;
  double t101958;
  double t102505;
  double t103102;
  double t103857;
  double t130602;
  double t130603;
  double t130606;
  double t130610;
  double t130611;
  double t130622;
  double t130623;
  double t130624;
  double t130625;
  double t130626;
  double t130627;
  double t130628;
  double t130629;
  double t130630;
  double t130631;
  double t130632;
  double t130633;
  double t130634;
  double t130635;
  double t130636;
  double t130637;
  double t130638;
  double t130639;
  double t130640;
  double t130654;
  double t130657;
  double t130658;
  double t130662;
  double t130663;
  double t130664;
  double t130665;
  double t130666;
  double t130667;
  double t130668;
  double t130669;
  double t130671;
  double t130672;
  double t130673;
  double t130674;
  double t130675;
  double t130679;
  double t130681;
  double t130688;
  double t130689;
  double t130690;
  double t130691;
  double t130695;
  double t130699;
  double t130701;
  double t130705;
  double t130706;
  double t130707;
  double t131016;
  double t131017;
  double t131019;
  double t131054;
  double t131055;
  double t131056;
  double t131057;
  double t131058;
  double t131059;
  double t131060;
  double t131061;
  double t131062;
  double t131063;
  double t131064;
  double t131065;
  double t130395;
  double t130396;
  double t131342;
  double t131344;
  double t131347;
  double t131368;
  double t131372;
  double t131375;
  double t49548;
  double t50696;
  double t131396;
  double t131398;
  double t131401;
  double t131428;
  double t131429;
  double t131430;
  double t131424;
  double t131425;
  double t131426;
  double t131444;
  double t131446;
  double t131453;
  double t131521;
  double t131523;
  double t131524;
  double t131553;
  double t131554;
  double t131556;
  double t131545;
  double t131546;
  double t131582;
  double t131583;
  double t131585;
  double t131628;
  double t131630;
  double t131635;
  double t131636;
  double t131644;
  double t131768;
  double t131769;
  double t131763;
  double t131764;
  double t131765;
  double t131795;
  double t131796;
  double t131790;
  double t131791;
  double t131792;
  double t131490;
  double t131591;
  double t104072;
  double t104073;
  double t104113;
  double t104290;
  double t104868;
  double t107177;
  double t107542;
  double t109598;
  double t113733;
  double t123881;
  double t126983;
  double t127865;
  double t127867;
  double t127878;
  double t127879;
  double t127881;
  double t127882;
  double t127888;
  double t127892;
  double t127895;
  double t127899;
  double t127900;
  double t127902;
  double t127904;
  double t127924;
  double t127932;
  double t127945;
  double t127975;
  double t127979;
  double t127983;
  double t127994;
  double t127995;
  double t127996;
  double t127998;
  double t127999;
  double t128000;
  double t128002;
  double t128005;
  double t128006;
  double t128007;
  double t128013;
  double t128018;
  double t128023;
  double t128030;
  double t128037;
  double t128038;
  double t128039;
  double t131066;
  double t131068;
  double t131069;
  double t131074;
  double t131079;
  double t131080;
  double t131081;
  double t131086;
  double t131087;
  double t131088;
  double t131089;
  double t131090;
  double t131091;
  double t131092;
  double t131093;
  double t131094;
  double t131095;
  double t131096;
  double t131105;
  double t131116;
  double t131125;
  double t131130;
  double t131131;
  double t131132;
  double t131133;
  double t131134;
  double t131137;
  double t131143;
  double t131144;
  double t131145;
  double t131159;
  double t131161;
  double t131162;
  double t131164;
  double t131165;
  double t131166;
  double t131167;
  double t131168;
  double t131169;
  double t131170;
  double t131171;
  double t131173;
  double t131174;
  double t131175;
  double t131176;
  double t131177;
  double t131178;
  double t131181;
  double t131182;
  double t131187;
  double t131192;
  double t131193;
  double t131194;
  double t131199;
  double t131200;
  double t131201;
  double t131202;
  double t131203;
  double t131204;
  double t131205;
  double t131206;
  double t131207;
  double t131208;
  double t131209;
  double t131210;
  double t131211;
  double t131212;
  double t131213;
  double t131214;
  double t131215;
  double t131422;
  double t131423;
  double t131427;
  double t131431;
  double t131442;
  double t131443;
  double t131459;
  double t131476;
  double t131485;
  double t131491;
  double t131492;
  double t131497;
  double t131498;
  double t131501;
  double t131502;
  double t131505;
  double t131507;
  double t131508;
  double t131509;
  double t131516;
  double t131519;
  double t131520;
  double t131541;
  double t131550;
  double t131560;
  double t131562;
  double t131570;
  double t131586;
  double t131587;
  double t131589;
  double t131592;
  double t131593;
  double t131595;
  double t131597;
  double t131600;
  double t131601;
  double t131604;
  double t131605;
  double t131610;
  double t131613;
  double t131614;
  double t131616;
  double t131622;
  double t131626;
  double t131627;
  double t131631;
  double t131632;
  double t131633;
  double t131653;
  double t131654;
  double t131655;
  double t131662;
  double t131687;
  double t131688;
  double t131689;
  double t131690;
  double t131693;
  double t131694;
  double t131696;
  double t131697;
  double t131698;
  double t131757;
  double t131759;
  double t131762;
  double t132491;
  double t132492;
  double t132495;
  double t132501;
  double t132502;
  double t132503;
  double t132509;
  double t132511;
  double t132512;
  double t132513;
  double t132551;
  double t132557;
  double t132559;
  double t132565;
  double t132568;
  double t133093;
  double t133108;
  double t133129;
  double t130402;
  double t133239;
  double t133245;
  double t133249;
  double t133251;
  double t133253;
  double t133261;
  double t133271;
  double t133395;
  double t133397;
  double t133399;
  double t133374;
  double t133375;
  double t133376;
  double t133380;
  double t133390;
  double t133392;
  double t133473;
  double t133474;
  double t133477;
  double t133452;
  double t133454;
  double t133455;
  double t133459;
  double t133460;
  double t128049;
  double t128060;
  double t128088;
  double t128091;
  double t128093;
  double t128094;
  double t128095;
  double t128096;
  double t128098;
  double t128099;
  double t128101;
  double t128102;
  double t128103;
  double t128105;
  double t129562;
  double t129625;
  double t129931;
  double t130035;
  double t130052;
  double t130053;
  double t130273;
  double t130276;
  double t130281;
  double t130282;
  double t130283;
  double t130284;
  double t130285;
  double t130286;
  double t130287;
  double t130288;
  double t130289;
  double t130290;
  double t130291;
  double t130292;
  double t130293;
  double t130294;
  double t130295;
  double t130296;
  double t130297;
  double t130298;
  double t130299;
  double t131220;
  double t131223;
  double t131227;
  double t131228;
  double t131229;
  double t131230;
  double t131231;
  double t131232;
  double t131233;
  double t131234;
  double t131235;
  double t131236;
  double t131237;
  double t131238;
  double t131239;
  double t131240;
  double t131241;
  double t131242;
  double t131243;
  double t131244;
  double t131245;
  double t131246;
  double t131247;
  double t131248;
  double t131249;
  double t131250;
  double t131251;
  double t131252;
  double t131253;
  double t131254;
  double t131255;
  double t131256;
  double t131257;
  double t131258;
  double t131259;
  double t131260;
  double t131261;
  double t131262;
  double t131263;
  double t131264;
  double t131269;
  double t131272;
  double t131276;
  double t131277;
  double t131278;
  double t131279;
  double t131280;
  double t131281;
  double t131282;
  double t131283;
  double t131284;
  double t131285;
  double t131286;
  double t131287;
  double t131288;
  double t131289;
  double t131290;
  double t131291;
  double t131292;
  double t131293;
  double t131294;
  double t131766;
  double t131767;
  double t131770;
  double t131772;
  double t131773;
  double t131774;
  double t131775;
  double t131776;
  double t131777;
  double t131778;
  double t131779;
  double t131780;
  double t131781;
  double t131782;
  double t131783;
  double t131784;
  double t131785;
  double t131786;
  double t131787;
  double t131788;
  double t131793;
  double t131794;
  double t131797;
  double t131798;
  double t131799;
  double t131800;
  double t131801;
  double t131802;
  double t131803;
  double t131804;
  double t131805;
  double t131808;
  double t131809;
  double t131810;
  double t131811;
  double t131812;
  double t131813;
  double t131814;
  double t131815;
  double t131816;
  double t131817;
  double t131818;
  double t131819;
  double t131820;
  double t131821;
  double t131822;
  double t131823;
  double t131824;
  double t131826;
  double t131827;
  double t131828;
  double t131829;
  double t131830;
  double t131831;
  double t131832;
  double t131833;
  double t131834;
  double t131835;
  double t131836;
  double t131837;
  double t131838;
  double t133388;
  double t133394;
  double t133401;
  double t133402;
  double t133403;
  double t133404;
  double t133407;
  double t133409;
  double t133415;
  double t133420;
  double t133425;
  double t133426;
  double t133432;
  double t133433;
  double t133437;
  double t133438;
  double t133441;
  double t133445;
  double t133448;
  double t133449;
  double t133457;
  double t133462;
  double t133478;
  double t133480;
  double t133481;
  double t133485;
  double t133490;
  double t133491;
  double t133493;
  double t133495;
  double t133497;
  double t133498;
  double t133499;
  double t133506;
  double t133507;
  double t133509;
  double t133511;
  double t133513;
  double t133514;
  double t133515;
  double t133520;
  double t133522;
  double t133528;
  double t133529;
  double t133533;
  double t133534;
  double t133538;
  double t133539;
  double t133540;
  double t133541;
  double t133545;
  double t133546;
  double t133547;
  double t133548;
  double t133549;
  double t133550;
  double t134014;
  double t134050;
  double t134071;
  double t134092;
  double t134093;
  double t134269;
  double t134271;
  double t134294;
  double t134299;
  double t134319;
  double t134330;
  double t134341;
  double t134346;
  double t134354;
  double t134273;
  double t134361;
  double t134272;
  double t134275;
  double t134277;
  double t134278;
  double t134280;
  double t134331;
  double t134332;
  double t134335;
  double t134336;
  double t134484;
  double t134491;
  double t134381;
  double t134493;
  double t134501;
  double t134504;
  double t134513;
  double t134514;
  double t134518;
  double t134436;
  double t134447;
  double t134459;
  double t134461;
  double t134466;
  double t134399;
  double t134523;
  t30 = Cos(var1[6]);
  t302 = -1.*t30;
  t309 = 1. + t302;
  t6580 = Cos(var1[5]);
  t14000 = Sin(var1[3]);
  t3830 = Cos(var1[3]);
  t12146 = Sin(var1[4]);
  t14548 = Sin(var1[5]);
  t12970 = t3830*t6580*t12146;
  t14678 = -1.*t14000*t14548;
  t17116 = t12970 + t14678;
  t20400 = -1.*t6580*t14000;
  t20479 = -1.*t3830*t12146*t14548;
  t21092 = t20400 + t20479;
  t21166 = Cos(var1[4]);
  t21971 = Sin(var1[6]);
  t23686 = Cos(var1[8]);
  t23895 = -1.*t23686;
  t24554 = 1. + t23895;
  t25561 = Sin(var1[8]);
  t28636 = -3.e-6*t24554;
  t30932 = 3.e-6*t25561;
  t31076 = t28636 + t30932;
  t22260 = t30*t17116;
  t22376 = 3.e-6*t309*t21092;
  t22885 = -1.*t3830*t21166*t21971;
  t22974 = t22260 + t22376 + t22885;
  t25611 = -1.*t25561;
  t32682 = 3.e-6*t309*t17116;
  t32689 = -9.e-12*t309;
  t32702 = 1. + t32689;
  t32708 = t32702*t21092;
  t32808 = 3.e-6*t3830*t21166*t21971;
  t32825 = t32682 + t32708 + t32808;
  t41655 = 3.e-6*t24554;
  t34305 = -3.e-6*t25561;
  t36705 = -1.000000000009*t309;
  t36739 = 1. + t36705;
  t38141 = -1.*t3830*t21166*t36739;
  t38673 = -1.*t17116*t21971;
  t38692 = 3.e-6*t21092*t21971;
  t38841 = t38141 + t38673 + t38692;
  t41678 = t41655 + t30932;
  t22980 = 9.e-13*var1[8];
  t34336 = t28636 + t34305;
  t24597 = -9.e-12*t24554;
  t36538 = -1.000000000009*t24554;
  t36575 = 1. + t36538;
  t42819 = t41655 + t34305;
  t38931 = 9.e-12*t24554;
  t48936 = -1.*t6580*t14000*t12146;
  t48961 = -1.*t3830*t14548;
  t49374 = t48936 + t48961;
  t49976 = -1.*t3830*t6580;
  t50106 = t14000*t12146*t14548;
  t50672 = t49976 + t50106;
  t24562 = 0.2000000000018*t24554;
  t27000 = t24597 + t25611;
  t27660 = 0.1*t27000;
  t31333 = -9.e-7*t31076;
  t32403 = t22980 + t24562 + t27660 + t31333;
  t32831 = 3.e-7*var1[8];
  t33181 = -1.62e-17*t24554;
  t34369 = 0.2*t34336;
  t36481 = 0.1*t31076;
  t36494 = t32831 + t33181 + t34369 + t36481;
  t51071 = t30*t49374;
  t51152 = 3.e-6*t309*t50672;
  t51417 = t21166*t14000*t21971;
  t51423 = t51071 + t51152 + t51417;
  t39128 = t38931 + t25611;
  t51539 = 3.e-6*t309*t49374;
  t51574 = t32702*t50672;
  t51658 = -3.e-6*t21166*t14000*t21971;
  t51660 = t51539 + t51574 + t51658;
  t42768 = -1.8e-11*t24554;
  t42774 = 1. + t42768;
  t51993 = t21166*t36739*t14000;
  t52143 = -1.*t49374*t21971;
  t52186 = 3.e-6*t50672*t21971;
  t52379 = t51993 + t52143 + t52186;
  t44598 = 0.1000000000009*t24554;
  t45462 = -9.e-7*t34336;
  t45642 = t24597 + t25561;
  t46811 = 0.2*t45642;
  t47329 = t22980 + t44598 + t45462 + t46811;
  t48451 = t38931 + t25561;
  t58066 = t3830*t21166*t6580*t30;
  t58067 = -3.e-6*t3830*t21166*t309*t14548;
  t58133 = t3830*t12146*t21971;
  t58134 = t58066 + t58067 + t58133;
  t60243 = 3.e-6*t3830*t21166*t6580*t309;
  t60595 = -1.*t3830*t21166*t32702*t14548;
  t61542 = -3.e-6*t3830*t12146*t21971;
  t62252 = t60243 + t60595 + t61542;
  t62412 = t3830*t36739*t12146;
  t62487 = -1.*t3830*t21166*t6580*t21971;
  t63741 = -3.e-6*t3830*t21166*t14548*t21971;
  t64392 = t62412 + t62487 + t63741;
  t74919 = t21166*t6580*t30*t14000;
  t75528 = -3.e-6*t21166*t309*t14000*t14548;
  t75534 = t14000*t12146*t21971;
  t77626 = t74919 + t75528 + t75534;
  t79121 = 3.e-6*t21166*t6580*t309*t14000;
  t79714 = -1.*t21166*t32702*t14000*t14548;
  t79788 = -3.e-6*t14000*t12146*t21971;
  t79934 = t79121 + t79714 + t79788;
  t80949 = t36739*t14000*t12146;
  t81185 = -1.*t21166*t6580*t14000*t21971;
  t82911 = -3.e-6*t21166*t14000*t14548*t21971;
  t82912 = t80949 + t81185 + t82911;
  t90274 = -1.*t3830*t6580*t12146;
  t90426 = t14000*t14548;
  t90452 = t90274 + t90426;
  t91222 = 3.e-6*t309*t90452;
  t91223 = t30*t21092;
  t91389 = t91222 + t91223;
  t91494 = t32702*t90452;
  t91727 = t91494 + t22376;
  t93270 = 3.e-6*t90452*t21971;
  t93599 = -1.*t21092*t21971;
  t93674 = t93270 + t93599;
  t96032 = t3830*t6580;
  t96258 = -1.*t14000*t12146*t14548;
  t97438 = t96032 + t96258;
  t98079 = t30*t97438;
  t98087 = t51539 + t98079;
  t98402 = t32702*t49374;
  t98446 = 3.e-6*t309*t97438;
  t98559 = t98402 + t98446;
  t99703 = 3.e-6*t49374*t21971;
  t99820 = -1.*t97438*t21971;
  t100088 = t99703 + t99820;
  t104292 = 3.e-6*t3830*t21166*t30;
  t104300 = 3.e-6*t17116*t21971;
  t104301 = -9.e-12*t21092*t21971;
  t104375 = t104292 + t104300 + t104301;
  t104279 = -1.*t3830*t21166*t30;
  t104289 = t104279 + t38673 + t38692;
  t107710 = -1.*t30*t17116;
  t108081 = 3.e-6*t30*t21092;
  t108273 = 1.000000000009*t3830*t21166*t21971;
  t108847 = t107710 + t108081 + t108273;
  t127907 = t6580*t14000*t12146;
  t127911 = t3830*t14548;
  t127923 = t127907 + t127911;
  t127946 = 3.e-6*t21166*t30*t14000;
  t127957 = 3.e-6*t127923*t21971;
  t127966 = -9.e-12*t97438*t21971;
  t127973 = t127946 + t127957 + t127966;
  t127938 = -1.*t21166*t30*t14000;
  t127940 = -1.*t127923*t21971;
  t127943 = 3.e-6*t97438*t21971;
  t127944 = t127938 + t127940 + t127943;
  t127984 = -1.*t30*t127923;
  t127985 = 3.e-6*t30*t97438;
  t127986 = 1.000000000009*t21166*t14000*t21971;
  t127990 = t127984 + t127985 + t127986;
  t128040 = -3.e-6*t23686;
  t128041 = t128040 + t34305;
  t128044 = 3.e-6*t23686;
  t128045 = t128044 + t34305;
  t128055 = -9.e-12*t25561;
  t128092 = t128044 + t30932;
  t128089 = 9.e-12*t25561;
  t128097 = t128040 + t30932;
  t128042 = 0.2*t128041;
  t128046 = 0.1*t128045;
  t128047 = -1.62e-17*t25561;
  t128048 = 3.e-7 + t128042 + t128046 + t128047;
  t128052 = -9.e-7*t128041;
  t128056 = t23686 + t128055;
  t128057 = 0.2*t128056;
  t128058 = 0.1000000000009*t25561;
  t128059 = 9.e-13 + t128052 + t128057 + t128058;
  t128061 = -9.e-7*t128045;
  t128077 = t23895 + t128055;
  t128082 = 0.1*t128077;
  t128086 = 0.2000000000018*t25561;
  t128087 = 9.e-13 + t128061 + t128082 + t128086;
  t130274 = -1.*t21166*t36739*t14000;
  t130275 = t130274 + t127940 + t127943;
  t128090 = t23895 + t128089;
  t130055 = 3.e-6*t309*t127923;
  t130069 = t32702*t97438;
  t130081 = 3.e-6*t21166*t14000*t21971;
  t130272 = t130055 + t130069 + t130081;
  t130277 = t30*t127923;
  t130278 = -1.*t21166*t14000*t21971;
  t130280 = t130277 + t98446 + t130278;
  t128104 = t23686 + t128089;
  t20191 = 0.2000000000018*t309*t17116;
  t21165 = -6.000000000054e-7*t309*t21092;
  t21996 = 0.2000000000018*t3830*t21166*t21971;
  t32679 = t22974*t32403;
  t36532 = t32825*t36494;
  t36627 = t36575*t22974;
  t39159 = t38841*t39128;
  t41692 = t32825*t41678;
  t41775 = t36627 + t39159 + t41692;
  t42761 = 0.2*t41775;
  t42814 = t42774*t32825;
  t42833 = t22974*t42819;
  t42835 = t38841*t41678;
  t43447 = t42814 + t42833 + t42835;
  t43908 = 0.100001*t43447;
  t47727 = t38841*t47329;
  t48153 = t36575*t38841;
  t48347 = t32825*t42819;
  t48577 = t22974*t48451;
  t48612 = t48153 + t48347 + t48577;
  t48835 = -0.3*t48612;
  t48837 = t20191 + t21165 + t21996 + t32679 + t36532 + t42761 + t43908 + t47727 + t48835;
  t57443 = 0.2000000000018*t3830*t21166*t6580*t309;
  t57686 = 6.000000000054e-7*t3830*t21166*t309*t14548;
  t58059 = -0.2000000000018*t3830*t12146*t21971;
  t60132 = t58134*t32403;
  t62268 = t62252*t36494;
  t62269 = t36575*t58134;
  t64447 = t64392*t39128;
  t64805 = t62252*t41678;
  t65349 = t62269 + t64447 + t64805;
  t65497 = 0.2*t65349;
  t65862 = t42774*t62252;
  t67639 = t58134*t42819;
  t68955 = t64392*t41678;
  t68989 = t65862 + t67639 + t68955;
  t69241 = 0.100001*t68989;
  t69245 = t64392*t47329;
  t69286 = t36575*t64392;
  t69291 = t62252*t42819;
  t69295 = t58134*t48451;
  t69297 = t69286 + t69291 + t69295;
  t69353 = -0.3*t69297;
  t69383 = t57443 + t57686 + t58059 + t60132 + t62268 + t65497 + t69241 + t69245 + t69353;
  t69938 = var2[1]*t69383;
  t70593 = 0.2000000000018*t21166*t6580*t309*t14000;
  t71308 = 6.000000000054e-7*t21166*t309*t14000*t14548;
  t74313 = -0.2000000000018*t14000*t12146*t21971;
  t78956 = t77626*t32403;
  t79975 = t79934*t36494;
  t79976 = t36575*t77626;
  t84142 = t82912*t39128;
  t84330 = t79934*t41678;
  t84551 = t79976 + t84142 + t84330;
  t84714 = 0.2*t84551;
  t85748 = t42774*t79934;
  t86231 = t77626*t42819;
  t86289 = t82912*t41678;
  t86388 = t85748 + t86231 + t86289;
  t87579 = 0.100001*t86388;
  t88318 = t82912*t47329;
  t88432 = t36575*t82912;
  t88439 = t79934*t42819;
  t88580 = t77626*t48451;
  t88900 = t88432 + t88439 + t88580;
  t89353 = -0.3*t88900;
  t89466 = t70593 + t71308 + t74313 + t78956 + t79975 + t84714 + t87579 + t88318 + t89353;
  t89508 = var2[2]*t89466;
  t89869 = t69938 + t89508;
  t130327 = t3830*t6580*t30*t12146;
  t130328 = -3.e-6*t3830*t309*t12146*t14548;
  t130329 = t130327 + t130328 + t22885;
  t130331 = 3.e-6*t3830*t6580*t309*t12146;
  t130332 = -1.*t3830*t32702*t12146*t14548;
  t130333 = t130331 + t130332 + t32808;
  t130336 = -1.*t3830*t6580*t12146*t21971;
  t130337 = -3.e-6*t3830*t12146*t14548*t21971;
  t130338 = t38141 + t130336 + t130337;
  t50933 = -0.2000000000018*t21166*t14000*t21971;
  t130361 = -1.*t6580*t30*t14000*t12146;
  t130362 = 3.e-6*t309*t14000*t12146*t14548;
  t130363 = t130361 + t130362 + t51417;
  t130365 = -3.e-6*t6580*t309*t14000*t12146;
  t130366 = t32702*t14000*t12146*t14548;
  t130367 = t130365 + t130366 + t51658;
  t130370 = t6580*t14000*t12146*t21971;
  t130372 = 3.e-6*t14000*t12146*t14548*t21971;
  t130374 = t51993 + t130370 + t130372;
  t130555 = -1.*t21166*t6580*t30;
  t130564 = 3.e-6*t21166*t309*t14548;
  t130570 = -1.*t12146*t21971;
  t130571 = t130555 + t130564 + t130570;
  t130573 = -3.e-6*t21166*t6580*t309;
  t130574 = t21166*t32702*t14548;
  t130575 = 3.e-6*t12146*t21971;
  t130576 = t130573 + t130574 + t130575;
  t130580 = -1.*t36739*t12146;
  t130581 = t21166*t6580*t21971;
  t130582 = 3.e-6*t21166*t14548*t21971;
  t130583 = t130580 + t130581 + t130582;
  t130604 = t3830*t21166*t30*t14548;
  t130605 = t60243 + t130604;
  t130607 = t3830*t21166*t6580*t32702;
  t130608 = 3.e-6*t3830*t21166*t309*t14548;
  t130609 = t130607 + t130608;
  t130612 = 3.e-6*t3830*t21166*t6580*t21971;
  t130615 = -1.*t3830*t21166*t14548*t21971;
  t130619 = t130612 + t130615;
  t130641 = -3.e-6*t21166*t6580*t309*t14000;
  t130645 = -1.*t21166*t30*t14000*t14548;
  t130649 = t130641 + t130645;
  t130655 = -1.*t21166*t6580*t32702*t14000;
  t130656 = t130655 + t75528;
  t130659 = -3.e-6*t21166*t6580*t14000*t21971;
  t130660 = t21166*t14000*t14548*t21971;
  t130661 = t130659 + t130660;
  t130692 = 3.e-6*t6580*t309*t12146;
  t130693 = t30*t12146*t14548;
  t130694 = t130692 + t130693;
  t130696 = t6580*t32702*t12146;
  t130697 = 3.e-6*t309*t12146*t14548;
  t130698 = t130696 + t130697;
  t130702 = 3.e-6*t6580*t12146*t21971;
  t130703 = -1.*t12146*t14548*t21971;
  t130704 = t130702 + t130703;
  t131075 = 3.e-6*t3830*t30*t12146;
  t131076 = -3.e-6*t3830*t21166*t6580*t21971;
  t131077 = -9.e-12*t3830*t21166*t14548*t21971;
  t131078 = t131075 + t131076 + t131077;
  t131070 = -1.*t3830*t30*t12146;
  t131071 = t3830*t21166*t6580*t21971;
  t131072 = 3.e-6*t3830*t21166*t14548*t21971;
  t131073 = t131070 + t131071 + t131072;
  t131082 = 3.e-6*t3830*t21166*t30*t14548;
  t131083 = 1.000000000009*t3830*t12146*t21971;
  t131085 = t58066 + t131082 + t131083;
  t131138 = -3.e-6*t30*t14000*t12146;
  t131139 = 3.e-6*t21166*t6580*t14000*t21971;
  t131140 = 9.e-12*t21166*t14000*t14548*t21971;
  t131142 = t131138 + t131139 + t131140;
  t131135 = t30*t14000*t12146;
  t131136 = t131135 + t81185 + t82911;
  t131146 = -1.*t21166*t6580*t30*t14000;
  t131151 = -3.e-6*t21166*t30*t14000*t14548;
  t131153 = -1.000000000009*t14000*t12146*t21971;
  t131156 = t131146 + t131151 + t131153;
  t131188 = -3.e-6*t21166*t30;
  t131189 = -3.e-6*t6580*t12146*t21971;
  t131190 = -9.e-12*t12146*t14548*t21971;
  t131191 = t131188 + t131189 + t131190;
  t131183 = t21166*t30;
  t131184 = t6580*t12146*t21971;
  t131185 = 3.e-6*t12146*t14548*t21971;
  t131186 = t131183 + t131184 + t131185;
  t131195 = t6580*t30*t12146;
  t131196 = 3.e-6*t30*t12146*t14548;
  t131197 = -1.000000000009*t21166*t21971;
  t131198 = t131195 + t131196 + t131197;
  t131221 = -1.*t3830*t36739*t12146;
  t131222 = t131221 + t131071 + t131072;
  t131216 = -3.e-6*t3830*t21166*t6580*t309;
  t131217 = t3830*t21166*t32702*t14548;
  t131218 = 3.e-6*t3830*t12146*t21971;
  t131219 = t131216 + t131217 + t131218;
  t131224 = -1.*t3830*t21166*t6580*t30;
  t131225 = -1.*t3830*t12146*t21971;
  t131226 = t131224 + t130608 + t131225;
  t131273 = -1.*t6580*t30*t12146;
  t131274 = t21166*t21971;
  t131275 = t131273 + t130697 + t131274;
  t131270 = t21166*t36739;
  t131271 = t131270 + t131184 + t131185;
  t131265 = -3.e-6*t6580*t309*t12146;
  t131266 = t32702*t12146*t14548;
  t131267 = -3.e-6*t21166*t21971;
  t131268 = t131265 + t131266 + t131267;
  t90588 = -6.000000000054e-7*t309*t90452;
  t90950 = 0.2000000000018*t309*t21092;
  t91458 = t91389*t32403;
  t91840 = t91727*t36494;
  t92328 = t36575*t91389;
  t93688 = t93674*t39128;
  t93813 = t91727*t41678;
  t93898 = t92328 + t93688 + t93813;
  t94332 = 0.2*t93898;
  t94997 = t42774*t91727;
  t95155 = t91389*t42819;
  t95859 = t93674*t41678;
  t95865 = t94997 + t95155 + t95859;
  t95873 = 0.100001*t95865;
  t95914 = t93674*t47329;
  t95920 = t36575*t93674;
  t95964 = t91727*t42819;
  t95975 = t91389*t48451;
  t95998 = t95920 + t95964 + t95975;
  t96015 = -0.3*t95998;
  t96016 = t90588 + t90950 + t91458 + t91840 + t94332 + t95873 + t95914 + t96015;
  t96029 = var2[1]*t96016;
  t96030 = -6.000000000054e-7*t309*t49374;
  t97677 = 0.2000000000018*t309*t97438;
  t98302 = t98087*t32403;
  t98564 = t98559*t36494;
  t99089 = t36575*t98087;
  t100333 = t100088*t39128;
  t100404 = t98559*t41678;
  t100424 = t99089 + t100333 + t100404;
  t100489 = 0.2*t100424;
  t100636 = t42774*t98559;
  t100742 = t98087*t42819;
  t100748 = t100088*t41678;
  t100750 = t100636 + t100742 + t100748;
  t100751 = 0.100001*t100750;
  t100753 = t100088*t47329;
  t100754 = t36575*t100088;
  t100756 = t98559*t42819;
  t100757 = t98087*t48451;
  t100878 = t100754 + t100756 + t100757;
  t101958 = -0.3*t100878;
  t102505 = t96030 + t97677 + t98302 + t98564 + t100489 + t100751 + t100753 + t101958;
  t103102 = var2[2]*t102505;
  t103857 = t96029 + t103102;
  t130602 = -6.000000000054e-7*t3830*t21166*t6580*t309;
  t130603 = 0.2000000000018*t3830*t21166*t309*t14548;
  t130606 = t130605*t32403;
  t130610 = t130609*t36494;
  t130611 = t36575*t130605;
  t130622 = t130619*t39128;
  t130623 = t130609*t41678;
  t130624 = t130611 + t130622 + t130623;
  t130625 = 0.2*t130624;
  t130626 = t42774*t130609;
  t130627 = t130605*t42819;
  t130628 = t130619*t41678;
  t130629 = t130626 + t130627 + t130628;
  t130630 = 0.100001*t130629;
  t130631 = t130619*t47329;
  t130632 = t36575*t130619;
  t130633 = t130609*t42819;
  t130634 = t130605*t48451;
  t130635 = t130632 + t130633 + t130634;
  t130636 = -0.3*t130635;
  t130637 = t130602 + t130603 + t130606 + t130610 + t130625 + t130630 + t130631 + t130636;
  t130638 = var2[2]*t130637;
  t130639 = 6.000000000054e-7*t21166*t6580*t309*t14000;
  t130640 = -0.2000000000018*t21166*t309*t14000*t14548;
  t130654 = t130649*t32403;
  t130657 = t130656*t36494;
  t130658 = t36575*t130649;
  t130662 = t130661*t39128;
  t130663 = t130656*t41678;
  t130664 = t130658 + t130662 + t130663;
  t130665 = 0.2*t130664;
  t130666 = t42774*t130656;
  t130667 = t130649*t42819;
  t130668 = t130661*t41678;
  t130669 = t130666 + t130667 + t130668;
  t130671 = 0.100001*t130669;
  t130672 = t130661*t47329;
  t130673 = t36575*t130661;
  t130674 = t130656*t42819;
  t130675 = t130649*t48451;
  t130679 = t130673 + t130674 + t130675;
  t130681 = -0.3*t130679;
  t130688 = t130639 + t130640 + t130654 + t130657 + t130665 + t130671 + t130672 + t130681;
  t130689 = var2[1]*t130688;
  t130690 = -6.000000000054e-7*t6580*t309*t12146;
  t130691 = 0.2000000000018*t309*t12146*t14548;
  t130695 = t130694*t32403;
  t130699 = t130698*t36494;
  t130701 = t36575*t130694;
  t130705 = t130704*t39128;
  t130706 = t130698*t41678;
  t130707 = t130701 + t130705 + t130706;
  t131016 = 0.2*t130707;
  t131017 = t42774*t130698;
  t131019 = t130694*t42819;
  t131054 = t130704*t41678;
  t131055 = t131017 + t131019 + t131054;
  t131056 = 0.100001*t131055;
  t131057 = t130704*t47329;
  t131058 = t36575*t130704;
  t131059 = t130698*t42819;
  t131060 = t130694*t48451;
  t131061 = t131058 + t131059 + t131060;
  t131062 = -0.3*t131061;
  t131063 = t130690 + t130691 + t130695 + t130699 + t131016 + t131056 + t131057 + t131062;
  t131064 = var2[0]*t131063;
  t131065 = t130638 + t130689 + t131064;
  t130395 = -0.2000000000018*t21166*t6580*t309;
  t130396 = -6.000000000054e-7*t21166*t309*t14548;
  t131342 = t130555 + t130564;
  t131344 = t130573 + t130574;
  t131347 = t130581 + t130582;
  t131368 = t22260 + t22376;
  t131372 = t32682 + t32708;
  t131375 = t38673 + t38692;
  t49548 = 0.2000000000018*t309*t49374;
  t50696 = -6.000000000054e-7*t309*t50672;
  t131396 = t51071 + t51152;
  t131398 = t51539 + t51574;
  t131401 = t52143 + t52186;
  t131428 = 9.e-12*t21166*t6580*t21971;
  t131429 = -3.e-6*t21166*t14548*t21971;
  t131430 = t131428 + t131429;
  t131424 = -3.e-6*t21166*t6580*t21971;
  t131425 = t21166*t14548*t21971;
  t131426 = t131424 + t131425;
  t131444 = -3.e-6*t21166*t6580*t30;
  t131446 = t21166*t30*t14548;
  t131453 = t131444 + t131446;
  t131521 = t6580*t14000;
  t131523 = t3830*t12146*t14548;
  t131524 = t131521 + t131523;
  t131553 = -9.e-12*t17116*t21971;
  t131554 = 3.e-6*t131524*t21971;
  t131556 = t131553 + t131554;
  t131545 = -1.*t131524*t21971;
  t131546 = t104300 + t131545;
  t131582 = 3.e-6*t30*t17116;
  t131583 = -1.*t30*t131524;
  t131585 = t131582 + t131583;
  t131628 = -9.e-12*t49374*t21971;
  t131630 = t131628 + t127943;
  t131635 = 3.e-6*t30*t49374;
  t131636 = -1.*t30*t97438;
  t131644 = t131635 + t131636;
  t131768 = -1.*t21166*t30*t14548;
  t131769 = t130573 + t131768;
  t131763 = -1.*t21166*t6580*t32702;
  t131764 = -3.e-6*t21166*t309*t14548;
  t131765 = t131763 + t131764;
  t131795 = t30*t131524;
  t131796 = t32682 + t131795;
  t131790 = t32702*t17116;
  t131791 = 3.e-6*t309*t131524;
  t131792 = t131790 + t131791;
  t131490 = t36575*t131426;
  t131591 = t36575*t131546;
  t104072 = 0.2000000000018*t3830*t21166*t30;
  t104073 = 0.2000000000018*t17116*t21971;
  t104113 = -6.000000000054e-7*t21092*t21971;
  t104290 = t104289*t32403;
  t104868 = t104375*t36494;
  t107177 = t42774*t104375;
  t107542 = t104289*t42819;
  t109598 = t108847*t41678;
  t113733 = t107177 + t107542 + t109598;
  t123881 = 0.100001*t113733;
  t126983 = t36575*t104289;
  t127865 = t108847*t39128;
  t127867 = t104375*t41678;
  t127878 = t126983 + t127865 + t127867;
  t127879 = 0.2*t127878;
  t127881 = t108847*t47329;
  t127882 = t36575*t108847;
  t127888 = t104375*t42819;
  t127892 = t104289*t48451;
  t127895 = t127882 + t127888 + t127892;
  t127899 = -0.3*t127895;
  t127900 = t104072 + t104073 + t104113 + t104290 + t104868 + t123881 + t127879 + t127881 + t127899;
  t127902 = var2[1]*t127900;
  t127904 = 0.2000000000018*t21166*t30*t14000;
  t127924 = 0.2000000000018*t127923*t21971;
  t127932 = -6.000000000054e-7*t97438*t21971;
  t127945 = t127944*t32403;
  t127975 = t127973*t36494;
  t127979 = t42774*t127973;
  t127983 = t127944*t42819;
  t127994 = t127990*t41678;
  t127995 = t127979 + t127983 + t127994;
  t127996 = 0.100001*t127995;
  t127998 = t36575*t127944;
  t127999 = t127990*t39128;
  t128000 = t127973*t41678;
  t128002 = t127998 + t127999 + t128000;
  t128005 = 0.2*t128002;
  t128006 = t127990*t47329;
  t128007 = t36575*t127990;
  t128013 = t127973*t42819;
  t128018 = t127944*t48451;
  t128023 = t128007 + t128013 + t128018;
  t128030 = -0.3*t128023;
  t128037 = t127904 + t127924 + t127932 + t127945 + t127975 + t127996 + t128005 + t128006 + t128030;
  t128038 = var2[2]*t128037;
  t128039 = t127902 + t128038;
  t131066 = 0.2000000000018*t3830*t30*t12146;
  t131068 = -0.2000000000018*t3830*t21166*t6580*t21971;
  t131069 = -6.000000000054e-7*t3830*t21166*t14548*t21971;
  t131074 = t131073*t32403;
  t131079 = t131078*t36494;
  t131080 = t42774*t131078;
  t131081 = t131073*t42819;
  t131086 = t131085*t41678;
  t131087 = t131080 + t131081 + t131086;
  t131088 = 0.100001*t131087;
  t131089 = t36575*t131073;
  t131090 = t131085*t39128;
  t131091 = t131078*t41678;
  t131092 = t131089 + t131090 + t131091;
  t131093 = 0.2*t131092;
  t131094 = t131085*t47329;
  t131095 = t36575*t131085;
  t131096 = t131078*t42819;
  t131105 = t131073*t48451;
  t131116 = t131095 + t131096 + t131105;
  t131125 = -0.3*t131116;
  t131130 = t131066 + t131068 + t131069 + t131074 + t131079 + t131088 + t131093 + t131094 + t131125;
  t131131 = var2[2]*t131130;
  t131132 = -0.2000000000018*t30*t14000*t12146;
  t131133 = 0.2000000000018*t21166*t6580*t14000*t21971;
  t131134 = 6.000000000054e-7*t21166*t14000*t14548*t21971;
  t131137 = t131136*t32403;
  t131143 = t131142*t36494;
  t131144 = t42774*t131142;
  t131145 = t131136*t42819;
  t131159 = t131156*t41678;
  t131161 = t131144 + t131145 + t131159;
  t131162 = 0.100001*t131161;
  t131164 = t36575*t131136;
  t131165 = t131156*t39128;
  t131166 = t131142*t41678;
  t131167 = t131164 + t131165 + t131166;
  t131168 = 0.2*t131167;
  t131169 = t131156*t47329;
  t131170 = t36575*t131156;
  t131171 = t131142*t42819;
  t131173 = t131136*t48451;
  t131174 = t131170 + t131171 + t131173;
  t131175 = -0.3*t131174;
  t131176 = t131132 + t131133 + t131134 + t131137 + t131143 + t131162 + t131168 + t131169 + t131175;
  t131177 = var2[1]*t131176;
  t131178 = -0.2000000000018*t21166*t30;
  t131181 = -0.2000000000018*t6580*t12146*t21971;
  t131182 = -6.000000000054e-7*t12146*t14548*t21971;
  t131187 = t131186*t32403;
  t131192 = t131191*t36494;
  t131193 = t42774*t131191;
  t131194 = t131186*t42819;
  t131199 = t131198*t41678;
  t131200 = t131193 + t131194 + t131199;
  t131201 = 0.100001*t131200;
  t131202 = t36575*t131186;
  t131203 = t131198*t39128;
  t131204 = t131191*t41678;
  t131205 = t131202 + t131203 + t131204;
  t131206 = 0.2*t131205;
  t131207 = t131198*t47329;
  t131208 = t36575*t131198;
  t131209 = t131191*t42819;
  t131210 = t131186*t48451;
  t131211 = t131208 + t131209 + t131210;
  t131212 = -0.3*t131211;
  t131213 = t131178 + t131181 + t131182 + t131187 + t131192 + t131201 + t131206 + t131207 + t131212;
  t131214 = var2[0]*t131213;
  t131215 = t131131 + t131177 + t131214;
  t131422 = 6.000000000054e-7*t21166*t6580*t21971;
  t131423 = -0.2000000000018*t21166*t14548*t21971;
  t131427 = t131426*t32403;
  t131431 = t131430*t36494;
  t131442 = t42774*t131430;
  t131443 = t131426*t42819;
  t131459 = t131453*t41678;
  t131476 = t131442 + t131443 + t131459;
  t131485 = 0.100001*t131476;
  t131491 = t131453*t39128;
  t131492 = t131430*t41678;
  t131497 = t131490 + t131491 + t131492;
  t131498 = 0.2*t131497;
  t131501 = t131453*t47329;
  t131502 = t36575*t131453;
  t131505 = t131430*t42819;
  t131507 = t131426*t48451;
  t131508 = t131502 + t131505 + t131507;
  t131509 = -0.3*t131508;
  t131516 = t131422 + t131423 + t131427 + t131431 + t131485 + t131498 + t131501 + t131509;
  t131519 = var2[0]*t131516;
  t131520 = -6.000000000054e-7*t17116*t21971;
  t131541 = 0.2000000000018*t131524*t21971;
  t131550 = t131546*t32403;
  t131560 = t131556*t36494;
  t131562 = t42774*t131556;
  t131570 = t131546*t42819;
  t131586 = t131585*t41678;
  t131587 = t131562 + t131570 + t131586;
  t131589 = 0.100001*t131587;
  t131592 = t131585*t39128;
  t131593 = t131556*t41678;
  t131595 = t131591 + t131592 + t131593;
  t131597 = 0.2*t131595;
  t131600 = t131585*t47329;
  t131601 = t36575*t131585;
  t131604 = t131556*t42819;
  t131605 = t131546*t48451;
  t131610 = t131601 + t131604 + t131605;
  t131613 = -0.3*t131610;
  t131614 = t131520 + t131541 + t131550 + t131560 + t131589 + t131597 + t131600 + t131613;
  t131616 = var2[2]*t131614;
  t131622 = -6.000000000054e-7*t49374*t21971;
  t131626 = 0.2000000000018*t97438*t21971;
  t131627 = t100088*t32403;
  t131631 = t131630*t36494;
  t131632 = t42774*t131630;
  t131633 = t100088*t42819;
  t131653 = t131644*t41678;
  t131654 = t131632 + t131633 + t131653;
  t131655 = 0.100001*t131654;
  t131662 = t131644*t39128;
  t131687 = t131630*t41678;
  t131688 = t100754 + t131662 + t131687;
  t131689 = 0.2*t131688;
  t131690 = t131644*t47329;
  t131693 = t36575*t131644;
  t131694 = t131630*t42819;
  t131696 = t100088*t48451;
  t131697 = t131693 + t131694 + t131696;
  t131698 = -0.3*t131697;
  t131757 = t131622 + t131626 + t131627 + t131631 + t131655 + t131689 + t131690 + t131698;
  t131759 = var2[1]*t131757;
  t131762 = t131519 + t131616 + t131759;
  t132491 = -1.*t30*t90452;
  t132492 = 3.e-6*t30*t131524;
  t132495 = t132491 + t132492 + t22885;
  t132501 = 3.e-6*t30*t90452;
  t132502 = -9.e-12*t30*t131524;
  t132503 = t132501 + t132502 + t32808;
  t132509 = -1.000000000009*t3830*t21166*t30;
  t132511 = t90452*t21971;
  t132512 = -3.e-6*t131524*t21971;
  t132513 = t132509 + t132511 + t132512;
  t132551 = t127984 + t127985 + t51417;
  t132557 = 3.e-6*t30*t127923;
  t132559 = -9.e-12*t30*t97438;
  t132565 = t132557 + t132559 + t51658;
  t132568 = 1.000000000009*t21166*t30*t14000;
  t133093 = t127923*t21971;
  t133108 = -3.e-6*t97438*t21971;
  t133129 = t132568 + t133093 + t133108;
  t130402 = 0.2000000000018*t12146*t21971;
  t133239 = -3.e-6*t21166*t30*t14548;
  t133245 = t130555 + t133239 + t130570;
  t133249 = 3.e-6*t21166*t6580*t30;
  t133251 = 9.e-12*t21166*t30*t14548;
  t133253 = t133249 + t133251 + t130575;
  t133261 = -1.000000000009*t30*t12146;
  t133271 = t133261 + t130581 + t130582;
  t133395 = t30*t12146;
  t133397 = -1.*t21166*t6580*t21971;
  t133399 = t133395 + t133397 + t131429;
  t133374 = -3.e-6*t30*t12146;
  t133375 = 3.e-6*t21166*t6580*t21971;
  t133376 = 9.e-12*t21166*t14548*t21971;
  t133380 = t133374 + t133375 + t133376;
  t133390 = -1.000000000009*t12146*t21971;
  t133392 = t130555 + t133239 + t133390;
  t133473 = t3830*t21166*t30;
  t133474 = -1.*t90452*t21971;
  t133477 = t133473 + t133474 + t131554;
  t133452 = -3.e-6*t3830*t21166*t30;
  t133454 = -9.e-12*t131524*t21971;
  t133455 = t133452 + t93270 + t133454;
  t133459 = -1.000000000009*t3830*t21166*t21971;
  t133460 = t132491 + t132492 + t133459;
  t128049 = t32825*t128048;
  t128060 = t38841*t128059;
  t128088 = t22974*t128087;
  t128091 = t38841*t128090;
  t128093 = t32825*t128092;
  t128094 = -1.000000000009*t22974*t25561;
  t128095 = t128091 + t128093 + t128094;
  t128096 = 0.2*t128095;
  t128098 = t22974*t128097;
  t128099 = t38841*t128092;
  t128101 = -1.8e-11*t32825*t25561;
  t128102 = t128098 + t128099 + t128101;
  t128103 = 0.100001*t128102;
  t128105 = t22974*t128104;
  t129562 = t32825*t128097;
  t129625 = -1.000000000009*t38841*t25561;
  t129931 = t128105 + t129562 + t129625;
  t130035 = -0.3*t129931;
  t130052 = t128049 + t128060 + t128088 + t128096 + t128103 + t130035;
  t130053 = var2[1]*t130052;
  t130273 = t130272*t128048;
  t130276 = t130275*t128059;
  t130281 = t130280*t128087;
  t130282 = t130275*t128090;
  t130283 = t130272*t128092;
  t130284 = -1.000000000009*t130280*t25561;
  t130285 = t130282 + t130283 + t130284;
  t130286 = 0.2*t130285;
  t130287 = t130280*t128097;
  t130288 = t130275*t128092;
  t130289 = -1.8e-11*t130272*t25561;
  t130290 = t130287 + t130288 + t130289;
  t130291 = 0.100001*t130290;
  t130292 = t130280*t128104;
  t130293 = t130272*t128097;
  t130294 = -1.000000000009*t130275*t25561;
  t130295 = t130292 + t130293 + t130294;
  t130296 = -0.3*t130295;
  t130297 = t130273 + t130276 + t130281 + t130286 + t130291 + t130296;
  t130298 = var2[2]*t130297;
  t130299 = t130053 + t130298;
  t131220 = t131219*t128048;
  t131223 = t131222*t128059;
  t131227 = t131226*t128087;
  t131228 = t131222*t128090;
  t131229 = t131219*t128092;
  t131230 = -1.000000000009*t131226*t25561;
  t131231 = t131228 + t131229 + t131230;
  t131232 = 0.2*t131231;
  t131233 = t131226*t128097;
  t131234 = t131222*t128092;
  t131235 = -1.8e-11*t131219*t25561;
  t131236 = t131233 + t131234 + t131235;
  t131237 = 0.100001*t131236;
  t131238 = t131226*t128104;
  t131239 = t131219*t128097;
  t131240 = -1.000000000009*t131222*t25561;
  t131241 = t131238 + t131239 + t131240;
  t131242 = -0.3*t131241;
  t131243 = t131220 + t131223 + t131227 + t131232 + t131237 + t131242;
  t131244 = var2[2]*t131243;
  t131245 = t79934*t128048;
  t131246 = t82912*t128059;
  t131247 = t77626*t128087;
  t131248 = t77626*t128097;
  t131249 = t82912*t128092;
  t131250 = -1.8e-11*t79934*t25561;
  t131251 = t131248 + t131249 + t131250;
  t131252 = 0.100001*t131251;
  t131253 = t82912*t128090;
  t131254 = t79934*t128092;
  t131255 = -1.000000000009*t77626*t25561;
  t131256 = t131253 + t131254 + t131255;
  t131257 = 0.2*t131256;
  t131258 = t77626*t128104;
  t131259 = t79934*t128097;
  t131260 = -1.000000000009*t82912*t25561;
  t131261 = t131258 + t131259 + t131260;
  t131262 = -0.3*t131261;
  t131263 = t131245 + t131246 + t131247 + t131252 + t131257 + t131262;
  t131264 = var2[1]*t131263;
  t131269 = t131268*t128048;
  t131272 = t131271*t128059;
  t131276 = t131275*t128087;
  t131277 = t131275*t128097;
  t131278 = t131271*t128092;
  t131279 = -1.8e-11*t131268*t25561;
  t131280 = t131277 + t131278 + t131279;
  t131281 = 0.100001*t131280;
  t131282 = t131271*t128090;
  t131283 = t131268*t128092;
  t131284 = -1.000000000009*t131275*t25561;
  t131285 = t131282 + t131283 + t131284;
  t131286 = 0.2*t131285;
  t131287 = t131275*t128104;
  t131288 = t131268*t128097;
  t131289 = -1.000000000009*t131271*t25561;
  t131290 = t131287 + t131288 + t131289;
  t131291 = -0.3*t131290;
  t131292 = t131269 + t131272 + t131276 + t131281 + t131286 + t131291;
  t131293 = var2[0]*t131292;
  t131294 = t131244 + t131264 + t131293;
  t131766 = t131765*t128048;
  t131767 = t131426*t128059;
  t131770 = t131769*t128087;
  t131772 = t131769*t128097;
  t131773 = t131426*t128092;
  t131774 = -1.8e-11*t131765*t25561;
  t131775 = t131772 + t131773 + t131774;
  t131776 = 0.100001*t131775;
  t131777 = t131426*t128090;
  t131778 = t131765*t128092;
  t131779 = -1.000000000009*t131769*t25561;
  t131780 = t131777 + t131778 + t131779;
  t131781 = 0.2*t131780;
  t131782 = t131769*t128104;
  t131783 = t131765*t128097;
  t131784 = -1.000000000009*t131426*t25561;
  t131785 = t131782 + t131783 + t131784;
  t131786 = -0.3*t131785;
  t131787 = t131766 + t131767 + t131770 + t131776 + t131781 + t131786;
  t131788 = var2[0]*t131787;
  t131793 = t131792*t128048;
  t131794 = t131546*t128059;
  t131797 = t131796*t128087;
  t131798 = t131796*t128097;
  t131799 = t131546*t128092;
  t131800 = -1.8e-11*t131792*t25561;
  t131801 = t131798 + t131799 + t131800;
  t131802 = 0.100001*t131801;
  t131803 = t131546*t128090;
  t131804 = t131792*t128092;
  t131805 = -1.000000000009*t131796*t25561;
  t131808 = t131803 + t131804 + t131805;
  t131809 = 0.2*t131808;
  t131810 = t131796*t128104;
  t131811 = t131792*t128097;
  t131812 = -1.000000000009*t131546*t25561;
  t131813 = t131810 + t131811 + t131812;
  t131814 = -0.3*t131813;
  t131815 = t131793 + t131794 + t131797 + t131802 + t131809 + t131814;
  t131816 = var2[2]*t131815;
  t131817 = t98559*t128048;
  t131818 = t100088*t128059;
  t131819 = t98087*t128087;
  t131820 = t98087*t128097;
  t131821 = t100088*t128092;
  t131822 = -1.8e-11*t98559*t25561;
  t131823 = t131820 + t131821 + t131822;
  t131824 = 0.100001*t131823;
  t131826 = t100088*t128090;
  t131827 = t98559*t128092;
  t131828 = -1.000000000009*t98087*t25561;
  t131829 = t131826 + t131827 + t131828;
  t131830 = 0.2*t131829;
  t131831 = t98087*t128104;
  t131832 = t98559*t128097;
  t131833 = -1.000000000009*t100088*t25561;
  t131834 = t131831 + t131832 + t131833;
  t131835 = -0.3*t131834;
  t131836 = t131817 + t131818 + t131819 + t131824 + t131830 + t131835;
  t131837 = var2[1]*t131836;
  t131838 = t131788 + t131816 + t131837;
  t133388 = t133380*t128048;
  t133394 = t133392*t128059;
  t133401 = t133399*t128087;
  t133402 = t133399*t128104;
  t133403 = t133380*t128097;
  t133404 = -1.000000000009*t133392*t25561;
  t133407 = t133402 + t133403 + t133404;
  t133409 = -0.3*t133407;
  t133415 = t133392*t128090;
  t133420 = t133380*t128092;
  t133425 = -1.000000000009*t133399*t25561;
  t133426 = t133415 + t133420 + t133425;
  t133432 = 0.2*t133426;
  t133433 = t133399*t128097;
  t133437 = t133392*t128092;
  t133438 = -1.8e-11*t133380*t25561;
  t133441 = t133433 + t133437 + t133438;
  t133445 = 0.100001*t133441;
  t133448 = t133388 + t133394 + t133401 + t133409 + t133432 + t133445;
  t133449 = var2[0]*t133448;
  t133457 = t133455*t128048;
  t133462 = t133460*t128059;
  t133478 = t133477*t128087;
  t133480 = t133477*t128104;
  t133481 = t133455*t128097;
  t133485 = -1.000000000009*t133460*t25561;
  t133490 = t133480 + t133481 + t133485;
  t133491 = -0.3*t133490;
  t133493 = t133477*t128097;
  t133495 = t133460*t128092;
  t133497 = -1.8e-11*t133455*t25561;
  t133498 = t133493 + t133495 + t133497;
  t133499 = 0.100001*t133498;
  t133506 = t133460*t128090;
  t133507 = t133455*t128092;
  t133509 = -1.000000000009*t133477*t25561;
  t133511 = t133506 + t133507 + t133509;
  t133513 = 0.2*t133511;
  t133514 = t133457 + t133462 + t133478 + t133491 + t133499 + t133513;
  t133515 = var2[2]*t133514;
  t133520 = t127973*t128048;
  t133522 = t127990*t128059;
  t133528 = t127944*t128087;
  t133529 = t127944*t128104;
  t133533 = t127973*t128097;
  t133534 = -1.000000000009*t127990*t25561;
  t133538 = t133529 + t133533 + t133534;
  t133539 = -0.3*t133538;
  t133540 = t127944*t128097;
  t133541 = t127990*t128092;
  t133545 = -1.8e-11*t127973*t25561;
  t133546 = t133540 + t133541 + t133545;
  t133547 = 0.100001*t133546;
  t133548 = t127990*t128090;
  t133549 = t127973*t128092;
  t133550 = -1.000000000009*t127944*t25561;
  t134014 = t133548 + t133549 + t133550;
  t134050 = 0.2*t134014;
  t134071 = t133520 + t133522 + t133528 + t133539 + t133547 + t134050;
  t134092 = var2[1]*t134071;
  t134093 = t133449 + t133515 + t134092;
  t134269 = t36739*t12146;
  t134271 = t134269 + t133397 + t131429;
  t134294 = 3.e-6*t21166*t6580*t309;
  t134299 = -1.*t21166*t32702*t14548;
  t134319 = -3.e-6*t12146*t21971;
  t134330 = t134294 + t134299 + t134319;
  t134341 = t21166*t6580*t30;
  t134346 = t12146*t21971;
  t134354 = t134341 + t131764 + t134346;
  t134273 = -9.e-12*t23686;
  t134361 = 9.e-12*t23686;
  t134272 = 0.1000000000009*t23686;
  t134275 = t134273 + t25611;
  t134277 = 0.2*t134275;
  t134278 = -9.e-7*t128097;
  t134280 = t134272 + t134277 + t134278;
  t134331 = -1.62e-17*t23686;
  t134332 = 0.1*t128041;
  t134335 = 0.2*t128097;
  t134336 = t134331 + t134332 + t134335;
  t134484 = t3830*t21166*t36739;
  t134491 = t134484 + t133474 + t131554;
  t134381 = t134361 + t25611;
  t134493 = t32702*t131524;
  t134501 = -3.e-6*t3830*t21166*t21971;
  t134504 = t91222 + t134493 + t134501;
  t134513 = t30*t90452;
  t134514 = t3830*t21166*t21971;
  t134518 = t134513 + t131791 + t134514;
  t134436 = 0.2000000000018*t23686;
  t134447 = t134273 + t25561;
  t134459 = 0.1*t134447;
  t134461 = t134436 + t128052 + t134459;
  t134466 = t134361 + t25561;
  t134399 = t134330*t128092;
  t134523 = t134504*t128092;
  p_output1[0]=1.;
  p_output1[1]=1.;
  p_output1[2]=1.;
  p_output1[3]=(t49548 + t50696 + t50933 + t32403*t51423 + t36494*t51660 + t47329*t52379 - 0.3*(t48451*t51423 + t42819*t51660 + t36575*t52379) + 0.2*(t36575*t51423 + t41678*t51660 + t39128*t52379) + 0.100001*(t42819*t51423 + t42774*t51660 + t41678*t52379))*var2[1] + t48837*var2[2];
  p_output1[4]=t89869;
  p_output1[5]=t103857;
  p_output1[6]=t128039;
  p_output1[7]=t130299;
  p_output1[8]=t48837;
  p_output1[9]=0.2000000000018*t14000*t21166*t21971 + 0.2000000000018*t127923*t309 + t130280*t32403 + t130272*t36494 + 0.2*(t130280*t36575 + t130275*t39128 + t130272*t41678) + 0.100001*(t130275*t41678 + t130272*t42774 + t130280*t42819) + t130275*t47329 - 0.3*(t130275*t36575 + t130272*t42819 + t130280*t48451) - 6.000000000054e-7*t309*t97438;
  p_output1[10]=t89869;
  p_output1[11]=(t130395 + t130396 + t130402 + t130571*t32403 + t130576*t36494 + 0.2*(t130571*t36575 + t130583*t39128 + t130576*t41678) + 0.100001*(t130583*t41678 + t130576*t42774 + t130571*t42819) + t130583*t47329 - 0.3*(t130583*t36575 + t130576*t42819 + t130571*t48451))*var2[0] + (-6.000000000054e-7*t12146*t14000*t14548*t309 + t130363*t32403 + t130367*t36494 + 0.2*(t130363*t36575 + t130374*t39128 + t130367*t41678) + 0.100001*(t130374*t41678 + t130367*t42774 + t130363*t42819) + t130374*t47329 - 0.3*(t130374*t36575 + t130367*t42819 + t130363*t48451) + t50933 - 0.2000000000018*t12146*t14000*t309*t6580)*var2[1] + (t21996 + t130329*t32403 + t130333*t36494 + 6.000000000054e-7*t12146*t14548*t309*t3830 + 0.2*(t130329*t36575 + t130338*t39128 + t130333*t41678) + 0.100001*(t130338*t41678 + t130333*t42774 + t130329*t42819) + t130338*t47329 - 0.3*(t130338*t36575 + t130333*t42819 + t130329*t48451) + 0.2000000000018*t12146*t309*t3830*t6580)*var2[2];
  p_output1[12]=t131065;
  p_output1[13]=t131215;
  p_output1[14]=t131294;
  p_output1[15]=-0.2000000000018*t21166*t21971 - 6.000000000054e-7*t12146*t14548*t309 + t131275*t32403 + t131268*t36494 + 0.2*(t131275*t36575 + t131271*t39128 + t131268*t41678) + 0.100001*(t131271*t41678 + t131268*t42774 + t131275*t42819) + t131271*t47329 - 0.3*(t131271*t36575 + t131268*t42819 + t131275*t48451) - 0.2000000000018*t12146*t309*t6580;
  p_output1[16]=t89466;
  p_output1[17]=t131226*t32403 + t131219*t36494 + 0.2000000000018*t12146*t21971*t3830 - 6.000000000054e-7*t14548*t21166*t309*t3830 + 0.2*(t131226*t36575 + t131222*t39128 + t131219*t41678) + 0.100001*(t131222*t41678 + t131219*t42774 + t131226*t42819) + t131222*t47329 - 0.3*(t131222*t36575 + t131219*t42819 + t131226*t48451) - 0.2000000000018*t21166*t309*t3830*t6580;
  p_output1[18]=t103857;
  p_output1[19]=t131065;
  p_output1[20]=(t130395 + t130396 + t131342*t32403 + t131344*t36494 + 0.2*(t131342*t36575 + t131347*t39128 + t131344*t41678) + 0.100001*(t131347*t41678 + t131344*t42774 + t131342*t42819) + t131347*t47329 - 0.3*(t131347*t36575 + t131344*t42819 + t131342*t48451))*var2[0] + (t131396*t32403 + t131398*t36494 + 0.2*(t131396*t36575 + t131401*t39128 + t131398*t41678) + 0.100001*(t131401*t41678 + t131398*t42774 + t131396*t42819) + t131401*t47329 - 0.3*(t131401*t36575 + t131398*t42819 + t131396*t48451) + t49548 + t50696)*var2[1] + (t20191 + t21165 + t131368*t32403 + t131372*t36494 + 0.2*(t131368*t36575 + t131375*t39128 + t131372*t41678) + 0.100001*(t131375*t41678 + t131372*t42774 + t131368*t42819) + t131375*t47329 - 0.3*(t131375*t36575 + t131372*t42819 + t131368*t48451))*var2[2];
  p_output1[21]=t131762;
  p_output1[22]=t131838;
  p_output1[23]=-0.2000000000018*t14548*t21166*t309 + t131769*t32403 + t131765*t36494 + 0.2*(t131769*t36575 + t131426*t39128 + t131765*t41678) + 0.100001*(t131426*t41678 + t131765*t42774 + t131769*t42819) + t131426*t47329 - 0.3*(t131490 + t131765*t42819 + t131769*t48451) + 6.000000000054e-7*t21166*t309*t6580;
  p_output1[24]=t102505;
  p_output1[25]=0.2000000000018*t131524*t309 - 6.000000000054e-7*t17116*t309 + t131796*t32403 + t131792*t36494 + 0.2*(t131796*t36575 + t131546*t39128 + t131792*t41678) + 0.100001*(t131546*t41678 + t131792*t42774 + t131796*t42819) + t131546*t47329 - 0.3*(t131591 + t131792*t42819 + t131796*t48451);
  p_output1[26]=t128039;
  p_output1[27]=t131215;
  p_output1[28]=t131762;
  p_output1[29]=(t130402 + 6.000000000054e-7*t14548*t21166*t30 + t133245*t32403 + t133253*t36494 + 0.2*(t133245*t36575 + t133271*t39128 + t133253*t41678) + 0.100001*(t133271*t41678 + t133253*t42774 + t133245*t42819) + t133271*t47329 - 0.3*(t133271*t36575 + t133253*t42819 + t133245*t48451) + 0.2000000000018*t21166*t30*t6580)*var2[0] + (0.2000000000018*t127923*t30 + t132551*t32403 + t132565*t36494 + 0.2*(t132551*t36575 + t133129*t39128 + t132565*t41678) + 0.100001*(t133129*t41678 + t132565*t42774 + t132551*t42819) + t133129*t47329 - 0.3*(t133129*t36575 + t132565*t42819 + t132551*t48451) + t50933 - 6.000000000054e-7*t30*t97438)*var2[1] + (t21996 - 6.000000000054e-7*t131524*t30 + t132495*t32403 + t132503*t36494 + 0.2*(t132495*t36575 + t132513*t39128 + t132503*t41678) + 0.100001*(t132513*t41678 + t132503*t42774 + t132495*t42819) + t132513*t47329 - 0.3*(t132513*t36575 + t132503*t42819 + t132495*t48451) + 0.2000000000018*t30*t90452)*var2[2];
  p_output1[30]=t134093;
  p_output1[31]=6.000000000054e-7*t14548*t21166*t21971 - 0.2000000000018*t12146*t30 + t133399*t32403 + t133380*t36494 + 0.2*(t133399*t36575 + t133392*t39128 + t133380*t41678) + 0.100001*(t133392*t41678 + t133380*t42774 + t133399*t42819) + t133392*t47329 - 0.3*(t133392*t36575 + t133380*t42819 + t133399*t48451) + 0.2000000000018*t21166*t21971*t6580;
  p_output1[32]=t128037;
  p_output1[33]=-6.000000000054e-7*t131524*t21971 + t133477*t32403 + t133455*t36494 - 0.2000000000018*t21166*t30*t3830 + 0.2*(t133477*t36575 + t133460*t39128 + t133455*t41678) + 0.100001*(t133460*t41678 + t133455*t42774 + t133477*t42819) + t133460*t47329 - 0.3*(t133460*t36575 + t133455*t42819 + t133477*t48451) + 0.2000000000018*t21971*t90452;
  p_output1[34]=t130299;
  p_output1[35]=t131294;
  p_output1[36]=t131838;
  p_output1[37]=t134093;
  p_output1[38]=(t134271*t134280 + t134330*t134336 + t134354*t134461 - 0.3*(t134354*t134381 + t134399 - 1.000000000009*t134271*t23686) + 0.100001*(t128045*t134271 + t128092*t134354 - 1.8e-11*t134330*t23686) + 0.2*(t128045*t134330 + t134271*t134466 - 1.000000000009*t134354*t23686))*var2[0] + (t130275*t134280 + t130272*t134336 + t130280*t134461 + 0.100001*(t128045*t130275 + t128092*t130280 - 1.8e-11*t130272*t23686) - 0.3*(t130283 + t130280*t134381 - 1.000000000009*t130275*t23686) + 0.2*(t128045*t130272 + t130275*t134466 - 1.000000000009*t130280*t23686))*var2[1] + (t134280*t134491 + t134336*t134504 + t134461*t134518 - 0.3*(t134381*t134518 + t134523 - 1.000000000009*t134491*t23686) + 0.100001*(t128045*t134491 + t128092*t134518 - 1.8e-11*t134504*t23686) + 0.2*(t134466*t134491 + t128045*t134504 - 1.000000000009*t134518*t23686))*var2[2];
  p_output1[39]=t128059*t134271 + t128048*t134330 + t128087*t134354 - 0.3*(t128097*t134330 + t128104*t134354 - 1.000000000009*t134271*t25561) + 0.100001*(t128092*t134271 + t128097*t134354 - 1.8e-11*t134330*t25561) + 0.2*(t128090*t134271 + t134399 - 1.000000000009*t134354*t25561);
  p_output1[40]=t130297;
  p_output1[41]=t128059*t134491 + t128048*t134504 + t128087*t134518 - 0.3*(t128097*t134504 + t128104*t134518 - 1.000000000009*t134491*t25561) + 0.100001*(t128092*t134491 + t128097*t134518 - 1.8e-11*t134504*t25561) + 0.2*(t128090*t134491 + t134523 - 1.000000000009*t134518*t25561);
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 2)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Two input(s) required (var1,var2).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 42, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2);


}

#else // MATLAB_MEX_FILE

#include "J_fLeftFrontFoot_vec_FrontStance.hh"

namespace FrontStance
{

void J_fLeftFrontFoot_vec_FrontStance_raw(double *p_output1, const double *var1,const double *var2)
{
  // Call Subroutines
  output1(p_output1, var1, var2);

}

}

#endif // MATLAB_MEX_FILE
