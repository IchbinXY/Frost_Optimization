/*
 * Automatically Generated from Mathematica.
 * Wed 29 May 2019 23:56:12 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t15132;
  double t15338;
  double t15368;
  double t15801;
  double t15903;
  double t15907;
  double t15908;
  double t17119;
  double t17920;
  double t15807;
  double t15857;
  double t15861;
  double t15899;
  double t19811;
  double t19813;
  double t19847;
  double t19801;
  double t19803;
  double t19913;
  double t19817;
  double t19818;
  double t19830;
  double t19831;
  double t19832;
  double t19837;
  double t20711;
  double t21176;
  double t21177;
  double t21179;
  double t21573;
  double t21608;
  double t21643;
  double t21658;
  double t21662;
  double t21665;
  double t21668;
  double t21765;
  double t21811;
  double t21688;
  double t19954;
  double t21671;
  double t21993;
  double t22691;
  double t22692;
  double t22666;
  double t22676;
  double t23152;
  double t23410;
  double t23513;
  double t23469;
  double t22686;
  double t22766;
  double t23016;
  double t23090;
  double t23104;
  double t23145;
  double t23158;
  double t23180;
  double t23193;
  double t23327;
  double t23354;
  double t23383;
  double t23386;
  double t23387;
  double t23394;
  double t23398;
  double t23404;
  double t23419;
  double t23451;
  double t23474;
  double t23480;
  double t23485;
  double t23493;
  double t23512;
  double t23515;
  double t23519;
  double t23562;
  double t23601;
  double t23608;
  double t23652;
  double t23686;
  double t23694;
  double t23759;
  double t23832;
  double t23848;
  double t21401;
  double t21449;
  double t21453;
  double t21516;
  double t21556;
  double t19860;
  double t20057;
  double t20244;
  double t20253;
  double t20297;
  double t15902;
  double t15910;
  double t19805;
  double t19815;
  double t19816;
  double t23918;
  double t23939;
  double t24038;
  double t24143;
  double t24202;
  double t24213;
  double t22594;
  double t22610;
  double t24245;
  double t24254;
  double t24265;
  double t24284;
  double t21718;
  double t22440;
  double t23894;
  double t23906;
  double t23908;
  double t24173;
  double t24229;
  double t24316;
  double t24336;
  double t24370;
  double t24410;
  double t24456;
  double t24492;
  double t24532;
  double t24550;
  double t24566;
  double t24570;
  double t24633;
  double t24763;
  double t24790;
  double t24799;
  double t24817;
  double t24853;
  double t24855;
  double t15376;
  double t15405;
  double t15683;
  double t15794;
  double t24881;
  double t24888;
  double t24905;
  double t24907;
  double t24911;
  double t24924;
  double t24927;
  double t24929;
  double t24870;
  double t24871;
  double t24890;
  double t24921;
  double t24952;
  double t24953;
  double t24955;
  double t24965;
  double t24966;
  double t26277;
  double t26364;
  double t26721;
  double t27449;
  double t27828;
  double t27948;
  double t28023;
  double t28161;
  double t28178;
  double t28180;
  double t28183;
  double t28189;
  double t28210;
  double t28217;
  double t28218;
  double t28219;
  double t28319;
  double t28323;
  double t28331;
  double t28355;
  double t28499;
  double t28625;
  double t28865;
  double t28866;
  double t28204;
  double t28205;
  double t28208;
  double t28310;
  double t28359;
  double t28867;
  double t28896;
  double t28932;
  double t28981;
  double t28983;
  double t28984;
  double t28987;
  double t28988;
  double t28993;
  double t28995;
  double t28997;
  double t28999;
  double t29000;
  double t29007;
  double t29015;
  double t29022;
  double t29023;
  double t29051;
  double t29056;
  double t29204;
  double t29285;
  double t29293;
  double t29298;
  double t29300;
  double t29443;
  double t29444;
  double t29504;
  double t29508;
  double t29511;
  double t29598;
  double t29600;
  double t29835;
  double t29837;
  double t29838;
  double t29840;
  double t29907;
  double t29989;
  double t30186;
  double t30225;
  double t29329;
  double t29339;
  double t29350;
  double t29359;
  double t29372;
  double t29391;
  double t29393;
  double t29401;
  double t29403;
  double t29405;
  double t29408;
  double t29409;
  double t29411;
  double t29414;
  double t29415;
  double t29418;
  double t29419;
  double t29422;
  double t29426;
  double t29047;
  double t29050;
  double t30681;
  double t30686;
  double t30688;
  double t30715;
  double t30731;
  double t30738;
  double t29592;
  double t29596;
  double t29834;
  double t29839;
  double t30111;
  double t30112;
  double t30114;
  double t30118;
  double t30122;
  double t30129;
  double t30142;
  double t30143;
  double t30144;
  double t30145;
  double t30146;
  double t30147;
  double t30148;
  double t30149;
  double t30151;
  double t30152;
  double t30154;
  double t30562;
  double t30579;
  double t30585;
  double t30603;
  double t30611;
  double t30613;
  double t30614;
  double t30619;
  double t30621;
  double t30625;
  double t30629;
  double t30635;
  double t30641;
  double t30647;
  double t30648;
  double t30649;
  double t30653;
  double t30654;
  double t30658;
  double t30846;
  double t30848;
  double t30849;
  double t30850;
  double t30853;
  double t30854;
  double t30859;
  double t30861;
  double t30864;
  double t30866;
  double t30468;
  double t30469;
  double t30470;
  double t30473;
  double t30474;
  double t30476;
  double t30478;
  double t30481;
  double t30486;
  double t30487;
  double t30488;
  double t30494;
  double t30495;
  double t30498;
  double t30499;
  double t30500;
  double t30502;
  double t30558;
  double t30559;
  double t30678;
  double t30922;
  double t30934;
  double t30937;
  double t30938;
  double t30941;
  double t30942;
  double t29434;
  double t29435;
  double t29506;
  double t29518;
  double t29532;
  double t29540;
  double t29544;
  double t29545;
  double t29547;
  double t29550;
  double t29559;
  double t29563;
  double t29569;
  double t29571;
  double t29573;
  double t29575;
  double t29577;
  double t29579;
  double t29580;
  double t29584;
  double t29585;
  double t30835;
  double t30837;
  double t30844;
  double t30851;
  double t30862;
  double t30867;
  double t30870;
  double t30871;
  double t30872;
  double t30873;
  double t30880;
  double t30882;
  double t30883;
  double t30884;
  double t30885;
  double t30889;
  double t30895;
  double t30902;
  double t30903;
  double t30904;
  double t30905;
  double t30906;
  double t31043;
  double t31052;
  double t31051;
  double t31055;
  double t31056;
  double t31062;
  double t31065;
  double t31071;
  double t31119;
  double t31122;
  double t31123;
  double t31127;
  double t31130;
  double t31134;
  double t31135;
  double t31136;
  double t31143;
  double t31145;
  double t31147;
  double t31150;
  double t31107;
  double t31116;
  double t31117;
  double t31128;
  double t31138;
  double t31152;
  double t31153;
  double t31154;
  double t31156;
  double t31159;
  double t31164;
  double t31168;
  double t31171;
  double t31172;
  double t31173;
  double t31181;
  double t31183;
  double t31184;
  double t31185;
  double t31187;
  double t31188;
  double t31190;
  double t31077;
  double t31078;
  double t31083;
  double t31084;
  double t31089;
  double t31091;
  double t31092;
  double t31093;
  double t31098;
  double t31099;
  double t31101;
  double t31103;
  double t31224;
  double t31232;
  double t31234;
  double t31237;
  double t31240;
  double t31245;
  double t31251;
  double t31252;
  double t31256;
  double t31257;
  double t31263;
  double t31273;
  double t31274;
  double t31275;
  double t31279;
  double t31280;
  double t31283;
  double t31285;
  double t31223;
  double t31236;
  double t31248;
  double t31261;
  double t31278;
  double t31291;
  double t31293;
  double t31296;
  double t31297;
  double t31298;
  double t31299;
  double t31300;
  double t31301;
  double t31304;
  double t31306;
  double t31310;
  double t31312;
  double t31317;
  double t31318;
  double t31322;
  double t31325;
  double t31326;
  double t31334;
  double t31335;
  double t31340;
  double t31347;
  double t31349;
  double t31353;
  double t31355;
  double t31359;
  double t31366;
  double t31367;
  double t31371;
  double t31341;
  double t31343;
  double t31350;
  double t31360;
  double t31372;
  double t31383;
  double t31384;
  double t31386;
  double t31390;
  double t31397;
  double t31409;
  double t31411;
  double t31414;
  double t31434;
  double t31450;
  double t31451;
  double t31458;
  double t31461;
  double t31475;
  double t31487;
  double t31506;
  double t31517;
  double t31518;
  double t31524;
  double t31525;
  double t31528;
  double t31529;
  double t31530;
  double t31534;
  double t31541;
  double t31542;
  double t31552;
  double t31559;
  double t31560;
  double t31562;
  double t31563;
  double t31564;
  double t31565;
  double t31566;
  double t31567;
  double t31587;
  double t31590;
  double t31591;
  double t31601;
  double t31609;
  double t31613;
  double t31622;
  double t31630;
  double t31632;
  double t31642;
  double t31570;
  double t31576;
  double t31586;
  double t31603;
  double t31631;
  double t31655;
  double t31659;
  double t31663;
  double t31666;
  double t31673;
  double t31676;
  double t31677;
  double t31681;
  double t31687;
  double t31694;
  double t31705;
  double t31706;
  double t31709;
  double t31710;
  double t31711;
  double t31712;
  double t31719;
  double t31743;
  double t31744;
  double t31751;
  double t31758;
  double t31767;
  double t31769;
  double t31773;
  double t31775;
  double t31782;
  double t31783;
  double t31787;
  double t31791;
  double t31920;
  double t31926;
  double t31929;
  double t31930;
  double t31933;
  double t31934;
  double t31937;
  double t31938;
  double t31941;
  double t31942;
  double t31987;
  double t31988;
  double t31991;
  double t31993;
  double t31994;
  double t32000;
  double t32001;
  double t32004;
  double t32044;
  double t32045;
  double t32046;
  double t32047;
  double t32050;
  double t32051;
  double t32054;
  double t32055;
  double t32057;
  double t32058;
  double t32060;
  double t32061;
  double t31833;
  double t31836;
  double t31841;
  double t31843;
  double t31844;
  double t31847;
  double t31848;
  double t31858;
  double t31870;
  double t31882;
  double t31883;
  double t31884;
  double t31887;
  double t31888;
  double t31889;
  double t31892;
  double t31894;
  double t31896;
  double t31898;
  double t30168;
  double t30169;
  double t30171;
  double t30175;
  double t30184;
  double t30191;
  double t30193;
  double t30195;
  double t30204;
  double t30205;
  double t30206;
  double t30209;
  double t30210;
  double t30226;
  double t30416;
  double t31903;
  double t31905;
  double t31906;
  double t31931;
  double t31935;
  double t31943;
  double t31944;
  double t31964;
  double t31965;
  double t31966;
  double t31967;
  double t31968;
  double t31969;
  double t31971;
  double t31972;
  double t31973;
  double t31974;
  double t31975;
  double t31976;
  double t31977;
  double t31979;
  double t31980;
  double t32342;
  double t32343;
  double t32346;
  double t32348;
  double t32352;
  double t32353;
  double t32363;
  double t32364;
  double t32372;
  double t32373;
  double t32041;
  double t32423;
  double t32425;
  double t32427;
  double t32432;
  double t32439;
  double t32440;
  double t32442;
  double t32443;
  double t32492;
  double t32493;
  double t32497;
  double t32506;
  double t32507;
  double t32273;
  double t32274;
  double t32275;
  double t32276;
  double t32278;
  double t32282;
  double t32285;
  double t32289;
  double t32290;
  double t32291;
  double t32298;
  double t32301;
  double t32302;
  double t32306;
  double t32310;
  double t32314;
  double t32316;
  double t32318;
  double t32322;
  double t31984;
  double t31986;
  double t31990;
  double t31996;
  double t32005;
  double t32006;
  double t32010;
  double t32011;
  double t32013;
  double t32015;
  double t32016;
  double t32020;
  double t32025;
  double t32029;
  double t32031;
  double t32033;
  double t32034;
  double t32035;
  double t32036;
  double t32037;
  double t32038;
  double t32564;
  double t32565;
  double t32568;
  double t32577;
  double t32578;
  double t32580;
  double t32585;
  double t32588;
  double t32604;
  double t32608;
  double t32614;
  double t32127;
  double t32128;
  double t32131;
  double t32132;
  double t32134;
  double t32135;
  double t32136;
  double t32137;
  double t32139;
  double t32142;
  double t32144;
  double t32147;
  double t32151;
  double t32154;
  double t32156;
  double t32160;
  double t32172;
  double t32181;
  double t32204;
  double t32485;
  double t32486;
  double t32501;
  double t32505;
  double t32509;
  double t32513;
  double t32516;
  double t32517;
  double t32518;
  double t32520;
  double t32523;
  double t32525;
  double t32527;
  double t32529;
  double t32532;
  double t32536;
  double t32538;
  double t32539;
  double t32541;
  double t32543;
  double t32544;
  double t32770;
  double t32771;
  double t32775;
  double t32781;
  double t32783;
  double t32791;
  double t32794;
  double t32796;
  double t32804;
  double t32808;
  double t32810;
  double t31737;
  double t31739;
  double t31742;
  double t31760;
  double t31781;
  double t31794;
  double t31800;
  double t31805;
  double t31808;
  double t31812;
  double t31815;
  double t31817;
  double t31818;
  double t31819;
  double t31820;
  double t31821;
  double t31822;
  double t31823;
  double t31824;
  double t31825;
  double t31827;
  double t31829;
  double t32569;
  double t32571;
  double t32579;
  double t32594;
  double t32615;
  double t32620;
  double t32630;
  double t32634;
  double t32653;
  double t32656;
  double t32679;
  double t32682;
  double t32696;
  double t32712;
  double t32718;
  double t32723;
  double t32736;
  double t32753;
  double t32756;
  double t32757;
  double t32758;
  double t32095;
  double t32102;
  double t32103;
  double t32104;
  double t32105;
  double t32107;
  double t32108;
  double t32109;
  double t32110;
  double t32112;
  double t32113;
  double t32115;
  double t32116;
  double t32117;
  double t32118;
  double t32121;
  double t32122;
  double t32124;
  double t32125;
  double t32335;
  double t32338;
  double t32340;
  double t32351;
  double t32368;
  double t32377;
  double t32378;
  double t32380;
  double t32390;
  double t32393;
  double t32395;
  double t32396;
  double t32399;
  double t32403;
  double t32404;
  double t32407;
  double t32410;
  double t32411;
  double t32413;
  double t32414;
  double t32416;
  double t32417;
  double t32768;
  double t32777;
  double t32919;
  double t32927;
  double t32931;
  double t33059;
  double t33076;
  double t33080;
  double t33172;
  double t33175;
  double t33176;
  double t33180;
  double t33184;
  double t33199;
  double t33204;
  double t33207;
  double t33214;
  double t33227;
  double t33241;
  double t33249;
  double t33159;
  double t33160;
  double t33164;
  double t33182;
  double t33210;
  double t33255;
  double t33256;
  double t33257;
  double t33258;
  double t33259;
  double t33261;
  double t33267;
  double t33270;
  double t33271;
  double t33274;
  double t33276;
  double t33277;
  double t33283;
  double t33288;
  double t33291;
  double t33292;
  double t33293;
  double t33103;
  double t33106;
  double t33121;
  double t33130;
  double t33131;
  double t33141;
  double t33144;
  double t33151;
  double t33153;
  double t33155;
  double t33157;
  double t33342;
  double t33348;
  double t33353;
  double t33361;
  double t33381;
  double t33383;
  double t33338;
  double t33339;
  double t33349;
  double t33376;
  double t33384;
  double t33388;
  double t33392;
  double t33400;
  double t33457;
  double t33462;
  double t33511;
  double t33522;
  double t33523;
  double t33525;
  double t33527;
  double t33530;
  double t33539;
  double t33566;
  double t33567;
  double t33568;
  double t33569;
  double t33575;
  double t33588;
  double t33590;
  double t33591;
  double t33592;
  double t33593;
  double t33595;
  double t33598;
  double t33603;
  double t33604;
  double t33605;
  double t33648;
  double t33658;
  double t33666;
  double t33676;
  double t33685;
  double t33689;
  double t33691;
  double t33702;
  double t33782;
  double t33783;
  double t33788;
  double t33795;
  double t33797;
  double t33815;
  double t33816;
  double t33823;
  double t33850;
  double t33718;
  double t33719;
  double t33779;
  double t33796;
  double t33817;
  double t33875;
  double t33905;
  double t33925;
  double t33947;
  double t33948;
  double t34001;
  double t34072;
  double t34073;
  double t34074;
  double t34097;
  double t34100;
  double t34101;
  double t34105;
  double t34106;
  double t34112;
  double t34120;
  double t34140;
  double t34157;
  double t34163;
  double t34170;
  double t34171;
  double t34176;
  double t34197;
  double t34199;
  double t34539;
  double t34540;
  double t34543;
  double t34563;
  double t34565;
  double t34569;
  double t34585;
  double t34625;
  double t34631;
  double t34741;
  double t34742;
  double t34757;
  double t35072;
  double t35082;
  double t35089;
  double t35091;
  double t35092;
  double t35162;
  double t31049;
  double t31060;
  double t31073;
  double t31087;
  double t31097;
  double t31104;
  double t31193;
  double t31196;
  double t31197;
  double t31200;
  double t31201;
  double t31202;
  double t31203;
  double t31208;
  double t31210;
  double t31211;
  double t31214;
  double t31215;
  double t31216;
  double t31217;
  double t31219;
  double t35406;
  double t34152;
  double t34153;
  double t34169;
  double t34175;
  double t34204;
  double t34208;
  double t34211;
  double t34215;
  double t34304;
  double t34307;
  double t34315;
  double t34334;
  double t34340;
  double t34342;
  double t34347;
  double t34349;
  double t34354;
  double t34357;
  double t34362;
  double t34363;
  double t34377;
  double t35421;
  double t35436;
  double t35440;
  double t35878;
  double t35887;
  double t35889;
  double t35897;
  double t35901;
  double t34394;
  double t34395;
  double t34396;
  double t34400;
  double t34403;
  double t34408;
  double t34409;
  double t34410;
  double t34414;
  double t34419;
  double t34422;
  double t34432;
  double t34438;
  double t34439;
  double t34447;
  double t34456;
  double t34459;
  double t34462;
  double t34502;
  double t35675;
  double t35712;
  double t35748;
  double t35756;
  double t35809;
  double t35820;
  double t35821;
  double t35822;
  double t35823;
  double t35826;
  double t35828;
  double t35831;
  double t35833;
  double t35835;
  double t35839;
  double t35841;
  double t35843;
  double t35844;
  double t35849;
  double t31192;
  double t31332;
  double t31513;
  double t31569;
  double t31733;
  double t34508;
  double t34529;
  double t34538;
  double t34544;
  double t34589;
  double t34643;
  double t34655;
  double t34656;
  double t34657;
  double t34659;
  double t34660;
  double t34661;
  double t34662;
  double t34663;
  double t34665;
  double t34666;
  double t34667;
  double t34669;
  double t34670;
  double t34672;
  double t34675;
  double t34688;
  double t36163;
  double t36167;
  double t36181;
  double t36185;
  double t36201;
  double t36205;
  double t36206;
  double t36207;
  double t35864;
  double t35876;
  double t35891;
  double t35893;
  double t35907;
  double t35912;
  double t35915;
  double t35919;
  double t35941;
  double t35947;
  double t35958;
  double t35966;
  double t35972;
  double t35974;
  double t35980;
  double t35990;
  double t35995;
  double t36004;
  double t36005;
  double t36008;
  double t36012;
  double t36082;
  double t36085;
  double t36092;
  double t36094;
  double t36099;
  double t36100;
  double t36103;
  double t36106;
  double t36108;
  double t36109;
  double t36113;
  double t36114;
  double t36115;
  double t36118;
  double t36120;
  double t36122;
  double t36124;
  double t36128;
  double t36129;
  t15132 = Cos(var1[19]);
  t15338 = -1.*t15132;
  t15368 = 1. + t15338;
  t15801 = Cos(var1[4]);
  t15903 = Cos(var1[21]);
  t15907 = -1.*t15903;
  t15908 = 1. + t15907;
  t17119 = -3.e-6*t15908;
  t17920 = Sin(var1[21]);
  t15807 = Cos(var1[5]);
  t15857 = Sin(var1[19]);
  t15861 = Sin(var1[4]);
  t15899 = Sin(var1[5]);
  t19811 = 3.e-6*t17920;
  t19813 = t17119 + t19811;
  t19847 = 3.e-13*var1[21];
  t19801 = -3.e-6*t17920;
  t19803 = t17119 + t19801;
  t19913 = -9.e-12*t15908;
  t19817 = 3.e-6*t15368*t15801*t15807;
  t19818 = -3.e-6*t15857*t15861;
  t19830 = -9.e-12*t15368;
  t19831 = 1. + t19830;
  t19832 = -1.*t19831*t15801*t15899;
  t19837 = t19817 + t19818 + t19832;
  t20711 = t15132*t15801*t15807;
  t21176 = t15857*t15861;
  t21177 = -3.e-6*t15368*t15801*t15899;
  t21179 = t20711 + t21176 + t21177;
  t21573 = -1.*t15801*t15807*t15857;
  t21608 = -1.000000000009*t15368;
  t21643 = 1. + t21608;
  t21658 = t21643*t15861;
  t21662 = -3.e-6*t15801*t15857*t15899;
  t21665 = t21573 + t21658 + t21662;
  t21668 = 3.e-6*t15908;
  t21765 = -1.000000000009*t15908;
  t21811 = 1. + t21765;
  t21688 = 9.e-12*t15908;
  t19954 = -1.*t17920;
  t21671 = t21668 + t19801;
  t21993 = t21668 + t19811;
  t22691 = 3.e-6*t15903;
  t22692 = t22691 + t19801;
  t22666 = -3.e-6*t15903;
  t22676 = t22666 + t19801;
  t23152 = -9.e-12*t17920;
  t23410 = t22691 + t19811;
  t23513 = t22666 + t19811;
  t23469 = 9.e-12*t17920;
  t22686 = -0.200000000003*t22676;
  t22766 = 0.100000000003*t22692;
  t23016 = 5.4e-18*t17920;
  t23090 = 1.e-7 + t22686 + t22766 + t23016;
  t23104 = t23090*t19837;
  t23145 = 3.e-7*t22692;
  t23158 = t15907 + t23152;
  t23180 = 0.100000000003*t23158;
  t23193 = -0.2000000000048*t17920;
  t23327 = 3.e-13 + t23145 + t23180 + t23193;
  t23354 = t23327*t21179;
  t23383 = 3.e-7*t22676;
  t23386 = t15903 + t23152;
  t23387 = -0.200000000003*t23386;
  t23394 = 0.1000000000039*t17920;
  t23398 = 3.e-13 + t23383 + t23387 + t23394;
  t23404 = t23398*t21665;
  t23419 = -1.*t23410*t19837;
  t23451 = 1.000000000009*t17920*t21179;
  t23474 = t15907 + t23469;
  t23480 = -1.*t23474*t21665;
  t23485 = t23419 + t23451 + t23480;
  t23493 = 0.2*t23485;
  t23512 = -1.8e-11*t17920*t19837;
  t23515 = t23513*t21179;
  t23519 = t23410*t21665;
  t23562 = t23512 + t23515 + t23519;
  t23601 = -0.099999*t23562;
  t23608 = t23513*t19837;
  t23652 = t15903 + t23469;
  t23686 = t23652*t21179;
  t23694 = -1.000000000009*t17920*t21665;
  t23759 = t23608 + t23686 + t23694;
  t23832 = -0.3*t23759;
  t23848 = t23104 + t23354 + t23404 + t23493 + t23601 + t23832;
  t21401 = 0.1000000000039*t15908;
  t21449 = 3.e-7*t19803;
  t21453 = t19913 + t17920;
  t21516 = -0.200000000003*t21453;
  t21556 = t19847 + t21401 + t21449 + t21516;
  t19860 = -0.2000000000048*t15908;
  t20057 = t19913 + t19954;
  t20244 = 0.100000000003*t20057;
  t20253 = 3.e-7*t19813;
  t20297 = t19847 + t19860 + t20244 + t20253;
  t15902 = 1.e-7*var1[21];
  t15910 = 5.4e-18*t15908;
  t19805 = -0.200000000003*t19803;
  t19815 = 0.100000000003*t19813;
  t19816 = t15902 + t15910 + t19805 + t19815;
  t23918 = -1.*t15132*t15801*t15807;
  t23939 = -1.000000000009*t15857*t15861;
  t24038 = -3.e-6*t15132*t15801*t15899;
  t24143 = t23918 + t23939 + t24038;
  t24202 = t15132*t15861;
  t24213 = t21573 + t24202 + t21662;
  t22594 = -1.8e-11*t15908;
  t22610 = 1. + t22594;
  t24245 = 3.e-6*t15801*t15807*t15857;
  t24254 = -3.e-6*t15132*t15861;
  t24265 = 9.e-12*t15801*t15857*t15899;
  t24284 = t24245 + t24254 + t24265;
  t21718 = t21688 + t17920;
  t22440 = t21688 + t19954;
  t23894 = -0.2000000000018*t15801*t15807*t15857;
  t23906 = 0.2000000000018*t15132*t15861;
  t23908 = -6.000000000054e-7*t15801*t15857*t15899;
  t24173 = t21556*t24143;
  t24229 = t20297*t24213;
  t24316 = t19816*t24284;
  t24336 = t21993*t24143;
  t24370 = t21671*t24213;
  t24410 = t22610*t24284;
  t24456 = t24336 + t24370 + t24410;
  t24492 = -0.099999*t24456;
  t24532 = t21811*t24143;
  t24550 = t21718*t24213;
  t24566 = t21671*t24284;
  t24570 = t24532 + t24550 + t24566;
  t24633 = -0.3*t24570;
  t24763 = -1.*t22440*t24143;
  t24790 = -1.*t21811*t24213;
  t24799 = -1.*t21993*t24284;
  t24817 = t24763 + t24790 + t24799;
  t24853 = 0.2*t24817;
  t24855 = t23894 + t23906 + t23908 + t24173 + t24229 + t24316 + t24492 + t24633 + t24853;
  t15376 = -1.8e-12*t15368;
  t15405 = -1. + t15132;
  t15683 = 0.2*t15405;
  t15794 = t15376 + t15683;
  t24881 = -1.*t19831*t15801*t15807;
  t24888 = t24881 + t21177;
  t24905 = -3.e-6*t15368*t15801*t15807;
  t24907 = -1.*t15132*t15801*t15899;
  t24911 = t24905 + t24907;
  t24924 = -3.e-6*t15801*t15807*t15857;
  t24927 = t15801*t15857*t15899;
  t24929 = t24924 + t24927;
  t24870 = -6.000000000054e-7*t15368*t15801*t15807;
  t24871 = -1.*t15794*t15801*t15899;
  t24890 = t19816*t24888;
  t24921 = t20297*t24911;
  t24952 = t21556*t24929;
  t24953 = t21671*t24888;
  t24955 = t21718*t24911;
  t24965 = t21811*t24929;
  t24966 = t24953 + t24955 + t24965;
  t26277 = -0.3*t24966;
  t26364 = -1.*t21993*t24888;
  t26721 = -1.*t21811*t24911;
  t27449 = -1.*t22440*t24929;
  t27828 = t26364 + t26721 + t27449;
  t27948 = 0.2*t27828;
  t28023 = t22610*t24888;
  t28161 = t21671*t24911;
  t28178 = t21993*t24929;
  t28180 = t28023 + t28161 + t28178;
  t28183 = -0.099999*t28180;
  t28189 = t24870 + t24871 + t24890 + t24921 + t24952 + t26277 + t27948 + t28183;
  t28210 = -3.e-6*t15801*t15857;
  t28217 = -3.e-6*t15368*t15807*t15861;
  t28218 = t19831*t15861*t15899;
  t28219 = t28210 + t28217 + t28218;
  t28319 = t15801*t15857;
  t28323 = -1.*t15132*t15807*t15861;
  t28331 = 3.e-6*t15368*t15861*t15899;
  t28355 = t28319 + t28323 + t28331;
  t28499 = t21643*t15801;
  t28625 = t15807*t15857*t15861;
  t28865 = 3.e-6*t15857*t15861*t15899;
  t28866 = t28499 + t28625 + t28865;
  t28204 = 0.2000000000018*t15801*t15857;
  t28205 = -1.*t15794*t15807*t15861;
  t28208 = 6.000000000054e-7*t15368*t15861*t15899;
  t28310 = t19816*t28219;
  t28359 = t20297*t28355;
  t28867 = t21556*t28866;
  t28896 = t21671*t28219;
  t28932 = t21718*t28355;
  t28981 = t21811*t28866;
  t28983 = t28896 + t28932 + t28981;
  t28984 = -0.3*t28983;
  t28987 = -1.*t21993*t28219;
  t28988 = -1.*t21811*t28355;
  t28993 = -1.*t22440*t28866;
  t28995 = t28987 + t28988 + t28993;
  t28997 = 0.2*t28995;
  t28999 = t22610*t28219;
  t29000 = t21671*t28355;
  t29007 = t21993*t28866;
  t29015 = t28999 + t29000 + t29007;
  t29022 = -0.099999*t29015;
  t29023 = t28204 + t28205 + t28208 + t28310 + t28359 + t28867 + t28984 + t28997 + t29022;
  t29051 = t19831*t15801*t15899;
  t29056 = t24905 + t29051;
  t29204 = 3.e-6*t15368*t15801*t15899;
  t29285 = t23918 + t29204;
  t29293 = t15801*t15807*t15857;
  t29298 = 3.e-6*t15801*t15857*t15899;
  t29300 = t29293 + t29298;
  t29443 = -3.e-6*t15132*t15801*t15807;
  t29444 = t15132*t15801*t15899;
  t29504 = t29443 + t29444;
  t29508 = 9.e-12*t15801*t15807*t15857;
  t29511 = t29508 + t21662;
  t29598 = t19831*t15807*t15861;
  t29600 = t29598 + t28331;
  t29835 = 3.e-6*t15368*t15807*t15861;
  t29837 = t15132*t15861*t15899;
  t29838 = t29835 + t29837;
  t29840 = 3.e-6*t15807*t15857*t15861;
  t29907 = -1.*t15857*t15861*t15899;
  t29989 = t29840 + t29907;
  t30186 = -9.e-12*t15903;
  t30225 = 9.e-12*t15903;
  t29329 = t23090*t24888;
  t29339 = t23327*t24911;
  t29350 = t23398*t24929;
  t29359 = -1.*t23410*t24888;
  t29372 = 1.000000000009*t17920*t24911;
  t29391 = -1.*t23474*t24929;
  t29393 = t29359 + t29372 + t29391;
  t29401 = 0.2*t29393;
  t29403 = -1.8e-11*t17920*t24888;
  t29405 = t23513*t24911;
  t29408 = t23410*t24929;
  t29409 = t29403 + t29405 + t29408;
  t29411 = -0.099999*t29409;
  t29414 = t23513*t24888;
  t29415 = t23652*t24911;
  t29418 = -1.000000000009*t17920*t24929;
  t29419 = t29414 + t29415 + t29418;
  t29422 = -0.3*t29419;
  t29426 = t29329 + t29339 + t29350 + t29401 + t29411 + t29422;
  t29047 = -1.*t15794*t15801*t15807;
  t29050 = 6.000000000054e-7*t15368*t15801*t15899;
  t30681 = 3.e-6*t15857*t15861;
  t30686 = t24905 + t30681 + t29051;
  t30688 = -1.*t15857*t15861;
  t30715 = t23918 + t30688 + t29204;
  t30731 = -1.*t21643*t15861;
  t30738 = t29293 + t30731 + t29298;
  t29592 = 6.000000000054e-7*t15368*t15807*t15861;
  t29596 = t15794*t15861*t15899;
  t29834 = t19816*t29600;
  t29839 = t20297*t29838;
  t30111 = t21556*t29989;
  t30112 = t21671*t29600;
  t30114 = t21718*t29838;
  t30118 = t21811*t29989;
  t30122 = t30112 + t30114 + t30118;
  t30129 = -0.3*t30122;
  t30142 = -1.*t21993*t29600;
  t30143 = -1.*t21811*t29838;
  t30144 = -1.*t22440*t29989;
  t30145 = t30142 + t30143 + t30144;
  t30146 = 0.2*t30145;
  t30147 = t22610*t29600;
  t30148 = t21671*t29838;
  t30149 = t21993*t29989;
  t30151 = t30147 + t30148 + t30149;
  t30152 = -0.099999*t30151;
  t30154 = t29592 + t29596 + t29834 + t29839 + t30111 + t30129 + t30146 + t30152;
  t30562 = t23090*t28219;
  t30579 = t23327*t28355;
  t30585 = t23398*t28866;
  t30603 = -1.*t23410*t28219;
  t30611 = 1.000000000009*t17920*t28355;
  t30613 = -1.*t23474*t28866;
  t30614 = t30603 + t30611 + t30613;
  t30619 = 0.2*t30614;
  t30621 = -1.8e-11*t17920*t28219;
  t30625 = t23513*t28355;
  t30629 = t23410*t28866;
  t30635 = t30621 + t30625 + t30629;
  t30641 = -0.099999*t30635;
  t30647 = t23513*t28219;
  t30648 = t23652*t28355;
  t30649 = -1.000000000009*t17920*t28866;
  t30653 = t30647 + t30648 + t30649;
  t30654 = -0.3*t30653;
  t30658 = t30562 + t30579 + t30585 + t30619 + t30641 + t30654;
  t30846 = -1.000000000009*t15801*t15857;
  t30848 = t15132*t15807*t15861;
  t30849 = 3.e-6*t15132*t15861*t15899;
  t30850 = t30846 + t30848 + t30849;
  t30853 = -3.e-6*t15132*t15801;
  t30854 = -3.e-6*t15807*t15857*t15861;
  t30859 = -9.e-12*t15857*t15861*t15899;
  t30861 = t30853 + t30854 + t30859;
  t30864 = t15132*t15801;
  t30866 = t30864 + t28625 + t28865;
  t30468 = t23398*t24143;
  t30469 = t23327*t24213;
  t30470 = t23090*t24284;
  t30473 = -1.000000000009*t17920*t24143;
  t30474 = t23652*t24213;
  t30476 = t23513*t24284;
  t30478 = t30473 + t30474 + t30476;
  t30481 = -0.3*t30478;
  t30486 = -1.*t23474*t24143;
  t30487 = 1.000000000009*t17920*t24213;
  t30488 = -1.*t23410*t24284;
  t30494 = t30486 + t30487 + t30488;
  t30495 = 0.2*t30494;
  t30498 = t23410*t24143;
  t30499 = t23513*t24213;
  t30500 = -1.8e-11*t17920*t24284;
  t30502 = t30498 + t30499 + t30500;
  t30558 = -0.099999*t30502;
  t30559 = t30468 + t30469 + t30470 + t30481 + t30495 + t30558;
  t30678 = -0.2000000000018*t15857*t15861;
  t30922 = t23918 + t30688 + t24038;
  t30934 = 3.e-6*t15132*t15801*t15807;
  t30937 = 9.e-12*t15132*t15801*t15899;
  t30938 = t30934 + t30681 + t30937;
  t30941 = -1.000000000009*t15132*t15861;
  t30942 = t29293 + t30941 + t29298;
  t29434 = -6.000000000054e-7*t15801*t15807*t15857;
  t29435 = 0.2000000000018*t15801*t15857*t15899;
  t29506 = t21556*t29504;
  t29518 = t19816*t29511;
  t29532 = t20297*t24929;
  t29540 = -1.*t22440*t29504;
  t29544 = -1.*t21993*t29511;
  t29545 = -1.*t21811*t24929;
  t29547 = t29540 + t29544 + t29545;
  t29550 = 0.2*t29547;
  t29559 = t21993*t29504;
  t29563 = t22610*t29511;
  t29569 = t21671*t24929;
  t29571 = t29559 + t29563 + t29569;
  t29573 = -0.099999*t29571;
  t29575 = t21811*t29504;
  t29577 = t21671*t29511;
  t29579 = t21718*t24929;
  t29580 = t29575 + t29577 + t29579;
  t29584 = -0.3*t29580;
  t29585 = t29434 + t29435 + t29506 + t29518 + t29532 + t29550 + t29573 + t29584;
  t30835 = 0.2000000000018*t15132*t15801;
  t30837 = 0.2000000000018*t15807*t15857*t15861;
  t30844 = 6.000000000054e-7*t15857*t15861*t15899;
  t30851 = t21556*t30850;
  t30862 = t19816*t30861;
  t30867 = t20297*t30866;
  t30870 = -1.*t22440*t30850;
  t30871 = -1.*t21993*t30861;
  t30872 = -1.*t21811*t30866;
  t30873 = t30870 + t30871 + t30872;
  t30880 = 0.2*t30873;
  t30882 = t21993*t30850;
  t30883 = t22610*t30861;
  t30884 = t21671*t30866;
  t30885 = t30882 + t30883 + t30884;
  t30889 = -0.099999*t30885;
  t30895 = t21811*t30850;
  t30902 = t21671*t30861;
  t30903 = t21718*t30866;
  t30904 = t30895 + t30902 + t30903;
  t30905 = -0.3*t30904;
  t30906 = t30835 + t30837 + t30844 + t30851 + t30862 + t30867 + t30880 + t30889 + t30905;
  t31043 = Sin(var1[3]);
  t31052 = Cos(var1[3]);
  t31051 = t15807*t31043*t15861;
  t31055 = t31052*t15899;
  t31056 = t31051 + t31055;
  t31062 = t31052*t15807;
  t31065 = -1.*t31043*t15861*t15899;
  t31071 = t31062 + t31065;
  t31119 = 3.e-6*t15368*t15801*t15807*t31043;
  t31122 = -3.e-6*t15857*t31043*t15861;
  t31123 = -1.*t19831*t15801*t31043*t15899;
  t31127 = t31119 + t31122 + t31123;
  t31130 = t15132*t15801*t15807*t31043;
  t31134 = t15857*t31043*t15861;
  t31135 = -3.e-6*t15368*t15801*t31043*t15899;
  t31136 = t31130 + t31134 + t31135;
  t31143 = -1.*t15801*t15807*t15857*t31043;
  t31145 = t21643*t31043*t15861;
  t31147 = -3.e-6*t15801*t15857*t31043*t15899;
  t31150 = t31143 + t31145 + t31147;
  t31107 = t15794*t15801*t15807*t31043;
  t31116 = 0.2000000000018*t15857*t31043*t15861;
  t31117 = -6.000000000054e-7*t15368*t15801*t31043*t15899;
  t31128 = t19816*t31127;
  t31138 = t20297*t31136;
  t31152 = t21556*t31150;
  t31153 = t21671*t31127;
  t31154 = t21718*t31136;
  t31156 = t21811*t31150;
  t31159 = t31153 + t31154 + t31156;
  t31164 = -0.3*t31159;
  t31168 = -1.*t21993*t31127;
  t31171 = -1.*t21811*t31136;
  t31172 = -1.*t22440*t31150;
  t31173 = t31168 + t31171 + t31172;
  t31181 = 0.2*t31173;
  t31183 = t22610*t31127;
  t31184 = t21671*t31136;
  t31185 = t21993*t31150;
  t31187 = t31183 + t31184 + t31185;
  t31188 = -0.099999*t31187;
  t31190 = t31107 + t31116 + t31117 + t31128 + t31138 + t31152 + t31164 + t31181 + t31188;
  t31077 = 3.e-6*t15801*t15857*t31043;
  t31078 = 3.e-6*t15368*t31056;
  t31083 = t19831*t31071;
  t31084 = t31077 + t31078 + t31083;
  t31089 = -1.*t15801*t15857*t31043;
  t31091 = t15132*t31056;
  t31092 = 3.e-6*t15368*t31071;
  t31093 = t31089 + t31091 + t31092;
  t31098 = -1.*t21643*t15801*t31043;
  t31099 = -1.*t15857*t31056;
  t31101 = 3.e-6*t15857*t31071;
  t31103 = t31098 + t31099 + t31101;
  t31224 = t31052*t15807*t15861;
  t31232 = -1.*t31043*t15899;
  t31234 = t31224 + t31232;
  t31237 = -1.*t15807*t31043;
  t31240 = -1.*t31052*t15861*t15899;
  t31245 = t31237 + t31240;
  t31251 = 3.e-6*t31052*t15801*t15857;
  t31252 = 3.e-6*t15368*t31234;
  t31256 = t19831*t31245;
  t31257 = t31251 + t31252 + t31256;
  t31263 = -1.*t31052*t15801*t15857;
  t31273 = t15132*t31234;
  t31274 = 3.e-6*t15368*t31245;
  t31275 = t31263 + t31273 + t31274;
  t31279 = -1.*t21643*t31052*t15801;
  t31280 = -1.*t15857*t31234;
  t31283 = 3.e-6*t15857*t31245;
  t31285 = t31279 + t31280 + t31283;
  t31223 = -0.2000000000018*t31052*t15801*t15857;
  t31236 = t15794*t31234;
  t31248 = 6.000000000054e-7*t15368*t31245;
  t31261 = t19816*t31257;
  t31278 = t20297*t31275;
  t31291 = t21556*t31285;
  t31293 = t21671*t31257;
  t31296 = t21718*t31275;
  t31297 = t21811*t31285;
  t31298 = t31293 + t31296 + t31297;
  t31299 = -0.3*t31298;
  t31300 = -1.*t21993*t31257;
  t31301 = -1.*t21811*t31275;
  t31304 = -1.*t22440*t31285;
  t31306 = t31300 + t31301 + t31304;
  t31310 = 0.2*t31306;
  t31312 = t22610*t31257;
  t31317 = t21671*t31275;
  t31318 = t21993*t31285;
  t31322 = t31312 + t31317 + t31318;
  t31325 = -0.099999*t31322;
  t31326 = t31223 + t31236 + t31248 + t31261 + t31278 + t31291 + t31299 + t31310 + t31325;
  t31334 = -1.*t15807*t31043*t15861;
  t31335 = -1.*t31052*t15899;
  t31340 = t31334 + t31335;
  t31347 = t19831*t31340;
  t31349 = t31347 + t31092;
  t31353 = 3.e-6*t15368*t31340;
  t31355 = t15132*t31071;
  t31359 = t31353 + t31355;
  t31366 = 3.e-6*t15857*t31340;
  t31367 = -1.*t15857*t31071;
  t31371 = t31366 + t31367;
  t31341 = 6.000000000054e-7*t15368*t31340;
  t31343 = t15794*t31071;
  t31350 = t19816*t31349;
  t31360 = t20297*t31359;
  t31372 = t21556*t31371;
  t31383 = t21671*t31349;
  t31384 = t21718*t31359;
  t31386 = t21811*t31371;
  t31390 = t31383 + t31384 + t31386;
  t31397 = -0.3*t31390;
  t31409 = -1.*t21993*t31349;
  t31411 = -1.*t21811*t31359;
  t31414 = -1.*t22440*t31371;
  t31434 = t31409 + t31411 + t31414;
  t31450 = 0.2*t31434;
  t31451 = t22610*t31349;
  t31458 = t21671*t31359;
  t31461 = t21993*t31371;
  t31475 = t31451 + t31458 + t31461;
  t31487 = -0.099999*t31475;
  t31506 = t31341 + t31343 + t31350 + t31360 + t31372 + t31397 + t31450 + t31487;
  t31517 = t23090*t31084;
  t31518 = t23327*t31093;
  t31524 = t23398*t31103;
  t31525 = -1.*t23410*t31084;
  t31528 = 1.000000000009*t17920*t31093;
  t31529 = -1.*t23474*t31103;
  t31530 = t31525 + t31528 + t31529;
  t31534 = 0.2*t31530;
  t31541 = -1.8e-11*t17920*t31084;
  t31542 = t23513*t31093;
  t31552 = t23410*t31103;
  t31559 = t31541 + t31542 + t31552;
  t31560 = -0.099999*t31559;
  t31562 = t23513*t31084;
  t31563 = t23652*t31093;
  t31564 = -1.000000000009*t17920*t31103;
  t31565 = t31562 + t31563 + t31564;
  t31566 = -0.3*t31565;
  t31567 = t31517 + t31518 + t31524 + t31534 + t31560 + t31566;
  t31587 = 1.000000000009*t15801*t15857*t31043;
  t31590 = -1.*t15132*t31056;
  t31591 = 3.e-6*t15132*t31071;
  t31601 = t31587 + t31590 + t31591;
  t31609 = 3.e-6*t15132*t15801*t31043;
  t31613 = 3.e-6*t15857*t31056;
  t31622 = -9.e-12*t15857*t31071;
  t31630 = t31609 + t31613 + t31622;
  t31632 = -1.*t15132*t15801*t31043;
  t31642 = t31632 + t31099 + t31101;
  t31570 = -0.2000000000018*t15132*t15801*t31043;
  t31576 = -0.2000000000018*t15857*t31056;
  t31586 = 6.000000000054e-7*t15857*t31071;
  t31603 = t21556*t31601;
  t31631 = t19816*t31630;
  t31655 = t20297*t31642;
  t31659 = -1.*t22440*t31601;
  t31663 = -1.*t21993*t31630;
  t31666 = -1.*t21811*t31642;
  t31673 = t31659 + t31663 + t31666;
  t31676 = 0.2*t31673;
  t31677 = t21993*t31601;
  t31681 = t22610*t31630;
  t31687 = t21671*t31642;
  t31694 = t31677 + t31681 + t31687;
  t31705 = -0.099999*t31694;
  t31706 = t21811*t31601;
  t31709 = t21671*t31630;
  t31710 = t21718*t31642;
  t31711 = t31706 + t31709 + t31710;
  t31712 = -0.3*t31711;
  t31719 = t31570 + t31576 + t31586 + t31603 + t31631 + t31655 + t31676 + t31705 + t31712;
  t31743 = 3.e-6*t15368*t31052*t15801*t15807;
  t31744 = -3.e-6*t31052*t15857*t15861;
  t31751 = -1.*t19831*t31052*t15801*t15899;
  t31758 = t31743 + t31744 + t31751;
  t31767 = t15132*t31052*t15801*t15807;
  t31769 = t31052*t15857*t15861;
  t31773 = -3.e-6*t15368*t31052*t15801*t15899;
  t31775 = t31767 + t31769 + t31773;
  t31782 = -1.*t31052*t15801*t15807*t15857;
  t31783 = t21643*t31052*t15861;
  t31787 = -3.e-6*t31052*t15801*t15857*t15899;
  t31791 = t31782 + t31783 + t31787;
  t31920 = -1.*t15132*t15801*t15807*t31043;
  t31926 = -1.000000000009*t15857*t31043*t15861;
  t31929 = -3.e-6*t15132*t15801*t31043*t15899;
  t31930 = t31920 + t31926 + t31929;
  t31933 = t15132*t31043*t15861;
  t31934 = t31143 + t31933 + t31147;
  t31937 = 3.e-6*t15801*t15807*t15857*t31043;
  t31938 = -3.e-6*t15132*t31043*t15861;
  t31941 = 9.e-12*t15801*t15857*t31043*t15899;
  t31942 = t31937 + t31938 + t31941;
  t31987 = -1.*t19831*t15801*t15807*t31043;
  t31988 = t31987 + t31135;
  t31991 = -3.e-6*t15368*t15801*t15807*t31043;
  t31993 = -1.*t15132*t15801*t31043*t15899;
  t31994 = t31991 + t31993;
  t32000 = -3.e-6*t15801*t15807*t15857*t31043;
  t32001 = t15801*t15857*t31043*t15899;
  t32004 = t32000 + t32001;
  t32044 = -3.e-6*t15801*t15857*t31043;
  t32045 = -3.e-6*t15368*t15807*t31043*t15861;
  t32046 = t19831*t31043*t15861*t15899;
  t32047 = t32044 + t32045 + t32046;
  t32050 = t15801*t15857*t31043;
  t32051 = -1.*t15132*t15807*t31043*t15861;
  t32054 = 3.e-6*t15368*t31043*t15861*t15899;
  t32055 = t32050 + t32051 + t32054;
  t32057 = t21643*t15801*t31043;
  t32058 = t15807*t15857*t31043*t15861;
  t32060 = 3.e-6*t15857*t31043*t15861*t15899;
  t32061 = t32057 + t32058 + t32060;
  t31833 = t23090*t31127;
  t31836 = t23327*t31136;
  t31841 = t23398*t31150;
  t31843 = -1.*t23410*t31127;
  t31844 = 1.000000000009*t17920*t31136;
  t31847 = -1.*t23474*t31150;
  t31848 = t31843 + t31844 + t31847;
  t31858 = 0.2*t31848;
  t31870 = -1.8e-11*t17920*t31127;
  t31882 = t23513*t31136;
  t31883 = t23410*t31150;
  t31884 = t31870 + t31882 + t31883;
  t31887 = -0.099999*t31884;
  t31888 = t23513*t31127;
  t31889 = t23652*t31136;
  t31892 = -1.000000000009*t17920*t31150;
  t31894 = t31888 + t31889 + t31892;
  t31896 = -0.3*t31894;
  t31898 = t31833 + t31836 + t31841 + t31858 + t31887 + t31896;
  t30168 = 5.4e-18*t15903;
  t30169 = 0.100000000003*t22676;
  t30171 = -0.200000000003*t23513;
  t30175 = t30168 + t30169 + t30171;
  t30184 = -0.2000000000048*t15903;
  t30191 = t30186 + t17920;
  t30193 = 0.100000000003*t30191;
  t30195 = t30184 + t23383 + t30193;
  t30204 = 0.1000000000039*t15903;
  t30205 = t30186 + t19954;
  t30206 = -0.200000000003*t30205;
  t30209 = 3.e-7*t23513;
  t30210 = t30204 + t30206 + t30209;
  t30226 = t30225 + t19954;
  t30416 = t30225 + t17920;
  t31903 = -0.2000000000018*t15801*t15807*t15857*t31043;
  t31905 = 0.2000000000018*t15132*t31043*t15861;
  t31906 = -6.000000000054e-7*t15801*t15857*t31043*t15899;
  t31931 = t21556*t31930;
  t31935 = t20297*t31934;
  t31943 = t19816*t31942;
  t31944 = t21993*t31930;
  t31964 = t21671*t31934;
  t31965 = t22610*t31942;
  t31966 = t31944 + t31964 + t31965;
  t31967 = -0.099999*t31966;
  t31968 = t21811*t31930;
  t31969 = t21718*t31934;
  t31971 = t21671*t31942;
  t31972 = t31968 + t31969 + t31971;
  t31973 = -0.3*t31972;
  t31974 = -1.*t22440*t31930;
  t31975 = -1.*t21811*t31934;
  t31976 = -1.*t21993*t31942;
  t31977 = t31974 + t31975 + t31976;
  t31979 = 0.2*t31977;
  t31980 = t31903 + t31905 + t31906 + t31931 + t31935 + t31943 + t31967 + t31973 + t31979;
  t32342 = 1.000000000009*t31052*t15801*t15857;
  t32343 = -1.*t15132*t31234;
  t32346 = 3.e-6*t15132*t31245;
  t32348 = t32342 + t32343 + t32346;
  t32352 = 3.e-6*t15132*t31052*t15801;
  t32353 = 3.e-6*t15857*t31234;
  t32363 = -9.e-12*t15857*t31245;
  t32364 = t32352 + t32353 + t32363;
  t32372 = -1.*t15132*t31052*t15801;
  t32373 = t32372 + t31280 + t31283;
  t32041 = 0.2000000000018*t15801*t15857*t31043;
  t32423 = 3.e-6*t15132*t31056;
  t32425 = -9.e-12*t15132*t31071;
  t32427 = t32044 + t32423 + t32425;
  t32432 = t32050 + t31590 + t31591;
  t32439 = 1.000000000009*t15132*t15801*t31043;
  t32440 = t15857*t31056;
  t32442 = -3.e-6*t15857*t31071;
  t32443 = t32439 + t32440 + t32442;
  t32492 = 3.e-6*t15132*t31340;
  t32493 = -1.*t15132*t31071;
  t32497 = t32492 + t32493;
  t32506 = -9.e-12*t15857*t31340;
  t32507 = t32506 + t31101;
  t32273 = t23398*t31601;
  t32274 = t23090*t31630;
  t32275 = t23327*t31642;
  t32276 = -1.000000000009*t17920*t31601;
  t32278 = t23513*t31630;
  t32282 = t23652*t31642;
  t32285 = t32276 + t32278 + t32282;
  t32289 = -0.3*t32285;
  t32290 = t23410*t31601;
  t32291 = -1.8e-11*t17920*t31630;
  t32298 = t23513*t31642;
  t32301 = t32290 + t32291 + t32298;
  t32302 = -0.099999*t32301;
  t32306 = -1.*t23474*t31601;
  t32310 = -1.*t23410*t31630;
  t32314 = 1.000000000009*t17920*t31642;
  t32316 = t32306 + t32310 + t32314;
  t32318 = 0.2*t32316;
  t32322 = t32273 + t32274 + t32275 + t32289 + t32302 + t32318;
  t31984 = -6.000000000054e-7*t15368*t15801*t15807*t31043;
  t31986 = -1.*t15794*t15801*t31043*t15899;
  t31990 = t19816*t31988;
  t31996 = t20297*t31994;
  t32005 = t21556*t32004;
  t32006 = t21671*t31988;
  t32010 = t21718*t31994;
  t32011 = t21811*t32004;
  t32013 = t32006 + t32010 + t32011;
  t32015 = -0.3*t32013;
  t32016 = -1.*t21993*t31988;
  t32020 = -1.*t21811*t31994;
  t32025 = -1.*t22440*t32004;
  t32029 = t32016 + t32020 + t32025;
  t32031 = 0.2*t32029;
  t32033 = t22610*t31988;
  t32034 = t21671*t31994;
  t32035 = t21993*t32004;
  t32036 = t32033 + t32034 + t32035;
  t32037 = -0.099999*t32036;
  t32038 = t31984 + t31986 + t31990 + t31996 + t32005 + t32015 + t32031 + t32037;
  t32564 = -1.*t31052*t15807*t15861;
  t32565 = t31043*t15899;
  t32568 = t32564 + t32565;
  t32577 = t19831*t32568;
  t32578 = t32577 + t31274;
  t32580 = 3.e-6*t15368*t32568;
  t32585 = t15132*t31245;
  t32588 = t32580 + t32585;
  t32604 = 3.e-6*t15857*t32568;
  t32608 = -1.*t15857*t31245;
  t32614 = t32604 + t32608;
  t32127 = t23090*t31349;
  t32128 = t23327*t31359;
  t32131 = t23398*t31371;
  t32132 = -1.*t23410*t31349;
  t32134 = 1.000000000009*t17920*t31359;
  t32135 = -1.*t23474*t31371;
  t32136 = t32132 + t32134 + t32135;
  t32137 = 0.2*t32136;
  t32139 = -1.8e-11*t17920*t31349;
  t32142 = t23513*t31359;
  t32144 = t23410*t31371;
  t32147 = t32139 + t32142 + t32144;
  t32151 = -0.099999*t32147;
  t32154 = t23513*t31349;
  t32156 = t23652*t31359;
  t32160 = -1.000000000009*t17920*t31371;
  t32172 = t32154 + t32156 + t32160;
  t32181 = -0.3*t32172;
  t32204 = t32127 + t32128 + t32131 + t32137 + t32151 + t32181;
  t32485 = 6.000000000054e-7*t15857*t31340;
  t32486 = -0.2000000000018*t15857*t31071;
  t32501 = t21556*t32497;
  t32505 = t20297*t31371;
  t32509 = t19816*t32507;
  t32513 = t21993*t32497;
  t32516 = t21671*t31371;
  t32517 = t22610*t32507;
  t32518 = t32513 + t32516 + t32517;
  t32520 = -0.099999*t32518;
  t32523 = t21811*t32497;
  t32525 = t21718*t31371;
  t32527 = t21671*t32507;
  t32529 = t32523 + t32525 + t32527;
  t32532 = -0.3*t32529;
  t32536 = -1.*t22440*t32497;
  t32538 = -1.*t21811*t31371;
  t32539 = -1.*t21993*t32507;
  t32541 = t32536 + t32538 + t32539;
  t32543 = 0.2*t32541;
  t32544 = t32485 + t32486 + t32501 + t32505 + t32509 + t32520 + t32532 + t32543;
  t32770 = -1.*t31052*t15807;
  t32771 = t31043*t15861*t15899;
  t32775 = t32770 + t32771;
  t32781 = t19831*t32775;
  t32783 = t31353 + t32781;
  t32791 = t15132*t31340;
  t32794 = 3.e-6*t15368*t32775;
  t32796 = t32791 + t32794;
  t32804 = -1.*t15857*t31340;
  t32808 = 3.e-6*t15857*t32775;
  t32810 = t32804 + t32808;
  t31737 = t15794*t31052*t15801*t15807;
  t31739 = 0.2000000000018*t31052*t15857*t15861;
  t31742 = -6.000000000054e-7*t15368*t31052*t15801*t15899;
  t31760 = t19816*t31758;
  t31781 = t20297*t31775;
  t31794 = t21556*t31791;
  t31800 = t21671*t31758;
  t31805 = t21718*t31775;
  t31808 = t21811*t31791;
  t31812 = t31800 + t31805 + t31808;
  t31815 = -0.3*t31812;
  t31817 = -1.*t21993*t31758;
  t31818 = -1.*t21811*t31775;
  t31819 = -1.*t22440*t31791;
  t31820 = t31817 + t31818 + t31819;
  t31821 = 0.2*t31820;
  t31822 = t22610*t31758;
  t31823 = t21671*t31775;
  t31824 = t21993*t31791;
  t31825 = t31822 + t31823 + t31824;
  t31827 = -0.099999*t31825;
  t31829 = t31737 + t31739 + t31742 + t31760 + t31781 + t31794 + t31815 + t31821 + t31827;
  t32569 = 6.000000000054e-7*t15368*t32568;
  t32571 = t15794*t31245;
  t32579 = t19816*t32578;
  t32594 = t20297*t32588;
  t32615 = t21556*t32614;
  t32620 = t21671*t32578;
  t32630 = t21718*t32588;
  t32634 = t21811*t32614;
  t32653 = t32620 + t32630 + t32634;
  t32656 = -0.3*t32653;
  t32679 = -1.*t21993*t32578;
  t32682 = -1.*t21811*t32588;
  t32696 = -1.*t22440*t32614;
  t32712 = t32679 + t32682 + t32696;
  t32718 = 0.2*t32712;
  t32723 = t22610*t32578;
  t32736 = t21671*t32588;
  t32753 = t21993*t32614;
  t32756 = t32723 + t32736 + t32753;
  t32757 = -0.099999*t32756;
  t32758 = t32569 + t32571 + t32579 + t32594 + t32615 + t32656 + t32718 + t32757;
  t32095 = t23090*t31257;
  t32102 = t23327*t31275;
  t32103 = t23398*t31285;
  t32104 = -1.*t23410*t31257;
  t32105 = 1.000000000009*t17920*t31275;
  t32107 = -1.*t23474*t31285;
  t32108 = t32104 + t32105 + t32107;
  t32109 = 0.2*t32108;
  t32110 = -1.8e-11*t17920*t31257;
  t32112 = t23513*t31275;
  t32113 = t23410*t31285;
  t32115 = t32110 + t32112 + t32113;
  t32116 = -0.099999*t32115;
  t32117 = t23513*t31257;
  t32118 = t23652*t31275;
  t32121 = -1.000000000009*t17920*t31285;
  t32122 = t32117 + t32118 + t32121;
  t32124 = -0.3*t32122;
  t32125 = t32095 + t32102 + t32103 + t32109 + t32116 + t32124;
  t32335 = -0.2000000000018*t15132*t31052*t15801;
  t32338 = -0.2000000000018*t15857*t31234;
  t32340 = 6.000000000054e-7*t15857*t31245;
  t32351 = t21556*t32348;
  t32368 = t19816*t32364;
  t32377 = t20297*t32373;
  t32378 = -1.*t22440*t32348;
  t32380 = -1.*t21993*t32364;
  t32390 = -1.*t21811*t32373;
  t32393 = t32378 + t32380 + t32390;
  t32395 = 0.2*t32393;
  t32396 = t21993*t32348;
  t32399 = t22610*t32364;
  t32403 = t21671*t32373;
  t32404 = t32396 + t32399 + t32403;
  t32407 = -0.099999*t32404;
  t32410 = t21811*t32348;
  t32411 = t21671*t32364;
  t32413 = t21718*t32373;
  t32414 = t32410 + t32411 + t32413;
  t32416 = -0.3*t32414;
  t32417 = t32335 + t32338 + t32340 + t32351 + t32368 + t32377 + t32395 + t32407 + t32416;
  t32768 = t15794*t31340;
  t32777 = 6.000000000054e-7*t15368*t32775;
  t32919 = t32044 + t31353 + t32781;
  t32927 = t32050 + t32791 + t32794;
  t32931 = t32057 + t32804 + t32808;
  t33059 = t15807*t31043;
  t33076 = t31052*t15861*t15899;
  t33080 = t33059 + t33076;
  t33172 = -3.e-6*t15368*t31052*t15801*t15807;
  t33175 = 3.e-6*t31052*t15857*t15861;
  t33176 = t19831*t31052*t15801*t15899;
  t33180 = t33172 + t33175 + t33176;
  t33184 = -1.*t15132*t31052*t15801*t15807;
  t33199 = -1.*t31052*t15857*t15861;
  t33204 = 3.e-6*t15368*t31052*t15801*t15899;
  t33207 = t33184 + t33199 + t33204;
  t33214 = t31052*t15801*t15807*t15857;
  t33227 = -1.*t21643*t31052*t15861;
  t33241 = 3.e-6*t31052*t15801*t15857*t15899;
  t33249 = t33214 + t33227 + t33241;
  t33159 = -1.*t15794*t31052*t15801*t15807;
  t33160 = -0.2000000000018*t31052*t15857*t15861;
  t33164 = 6.000000000054e-7*t15368*t31052*t15801*t15899;
  t33182 = t19816*t33180;
  t33210 = t20297*t33207;
  t33255 = t21556*t33249;
  t33256 = t21671*t33180;
  t33257 = t21718*t33207;
  t33258 = t21811*t33249;
  t33259 = t33256 + t33257 + t33258;
  t33261 = -0.3*t33259;
  t33267 = -1.*t21993*t33180;
  t33270 = -1.*t21811*t33207;
  t33271 = -1.*t22440*t33249;
  t33274 = t33267 + t33270 + t33271;
  t33276 = 0.2*t33274;
  t33277 = t22610*t33180;
  t33283 = t21671*t33207;
  t33288 = t21993*t33249;
  t33291 = t33277 + t33283 + t33288;
  t33292 = -0.099999*t33291;
  t33293 = t33159 + t33160 + t33164 + t33182 + t33210 + t33255 + t33261 + t33276 + t33292;
  t33103 = -3.e-6*t31052*t15801*t15857;
  t33106 = t19831*t33080;
  t33121 = t33103 + t32580 + t33106;
  t33130 = t31052*t15801*t15857;
  t33131 = t15132*t32568;
  t33141 = 3.e-6*t15368*t33080;
  t33144 = t33130 + t33131 + t33141;
  t33151 = t21643*t31052*t15801;
  t33153 = -1.*t15857*t32568;
  t33155 = 3.e-6*t15857*t33080;
  t33157 = t33151 + t33153 + t33155;
  t33342 = t19831*t31234;
  t33348 = t33342 + t33141;
  t33353 = t15132*t33080;
  t33361 = t31252 + t33353;
  t33381 = -1.*t15857*t33080;
  t33383 = t32353 + t33381;
  t33338 = 6.000000000054e-7*t15368*t31234;
  t33339 = t15794*t33080;
  t33349 = t19816*t33348;
  t33376 = t20297*t33361;
  t33384 = t21556*t33383;
  t33388 = t21671*t33348;
  t33392 = t21718*t33361;
  t33400 = t21811*t33383;
  t33457 = t33388 + t33392 + t33400;
  t33462 = -0.3*t33457;
  t33511 = -1.*t21993*t33348;
  t33522 = -1.*t21811*t33361;
  t33523 = -1.*t22440*t33383;
  t33525 = t33511 + t33522 + t33523;
  t33527 = 0.2*t33525;
  t33530 = t22610*t33348;
  t33539 = t21671*t33361;
  t33566 = t21993*t33383;
  t33567 = t33530 + t33539 + t33566;
  t33568 = -0.099999*t33567;
  t33569 = t33338 + t33339 + t33349 + t33376 + t33384 + t33462 + t33527 + t33568;
  t33575 = t23090*t33121;
  t33588 = t23327*t33144;
  t33590 = t23398*t33157;
  t33591 = -1.*t23410*t33121;
  t33592 = 1.000000000009*t17920*t33144;
  t33593 = -1.*t23474*t33157;
  t33595 = t33591 + t33592 + t33593;
  t33598 = 0.2*t33595;
  t33603 = -1.8e-11*t17920*t33121;
  t33604 = t23513*t33144;
  t33605 = t23410*t33157;
  t33648 = t33603 + t33604 + t33605;
  t33658 = -0.099999*t33648;
  t33666 = t23513*t33121;
  t33676 = t23652*t33144;
  t33685 = -1.000000000009*t17920*t33157;
  t33689 = t33666 + t33676 + t33685;
  t33691 = -0.3*t33689;
  t33702 = t33575 + t33588 + t33590 + t33598 + t33658 + t33691;
  t33782 = -1.000000000009*t31052*t15801*t15857;
  t33783 = -1.*t15132*t32568;
  t33788 = 3.e-6*t15132*t33080;
  t33795 = t33782 + t33783 + t33788;
  t33797 = -3.e-6*t15132*t31052*t15801;
  t33815 = -9.e-12*t15857*t33080;
  t33816 = t33797 + t32604 + t33815;
  t33823 = t15132*t31052*t15801;
  t33850 = t33823 + t33153 + t33155;
  t33718 = 0.2000000000018*t15132*t31052*t15801;
  t33719 = -0.2000000000018*t15857*t32568;
  t33779 = 6.000000000054e-7*t15857*t33080;
  t33796 = t21556*t33795;
  t33817 = t19816*t33816;
  t33875 = t20297*t33850;
  t33905 = -1.*t22440*t33795;
  t33925 = -1.*t21993*t33816;
  t33947 = -1.*t21811*t33850;
  t33948 = t33905 + t33925 + t33947;
  t34001 = 0.2*t33948;
  t34072 = t21993*t33795;
  t34073 = t22610*t33816;
  t34074 = t21671*t33850;
  t34097 = t34072 + t34073 + t34074;
  t34100 = -0.099999*t34097;
  t34101 = t21811*t33795;
  t34105 = t21671*t33816;
  t34106 = t21718*t33850;
  t34112 = t34101 + t34105 + t34106;
  t34120 = -0.3*t34112;
  t34140 = t33718 + t33719 + t33779 + t33796 + t33817 + t33875 + t34001 + t34100 + t34120;
  t34157 = t19831*t31052*t15801*t15807;
  t34163 = t34157 + t33204;
  t34170 = t15132*t31052*t15801*t15899;
  t34171 = t31743 + t34170;
  t34176 = 3.e-6*t31052*t15801*t15807*t15857;
  t34197 = -1.*t31052*t15801*t15857*t15899;
  t34199 = t34176 + t34197;
  t34539 = 1.000000000009*t31052*t15857*t15861;
  t34540 = 3.e-6*t15132*t31052*t15801*t15899;
  t34543 = t31767 + t34539 + t34540;
  t34563 = -3.e-6*t31052*t15801*t15807*t15857;
  t34565 = 3.e-6*t15132*t31052*t15861;
  t34569 = -9.e-12*t31052*t15801*t15857*t15899;
  t34585 = t34563 + t34565 + t34569;
  t34625 = -1.*t15132*t31052*t15861;
  t34631 = t33214 + t34625 + t33241;
  t34741 = 3.e-6*t15368*t31052*t15807*t15861;
  t34742 = -1.*t19831*t31052*t15861*t15899;
  t34757 = t31251 + t34741 + t34742;
  t35072 = t15132*t31052*t15807*t15861;
  t35082 = -3.e-6*t15368*t31052*t15861*t15899;
  t35089 = t31263 + t35072 + t35082;
  t35091 = -1.*t31052*t15807*t15857*t15861;
  t35092 = -3.e-6*t31052*t15857*t15861*t15899;
  t35162 = t31279 + t35091 + t35092;
  t31049 = -0.2000000000018*t15801*t15857*t31043;
  t31060 = t15794*t31056;
  t31073 = 6.000000000054e-7*t15368*t31071;
  t31087 = t19816*t31084;
  t31097 = t20297*t31093;
  t31104 = t21556*t31103;
  t31193 = t21671*t31084;
  t31196 = t21718*t31093;
  t31197 = t21811*t31103;
  t31200 = t31193 + t31196 + t31197;
  t31201 = -0.3*t31200;
  t31202 = -1.*t21993*t31084;
  t31203 = -1.*t21811*t31093;
  t31208 = -1.*t22440*t31103;
  t31210 = t31202 + t31203 + t31208;
  t31211 = 0.2*t31210;
  t31214 = t22610*t31084;
  t31215 = t21671*t31093;
  t31216 = t21993*t31103;
  t31217 = t31214 + t31215 + t31216;
  t31219 = -0.099999*t31217;
  t35406 = t31049 + t31060 + t31073 + t31087 + t31097 + t31104 + t31201 + t31211 + t31219;
  t34152 = 6.000000000054e-7*t15368*t31052*t15801*t15807;
  t34153 = t15794*t31052*t15801*t15899;
  t34169 = t19816*t34163;
  t34175 = t20297*t34171;
  t34204 = t21556*t34199;
  t34208 = t21671*t34163;
  t34211 = t21718*t34171;
  t34215 = t21811*t34199;
  t34304 = t34208 + t34211 + t34215;
  t34307 = -0.3*t34304;
  t34315 = -1.*t21993*t34163;
  t34334 = -1.*t21811*t34171;
  t34340 = -1.*t22440*t34199;
  t34342 = t34315 + t34334 + t34340;
  t34347 = 0.2*t34342;
  t34349 = t22610*t34163;
  t34354 = t21671*t34171;
  t34357 = t21993*t34199;
  t34362 = t34349 + t34354 + t34357;
  t34363 = -0.099999*t34362;
  t34377 = t34152 + t34153 + t34169 + t34175 + t34204 + t34307 + t34347 + t34363;
  t35421 = t31252 + t31256;
  t35436 = t31273 + t31274;
  t35440 = t31280 + t31283;
  t35878 = 3.e-6*t15132*t31234;
  t35887 = -1.*t15132*t33080;
  t35889 = t35878 + t35887;
  t35897 = -9.e-12*t15857*t31234;
  t35901 = t35897 + t33155;
  t34394 = t23090*t33180;
  t34395 = t23327*t33207;
  t34396 = t23398*t33249;
  t34400 = -1.*t23410*t33180;
  t34403 = 1.000000000009*t17920*t33207;
  t34408 = -1.*t23474*t33249;
  t34409 = t34400 + t34403 + t34408;
  t34410 = 0.2*t34409;
  t34414 = -1.8e-11*t17920*t33180;
  t34419 = t23513*t33207;
  t34422 = t23410*t33249;
  t34432 = t34414 + t34419 + t34422;
  t34438 = -0.099999*t34432;
  t34439 = t23513*t33180;
  t34447 = t23652*t33207;
  t34456 = -1.000000000009*t17920*t33249;
  t34459 = t34439 + t34447 + t34456;
  t34462 = -0.3*t34459;
  t34502 = t34394 + t34395 + t34396 + t34410 + t34438 + t34462;
  t35675 = t23090*t33348;
  t35712 = t23327*t33361;
  t35748 = t23398*t33383;
  t35756 = -1.*t23410*t33348;
  t35809 = 1.000000000009*t17920*t33361;
  t35820 = -1.*t23474*t33383;
  t35821 = t35756 + t35809 + t35820;
  t35822 = 0.2*t35821;
  t35823 = -1.8e-11*t17920*t33348;
  t35826 = t23513*t33361;
  t35828 = t23410*t33383;
  t35831 = t35823 + t35826 + t35828;
  t35833 = -0.099999*t35831;
  t35835 = t23513*t33348;
  t35839 = t23652*t33361;
  t35841 = -1.000000000009*t17920*t33383;
  t35843 = t35835 + t35839 + t35841;
  t35844 = -0.3*t35843;
  t35849 = t35675 + t35712 + t35748 + t35822 + t35833 + t35844;
  t31192 = var2[4]*t31190;
  t31332 = var2[3]*t31326;
  t31513 = var2[5]*t31506;
  t31569 = var2[21]*t31567;
  t31733 = var2[19]*t31719;
  t34508 = 0.2000000000018*t31052*t15801*t15807*t15857;
  t34529 = -0.2000000000018*t15132*t31052*t15861;
  t34538 = 6.000000000054e-7*t31052*t15801*t15857*t15899;
  t34544 = t21556*t34543;
  t34589 = t19816*t34585;
  t34643 = t20297*t34631;
  t34655 = -1.*t22440*t34543;
  t34656 = -1.*t21993*t34585;
  t34657 = -1.*t21811*t34631;
  t34659 = t34655 + t34656 + t34657;
  t34660 = 0.2*t34659;
  t34661 = t21993*t34543;
  t34662 = t22610*t34585;
  t34663 = t21671*t34631;
  t34665 = t34661 + t34662 + t34663;
  t34666 = -0.099999*t34665;
  t34667 = t21811*t34543;
  t34669 = t21671*t34585;
  t34670 = t21718*t34631;
  t34672 = t34667 + t34669 + t34670;
  t34675 = -0.3*t34672;
  t34688 = t34508 + t34529 + t34538 + t34544 + t34589 + t34643 + t34660 + t34666 + t34675;
  t36163 = 3.e-6*t15132*t32568;
  t36167 = -9.e-12*t15132*t33080;
  t36181 = t31251 + t36163 + t36167;
  t36185 = t31263 + t33783 + t33788;
  t36201 = -1.000000000009*t15132*t31052*t15801;
  t36205 = t15857*t32568;
  t36206 = -3.e-6*t15857*t33080;
  t36207 = t36201 + t36205 + t36206;
  t35864 = 6.000000000054e-7*t15857*t31234;
  t35876 = -0.2000000000018*t15857*t33080;
  t35891 = t21556*t35889;
  t35893 = t20297*t33383;
  t35907 = t19816*t35901;
  t35912 = t21993*t35889;
  t35915 = t21671*t33383;
  t35919 = t22610*t35901;
  t35941 = t35912 + t35915 + t35919;
  t35947 = -0.099999*t35941;
  t35958 = t21811*t35889;
  t35966 = t21718*t33383;
  t35972 = t21671*t35901;
  t35974 = t35958 + t35966 + t35972;
  t35980 = -0.3*t35974;
  t35990 = -1.*t22440*t35889;
  t35995 = -1.*t21811*t33383;
  t36004 = -1.*t21993*t35901;
  t36005 = t35990 + t35995 + t36004;
  t36008 = 0.2*t36005;
  t36012 = t35864 + t35876 + t35891 + t35893 + t35907 + t35947 + t35980 + t36008;
  t36082 = t23398*t33795;
  t36085 = t23090*t33816;
  t36092 = t23327*t33850;
  t36094 = -1.000000000009*t17920*t33795;
  t36099 = t23513*t33816;
  t36100 = t23652*t33850;
  t36103 = t36094 + t36099 + t36100;
  t36106 = -0.3*t36103;
  t36108 = t23410*t33795;
  t36109 = -1.8e-11*t17920*t33816;
  t36113 = t23513*t33850;
  t36114 = t36108 + t36109 + t36113;
  t36115 = -0.099999*t36114;
  t36118 = -1.*t23474*t33795;
  t36120 = -1.*t23410*t33816;
  t36122 = 1.000000000009*t17920*t33850;
  t36124 = t36118 + t36120 + t36122;
  t36128 = 0.2*t36124;
  t36129 = t36082 + t36085 + t36092 + t36106 + t36115 + t36128;
  p_output1[0]=t15794*t15801*t15807 + 0.2000000000018*t15857*t15861 - 6.000000000054e-7*t15368*t15801*t15899 + t19816*t19837 + t20297*t21179 + t21556*t21665 - 0.3*(t19837*t21671 + t21179*t21718 + t21665*t21811) + 0.2*(-1.*t21179*t21811 - 1.*t19837*t21993 - 1.*t21665*t22440) - 0.099999*(t21179*t21671 + t21665*t21993 + t19837*t22610) + var1[0] + var2[0] + t29023*var2[4] + t28189*var2[5] + t24855*var2[19] + t23848*var2[21] + var2[5]*(t30154*var2[4] + (t29047 + t29050 + t19816*t29056 + t20297*t29285 + t21556*t29300 - 0.3*(t21671*t29056 + t21718*t29285 + t21811*t29300) - 0.099999*(t22610*t29056 + t21671*t29285 + t21993*t29300) + 0.2*(-1.*t21993*t29056 - 1.*t21811*t29285 - 1.*t22440*t29300))*var2[5] + t29585*var2[19] + t29426*var2[21]) + var2[21]*(t30658*var2[4] + t29426*var2[5] + t30559*var2[19] + (-0.099999*(-1.8e-11*t15903*t19837 + t21665*t22692 + t21179*t23410) + t19837*t30175 + t21179*t30195 + t21665*t30210 - 0.3*(-1.000000000009*t15903*t21665 + t19837*t23410 + t21179*t30226) + 0.2*(1.000000000009*t15903*t21179 - 1.*t19837*t22692 - 1.*t21665*t30416))*var2[21]) + var2[19]*(t30906*var2[4] + t29585*var2[5] + (-0.2000000000018*t15132*t15801*t15807 - 6.000000000054e-7*t15132*t15801*t15899 + t30678 + t20297*t30922 + t19816*t30938 + t21556*t30942 - 0.3*(t21718*t30922 + t21671*t30938 + t21811*t30942) - 0.099999*(t21671*t30922 + t22610*t30938 + t21993*t30942) + 0.2*(-1.*t21811*t30922 - 1.*t21993*t30938 - 1.*t22440*t30942))*var2[19] + t30559*var2[21]) + var2[4]*((t29047 + t29050 + t30678 + t19816*t30686 + t20297*t30715 + t21556*t30738 - 0.3*(t21671*t30686 + t21718*t30715 + t21811*t30738) - 0.099999*(t22610*t30686 + t21671*t30715 + t21993*t30738) + 0.2*(-1.*t21993*t30686 - 1.*t21811*t30715 - 1.*t22440*t30738))*var2[4] + t30154*var2[5] + t30906*var2[19] + t30658*var2[21]) + var3[0] + t29023*var3[4] + t28189*var3[5] + t24855*var3[19] + t23848*var3[21] - 1.*var4[0];
  p_output1[1]=t31049 + t31060 + t31073 + t31087 + t31097 + t31104 + t31192 + t31201 + t31211 + t31219 + t31332 + t31513 + t31569 + t31733 + var1[1] + var2[1] + var2[21]*(t32125*var2[3] + t31898*var2[4] + t32204*var2[5] + t32322*var2[19] + (t30175*t31084 + t30195*t31093 + t30210*t31103 - 0.3*(t23410*t31084 + t30226*t31093 - 1.000000000009*t15903*t31103) - 0.099999*(-1.8e-11*t15903*t31084 + t23410*t31093 + t22692*t31103) + 0.2*(-1.*t22692*t31084 + 1.000000000009*t15903*t31093 - 1.*t30416*t31103))*var2[21]) + var2[4]*(t31829*var2[3] + (-1.*t15794*t15807*t15861*t31043 + 6.000000000054e-7*t15368*t15861*t15899*t31043 + t32041 + t19816*t32047 + t20297*t32055 + t21556*t32061 - 0.3*(t21671*t32047 + t21718*t32055 + t21811*t32061) - 0.099999*(t22610*t32047 + t21671*t32055 + t21993*t32061) + 0.2*(-1.*t21993*t32047 - 1.*t21811*t32055 - 1.*t22440*t32061))*var2[4] + t32038*var2[5] + t31980*var2[19] + t31898*var2[21]) + var2[3]*((t32041 + t32768 + t32777 + t19816*t32919 + t20297*t32927 + t21556*t32931 - 0.3*(t21671*t32919 + t21718*t32927 + t21811*t32931) - 0.099999*(t22610*t32919 + t21671*t32927 + t21993*t32931) + 0.2*(-1.*t21993*t32919 - 1.*t21811*t32927 - 1.*t22440*t32931))*var2[3] + t31829*var2[4] + t32758*var2[5] + t32417*var2[19] + t32125*var2[21]) + var2[5]*(t32758*var2[3] + t32038*var2[4] + (t32768 + t32777 + t19816*t32783 + t20297*t32796 + t21556*t32810 - 0.3*(t21671*t32783 + t21718*t32796 + t21811*t32810) - 0.099999*(t22610*t32783 + t21671*t32796 + t21993*t32810) + 0.2*(-1.*t21993*t32783 - 1.*t21811*t32796 - 1.*t22440*t32810))*var2[5] + t32544*var2[19] + t32204*var2[21]) + var2[19]*(t32417*var2[3] + t31980*var2[4] + t32544*var2[5] + (-0.2000000000018*t15132*t31056 + 6.000000000054e-7*t15132*t31071 + t32041 + t19816*t32427 + t20297*t32432 + t21556*t32443 - 0.3*(t21671*t32427 + t21718*t32432 + t21811*t32443) - 0.099999*(t22610*t32427 + t21671*t32432 + t21993*t32443) + 0.2*(-1.*t21993*t32427 - 1.*t21811*t32432 - 1.*t22440*t32443))*var2[19] + t32322*var2[21]) + var3[1] + t31326*var3[3] + t31190*var3[4] + t31506*var3[5] + t31719*var3[19] + t31567*var3[21] - 1.*var4[1];
  p_output1[2]=0.2000000000018*t15801*t15857*t31052 + t15794*t32568 + 6.000000000054e-7*t15368*t33080 + t19816*t33121 + t20297*t33144 + t21556*t33157 - 0.3*(t21671*t33121 + t21718*t33144 + t21811*t33157) - 0.099999*(t22610*t33121 + t21671*t33144 + t21993*t33157) + 0.2*(-1.*t21993*t33121 - 1.*t21811*t33144 - 1.*t22440*t33157) + var1[2] + var2[2] + (t31192 + t31332 + t31513 + t31569 + t31733)*var2[3] + t35406*var2[3] + t33293*var2[4] + t33569*var2[5] + t34140*var2[19] + t33702*var2[21] + var2[21]*(t31567*var2[3] + t34502*var2[4] + t35849*var2[5] + t36129*var2[19] + (t30175*t33121 + t30195*t33144 + t30210*t33157 - 0.3*(t23410*t33121 + t30226*t33144 - 1.000000000009*t15903*t33157) - 0.099999*(-1.8e-11*t15903*t33121 + t23410*t33144 + t22692*t33157) + 0.2*(-1.*t22692*t33121 + 1.000000000009*t15903*t33144 - 1.*t30416*t33157))*var2[21]) + var2[4]*(t31190*var2[3] + (t15794*t15807*t15861*t31052 - 6.000000000054e-7*t15368*t15861*t15899*t31052 + t31223 + t19816*t34757 + t20297*t35089 + t21556*t35162 - 0.3*(t21671*t34757 + t21718*t35089 + t21811*t35162) - 0.099999*(t22610*t34757 + t21671*t35089 + t21993*t35162) + 0.2*(-1.*t21993*t34757 - 1.*t21811*t35089 - 1.*t22440*t35162))*var2[4] + t34377*var2[5] + t34688*var2[19] + t34502*var2[21]) + var2[5]*(t31506*var2[3] + t34377*var2[4] + (t31236 + t31248 + t19816*t35421 + t20297*t35436 + t21556*t35440 - 0.3*(t21671*t35421 + t21718*t35436 + t21811*t35440) - 0.099999*(t22610*t35421 + t21671*t35436 + t21993*t35440) + 0.2*(-1.*t21993*t35421 - 1.*t21811*t35436 - 1.*t22440*t35440))*var2[5] + t36012*var2[19] + t35849*var2[21]) + var2[19]*(t31719*var2[3] + t34688*var2[4] + t36012*var2[5] + (t31223 - 0.2000000000018*t15132*t32568 + 6.000000000054e-7*t15132*t33080 + t19816*t36181 + t20297*t36185 + t21556*t36207 - 0.3*(t21671*t36181 + t21718*t36185 + t21811*t36207) - 0.099999*(t22610*t36181 + t21671*t36185 + t21993*t36207) + 0.2*(-1.*t21993*t36181 - 1.*t21811*t36185 - 1.*t22440*t36207))*var2[19] + t36129*var2[21]) + var3[2] + t35406*var3[3] + t33293*var3[4] + t33569*var3[5] + t34140*var3[19] + t33702*var3[21] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RightBackFoot_BackStance.hh"

namespace BackStance
{

void ddh_RightBackFoot_BackStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
