/*
 * Automatically Generated from Mathematica.
 * Tue 28 May 2019 22:42:10 GMT-04:00
 */

#ifdef MATLAB_MEX_FILE
#include <stdexcept>
#include <cmath>
#include<math.h>
/**
 * Copied from Wolfram Mathematica C Definitions file mdefs.hpp
 * Changed marcos to inline functions (Eric Cousineau)
 */
inline double Power(double x, double y) { return pow(x, y); }
inline double Sqrt(double x) { return sqrt(x); }

inline double Abs(double x) { return fabs(x); }

inline double Exp(double x) { return exp(x); }
inline double Log(double x) { return log(x); }

inline double Sin(double x) { return sin(x); }
inline double Cos(double x) { return cos(x); }
inline double Tan(double x) { return tan(x); }

inline double ArcSin(double x) { return asin(x); }
inline double ArcCos(double x) { return acos(x); }
inline double ArcTan(double x) { return atan(x); }

/* update ArcTan function to use atan2 instead. */
inline double ArcTan(double x, double y) { return atan2(y,x); }

inline double Sinh(double x) { return sinh(x); }
inline double Cosh(double x) { return cosh(x); }
inline double Tanh(double x) { return tanh(x); }

const double E	= 2.71828182845904523536029;
const double Pi = 3.14159265358979323846264;
const double Degree = 0.01745329251994329576924;

inline double Sec(double x) { return 1/cos(x); }
inline double Csc(double x) { return 1/sin(x); }

#endif

/*
 * Sub functions
 */
static void output1(double *p_output1,const double *var1,const double *var2,const double *var3,const double *var4)
{
  double t382;
  double t407;
  double t476;
  double t911;
  double t1308;
  double t1319;
  double t1403;
  double t1462;
  double t1578;
  double t912;
  double t1074;
  double t1210;
  double t1246;
  double t1967;
  double t1969;
  double t2663;
  double t1740;
  double t1757;
  double t2750;
  double t2154;
  double t2157;
  double t2221;
  double t2239;
  double t2250;
  double t2482;
  double t3522;
  double t3528;
  double t3544;
  double t3562;
  double t3598;
  double t3599;
  double t3606;
  double t3627;
  double t3675;
  double t3708;
  double t3764;
  double t3794;
  double t3797;
  double t3790;
  double t2998;
  double t3774;
  double t3801;
  double t3987;
  double t3995;
  double t3923;
  double t3980;
  double t4016;
  double t4045;
  double t4061;
  double t4051;
  double t3985;
  double t4005;
  double t4006;
  double t4007;
  double t4011;
  double t4014;
  double t4017;
  double t4019;
  double t4024;
  double t4026;
  double t4027;
  double t4028;
  double t4029;
  double t4032;
  double t4034;
  double t4035;
  double t4039;
  double t4047;
  double t4049;
  double t4054;
  double t4055;
  double t4057;
  double t4058;
  double t4060;
  double t4064;
  double t4065;
  double t4068;
  double t4069;
  double t4075;
  double t4084;
  double t4093;
  double t4094;
  double t4101;
  double t4103;
  double t4104;
  double t3571;
  double t3572;
  double t3587;
  double t3592;
  double t3597;
  double t2703;
  double t3048;
  double t3133;
  double t3234;
  double t3464;
  double t1287;
  double t1439;
  double t1961;
  double t1981;
  double t2126;
  double t4114;
  double t4115;
  double t4116;
  double t4120;
  double t4122;
  double t4123;
  double t3856;
  double t3861;
  double t4126;
  double t4127;
  double t4128;
  double t4129;
  double t3792;
  double t3804;
  double t4107;
  double t4108;
  double t4109;
  double t4121;
  double t4124;
  double t4130;
  double t4132;
  double t4133;
  double t4134;
  double t4135;
  double t4136;
  double t4137;
  double t4138;
  double t4139;
  double t4140;
  double t4141;
  double t4142;
  double t4143;
  double t4144;
  double t4145;
  double t4146;
  double t4147;
  double t506;
  double t559;
  double t594;
  double t660;
  double t4152;
  double t4153;
  double t4155;
  double t4158;
  double t4159;
  double t4161;
  double t4162;
  double t4163;
  double t4150;
  double t4151;
  double t4154;
  double t4160;
  double t4164;
  double t4165;
  double t4166;
  double t4167;
  double t4168;
  double t4169;
  double t4170;
  double t4171;
  double t4172;
  double t4173;
  double t4174;
  double t4175;
  double t4176;
  double t4177;
  double t4178;
  double t4179;
  double t4180;
  double t4186;
  double t4187;
  double t4188;
  double t4189;
  double t4193;
  double t4194;
  double t4195;
  double t4196;
  double t4198;
  double t4199;
  double t4200;
  double t4201;
  double t4183;
  double t4184;
  double t4185;
  double t4192;
  double t4197;
  double t4202;
  double t4203;
  double t4204;
  double t4205;
  double t4206;
  double t4207;
  double t4251;
  double t4260;
  double t4276;
  double t4287;
  double t4330;
  double t4336;
  double t4339;
  double t4340;
  double t4343;
  double t4349;
  double t4360;
  double t4405;
  double t4409;
  double t4424;
  double t4425;
  double t4441;
  double t4442;
  double t4444;
  double t4659;
  double t4664;
  double t4666;
  double t4726;
  double t4727;
  double t4814;
  double t4819;
  double t4839;
  double t4863;
  double t4866;
  double t4876;
  double t4884;
  double t4901;
  double t4990;
  double t5017;
  double t4589;
  double t4590;
  double t4591;
  double t4598;
  double t4603;
  double t4605;
  double t4606;
  double t4618;
  double t4619;
  double t4620;
  double t4621;
  double t4622;
  double t4623;
  double t4625;
  double t4626;
  double t4630;
  double t4636;
  double t4640;
  double t4644;
  double t4369;
  double t4401;
  double t5319;
  double t5320;
  double t5324;
  double t5326;
  double t5328;
  double t5331;
  double t4808;
  double t4809;
  double t4838;
  double t4867;
  double t4902;
  double t4941;
  double t4942;
  double t4943;
  double t4944;
  double t4947;
  double t4951;
  double t4954;
  double t4955;
  double t4961;
  double t4966;
  double t4967;
  double t4969;
  double t4970;
  double t4971;
  double t4972;
  double t4973;
  double t5076;
  double t5077;
  double t5085;
  double t5089;
  double t5091;
  double t5092;
  double t5093;
  double t5095;
  double t5096;
  double t5098;
  double t5099;
  double t5100;
  double t5105;
  double t5107;
  double t5121;
  double t5122;
  double t5182;
  double t5276;
  double t5277;
  double t5368;
  double t5369;
  double t5370;
  double t5371;
  double t5374;
  double t5376;
  double t5393;
  double t5395;
  double t5456;
  double t5457;
  double t5043;
  double t5044;
  double t5045;
  double t5047;
  double t5049;
  double t5050;
  double t5051;
  double t5053;
  double t5054;
  double t5055;
  double t5056;
  double t5057;
  double t5058;
  double t5062;
  double t5064;
  double t5067;
  double t5068;
  double t5069;
  double t5070;
  double t5318;
  double t5569;
  double t5573;
  double t5575;
  double t5577;
  double t5583;
  double t5584;
  double t4655;
  double t4658;
  double t4668;
  double t4753;
  double t4767;
  double t4773;
  double t4774;
  double t4777;
  double t4779;
  double t4786;
  double t4787;
  double t4791;
  double t4792;
  double t4793;
  double t4794;
  double t4795;
  double t4796;
  double t4797;
  double t4798;
  double t4799;
  double t4801;
  double t5365;
  double t5366;
  double t5367;
  double t5372;
  double t5438;
  double t5472;
  double t5485;
  double t5486;
  double t5520;
  double t5541;
  double t5542;
  double t5545;
  double t5547;
  double t5548;
  double t5549;
  double t5550;
  double t5551;
  double t5552;
  double t5554;
  double t5555;
  double t5556;
  double t5557;
  double t5610;
  double t5615;
  double t5614;
  double t5616;
  double t5617;
  double t5619;
  double t5620;
  double t5621;
  double t5645;
  double t5646;
  double t5647;
  double t5649;
  double t5651;
  double t5652;
  double t5653;
  double t5654;
  double t5656;
  double t5657;
  double t5658;
  double t5659;
  double t5642;
  double t5643;
  double t5644;
  double t5650;
  double t5655;
  double t5660;
  double t5663;
  double t5666;
  double t5667;
  double t5668;
  double t5669;
  double t5670;
  double t5675;
  double t5676;
  double t5677;
  double t5678;
  double t5679;
  double t5680;
  double t5682;
  double t5683;
  double t5684;
  double t5685;
  double t5623;
  double t5624;
  double t5625;
  double t5626;
  double t5628;
  double t5629;
  double t5630;
  double t5631;
  double t5634;
  double t5635;
  double t5637;
  double t5638;
  double t5708;
  double t5709;
  double t5710;
  double t5712;
  double t5713;
  double t5714;
  double t5716;
  double t5717;
  double t5718;
  double t5719;
  double t5721;
  double t5722;
  double t5723;
  double t5724;
  double t5726;
  double t5729;
  double t5730;
  double t5731;
  double t5707;
  double t5711;
  double t5715;
  double t5720;
  double t5725;
  double t5732;
  double t5733;
  double t5734;
  double t5735;
  double t5737;
  double t5738;
  double t5739;
  double t5740;
  double t5741;
  double t5742;
  double t5743;
  double t5744;
  double t5745;
  double t5746;
  double t5747;
  double t5748;
  double t5749;
  double t5752;
  double t5753;
  double t5754;
  double t5757;
  double t5758;
  double t5760;
  double t5761;
  double t5762;
  double t5765;
  double t5766;
  double t5767;
  double t5755;
  double t5756;
  double t5759;
  double t5764;
  double t5768;
  double t5770;
  double t5771;
  double t5773;
  double t5774;
  double t5775;
  double t5776;
  double t5777;
  double t5778;
  double t5779;
  double t5780;
  double t5781;
  double t5782;
  double t5783;
  double t5784;
  double t5785;
  double t5786;
  double t5789;
  double t5790;
  double t5791;
  double t5792;
  double t5793;
  double t5794;
  double t5795;
  double t5796;
  double t5797;
  double t5798;
  double t5799;
  double t5800;
  double t5801;
  double t5802;
  double t5803;
  double t5804;
  double t5805;
  double t5806;
  double t5807;
  double t5814;
  double t5815;
  double t5816;
  double t5817;
  double t5819;
  double t5820;
  double t5821;
  double t5822;
  double t5825;
  double t5826;
  double t5811;
  double t5812;
  double t5813;
  double t5818;
  double t5823;
  double t5827;
  double t5828;
  double t5829;
  double t5830;
  double t5831;
  double t5832;
  double t5833;
  double t5834;
  double t5835;
  double t5836;
  double t5837;
  double t5838;
  double t5839;
  double t5840;
  double t5841;
  double t5842;
  double t5843;
  double t5849;
  double t5850;
  double t5852;
  double t5853;
  double t5855;
  double t5856;
  double t5857;
  double t5858;
  double t5860;
  double t5862;
  double t5866;
  double t5867;
  double t5913;
  double t5914;
  double t5915;
  double t5916;
  double t5918;
  double t5919;
  double t5921;
  double t5923;
  double t5924;
  double t5925;
  double t5961;
  double t5962;
  double t5964;
  double t5965;
  double t5966;
  double t5969;
  double t5970;
  double t5971;
  double t5999;
  double t6000;
  double t6002;
  double t6003;
  double t6005;
  double t6006;
  double t6007;
  double t6008;
  double t6010;
  double t6013;
  double t6014;
  double t6015;
  double t5888;
  double t5889;
  double t5890;
  double t5891;
  double t5892;
  double t5893;
  double t5894;
  double t5896;
  double t5897;
  double t5898;
  double t5899;
  double t5900;
  double t5901;
  double t5902;
  double t5903;
  double t5904;
  double t5905;
  double t5906;
  double t5907;
  double t4979;
  double t4980;
  double t4981;
  double t4986;
  double t4988;
  double t4992;
  double t4995;
  double t4997;
  double t4999;
  double t5000;
  double t5001;
  double t5002;
  double t5003;
  double t5021;
  double t5036;
  double t5910;
  double t5911;
  double t5912;
  double t5917;
  double t5920;
  double t5926;
  double t5927;
  double t5928;
  double t5929;
  double t5930;
  double t5931;
  double t5932;
  double t5933;
  double t5934;
  double t5935;
  double t5936;
  double t5937;
  double t5938;
  double t5939;
  double t5940;
  double t5943;
  double t5946;
  double t6186;
  double t6187;
  double t6188;
  double t6189;
  double t6191;
  double t6192;
  double t6193;
  double t6196;
  double t6198;
  double t6217;
  double t5996;
  double t6275;
  double t6276;
  double t6278;
  double t6280;
  double t6286;
  double t6287;
  double t6288;
  double t6290;
  double t6513;
  double t6514;
  double t6519;
  double t6551;
  double t6558;
  double t6115;
  double t6116;
  double t6117;
  double t6121;
  double t6122;
  double t6125;
  double t6126;
  double t6129;
  double t6131;
  double t6133;
  double t6134;
  double t6137;
  double t6139;
  double t6142;
  double t6143;
  double t6145;
  double t6150;
  double t6151;
  double t6153;
  double t5950;
  double t5951;
  double t5963;
  double t5968;
  double t5974;
  double t5975;
  double t5976;
  double t5978;
  double t5979;
  double t5980;
  double t5982;
  double t5984;
  double t5985;
  double t5987;
  double t5988;
  double t5989;
  double t5990;
  double t5991;
  double t5992;
  double t5993;
  double t5994;
  double t6902;
  double t6907;
  double t6916;
  double t6929;
  double t6937;
  double t6939;
  double t6953;
  double t6964;
  double t6973;
  double t6991;
  double t7009;
  double t6067;
  double t6068;
  double t6069;
  double t6070;
  double t6071;
  double t6072;
  double t6073;
  double t6074;
  double t6075;
  double t6076;
  double t6077;
  double t6079;
  double t6080;
  double t6081;
  double t6083;
  double t6084;
  double t6086;
  double t6087;
  double t6088;
  double t6481;
  double t6484;
  double t6527;
  double t6534;
  double t6577;
  double t6617;
  double t6620;
  double t6638;
  double t6656;
  double t6671;
  double t6675;
  double t6677;
  double t6697;
  double t6705;
  double t6707;
  double t6710;
  double t6714;
  double t6729;
  double t6730;
  double t6801;
  double t6810;
  double t7210;
  double t7236;
  double t7237;
  double t7275;
  double t7276;
  double t7281;
  double t7284;
  double t7286;
  double t7315;
  double t7316;
  double t7317;
  double t5846;
  double t5847;
  double t5848;
  double t5854;
  double t5859;
  double t5868;
  double t5869;
  double t5870;
  double t5871;
  double t5872;
  double t5873;
  double t5874;
  double t5875;
  double t5877;
  double t5878;
  double t5879;
  double t5881;
  double t5882;
  double t5883;
  double t5884;
  double t5885;
  double t5886;
  double t6924;
  double t6925;
  double t6938;
  double t6965;
  double t7013;
  double t7017;
  double t7021;
  double t7024;
  double t7026;
  double t7030;
  double t7031;
  double t7032;
  double t7033;
  double t7036;
  double t7037;
  double t7040;
  double t7041;
  double t7045;
  double t7047;
  double t7053;
  double t7060;
  double t6039;
  double t6040;
  double t6041;
  double t6042;
  double t6043;
  double t6044;
  double t6045;
  double t6046;
  double t6047;
  double t6048;
  double t6049;
  double t6050;
  double t6054;
  double t6055;
  double t6056;
  double t6057;
  double t6063;
  double t6064;
  double t6065;
  double t6174;
  double t6175;
  double t6176;
  double t6190;
  double t6197;
  double t6221;
  double t6224;
  double t6226;
  double t6227;
  double t6228;
  double t6229;
  double t6230;
  double t6231;
  double t6232;
  double t6233;
  double t6234;
  double t6236;
  double t6237;
  double t6238;
  double t6239;
  double t6251;
  double t6264;
  double t7078;
  double t7238;
  double t7621;
  double t7684;
  double t7718;
  double t7805;
  double t7806;
  double t7807;
  double t7879;
  double t7886;
  double t7887;
  double t7890;
  double t7892;
  double t7920;
  double t7922;
  double t7923;
  double t7927;
  double t7928;
  double t7929;
  double t7931;
  double t7834;
  double t7856;
  double t7876;
  double t7891;
  double t7924;
  double t7933;
  double t7934;
  double t7935;
  double t7936;
  double t7938;
  double t7944;
  double t7982;
  double t8055;
  double t8059;
  double t8096;
  double t8162;
  double t8184;
  double t8188;
  double t8199;
  double t8212;
  double t8247;
  double t8249;
  double t7809;
  double t7811;
  double t7812;
  double t7817;
  double t7822;
  double t7823;
  double t7824;
  double t7827;
  double t7828;
  double t7830;
  double t7831;
  double t8419;
  double t8432;
  double t8445;
  double t8446;
  double t8452;
  double t8467;
  double t8414;
  double t8416;
  double t8440;
  double t8447;
  double t8526;
  double t8532;
  double t8533;
  double t8541;
  double t8549;
  double t8550;
  double t8553;
  double t8555;
  double t8556;
  double t8557;
  double t8560;
  double t8561;
  double t8584;
  double t8585;
  double t8589;
  double t8594;
  double t8599;
  double t8602;
  double t8607;
  double t8617;
  double t8624;
  double t8629;
  double t8747;
  double t8753;
  double t8759;
  double t8762;
  double t8764;
  double t8769;
  double t8774;
  double t8776;
  double t8779;
  double t8780;
  double t8781;
  double t8782;
  double t8783;
  double t8784;
  double t10464;
  double t11945;
  double t11978;
  double t11983;
  double t11995;
  double t11996;
  double t12000;
  double t12051;
  double t12084;
  double t8791;
  double t8792;
  double t8897;
  double t11984;
  double t12002;
  double t12114;
  double t12120;
  double t12149;
  double t12191;
  double t12252;
  double t12255;
  double t12274;
  double t12276;
  double t12281;
  double t12289;
  double t12290;
  double t12312;
  double t12319;
  double t12327;
  double t12380;
  double t12393;
  double t12405;
  double t12472;
  double t12473;
  double t12539;
  double t12541;
  double t12551;
  double t12556;
  double t12574;
  double t12885;
  double t12887;
  double t12888;
  double t12892;
  double t12960;
  double t12961;
  double t13038;
  double t13040;
  double t13042;
  double t13260;
  double t13261;
  double t13262;
  double t13449;
  double t13462;
  double t13463;
  double t13466;
  double t13467;
  double t13554;
  double t5612;
  double t5618;
  double t5622;
  double t5627;
  double t5633;
  double t5639;
  double t5689;
  double t5691;
  double t5692;
  double t5694;
  double t5695;
  double t5697;
  double t5698;
  double t5699;
  double t5700;
  double t5701;
  double t5702;
  double t5703;
  double t5704;
  double t5705;
  double t5706;
  double t13732;
  double t12463;
  double t12468;
  double t12523;
  double t12545;
  double t12584;
  double t12586;
  double t12593;
  double t12594;
  double t12595;
  double t12596;
  double t12615;
  double t12619;
  double t12630;
  double t12636;
  double t12646;
  double t12647;
  double t12648;
  double t12668;
  double t12678;
  double t12680;
  double t12693;
  double t14132;
  double t14134;
  double t14136;
  double t14312;
  double t14313;
  double t14314;
  double t14318;
  double t14319;
  double t12699;
  double t12700;
  double t12702;
  double t12703;
  double t12705;
  double t12708;
  double t12711;
  double t12713;
  double t12714;
  double t12728;
  double t12729;
  double t12730;
  double t12747;
  double t12751;
  double t12756;
  double t12757;
  double t12759;
  double t12763;
  double t12767;
  double t14265;
  double t14266;
  double t14267;
  double t14268;
  double t14270;
  double t14271;
  double t14272;
  double t14274;
  double t14275;
  double t14294;
  double t14299;
  double t14300;
  double t14301;
  double t14303;
  double t14304;
  double t14305;
  double t14306;
  double t14307;
  double t14308;
  double t5687;
  double t5751;
  double t5788;
  double t5809;
  double t5845;
  double t12881;
  double t12882;
  double t12883;
  double t12889;
  double t13039;
  double t13045;
  double t13047;
  double t13050;
  double t13130;
  double t13138;
  double t13140;
  double t13143;
  double t13208;
  double t13217;
  double t13222;
  double t13223;
  double t13224;
  double t13225;
  double t13233;
  double t13238;
  double t13240;
  double t13241;
  double t14590;
  double t14593;
  double t14594;
  double t14596;
  double t14598;
  double t14599;
  double t14600;
  double t14601;
  double t14310;
  double t14311;
  double t14316;
  double t14317;
  double t14323;
  double t14325;
  double t14326;
  double t14327;
  double t14331;
  double t14332;
  double t14333;
  double t14336;
  double t14382;
  double t14383;
  double t14385;
  double t14386;
  double t14392;
  double t14396;
  double t14404;
  double t14407;
  double t14412;
  double t14462;
  double t14464;
  double t14470;
  double t14473;
  double t14477;
  double t14481;
  double t14482;
  double t14485;
  double t14486;
  double t14487;
  double t14488;
  double t14530;
  double t14558;
  double t14559;
  double t14561;
  double t14562;
  double t14563;
  double t14564;
  double t14568;
  t382 = Cos(var1[19]);
  t407 = -1.*t382;
  t476 = 1. + t407;
  t911 = Cos(var1[4]);
  t1308 = Cos(var1[21]);
  t1319 = -1.*t1308;
  t1403 = 1. + t1319;
  t1462 = -3.e-6*t1403;
  t1578 = Sin(var1[21]);
  t912 = Cos(var1[5]);
  t1074 = Sin(var1[19]);
  t1210 = Sin(var1[4]);
  t1246 = Sin(var1[5]);
  t1967 = 3.e-6*t1578;
  t1969 = t1462 + t1967;
  t2663 = 3.e-13*var1[21];
  t1740 = -3.e-6*t1578;
  t1757 = t1462 + t1740;
  t2750 = -9.e-12*t1403;
  t2154 = 3.e-6*t476*t911*t912;
  t2157 = -3.e-6*t1074*t1210;
  t2221 = -9.e-12*t476;
  t2239 = 1. + t2221;
  t2250 = -1.*t2239*t911*t1246;
  t2482 = t2154 + t2157 + t2250;
  t3522 = t382*t911*t912;
  t3528 = t1074*t1210;
  t3544 = -3.e-6*t476*t911*t1246;
  t3562 = t3522 + t3528 + t3544;
  t3598 = -1.*t911*t912*t1074;
  t3599 = -1.000000000009*t476;
  t3606 = 1. + t3599;
  t3627 = t3606*t1210;
  t3675 = -3.e-6*t911*t1074*t1246;
  t3708 = t3598 + t3627 + t3675;
  t3764 = 3.e-6*t1403;
  t3794 = -1.000000000009*t1403;
  t3797 = 1. + t3794;
  t3790 = 9.e-12*t1403;
  t2998 = -1.*t1578;
  t3774 = t3764 + t1740;
  t3801 = t3764 + t1967;
  t3987 = 3.e-6*t1308;
  t3995 = t3987 + t1740;
  t3923 = -3.e-6*t1308;
  t3980 = t3923 + t1740;
  t4016 = -9.e-12*t1578;
  t4045 = t3987 + t1967;
  t4061 = t3923 + t1967;
  t4051 = 9.e-12*t1578;
  t3985 = -0.200000000003*t3980;
  t4005 = 0.100000000003*t3995;
  t4006 = 5.4e-18*t1578;
  t4007 = 1.e-7 + t3985 + t4005 + t4006;
  t4011 = t4007*t2482;
  t4014 = 3.e-7*t3995;
  t4017 = t1319 + t4016;
  t4019 = 0.100000000003*t4017;
  t4024 = -0.2000000000048*t1578;
  t4026 = 3.e-13 + t4014 + t4019 + t4024;
  t4027 = t4026*t3562;
  t4028 = 3.e-7*t3980;
  t4029 = t1308 + t4016;
  t4032 = -0.200000000003*t4029;
  t4034 = 0.1000000000039*t1578;
  t4035 = 3.e-13 + t4028 + t4032 + t4034;
  t4039 = t4035*t3708;
  t4047 = -1.*t4045*t2482;
  t4049 = 1.000000000009*t1578*t3562;
  t4054 = t1319 + t4051;
  t4055 = -1.*t4054*t3708;
  t4057 = t4047 + t4049 + t4055;
  t4058 = 0.2*t4057;
  t4060 = -1.8e-11*t1578*t2482;
  t4064 = t4061*t3562;
  t4065 = t4045*t3708;
  t4068 = t4060 + t4064 + t4065;
  t4069 = -0.099999*t4068;
  t4075 = t4061*t2482;
  t4084 = t1308 + t4051;
  t4093 = t4084*t3562;
  t4094 = -1.000000000009*t1578*t3708;
  t4101 = t4075 + t4093 + t4094;
  t4103 = -0.3*t4101;
  t4104 = t4011 + t4027 + t4039 + t4058 + t4069 + t4103;
  t3571 = 0.1000000000039*t1403;
  t3572 = 3.e-7*t1757;
  t3587 = t2750 + t1578;
  t3592 = -0.200000000003*t3587;
  t3597 = t2663 + t3571 + t3572 + t3592;
  t2703 = -0.2000000000048*t1403;
  t3048 = t2750 + t2998;
  t3133 = 0.100000000003*t3048;
  t3234 = 3.e-7*t1969;
  t3464 = t2663 + t2703 + t3133 + t3234;
  t1287 = 1.e-7*var1[21];
  t1439 = 5.4e-18*t1403;
  t1961 = -0.200000000003*t1757;
  t1981 = 0.100000000003*t1969;
  t2126 = t1287 + t1439 + t1961 + t1981;
  t4114 = -1.*t382*t911*t912;
  t4115 = -1.000000000009*t1074*t1210;
  t4116 = -3.e-6*t382*t911*t1246;
  t4120 = t4114 + t4115 + t4116;
  t4122 = t382*t1210;
  t4123 = t3598 + t4122 + t3675;
  t3856 = -1.8e-11*t1403;
  t3861 = 1. + t3856;
  t4126 = 3.e-6*t911*t912*t1074;
  t4127 = -3.e-6*t382*t1210;
  t4128 = 9.e-12*t911*t1074*t1246;
  t4129 = t4126 + t4127 + t4128;
  t3792 = t3790 + t1578;
  t3804 = t3790 + t2998;
  t4107 = -0.2000000000018*t911*t912*t1074;
  t4108 = 0.2000000000018*t382*t1210;
  t4109 = -6.000000000054e-7*t911*t1074*t1246;
  t4121 = t3597*t4120;
  t4124 = t3464*t4123;
  t4130 = t2126*t4129;
  t4132 = t3801*t4120;
  t4133 = t3774*t4123;
  t4134 = t3861*t4129;
  t4135 = t4132 + t4133 + t4134;
  t4136 = -0.099999*t4135;
  t4137 = t3797*t4120;
  t4138 = t3792*t4123;
  t4139 = t3774*t4129;
  t4140 = t4137 + t4138 + t4139;
  t4141 = -0.3*t4140;
  t4142 = -1.*t3804*t4120;
  t4143 = -1.*t3797*t4123;
  t4144 = -1.*t3801*t4129;
  t4145 = t4142 + t4143 + t4144;
  t4146 = 0.2*t4145;
  t4147 = t4107 + t4108 + t4109 + t4121 + t4124 + t4130 + t4136 + t4141 + t4146;
  t506 = -1.8e-12*t476;
  t559 = -1. + t382;
  t594 = 0.2*t559;
  t660 = t506 + t594;
  t4152 = -1.*t2239*t911*t912;
  t4153 = t4152 + t3544;
  t4155 = -3.e-6*t476*t911*t912;
  t4158 = -1.*t382*t911*t1246;
  t4159 = t4155 + t4158;
  t4161 = -3.e-6*t911*t912*t1074;
  t4162 = t911*t1074*t1246;
  t4163 = t4161 + t4162;
  t4150 = -6.000000000054e-7*t476*t911*t912;
  t4151 = -1.*t660*t911*t1246;
  t4154 = t2126*t4153;
  t4160 = t3464*t4159;
  t4164 = t3597*t4163;
  t4165 = t3774*t4153;
  t4166 = t3792*t4159;
  t4167 = t3797*t4163;
  t4168 = t4165 + t4166 + t4167;
  t4169 = -0.3*t4168;
  t4170 = -1.*t3801*t4153;
  t4171 = -1.*t3797*t4159;
  t4172 = -1.*t3804*t4163;
  t4173 = t4170 + t4171 + t4172;
  t4174 = 0.2*t4173;
  t4175 = t3861*t4153;
  t4176 = t3774*t4159;
  t4177 = t3801*t4163;
  t4178 = t4175 + t4176 + t4177;
  t4179 = -0.099999*t4178;
  t4180 = t4150 + t4151 + t4154 + t4160 + t4164 + t4169 + t4174 + t4179;
  t4186 = -3.e-6*t911*t1074;
  t4187 = -3.e-6*t476*t912*t1210;
  t4188 = t2239*t1210*t1246;
  t4189 = t4186 + t4187 + t4188;
  t4193 = t911*t1074;
  t4194 = -1.*t382*t912*t1210;
  t4195 = 3.e-6*t476*t1210*t1246;
  t4196 = t4193 + t4194 + t4195;
  t4198 = t3606*t911;
  t4199 = t912*t1074*t1210;
  t4200 = 3.e-6*t1074*t1210*t1246;
  t4201 = t4198 + t4199 + t4200;
  t4183 = 0.2000000000018*t911*t1074;
  t4184 = -1.*t660*t912*t1210;
  t4185 = 6.000000000054e-7*t476*t1210*t1246;
  t4192 = t2126*t4189;
  t4197 = t3464*t4196;
  t4202 = t3597*t4201;
  t4203 = t3774*t4189;
  t4204 = t3792*t4196;
  t4205 = t3797*t4201;
  t4206 = t4203 + t4204 + t4205;
  t4207 = -0.3*t4206;
  t4251 = -1.*t3801*t4189;
  t4260 = -1.*t3797*t4196;
  t4276 = -1.*t3804*t4201;
  t4287 = t4251 + t4260 + t4276;
  t4330 = 0.2*t4287;
  t4336 = t3861*t4189;
  t4339 = t3774*t4196;
  t4340 = t3801*t4201;
  t4343 = t4336 + t4339 + t4340;
  t4349 = -0.099999*t4343;
  t4360 = t4183 + t4184 + t4185 + t4192 + t4197 + t4202 + t4207 + t4330 + t4349;
  t4405 = t2239*t911*t1246;
  t4409 = t4155 + t4405;
  t4424 = 3.e-6*t476*t911*t1246;
  t4425 = t4114 + t4424;
  t4441 = t911*t912*t1074;
  t4442 = 3.e-6*t911*t1074*t1246;
  t4444 = t4441 + t4442;
  t4659 = -3.e-6*t382*t911*t912;
  t4664 = t382*t911*t1246;
  t4666 = t4659 + t4664;
  t4726 = 9.e-12*t911*t912*t1074;
  t4727 = t4726 + t3675;
  t4814 = t2239*t912*t1210;
  t4819 = t4814 + t4195;
  t4839 = 3.e-6*t476*t912*t1210;
  t4863 = t382*t1210*t1246;
  t4866 = t4839 + t4863;
  t4876 = 3.e-6*t912*t1074*t1210;
  t4884 = -1.*t1074*t1210*t1246;
  t4901 = t4876 + t4884;
  t4990 = -9.e-12*t1308;
  t5017 = 9.e-12*t1308;
  t4589 = t4007*t4153;
  t4590 = t4026*t4159;
  t4591 = t4035*t4163;
  t4598 = -1.*t4045*t4153;
  t4603 = 1.000000000009*t1578*t4159;
  t4605 = -1.*t4054*t4163;
  t4606 = t4598 + t4603 + t4605;
  t4618 = 0.2*t4606;
  t4619 = -1.8e-11*t1578*t4153;
  t4620 = t4061*t4159;
  t4621 = t4045*t4163;
  t4622 = t4619 + t4620 + t4621;
  t4623 = -0.099999*t4622;
  t4625 = t4061*t4153;
  t4626 = t4084*t4159;
  t4630 = -1.000000000009*t1578*t4163;
  t4636 = t4625 + t4626 + t4630;
  t4640 = -0.3*t4636;
  t4644 = t4589 + t4590 + t4591 + t4618 + t4623 + t4640;
  t4369 = -1.*t660*t911*t912;
  t4401 = 6.000000000054e-7*t476*t911*t1246;
  t5319 = 3.e-6*t1074*t1210;
  t5320 = t4155 + t5319 + t4405;
  t5324 = -1.*t1074*t1210;
  t5326 = t4114 + t5324 + t4424;
  t5328 = -1.*t3606*t1210;
  t5331 = t4441 + t5328 + t4442;
  t4808 = 6.000000000054e-7*t476*t912*t1210;
  t4809 = t660*t1210*t1246;
  t4838 = t2126*t4819;
  t4867 = t3464*t4866;
  t4902 = t3597*t4901;
  t4941 = t3774*t4819;
  t4942 = t3792*t4866;
  t4943 = t3797*t4901;
  t4944 = t4941 + t4942 + t4943;
  t4947 = -0.3*t4944;
  t4951 = -1.*t3801*t4819;
  t4954 = -1.*t3797*t4866;
  t4955 = -1.*t3804*t4901;
  t4961 = t4951 + t4954 + t4955;
  t4966 = 0.2*t4961;
  t4967 = t3861*t4819;
  t4969 = t3774*t4866;
  t4970 = t3801*t4901;
  t4971 = t4967 + t4969 + t4970;
  t4972 = -0.099999*t4971;
  t4973 = t4808 + t4809 + t4838 + t4867 + t4902 + t4947 + t4966 + t4972;
  t5076 = t4007*t4189;
  t5077 = t4026*t4196;
  t5085 = t4035*t4201;
  t5089 = -1.*t4045*t4189;
  t5091 = 1.000000000009*t1578*t4196;
  t5092 = -1.*t4054*t4201;
  t5093 = t5089 + t5091 + t5092;
  t5095 = 0.2*t5093;
  t5096 = -1.8e-11*t1578*t4189;
  t5098 = t4061*t4196;
  t5099 = t4045*t4201;
  t5100 = t5096 + t5098 + t5099;
  t5105 = -0.099999*t5100;
  t5107 = t4061*t4189;
  t5121 = t4084*t4196;
  t5122 = -1.000000000009*t1578*t4201;
  t5182 = t5107 + t5121 + t5122;
  t5276 = -0.3*t5182;
  t5277 = t5076 + t5077 + t5085 + t5095 + t5105 + t5276;
  t5368 = -1.000000000009*t911*t1074;
  t5369 = t382*t912*t1210;
  t5370 = 3.e-6*t382*t1210*t1246;
  t5371 = t5368 + t5369 + t5370;
  t5374 = -3.e-6*t382*t911;
  t5376 = -3.e-6*t912*t1074*t1210;
  t5393 = -9.e-12*t1074*t1210*t1246;
  t5395 = t5374 + t5376 + t5393;
  t5456 = t382*t911;
  t5457 = t5456 + t4199 + t4200;
  t5043 = t4035*t4120;
  t5044 = t4026*t4123;
  t5045 = t4007*t4129;
  t5047 = -1.000000000009*t1578*t4120;
  t5049 = t4084*t4123;
  t5050 = t4061*t4129;
  t5051 = t5047 + t5049 + t5050;
  t5053 = -0.3*t5051;
  t5054 = -1.*t4054*t4120;
  t5055 = 1.000000000009*t1578*t4123;
  t5056 = -1.*t4045*t4129;
  t5057 = t5054 + t5055 + t5056;
  t5058 = 0.2*t5057;
  t5062 = t4045*t4120;
  t5064 = t4061*t4123;
  t5067 = -1.8e-11*t1578*t4129;
  t5068 = t5062 + t5064 + t5067;
  t5069 = -0.099999*t5068;
  t5070 = t5043 + t5044 + t5045 + t5053 + t5058 + t5069;
  t5318 = -0.2000000000018*t1074*t1210;
  t5569 = t4114 + t5324 + t4116;
  t5573 = 3.e-6*t382*t911*t912;
  t5575 = 9.e-12*t382*t911*t1246;
  t5577 = t5573 + t5319 + t5575;
  t5583 = -1.000000000009*t382*t1210;
  t5584 = t4441 + t5583 + t4442;
  t4655 = -6.000000000054e-7*t911*t912*t1074;
  t4658 = 0.2000000000018*t911*t1074*t1246;
  t4668 = t3597*t4666;
  t4753 = t2126*t4727;
  t4767 = t3464*t4163;
  t4773 = -1.*t3804*t4666;
  t4774 = -1.*t3801*t4727;
  t4777 = -1.*t3797*t4163;
  t4779 = t4773 + t4774 + t4777;
  t4786 = 0.2*t4779;
  t4787 = t3801*t4666;
  t4791 = t3861*t4727;
  t4792 = t3774*t4163;
  t4793 = t4787 + t4791 + t4792;
  t4794 = -0.099999*t4793;
  t4795 = t3797*t4666;
  t4796 = t3774*t4727;
  t4797 = t3792*t4163;
  t4798 = t4795 + t4796 + t4797;
  t4799 = -0.3*t4798;
  t4801 = t4655 + t4658 + t4668 + t4753 + t4767 + t4786 + t4794 + t4799;
  t5365 = 0.2000000000018*t382*t911;
  t5366 = 0.2000000000018*t912*t1074*t1210;
  t5367 = 6.000000000054e-7*t1074*t1210*t1246;
  t5372 = t3597*t5371;
  t5438 = t2126*t5395;
  t5472 = t3464*t5457;
  t5485 = -1.*t3804*t5371;
  t5486 = -1.*t3801*t5395;
  t5520 = -1.*t3797*t5457;
  t5541 = t5485 + t5486 + t5520;
  t5542 = 0.2*t5541;
  t5545 = t3801*t5371;
  t5547 = t3861*t5395;
  t5548 = t3774*t5457;
  t5549 = t5545 + t5547 + t5548;
  t5550 = -0.099999*t5549;
  t5551 = t3797*t5371;
  t5552 = t3774*t5395;
  t5554 = t3792*t5457;
  t5555 = t5551 + t5552 + t5554;
  t5556 = -0.3*t5555;
  t5557 = t5365 + t5366 + t5367 + t5372 + t5438 + t5472 + t5542 + t5550 + t5556;
  t5610 = Sin(var1[3]);
  t5615 = Cos(var1[3]);
  t5614 = t912*t5610*t1210;
  t5616 = t5615*t1246;
  t5617 = t5614 + t5616;
  t5619 = t5615*t912;
  t5620 = -1.*t5610*t1210*t1246;
  t5621 = t5619 + t5620;
  t5645 = 3.e-6*t476*t911*t912*t5610;
  t5646 = -3.e-6*t1074*t5610*t1210;
  t5647 = -1.*t2239*t911*t5610*t1246;
  t5649 = t5645 + t5646 + t5647;
  t5651 = t382*t911*t912*t5610;
  t5652 = t1074*t5610*t1210;
  t5653 = -3.e-6*t476*t911*t5610*t1246;
  t5654 = t5651 + t5652 + t5653;
  t5656 = -1.*t911*t912*t1074*t5610;
  t5657 = t3606*t5610*t1210;
  t5658 = -3.e-6*t911*t1074*t5610*t1246;
  t5659 = t5656 + t5657 + t5658;
  t5642 = t660*t911*t912*t5610;
  t5643 = 0.2000000000018*t1074*t5610*t1210;
  t5644 = -6.000000000054e-7*t476*t911*t5610*t1246;
  t5650 = t2126*t5649;
  t5655 = t3464*t5654;
  t5660 = t3597*t5659;
  t5663 = t3774*t5649;
  t5666 = t3792*t5654;
  t5667 = t3797*t5659;
  t5668 = t5663 + t5666 + t5667;
  t5669 = -0.3*t5668;
  t5670 = -1.*t3801*t5649;
  t5675 = -1.*t3797*t5654;
  t5676 = -1.*t3804*t5659;
  t5677 = t5670 + t5675 + t5676;
  t5678 = 0.2*t5677;
  t5679 = t3861*t5649;
  t5680 = t3774*t5654;
  t5682 = t3801*t5659;
  t5683 = t5679 + t5680 + t5682;
  t5684 = -0.099999*t5683;
  t5685 = t5642 + t5643 + t5644 + t5650 + t5655 + t5660 + t5669 + t5678 + t5684;
  t5623 = 3.e-6*t911*t1074*t5610;
  t5624 = 3.e-6*t476*t5617;
  t5625 = t2239*t5621;
  t5626 = t5623 + t5624 + t5625;
  t5628 = -1.*t911*t1074*t5610;
  t5629 = t382*t5617;
  t5630 = 3.e-6*t476*t5621;
  t5631 = t5628 + t5629 + t5630;
  t5634 = -1.*t3606*t911*t5610;
  t5635 = -1.*t1074*t5617;
  t5637 = 3.e-6*t1074*t5621;
  t5638 = t5634 + t5635 + t5637;
  t5708 = t5615*t912*t1210;
  t5709 = -1.*t5610*t1246;
  t5710 = t5708 + t5709;
  t5712 = -1.*t912*t5610;
  t5713 = -1.*t5615*t1210*t1246;
  t5714 = t5712 + t5713;
  t5716 = 3.e-6*t5615*t911*t1074;
  t5717 = 3.e-6*t476*t5710;
  t5718 = t2239*t5714;
  t5719 = t5716 + t5717 + t5718;
  t5721 = -1.*t5615*t911*t1074;
  t5722 = t382*t5710;
  t5723 = 3.e-6*t476*t5714;
  t5724 = t5721 + t5722 + t5723;
  t5726 = -1.*t3606*t5615*t911;
  t5729 = -1.*t1074*t5710;
  t5730 = 3.e-6*t1074*t5714;
  t5731 = t5726 + t5729 + t5730;
  t5707 = -0.2000000000018*t5615*t911*t1074;
  t5711 = t660*t5710;
  t5715 = 6.000000000054e-7*t476*t5714;
  t5720 = t2126*t5719;
  t5725 = t3464*t5724;
  t5732 = t3597*t5731;
  t5733 = t3774*t5719;
  t5734 = t3792*t5724;
  t5735 = t3797*t5731;
  t5737 = t5733 + t5734 + t5735;
  t5738 = -0.3*t5737;
  t5739 = -1.*t3801*t5719;
  t5740 = -1.*t3797*t5724;
  t5741 = -1.*t3804*t5731;
  t5742 = t5739 + t5740 + t5741;
  t5743 = 0.2*t5742;
  t5744 = t3861*t5719;
  t5745 = t3774*t5724;
  t5746 = t3801*t5731;
  t5747 = t5744 + t5745 + t5746;
  t5748 = -0.099999*t5747;
  t5749 = t5707 + t5711 + t5715 + t5720 + t5725 + t5732 + t5738 + t5743 + t5748;
  t5752 = -1.*t912*t5610*t1210;
  t5753 = -1.*t5615*t1246;
  t5754 = t5752 + t5753;
  t5757 = t2239*t5754;
  t5758 = t5757 + t5630;
  t5760 = 3.e-6*t476*t5754;
  t5761 = t382*t5621;
  t5762 = t5760 + t5761;
  t5765 = 3.e-6*t1074*t5754;
  t5766 = -1.*t1074*t5621;
  t5767 = t5765 + t5766;
  t5755 = 6.000000000054e-7*t476*t5754;
  t5756 = t660*t5621;
  t5759 = t2126*t5758;
  t5764 = t3464*t5762;
  t5768 = t3597*t5767;
  t5770 = t3774*t5758;
  t5771 = t3792*t5762;
  t5773 = t3797*t5767;
  t5774 = t5770 + t5771 + t5773;
  t5775 = -0.3*t5774;
  t5776 = -1.*t3801*t5758;
  t5777 = -1.*t3797*t5762;
  t5778 = -1.*t3804*t5767;
  t5779 = t5776 + t5777 + t5778;
  t5780 = 0.2*t5779;
  t5781 = t3861*t5758;
  t5782 = t3774*t5762;
  t5783 = t3801*t5767;
  t5784 = t5781 + t5782 + t5783;
  t5785 = -0.099999*t5784;
  t5786 = t5755 + t5756 + t5759 + t5764 + t5768 + t5775 + t5780 + t5785;
  t5789 = t4007*t5626;
  t5790 = t4026*t5631;
  t5791 = t4035*t5638;
  t5792 = -1.*t4045*t5626;
  t5793 = 1.000000000009*t1578*t5631;
  t5794 = -1.*t4054*t5638;
  t5795 = t5792 + t5793 + t5794;
  t5796 = 0.2*t5795;
  t5797 = -1.8e-11*t1578*t5626;
  t5798 = t4061*t5631;
  t5799 = t4045*t5638;
  t5800 = t5797 + t5798 + t5799;
  t5801 = -0.099999*t5800;
  t5802 = t4061*t5626;
  t5803 = t4084*t5631;
  t5804 = -1.000000000009*t1578*t5638;
  t5805 = t5802 + t5803 + t5804;
  t5806 = -0.3*t5805;
  t5807 = t5789 + t5790 + t5791 + t5796 + t5801 + t5806;
  t5814 = 1.000000000009*t911*t1074*t5610;
  t5815 = -1.*t382*t5617;
  t5816 = 3.e-6*t382*t5621;
  t5817 = t5814 + t5815 + t5816;
  t5819 = 3.e-6*t382*t911*t5610;
  t5820 = 3.e-6*t1074*t5617;
  t5821 = -9.e-12*t1074*t5621;
  t5822 = t5819 + t5820 + t5821;
  t5825 = -1.*t382*t911*t5610;
  t5826 = t5825 + t5635 + t5637;
  t5811 = -0.2000000000018*t382*t911*t5610;
  t5812 = -0.2000000000018*t1074*t5617;
  t5813 = 6.000000000054e-7*t1074*t5621;
  t5818 = t3597*t5817;
  t5823 = t2126*t5822;
  t5827 = t3464*t5826;
  t5828 = -1.*t3804*t5817;
  t5829 = -1.*t3801*t5822;
  t5830 = -1.*t3797*t5826;
  t5831 = t5828 + t5829 + t5830;
  t5832 = 0.2*t5831;
  t5833 = t3801*t5817;
  t5834 = t3861*t5822;
  t5835 = t3774*t5826;
  t5836 = t5833 + t5834 + t5835;
  t5837 = -0.099999*t5836;
  t5838 = t3797*t5817;
  t5839 = t3774*t5822;
  t5840 = t3792*t5826;
  t5841 = t5838 + t5839 + t5840;
  t5842 = -0.3*t5841;
  t5843 = t5811 + t5812 + t5813 + t5818 + t5823 + t5827 + t5832 + t5837 + t5842;
  t5849 = 3.e-6*t476*t5615*t911*t912;
  t5850 = -3.e-6*t5615*t1074*t1210;
  t5852 = -1.*t2239*t5615*t911*t1246;
  t5853 = t5849 + t5850 + t5852;
  t5855 = t382*t5615*t911*t912;
  t5856 = t5615*t1074*t1210;
  t5857 = -3.e-6*t476*t5615*t911*t1246;
  t5858 = t5855 + t5856 + t5857;
  t5860 = -1.*t5615*t911*t912*t1074;
  t5862 = t3606*t5615*t1210;
  t5866 = -3.e-6*t5615*t911*t1074*t1246;
  t5867 = t5860 + t5862 + t5866;
  t5913 = -1.*t382*t911*t912*t5610;
  t5914 = -1.000000000009*t1074*t5610*t1210;
  t5915 = -3.e-6*t382*t911*t5610*t1246;
  t5916 = t5913 + t5914 + t5915;
  t5918 = t382*t5610*t1210;
  t5919 = t5656 + t5918 + t5658;
  t5921 = 3.e-6*t911*t912*t1074*t5610;
  t5923 = -3.e-6*t382*t5610*t1210;
  t5924 = 9.e-12*t911*t1074*t5610*t1246;
  t5925 = t5921 + t5923 + t5924;
  t5961 = -1.*t2239*t911*t912*t5610;
  t5962 = t5961 + t5653;
  t5964 = -3.e-6*t476*t911*t912*t5610;
  t5965 = -1.*t382*t911*t5610*t1246;
  t5966 = t5964 + t5965;
  t5969 = -3.e-6*t911*t912*t1074*t5610;
  t5970 = t911*t1074*t5610*t1246;
  t5971 = t5969 + t5970;
  t5999 = -3.e-6*t911*t1074*t5610;
  t6000 = -3.e-6*t476*t912*t5610*t1210;
  t6002 = t2239*t5610*t1210*t1246;
  t6003 = t5999 + t6000 + t6002;
  t6005 = t911*t1074*t5610;
  t6006 = -1.*t382*t912*t5610*t1210;
  t6007 = 3.e-6*t476*t5610*t1210*t1246;
  t6008 = t6005 + t6006 + t6007;
  t6010 = t3606*t911*t5610;
  t6013 = t912*t1074*t5610*t1210;
  t6014 = 3.e-6*t1074*t5610*t1210*t1246;
  t6015 = t6010 + t6013 + t6014;
  t5888 = t4007*t5649;
  t5889 = t4026*t5654;
  t5890 = t4035*t5659;
  t5891 = -1.*t4045*t5649;
  t5892 = 1.000000000009*t1578*t5654;
  t5893 = -1.*t4054*t5659;
  t5894 = t5891 + t5892 + t5893;
  t5896 = 0.2*t5894;
  t5897 = -1.8e-11*t1578*t5649;
  t5898 = t4061*t5654;
  t5899 = t4045*t5659;
  t5900 = t5897 + t5898 + t5899;
  t5901 = -0.099999*t5900;
  t5902 = t4061*t5649;
  t5903 = t4084*t5654;
  t5904 = -1.000000000009*t1578*t5659;
  t5905 = t5902 + t5903 + t5904;
  t5906 = -0.3*t5905;
  t5907 = t5888 + t5889 + t5890 + t5896 + t5901 + t5906;
  t4979 = 5.4e-18*t1308;
  t4980 = 0.100000000003*t3980;
  t4981 = -0.200000000003*t4061;
  t4986 = t4979 + t4980 + t4981;
  t4988 = -0.2000000000048*t1308;
  t4992 = t4990 + t1578;
  t4995 = 0.100000000003*t4992;
  t4997 = t4988 + t4028 + t4995;
  t4999 = 0.1000000000039*t1308;
  t5000 = t4990 + t2998;
  t5001 = -0.200000000003*t5000;
  t5002 = 3.e-7*t4061;
  t5003 = t4999 + t5001 + t5002;
  t5021 = t5017 + t2998;
  t5036 = t5017 + t1578;
  t5910 = -0.2000000000018*t911*t912*t1074*t5610;
  t5911 = 0.2000000000018*t382*t5610*t1210;
  t5912 = -6.000000000054e-7*t911*t1074*t5610*t1246;
  t5917 = t3597*t5916;
  t5920 = t3464*t5919;
  t5926 = t2126*t5925;
  t5927 = t3801*t5916;
  t5928 = t3774*t5919;
  t5929 = t3861*t5925;
  t5930 = t5927 + t5928 + t5929;
  t5931 = -0.099999*t5930;
  t5932 = t3797*t5916;
  t5933 = t3792*t5919;
  t5934 = t3774*t5925;
  t5935 = t5932 + t5933 + t5934;
  t5936 = -0.3*t5935;
  t5937 = -1.*t3804*t5916;
  t5938 = -1.*t3797*t5919;
  t5939 = -1.*t3801*t5925;
  t5940 = t5937 + t5938 + t5939;
  t5943 = 0.2*t5940;
  t5946 = t5910 + t5911 + t5912 + t5917 + t5920 + t5926 + t5931 + t5936 + t5943;
  t6186 = 1.000000000009*t5615*t911*t1074;
  t6187 = -1.*t382*t5710;
  t6188 = 3.e-6*t382*t5714;
  t6189 = t6186 + t6187 + t6188;
  t6191 = 3.e-6*t382*t5615*t911;
  t6192 = 3.e-6*t1074*t5710;
  t6193 = -9.e-12*t1074*t5714;
  t6196 = t6191 + t6192 + t6193;
  t6198 = -1.*t382*t5615*t911;
  t6217 = t6198 + t5729 + t5730;
  t5996 = 0.2000000000018*t911*t1074*t5610;
  t6275 = 3.e-6*t382*t5617;
  t6276 = -9.e-12*t382*t5621;
  t6278 = t5999 + t6275 + t6276;
  t6280 = t6005 + t5815 + t5816;
  t6286 = 1.000000000009*t382*t911*t5610;
  t6287 = t1074*t5617;
  t6288 = -3.e-6*t1074*t5621;
  t6290 = t6286 + t6287 + t6288;
  t6513 = 3.e-6*t382*t5754;
  t6514 = -1.*t382*t5621;
  t6519 = t6513 + t6514;
  t6551 = -9.e-12*t1074*t5754;
  t6558 = t6551 + t5637;
  t6115 = t4035*t5817;
  t6116 = t4007*t5822;
  t6117 = t4026*t5826;
  t6121 = -1.000000000009*t1578*t5817;
  t6122 = t4061*t5822;
  t6125 = t4084*t5826;
  t6126 = t6121 + t6122 + t6125;
  t6129 = -0.3*t6126;
  t6131 = t4045*t5817;
  t6133 = -1.8e-11*t1578*t5822;
  t6134 = t4061*t5826;
  t6137 = t6131 + t6133 + t6134;
  t6139 = -0.099999*t6137;
  t6142 = -1.*t4054*t5817;
  t6143 = -1.*t4045*t5822;
  t6145 = 1.000000000009*t1578*t5826;
  t6150 = t6142 + t6143 + t6145;
  t6151 = 0.2*t6150;
  t6153 = t6115 + t6116 + t6117 + t6129 + t6139 + t6151;
  t5950 = -6.000000000054e-7*t476*t911*t912*t5610;
  t5951 = -1.*t660*t911*t5610*t1246;
  t5963 = t2126*t5962;
  t5968 = t3464*t5966;
  t5974 = t3597*t5971;
  t5975 = t3774*t5962;
  t5976 = t3792*t5966;
  t5978 = t3797*t5971;
  t5979 = t5975 + t5976 + t5978;
  t5980 = -0.3*t5979;
  t5982 = -1.*t3801*t5962;
  t5984 = -1.*t3797*t5966;
  t5985 = -1.*t3804*t5971;
  t5987 = t5982 + t5984 + t5985;
  t5988 = 0.2*t5987;
  t5989 = t3861*t5962;
  t5990 = t3774*t5966;
  t5991 = t3801*t5971;
  t5992 = t5989 + t5990 + t5991;
  t5993 = -0.099999*t5992;
  t5994 = t5950 + t5951 + t5963 + t5968 + t5974 + t5980 + t5988 + t5993;
  t6902 = -1.*t5615*t912*t1210;
  t6907 = t5610*t1246;
  t6916 = t6902 + t6907;
  t6929 = t2239*t6916;
  t6937 = t6929 + t5723;
  t6939 = 3.e-6*t476*t6916;
  t6953 = t382*t5714;
  t6964 = t6939 + t6953;
  t6973 = 3.e-6*t1074*t6916;
  t6991 = -1.*t1074*t5714;
  t7009 = t6973 + t6991;
  t6067 = t4007*t5758;
  t6068 = t4026*t5762;
  t6069 = t4035*t5767;
  t6070 = -1.*t4045*t5758;
  t6071 = 1.000000000009*t1578*t5762;
  t6072 = -1.*t4054*t5767;
  t6073 = t6070 + t6071 + t6072;
  t6074 = 0.2*t6073;
  t6075 = -1.8e-11*t1578*t5758;
  t6076 = t4061*t5762;
  t6077 = t4045*t5767;
  t6079 = t6075 + t6076 + t6077;
  t6080 = -0.099999*t6079;
  t6081 = t4061*t5758;
  t6083 = t4084*t5762;
  t6084 = -1.000000000009*t1578*t5767;
  t6086 = t6081 + t6083 + t6084;
  t6087 = -0.3*t6086;
  t6088 = t6067 + t6068 + t6069 + t6074 + t6080 + t6087;
  t6481 = 6.000000000054e-7*t1074*t5754;
  t6484 = -0.2000000000018*t1074*t5621;
  t6527 = t3597*t6519;
  t6534 = t3464*t5767;
  t6577 = t2126*t6558;
  t6617 = t3801*t6519;
  t6620 = t3774*t5767;
  t6638 = t3861*t6558;
  t6656 = t6617 + t6620 + t6638;
  t6671 = -0.099999*t6656;
  t6675 = t3797*t6519;
  t6677 = t3792*t5767;
  t6697 = t3774*t6558;
  t6705 = t6675 + t6677 + t6697;
  t6707 = -0.3*t6705;
  t6710 = -1.*t3804*t6519;
  t6714 = -1.*t3797*t5767;
  t6729 = -1.*t3801*t6558;
  t6730 = t6710 + t6714 + t6729;
  t6801 = 0.2*t6730;
  t6810 = t6481 + t6484 + t6527 + t6534 + t6577 + t6671 + t6707 + t6801;
  t7210 = -1.*t5615*t912;
  t7236 = t5610*t1210*t1246;
  t7237 = t7210 + t7236;
  t7275 = t2239*t7237;
  t7276 = t5760 + t7275;
  t7281 = t382*t5754;
  t7284 = 3.e-6*t476*t7237;
  t7286 = t7281 + t7284;
  t7315 = -1.*t1074*t5754;
  t7316 = 3.e-6*t1074*t7237;
  t7317 = t7315 + t7316;
  t5846 = t660*t5615*t911*t912;
  t5847 = 0.2000000000018*t5615*t1074*t1210;
  t5848 = -6.000000000054e-7*t476*t5615*t911*t1246;
  t5854 = t2126*t5853;
  t5859 = t3464*t5858;
  t5868 = t3597*t5867;
  t5869 = t3774*t5853;
  t5870 = t3792*t5858;
  t5871 = t3797*t5867;
  t5872 = t5869 + t5870 + t5871;
  t5873 = -0.3*t5872;
  t5874 = -1.*t3801*t5853;
  t5875 = -1.*t3797*t5858;
  t5877 = -1.*t3804*t5867;
  t5878 = t5874 + t5875 + t5877;
  t5879 = 0.2*t5878;
  t5881 = t3861*t5853;
  t5882 = t3774*t5858;
  t5883 = t3801*t5867;
  t5884 = t5881 + t5882 + t5883;
  t5885 = -0.099999*t5884;
  t5886 = t5846 + t5847 + t5848 + t5854 + t5859 + t5868 + t5873 + t5879 + t5885;
  t6924 = 6.000000000054e-7*t476*t6916;
  t6925 = t660*t5714;
  t6938 = t2126*t6937;
  t6965 = t3464*t6964;
  t7013 = t3597*t7009;
  t7017 = t3774*t6937;
  t7021 = t3792*t6964;
  t7024 = t3797*t7009;
  t7026 = t7017 + t7021 + t7024;
  t7030 = -0.3*t7026;
  t7031 = -1.*t3801*t6937;
  t7032 = -1.*t3797*t6964;
  t7033 = -1.*t3804*t7009;
  t7036 = t7031 + t7032 + t7033;
  t7037 = 0.2*t7036;
  t7040 = t3861*t6937;
  t7041 = t3774*t6964;
  t7045 = t3801*t7009;
  t7047 = t7040 + t7041 + t7045;
  t7053 = -0.099999*t7047;
  t7060 = t6924 + t6925 + t6938 + t6965 + t7013 + t7030 + t7037 + t7053;
  t6039 = t4007*t5719;
  t6040 = t4026*t5724;
  t6041 = t4035*t5731;
  t6042 = -1.*t4045*t5719;
  t6043 = 1.000000000009*t1578*t5724;
  t6044 = -1.*t4054*t5731;
  t6045 = t6042 + t6043 + t6044;
  t6046 = 0.2*t6045;
  t6047 = -1.8e-11*t1578*t5719;
  t6048 = t4061*t5724;
  t6049 = t4045*t5731;
  t6050 = t6047 + t6048 + t6049;
  t6054 = -0.099999*t6050;
  t6055 = t4061*t5719;
  t6056 = t4084*t5724;
  t6057 = -1.000000000009*t1578*t5731;
  t6063 = t6055 + t6056 + t6057;
  t6064 = -0.3*t6063;
  t6065 = t6039 + t6040 + t6041 + t6046 + t6054 + t6064;
  t6174 = -0.2000000000018*t382*t5615*t911;
  t6175 = -0.2000000000018*t1074*t5710;
  t6176 = 6.000000000054e-7*t1074*t5714;
  t6190 = t3597*t6189;
  t6197 = t2126*t6196;
  t6221 = t3464*t6217;
  t6224 = -1.*t3804*t6189;
  t6226 = -1.*t3801*t6196;
  t6227 = -1.*t3797*t6217;
  t6228 = t6224 + t6226 + t6227;
  t6229 = 0.2*t6228;
  t6230 = t3801*t6189;
  t6231 = t3861*t6196;
  t6232 = t3774*t6217;
  t6233 = t6230 + t6231 + t6232;
  t6234 = -0.099999*t6233;
  t6236 = t3797*t6189;
  t6237 = t3774*t6196;
  t6238 = t3792*t6217;
  t6239 = t6236 + t6237 + t6238;
  t6251 = -0.3*t6239;
  t6264 = t6174 + t6175 + t6176 + t6190 + t6197 + t6221 + t6229 + t6234 + t6251;
  t7078 = t660*t5754;
  t7238 = 6.000000000054e-7*t476*t7237;
  t7621 = t5999 + t5760 + t7275;
  t7684 = t6005 + t7281 + t7284;
  t7718 = t6010 + t7315 + t7316;
  t7805 = t912*t5610;
  t7806 = t5615*t1210*t1246;
  t7807 = t7805 + t7806;
  t7879 = -3.e-6*t476*t5615*t911*t912;
  t7886 = 3.e-6*t5615*t1074*t1210;
  t7887 = t2239*t5615*t911*t1246;
  t7890 = t7879 + t7886 + t7887;
  t7892 = -1.*t382*t5615*t911*t912;
  t7920 = -1.*t5615*t1074*t1210;
  t7922 = 3.e-6*t476*t5615*t911*t1246;
  t7923 = t7892 + t7920 + t7922;
  t7927 = t5615*t911*t912*t1074;
  t7928 = -1.*t3606*t5615*t1210;
  t7929 = 3.e-6*t5615*t911*t1074*t1246;
  t7931 = t7927 + t7928 + t7929;
  t7834 = -1.*t660*t5615*t911*t912;
  t7856 = -0.2000000000018*t5615*t1074*t1210;
  t7876 = 6.000000000054e-7*t476*t5615*t911*t1246;
  t7891 = t2126*t7890;
  t7924 = t3464*t7923;
  t7933 = t3597*t7931;
  t7934 = t3774*t7890;
  t7935 = t3792*t7923;
  t7936 = t3797*t7931;
  t7938 = t7934 + t7935 + t7936;
  t7944 = -0.3*t7938;
  t7982 = -1.*t3801*t7890;
  t8055 = -1.*t3797*t7923;
  t8059 = -1.*t3804*t7931;
  t8096 = t7982 + t8055 + t8059;
  t8162 = 0.2*t8096;
  t8184 = t3861*t7890;
  t8188 = t3774*t7923;
  t8199 = t3801*t7931;
  t8212 = t8184 + t8188 + t8199;
  t8247 = -0.099999*t8212;
  t8249 = t7834 + t7856 + t7876 + t7891 + t7924 + t7933 + t7944 + t8162 + t8247;
  t7809 = -3.e-6*t5615*t911*t1074;
  t7811 = t2239*t7807;
  t7812 = t7809 + t6939 + t7811;
  t7817 = t5615*t911*t1074;
  t7822 = t382*t6916;
  t7823 = 3.e-6*t476*t7807;
  t7824 = t7817 + t7822 + t7823;
  t7827 = t3606*t5615*t911;
  t7828 = -1.*t1074*t6916;
  t7830 = 3.e-6*t1074*t7807;
  t7831 = t7827 + t7828 + t7830;
  t8419 = t2239*t5710;
  t8432 = t8419 + t7823;
  t8445 = t382*t7807;
  t8446 = t5717 + t8445;
  t8452 = -1.*t1074*t7807;
  t8467 = t6192 + t8452;
  t8414 = 6.000000000054e-7*t476*t5710;
  t8416 = t660*t7807;
  t8440 = t2126*t8432;
  t8447 = t3464*t8446;
  t8526 = t3597*t8467;
  t8532 = t3774*t8432;
  t8533 = t3792*t8446;
  t8541 = t3797*t8467;
  t8549 = t8532 + t8533 + t8541;
  t8550 = -0.3*t8549;
  t8553 = -1.*t3801*t8432;
  t8555 = -1.*t3797*t8446;
  t8556 = -1.*t3804*t8467;
  t8557 = t8553 + t8555 + t8556;
  t8560 = 0.2*t8557;
  t8561 = t3861*t8432;
  t8584 = t3774*t8446;
  t8585 = t3801*t8467;
  t8589 = t8561 + t8584 + t8585;
  t8594 = -0.099999*t8589;
  t8599 = t8414 + t8416 + t8440 + t8447 + t8526 + t8550 + t8560 + t8594;
  t8602 = t4007*t7812;
  t8607 = t4026*t7824;
  t8617 = t4035*t7831;
  t8624 = -1.*t4045*t7812;
  t8629 = 1.000000000009*t1578*t7824;
  t8747 = -1.*t4054*t7831;
  t8753 = t8624 + t8629 + t8747;
  t8759 = 0.2*t8753;
  t8762 = -1.8e-11*t1578*t7812;
  t8764 = t4061*t7824;
  t8769 = t4045*t7831;
  t8774 = t8762 + t8764 + t8769;
  t8776 = -0.099999*t8774;
  t8779 = t4061*t7812;
  t8780 = t4084*t7824;
  t8781 = -1.000000000009*t1578*t7831;
  t8782 = t8779 + t8780 + t8781;
  t8783 = -0.3*t8782;
  t8784 = t8602 + t8607 + t8617 + t8759 + t8776 + t8783;
  t10464 = -1.000000000009*t5615*t911*t1074;
  t11945 = -1.*t382*t6916;
  t11978 = 3.e-6*t382*t7807;
  t11983 = t10464 + t11945 + t11978;
  t11995 = -3.e-6*t382*t5615*t911;
  t11996 = -9.e-12*t1074*t7807;
  t12000 = t11995 + t6973 + t11996;
  t12051 = t382*t5615*t911;
  t12084 = t12051 + t7828 + t7830;
  t8791 = 0.2000000000018*t382*t5615*t911;
  t8792 = -0.2000000000018*t1074*t6916;
  t8897 = 6.000000000054e-7*t1074*t7807;
  t11984 = t3597*t11983;
  t12002 = t2126*t12000;
  t12114 = t3464*t12084;
  t12120 = -1.*t3804*t11983;
  t12149 = -1.*t3801*t12000;
  t12191 = -1.*t3797*t12084;
  t12252 = t12120 + t12149 + t12191;
  t12255 = 0.2*t12252;
  t12274 = t3801*t11983;
  t12276 = t3861*t12000;
  t12281 = t3774*t12084;
  t12289 = t12274 + t12276 + t12281;
  t12290 = -0.099999*t12289;
  t12312 = t3797*t11983;
  t12319 = t3774*t12000;
  t12327 = t3792*t12084;
  t12380 = t12312 + t12319 + t12327;
  t12393 = -0.3*t12380;
  t12405 = t8791 + t8792 + t8897 + t11984 + t12002 + t12114 + t12255 + t12290 + t12393;
  t12472 = t2239*t5615*t911*t912;
  t12473 = t12472 + t7922;
  t12539 = t382*t5615*t911*t1246;
  t12541 = t5849 + t12539;
  t12551 = 3.e-6*t5615*t911*t912*t1074;
  t12556 = -1.*t5615*t911*t1074*t1246;
  t12574 = t12551 + t12556;
  t12885 = 1.000000000009*t5615*t1074*t1210;
  t12887 = 3.e-6*t382*t5615*t911*t1246;
  t12888 = t5855 + t12885 + t12887;
  t12892 = -3.e-6*t5615*t911*t912*t1074;
  t12960 = 3.e-6*t382*t5615*t1210;
  t12961 = -9.e-12*t5615*t911*t1074*t1246;
  t13038 = t12892 + t12960 + t12961;
  t13040 = -1.*t382*t5615*t1210;
  t13042 = t7927 + t13040 + t7929;
  t13260 = 3.e-6*t476*t5615*t912*t1210;
  t13261 = -1.*t2239*t5615*t1210*t1246;
  t13262 = t5716 + t13260 + t13261;
  t13449 = t382*t5615*t912*t1210;
  t13462 = -3.e-6*t476*t5615*t1210*t1246;
  t13463 = t5721 + t13449 + t13462;
  t13466 = -1.*t5615*t912*t1074*t1210;
  t13467 = -3.e-6*t5615*t1074*t1210*t1246;
  t13554 = t5726 + t13466 + t13467;
  t5612 = -0.2000000000018*t911*t1074*t5610;
  t5618 = t660*t5617;
  t5622 = 6.000000000054e-7*t476*t5621;
  t5627 = t2126*t5626;
  t5633 = t3464*t5631;
  t5639 = t3597*t5638;
  t5689 = t3774*t5626;
  t5691 = t3792*t5631;
  t5692 = t3797*t5638;
  t5694 = t5689 + t5691 + t5692;
  t5695 = -0.3*t5694;
  t5697 = -1.*t3801*t5626;
  t5698 = -1.*t3797*t5631;
  t5699 = -1.*t3804*t5638;
  t5700 = t5697 + t5698 + t5699;
  t5701 = 0.2*t5700;
  t5702 = t3861*t5626;
  t5703 = t3774*t5631;
  t5704 = t3801*t5638;
  t5705 = t5702 + t5703 + t5704;
  t5706 = -0.099999*t5705;
  t13732 = t5612 + t5618 + t5622 + t5627 + t5633 + t5639 + t5695 + t5701 + t5706;
  t12463 = 6.000000000054e-7*t476*t5615*t911*t912;
  t12468 = t660*t5615*t911*t1246;
  t12523 = t2126*t12473;
  t12545 = t3464*t12541;
  t12584 = t3597*t12574;
  t12586 = t3774*t12473;
  t12593 = t3792*t12541;
  t12594 = t3797*t12574;
  t12595 = t12586 + t12593 + t12594;
  t12596 = -0.3*t12595;
  t12615 = -1.*t3801*t12473;
  t12619 = -1.*t3797*t12541;
  t12630 = -1.*t3804*t12574;
  t12636 = t12615 + t12619 + t12630;
  t12646 = 0.2*t12636;
  t12647 = t3861*t12473;
  t12648 = t3774*t12541;
  t12668 = t3801*t12574;
  t12678 = t12647 + t12648 + t12668;
  t12680 = -0.099999*t12678;
  t12693 = t12463 + t12468 + t12523 + t12545 + t12584 + t12596 + t12646 + t12680;
  t14132 = t5717 + t5718;
  t14134 = t5722 + t5723;
  t14136 = t5729 + t5730;
  t14312 = 3.e-6*t382*t5710;
  t14313 = -1.*t382*t7807;
  t14314 = t14312 + t14313;
  t14318 = -9.e-12*t1074*t5710;
  t14319 = t14318 + t7830;
  t12699 = t4007*t7890;
  t12700 = t4026*t7923;
  t12702 = t4035*t7931;
  t12703 = -1.*t4045*t7890;
  t12705 = 1.000000000009*t1578*t7923;
  t12708 = -1.*t4054*t7931;
  t12711 = t12703 + t12705 + t12708;
  t12713 = 0.2*t12711;
  t12714 = -1.8e-11*t1578*t7890;
  t12728 = t4061*t7923;
  t12729 = t4045*t7931;
  t12730 = t12714 + t12728 + t12729;
  t12747 = -0.099999*t12730;
  t12751 = t4061*t7890;
  t12756 = t4084*t7923;
  t12757 = -1.000000000009*t1578*t7931;
  t12759 = t12751 + t12756 + t12757;
  t12763 = -0.3*t12759;
  t12767 = t12699 + t12700 + t12702 + t12713 + t12747 + t12763;
  t14265 = t4007*t8432;
  t14266 = t4026*t8446;
  t14267 = t4035*t8467;
  t14268 = -1.*t4045*t8432;
  t14270 = 1.000000000009*t1578*t8446;
  t14271 = -1.*t4054*t8467;
  t14272 = t14268 + t14270 + t14271;
  t14274 = 0.2*t14272;
  t14275 = -1.8e-11*t1578*t8432;
  t14294 = t4061*t8446;
  t14299 = t4045*t8467;
  t14300 = t14275 + t14294 + t14299;
  t14301 = -0.099999*t14300;
  t14303 = t4061*t8432;
  t14304 = t4084*t8446;
  t14305 = -1.000000000009*t1578*t8467;
  t14306 = t14303 + t14304 + t14305;
  t14307 = -0.3*t14306;
  t14308 = t14265 + t14266 + t14267 + t14274 + t14301 + t14307;
  t5687 = var2[4]*t5685;
  t5751 = var2[3]*t5749;
  t5788 = var2[5]*t5786;
  t5809 = var2[21]*t5807;
  t5845 = var2[19]*t5843;
  t12881 = 0.2000000000018*t5615*t911*t912*t1074;
  t12882 = -0.2000000000018*t382*t5615*t1210;
  t12883 = 6.000000000054e-7*t5615*t911*t1074*t1246;
  t12889 = t3597*t12888;
  t13039 = t2126*t13038;
  t13045 = t3464*t13042;
  t13047 = -1.*t3804*t12888;
  t13050 = -1.*t3801*t13038;
  t13130 = -1.*t3797*t13042;
  t13138 = t13047 + t13050 + t13130;
  t13140 = 0.2*t13138;
  t13143 = t3801*t12888;
  t13208 = t3861*t13038;
  t13217 = t3774*t13042;
  t13222 = t13143 + t13208 + t13217;
  t13223 = -0.099999*t13222;
  t13224 = t3797*t12888;
  t13225 = t3774*t13038;
  t13233 = t3792*t13042;
  t13238 = t13224 + t13225 + t13233;
  t13240 = -0.3*t13238;
  t13241 = t12881 + t12882 + t12883 + t12889 + t13039 + t13045 + t13140 + t13223 + t13240;
  t14590 = 3.e-6*t382*t6916;
  t14593 = -9.e-12*t382*t7807;
  t14594 = t5716 + t14590 + t14593;
  t14596 = t5721 + t11945 + t11978;
  t14598 = -1.000000000009*t382*t5615*t911;
  t14599 = t1074*t6916;
  t14600 = -3.e-6*t1074*t7807;
  t14601 = t14598 + t14599 + t14600;
  t14310 = 6.000000000054e-7*t1074*t5710;
  t14311 = -0.2000000000018*t1074*t7807;
  t14316 = t3597*t14314;
  t14317 = t3464*t8467;
  t14323 = t2126*t14319;
  t14325 = t3801*t14314;
  t14326 = t3774*t8467;
  t14327 = t3861*t14319;
  t14331 = t14325 + t14326 + t14327;
  t14332 = -0.099999*t14331;
  t14333 = t3797*t14314;
  t14336 = t3792*t8467;
  t14382 = t3774*t14319;
  t14383 = t14333 + t14336 + t14382;
  t14385 = -0.3*t14383;
  t14386 = -1.*t3804*t14314;
  t14392 = -1.*t3797*t8467;
  t14396 = -1.*t3801*t14319;
  t14404 = t14386 + t14392 + t14396;
  t14407 = 0.2*t14404;
  t14412 = t14310 + t14311 + t14316 + t14317 + t14323 + t14332 + t14385 + t14407;
  t14462 = t4035*t11983;
  t14464 = t4007*t12000;
  t14470 = t4026*t12084;
  t14473 = -1.000000000009*t1578*t11983;
  t14477 = t4061*t12000;
  t14481 = t4084*t12084;
  t14482 = t14473 + t14477 + t14481;
  t14485 = -0.3*t14482;
  t14486 = t4045*t11983;
  t14487 = -1.8e-11*t1578*t12000;
  t14488 = t4061*t12084;
  t14530 = t14486 + t14487 + t14488;
  t14558 = -0.099999*t14530;
  t14559 = -1.*t4054*t11983;
  t14561 = -1.*t4045*t12000;
  t14562 = 1.000000000009*t1578*t12084;
  t14563 = t14559 + t14561 + t14562;
  t14564 = 0.2*t14563;
  t14568 = t14462 + t14464 + t14470 + t14485 + t14558 + t14564;
  p_output1[0]=0.2000000000018*t1074*t1210 + t2126*t2482 + t3464*t3562 + t3597*t3708 - 0.3*(t2482*t3774 + t3562*t3792 + t3708*t3797) + 0.2*(-1.*t3562*t3797 - 1.*t2482*t3801 - 1.*t3708*t3804) - 0.099999*(t3562*t3774 + t3708*t3801 + t2482*t3861) - 6.000000000054e-7*t1246*t476*t911 + t660*t911*t912 + var1[0] + var2[0] + t4360*var2[4] + t4180*var2[5] + t4147*var2[19] + t4104*var2[21] + var2[5]*(t4973*var2[4] + (t4369 + t4401 + t2126*t4409 + t3464*t4425 + t3597*t4444 - 0.3*(t3774*t4409 + t3792*t4425 + t3797*t4444) - 0.099999*(t3861*t4409 + t3774*t4425 + t3801*t4444) + 0.2*(-1.*t3801*t4409 - 1.*t3797*t4425 - 1.*t3804*t4444))*var2[5] + t4801*var2[19] + t4644*var2[21]) + var2[21]*(t5277*var2[4] + t4644*var2[5] + t5070*var2[19] + (-0.099999*(-1.8e-11*t1308*t2482 + t3708*t3995 + t3562*t4045) + t2482*t4986 + t3562*t4997 + t3708*t5003 - 0.3*(-1.000000000009*t1308*t3708 + t2482*t4045 + t3562*t5021) + 0.2*(1.000000000009*t1308*t3562 - 1.*t2482*t3995 - 1.*t3708*t5036))*var2[21]) + var2[19]*(t5557*var2[4] + t4801*var2[5] + (t5318 + t3464*t5569 + t2126*t5577 + t3597*t5584 - 0.3*(t3792*t5569 + t3774*t5577 + t3797*t5584) - 0.099999*(t3774*t5569 + t3861*t5577 + t3801*t5584) + 0.2*(-1.*t3797*t5569 - 1.*t3801*t5577 - 1.*t3804*t5584) - 6.000000000054e-7*t1246*t382*t911 - 0.2000000000018*t382*t911*t912)*var2[19] + t5070*var2[21]) + var2[4]*((t4369 + t4401 + t5318 + t2126*t5320 + t3464*t5326 + t3597*t5331 - 0.3*(t3774*t5320 + t3792*t5326 + t3797*t5331) - 0.099999*(t3861*t5320 + t3774*t5326 + t3801*t5331) + 0.2*(-1.*t3801*t5320 - 1.*t3797*t5326 - 1.*t3804*t5331))*var2[4] + t4973*var2[5] + t5557*var2[19] + t5277*var2[21]) + var3[0] + t4360*var3[4] + t4180*var3[5] + t4147*var3[19] + t4104*var3[21] - 1.*var4[0];
  p_output1[1]=t5612 + t5618 + t5622 + t5627 + t5633 + t5639 + t5687 + t5695 + t5701 + t5706 + t5751 + t5788 + t5809 + t5845 + var1[1] + var2[1] + var2[21]*(t6065*var2[3] + t5907*var2[4] + t6088*var2[5] + t6153*var2[19] + (t4986*t5626 + t4997*t5631 + t5003*t5638 - 0.3*(t4045*t5626 + t5021*t5631 - 1.000000000009*t1308*t5638) - 0.099999*(-1.8e-11*t1308*t5626 + t4045*t5631 + t3995*t5638) + 0.2*(-1.*t3995*t5626 + 1.000000000009*t1308*t5631 - 1.*t5036*t5638))*var2[21]) + var2[4]*(t5886*var2[3] + (6.000000000054e-7*t1210*t1246*t476*t5610 + t5996 + t2126*t6003 + t3464*t6008 + t3597*t6015 - 0.3*(t3774*t6003 + t3792*t6008 + t3797*t6015) - 0.099999*(t3861*t6003 + t3774*t6008 + t3801*t6015) + 0.2*(-1.*t3801*t6003 - 1.*t3797*t6008 - 1.*t3804*t6015) - 1.*t1210*t5610*t660*t912)*var2[4] + t5994*var2[5] + t5946*var2[19] + t5907*var2[21]) + var2[3]*((t5996 + t7078 + t7238 + t2126*t7621 + t3464*t7684 + t3597*t7718 - 0.3*(t3774*t7621 + t3792*t7684 + t3797*t7718) - 0.099999*(t3861*t7621 + t3774*t7684 + t3801*t7718) + 0.2*(-1.*t3801*t7621 - 1.*t3797*t7684 - 1.*t3804*t7718))*var2[3] + t5886*var2[4] + t7060*var2[5] + t6264*var2[19] + t6065*var2[21]) + var2[5]*(t7060*var2[3] + t5994*var2[4] + (t7078 + t7238 + t2126*t7276 + t3464*t7286 + t3597*t7317 - 0.3*(t3774*t7276 + t3792*t7286 + t3797*t7317) - 0.099999*(t3861*t7276 + t3774*t7286 + t3801*t7317) + 0.2*(-1.*t3801*t7276 - 1.*t3797*t7286 - 1.*t3804*t7317))*var2[5] + t6810*var2[19] + t6088*var2[21]) + var2[19]*(t6264*var2[3] + t5946*var2[4] + t6810*var2[5] + (-0.2000000000018*t382*t5617 + 6.000000000054e-7*t382*t5621 + t5996 + t2126*t6278 + t3464*t6280 + t3597*t6290 - 0.3*(t3774*t6278 + t3792*t6280 + t3797*t6290) - 0.099999*(t3861*t6278 + t3774*t6280 + t3801*t6290) + 0.2*(-1.*t3801*t6278 - 1.*t3797*t6280 - 1.*t3804*t6290))*var2[19] + t6153*var2[21]) + var3[1] + t5749*var3[3] + t5685*var3[4] + t5786*var3[5] + t5843*var3[19] + t5807*var3[21] - 1.*var4[1];
  p_output1[2]=t660*t6916 + 6.000000000054e-7*t476*t7807 + t2126*t7812 + t3464*t7824 + t3597*t7831 - 0.3*(t3774*t7812 + t3792*t7824 + t3797*t7831) - 0.099999*(t3861*t7812 + t3774*t7824 + t3801*t7831) + 0.2*(-1.*t3801*t7812 - 1.*t3797*t7824 - 1.*t3804*t7831) + 0.2000000000018*t1074*t5615*t911 + var1[2] + var2[2] + t13732*var2[3] + (t5687 + t5751 + t5788 + t5809 + t5845)*var2[3] + t8249*var2[4] + t8599*var2[5] + t12405*var2[19] + t8784*var2[21] + var2[4]*(t5685*var2[3] + (t13262*t2126 + t13463*t3464 + t13554*t3597 - 0.3*(t13262*t3774 + t13463*t3792 + t13554*t3797) + 0.2*(-1.*t13463*t3797 - 1.*t13262*t3801 - 1.*t13554*t3804) - 0.099999*(t13463*t3774 + t13554*t3801 + t13262*t3861) - 6.000000000054e-7*t1210*t1246*t476*t5615 + t5707 + t1210*t5615*t660*t912)*var2[4] + t12693*var2[5] + t13241*var2[19] + t12767*var2[21]) + var2[5]*(t5786*var2[3] + t12693*var2[4] + (t14132*t2126 + t14134*t3464 + t14136*t3597 - 0.3*(t14132*t3774 + t14134*t3792 + t14136*t3797) + 0.2*(-1.*t14134*t3797 - 1.*t14132*t3801 - 1.*t14136*t3804) - 0.099999*(t14134*t3774 + t14136*t3801 + t14132*t3861) + t5711 + t5715)*var2[5] + t14412*var2[19] + t14308*var2[21]) + var2[19]*(t5843*var2[3] + t13241*var2[4] + t14412*var2[5] + (t14594*t2126 + t14596*t3464 + t14601*t3597 - 0.3*(t14594*t3774 + t14596*t3792 + t14601*t3797) + 0.2*(-1.*t14596*t3797 - 1.*t14594*t3801 - 1.*t14601*t3804) - 0.099999*(t14596*t3774 + t14601*t3801 + t14594*t3861) + t5707 - 0.2000000000018*t382*t6916 + 6.000000000054e-7*t382*t7807)*var2[19] + t14568*var2[21]) + var2[21]*(t5807*var2[3] + t12767*var2[4] + t14308*var2[5] + t14568*var2[19] + (t4986*t7812 + t4997*t7824 + t5003*t7831 - 0.3*(t4045*t7812 + t5021*t7824 - 1.000000000009*t1308*t7831) - 0.099999*(-1.8e-11*t1308*t7812 + t4045*t7824 + t3995*t7831) + 0.2*(-1.*t3995*t7812 + 1.000000000009*t1308*t7824 - 1.*t5036*t7831))*var2[21]) + var3[2] + t13732*var3[3] + t8249*var3[4] + t8599*var3[5] + t12405*var3[19] + t8784*var3[21] - 1.*var4[2];
}



#ifdef MATLAB_MEX_FILE

#include "mex.h"
/*
 * Main function
 */
void mexFunction( int nlhs, mxArray *plhs[],
                  int nrhs, const mxArray *prhs[] )
{
  size_t mrows, ncols;

  double *var1,*var2,*var3,*var4;
  double *p_output1;

  /*  Check for proper number of arguments.  */ 
  if( nrhs != 4)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:invalidNumInputs", "Four input(s) required (var1,var2,var3,var4).");
    }
  else if( nlhs > 1)
    {
      mexErrMsgIdAndTxt("MATLAB:MShaped:maxlhs", "Too many output arguments.");
    }

  /*  The input must be a noncomplex double vector or scaler.  */
  mrows = mxGetM(prhs[0]);
  ncols = mxGetN(prhs[0]);
  if( !mxIsDouble(prhs[0]) || mxIsComplex(prhs[0]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var1 is wrong.");
    }
  mrows = mxGetM(prhs[1]);
  ncols = mxGetN(prhs[1]);
  if( !mxIsDouble(prhs[1]) || mxIsComplex(prhs[1]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var2 is wrong.");
    }
  mrows = mxGetM(prhs[2]);
  ncols = mxGetN(prhs[2]);
  if( !mxIsDouble(prhs[2]) || mxIsComplex(prhs[2]) ||
    ( !(mrows == 22 && ncols == 1) && 
      !(mrows == 1 && ncols == 22))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var3 is wrong.");
    }
  mrows = mxGetM(prhs[3]);
  ncols = mxGetN(prhs[3]);
  if( !mxIsDouble(prhs[3]) || mxIsComplex(prhs[3]) ||
    ( !(mrows == 3 && ncols == 1) && 
      !(mrows == 1 && ncols == 3))) 
    {
      mexErrMsgIdAndTxt( "MATLAB:MShaped:inputNotRealVector", "var4 is wrong.");
    }

  /*  Assign pointers to each input.  */
  var1 = mxGetPr(prhs[0]);
  var2 = mxGetPr(prhs[1]);
  var3 = mxGetPr(prhs[2]);
  var4 = mxGetPr(prhs[3]);
   


   
  /*  Create matrices for return arguments.  */
  plhs[0] = mxCreateDoubleMatrix((mwSize) 3, (mwSize) 1, mxREAL);
  p_output1 = mxGetPr(plhs[0]);


  /* Call the calculation subroutine. */
  output1(p_output1,var1,var2,var3,var4);


}

#else // MATLAB_MEX_FILE

#include "ddh_RightBackFoot_BackStance.hh"

namespace BackStance
{

void ddh_RightBackFoot_BackStance_raw(double *p_output1, const double *var1,const double *var2,const double *var3,const double *var4)
{
  // Call Subroutines
  output1(p_output1, var1, var2, var3, var4);

}

}

#endif // MATLAB_MEX_FILE
